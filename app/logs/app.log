2025-06-14 11:21:11,474 - app - INFO - Flask Application started.
2025-06-14 11:21:11,491 - app - INFO - Database connection established.
2025-06-14 11:21:11,491 - app - INFO - Database schema retrieved and cached.
2025-06-14 11:21:11,537 - app - INFO - Philippine holidays fetched and cached.
2025-06-14 11:21:11,847 - app - INFO - Flask Application started.
2025-06-14 11:21:11,857 - app - INFO - Database connection established.
2025-06-14 11:21:11,857 - app - INFO - Database schema retrieved and cached.
2025-06-14 11:21:11,885 - app - INFO - Philippine holidays fetched and cached.
2025-06-14 11:21:19,945 - app - INFO - Initialized new chat session (messages in Flask session).
2025-06-14 11:24:07,459 - app - INFO - Flask Application started.
2025-06-14 11:24:07,474 - app - INFO - Database connection established.
2025-06-14 11:24:07,474 - app - INFO - Database schema retrieved and cached.
2025-06-14 11:24:07,518 - app - INFO - Philippine holidays fetched and cached.
2025-06-14 11:24:07,778 - app - INFO - Flask Application started.
2025-06-14 11:24:07,788 - app - INFO - Database connection established.
2025-06-14 11:24:07,789 - app - INFO - Database schema retrieved and cached.
2025-06-14 11:24:07,816 - app - INFO - Philippine holidays fetched and cached.
2025-06-14 11:24:13,176 - app - INFO - Initialized new chat session (messages in Flask session).
2025-06-14 11:24:45,591 - app - INFO - User Query: hello
2025-06-14 11:24:47,733 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 11:24:47,734 - app - INFO - Generated SQL Query: SELECT strftime('%Y-%m-%d %H:%M:%S', 'now', 'localtime');
2025-06-14 11:24:47,737 - app - INFO - Database connection established.
2025-06-14 11:24:47,737 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1091ad890>]
2025-06-14 11:24:48,793 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 11:24:48,793 - app - INFO - Final Assistant Response (NL): Hi there! What can I help you with today? ðŸ˜Š
2025-06-14 11:27:25,210 - app - INFO - User Query: hello
2025-06-14 11:27:26,247 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 11:27:26,247 - app - INFO - Generated SQL Query: None
2025-06-14 11:27:26,248 - app - INFO - Database connection established.
2025-06-14 11:27:26,248 - app - CRITICAL - An unexpected critical error occurred: argument 1 must be str, not None
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/webapp/app.py", line 274, in chat
    cursor.execute(sql_query)
TypeError: argument 1 must be str, not None
2025-06-14 11:27:28,538 - app - INFO - User Query: hi
2025-06-14 11:27:29,729 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 11:27:29,730 - app - INFO - Generated SQL Query: SELECT strftime('%Y-%m-%d %H:%M:%S', 'now', 'localtime');
2025-06-14 11:27:29,731 - app - INFO - Database connection established.
2025-06-14 11:27:29,732 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x109272170>]
2025-06-14 11:27:30,957 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 11:27:30,957 - app - INFO - Final Assistant Response (NL): Hi there! I'm here to help with your banking needs. What can I assist you with today? ðŸ˜Š
2025-06-14 11:28:11,408 - app - INFO - User Query: hola
2025-06-14 11:28:12,441 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 11:28:12,442 - app - INFO - Generated SQL Query: SELECT 'Hola! How can I help you today?'
2025-06-14 11:28:12,444 - app - INFO - Database connection established.
2025-06-14 11:28:12,445 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1092727f0>]
2025-06-14 11:28:13,363 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 11:28:13,363 - app - INFO - Final Assistant Response (NL): Hola! How can I help you today? ðŸ˜Š
2025-06-14 11:29:14,688 - app - INFO - User Query: piensÃ© que voy en Cebu en Enero durante el Sinulog, puedes recuerder los transacciones que hago en Enero despues Sinulog?
2025-06-14 11:29:16,763 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 11:29:16,764 - app - INFO - Generated SQL Query: SELECT Date, "Transaction Details", "Branch / Source", Withdrawals, Deposits FROM bank_transactions WHERE Date BETWEEN '2025-01-20' AND '2025-01-31' AND LOWER("Branch / Source") LIKE '%cebu%' ORDER BY Date ASC;
2025-06-14 11:29:16,767 - app - INFO - Database connection established.
2025-06-14 11:29:16,769 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1092723b0>, <sqlite3.Row object at 0x109272630>, <sqlite3.Row object at 0x1092727b0>, <sqlite3.Row object at 0x1092726f0>, <sqlite3.Row object at 0x109272590>]
2025-06-14 11:29:19,042 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 11:29:19,043 - app - INFO - Final Assistant Response (NL): Okay, I can show you the transactions made in Cebu after Sinulog (January 19, 2025): 

*   **January 20, 2025:** You made a POS Purchase at BDO Cebu for â‚±3,634.04.
*   **January 26, 2025:** You made a Bills Payment at BDO Cebu for â‚±3,348.41.
*   **January 29, 2025:** There was an Interest Credit at BDO Cebu of â‚±16,313.14 and an ATM Withdrawal at BDO Cebu of â‚±8,090.37.
*   **January 30, 2025:** There was another Interest Credit at BDO Cebu for â‚±19,971.57.

Do these transactions look right to you?
2025-06-14 11:33:03,778 - app - INFO - Flask Application started.
2025-06-14 11:33:03,793 - app - INFO - Database connection established.
2025-06-14 11:33:03,793 - app - INFO - Database schema retrieved and cached.
2025-06-14 11:33:03,837 - app - INFO - Philippine holidays fetched and cached.
2025-06-14 11:34:14,337 - app - INFO - Initialized new chat session (messages in Flask session).
2025-06-14 11:34:51,456 - app - INFO - User Query: Oye, piense que fui en Cebu en Enero, pero no me recuerdo los transacciones, puedes ayudarme recordar esos?
2025-06-14 11:34:54,654 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 11:34:54,655 - app - INFO - Generated SQL Query: SELECT Date, "Transaction Details", "Branch / Source", Withdrawals, Deposits FROM bank_transactions WHERE LOWER("Branch / Source") LIKE '%cebu%' AND Date BETWEEN '2025-01-01' AND '2025-01-31' ORDER BY Date ASC;
2025-06-14 11:34:54,657 - app - INFO - Database connection established.
2025-06-14 11:34:54,659 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10b3610f0>, <sqlite3.Row object at 0x10b361b90>, <sqlite3.Row object at 0x10b361e30>, <sqlite3.Row object at 0x10b361910>, <sqlite3.Row object at 0x10b361ef0>, <sqlite3.Row object at 0x10b361df0>, <sqlite3.Row object at 0x10b361f90>, <sqlite3.Row object at 0x10b361eb0>, <sqlite3.Row object at 0x10b361f30>, <sqlite3.Row object at 0x10b361f10>, <sqlite3.Row object at 0x10b361fb0>]
2025-06-14 11:34:57,826 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 11:34:57,826 - app - INFO - Final Assistant Response (NL): Â¡Claro que sÃ­! AquÃ­ estÃ¡n los detalles de tus transacciones en Cebu durante enero de 2025:

*   **4 de enero de 2025:** Recibiste â‚±16,548.89 en BDO Cebu y realizaste una compra con POS por â‚±1,283.59 en BDO Cebu.
*   **8 de enero de 2025:** Transferencia de fondos a 7369118672 por â‚±3,187.71 desde BDO Cebu.
*   **12 de enero de 2025:** DepÃ³sito de cheque por â‚±14,237.75 en BDO Cebu.
*   **16 de enero de 2025:** Transferencia por banca mÃ³vil 5381866906 por â‚±8,980.61 desde BDO Cebu.
*   **17 de enero de 2025:** Cargo por servicio de â‚±340.78 en BDO Cebu.
*   **20 de enero de 2025:** Compra con POS por â‚±3,634.04 en BDO Cebu.
*   **26 de enero de 2025:** Pago de facturas por â‚±3,348.41 en BDO Cebu.
*   **29 de enero de 2025:** Abono de intereses de â‚±16,313.14 y retiro en cajero automÃ¡tico de â‚±8,090.37, ambos en BDO Cebu.
*   **30 de enero de 2025:** Abono de intereses de â‚±19,971.57 en BDO Cebu.

Â¿Necesitas algo mÃ¡s?
2025-06-14 11:35:22,289 - app - INFO - User Query: Oye, piense que fui en Cebu en Enero durante Sinulog, pero no me recuerdo los transacciones despues eso, puedes ayudarme recordar esos?
2025-06-14 11:35:24,553 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 11:35:24,554 - app - INFO - Generated SQL Query: SELECT Date, "Transaction Details", "Branch / Source", Withdrawals, Deposits FROM bank_transactions WHERE "Branch / Source" LIKE '%Cebu%' AND Date > '2025-01-19' AND Date LIKE '2025-01%' ORDER BY Date ASC;
2025-06-14 11:35:24,556 - app - INFO - Database connection established.
2025-06-14 11:35:24,557 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10b4220b0>, <sqlite3.Row object at 0x10b422310>, <sqlite3.Row object at 0x10b4220f0>, <sqlite3.Row object at 0x10b4221b0>, <sqlite3.Row object at 0x10b422110>]
2025-06-14 11:35:27,011 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 11:35:27,012 - app - INFO - Final Assistant Response (NL): Â¡Claro que sÃ­! AquÃ­ estÃ¡n los detalles de tus transacciones en Cebu despuÃ©s del Sinulog en enero de 2025:  

*   **20 de enero de 2025:** Compra con POS por â‚±3,634.04 en BDO Cebu.
*   **26 de enero de 2025:** Pago de facturas por â‚±3,348.41 en BDO Cebu.
*   **29 de enero de 2025:** Abono de intereses de â‚±16,313.14 y retiro en cajero automÃ¡tico de â‚±8,090.37, ambos en BDO Cebu.
*   **30 de enero de 2025:** Abono de intereses de â‚±19,971.57 en BDO Cebu.

Â¿Hay algo mÃ¡s en lo que pueda ayudarte?
2025-06-14 11:36:03,951 - app - INFO - User Query: ah, que son 'abono de intereses'? no me recuerdo haciendo esas cosas.
2025-06-14 11:36:05,781 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 11:36:05,782 - app - INFO - Generated SQL Query: SELECT "Transaction Details", Deposits, Date FROM bank_transactions WHERE LOWER("Transaction Details") LIKE '%abono de intereses%' ORDER BY Date ASC;
2025-06-14 11:36:05,784 - app - INFO - Database connection established.
2025-06-14 11:36:05,786 - app - INFO - SQL Query Executed Successfully. Results: []
2025-06-14 11:36:07,662 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 11:36:07,663 - app - INFO - Final Assistant Response (NL): Un 'abono de intereses' se refiere a los depÃ³sitos que recibes en tu cuenta como resultado de los intereses ganados. AquÃ­ estÃ¡n las instancias en las que aparecieron en sus transacciones:

*   **29 de enero de 2025:** Abono de intereses de â‚±16,313.14.
*   **30 de enero de 2025:** Abono de intereses de â‚±19,971.57.

Â¿Hay algo mÃ¡s que le gustarÃ­a saber?
2025-06-14 11:36:16,664 - app - INFO - User Query: oh, okay, i get it now.
2025-06-14 11:36:18,114 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 11:36:18,115 - app - INFO - Generated SQL Query: SELECT 'Great!' AS Confirmation;
2025-06-14 11:36:18,117 - app - INFO - Database connection established.
2025-06-14 11:36:18,118 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10b361df0>]
2025-06-14 11:36:20,361 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 11:36:20,361 - app - INFO - Final Assistant Response (NL): Awesome! Glad I could help clarify things. Just let me know if anything else comes up!
2025-06-14 11:38:59,907 - app - INFO - Flask Application started.
2025-06-14 11:38:59,922 - app - INFO - Database connection established.
2025-06-14 11:38:59,922 - app - INFO - Database schema retrieved and cached.
2025-06-14 11:38:59,968 - app - INFO - Philippine holidays fetched and cached.
2025-06-14 11:40:09,139 - app - INFO - Initialized new chat session (messages in Flask session).
2025-06-14 11:43:45,588 - app - INFO - User Query (en): Quiero hablar en espanol
2025-06-14 11:43:48,372 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 11:43:48,372 - app - INFO - Generated SQL Query: SELECT 'Hola! Actualmente solo puedo responder en inglÃ©s, pero estoy trabajando para aprender espaÃ±ol pronto. Â¿Puedo ayudarte con algo en inglÃ©s?' AS spanish_support
2025-06-14 11:43:48,374 - app - INFO - Database connection established.
2025-06-14 11:43:48,374 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x109311fd0>]
2025-06-14 11:43:50,715 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 11:43:50,716 - app - INFO - Final Assistant Response (NL): Hola! Currently I can only respond in English, but I'm working on learning Spanish soon. Can I help you with something in English?
2025-06-14 11:44:32,455 - app - INFO - User Query (en): quiero saber los transacciones que hago en Abril 2024, calculate el promedio los debitos y creditos porfa
2025-06-14 11:44:33,798 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 11:44:33,798 - app - INFO - Generated SQL Query: SELECT AVG(COALESCE(Withdrawals, 0)), AVG(COALESCE(Deposits, 0)) FROM bank_transactions WHERE Date BETWEEN '2024-04-01' AND '2024-04-30';
2025-06-14 11:44:33,800 - app - INFO - Database connection established.
2025-06-14 11:44:33,801 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1093c5070>]
2025-06-14 11:44:35,163 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 11:44:35,164 - app - INFO - Final Assistant Response (NL): Okay, for April 2024, your average withdrawal was â‚±2,515.87, and your average deposit was â‚±4,353.94. Do you need anything else for that month?
2025-06-14 11:44:58,352 - app - INFO - User Query (en): puedes decirme en detalles?
2025-06-14 11:44:59,772 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 11:44:59,772 - app - INFO - Generated SQL Query: SELECT Date, "Transaction Details", "Branch / Source", Withdrawals, Deposits, Balance FROM bank_transactions WHERE Date BETWEEN '2024-04-01' AND '2024-04-30' ORDER BY Date ASC;
2025-06-14 11:44:59,774 - app - INFO - Database connection established.
2025-06-14 11:44:59,776 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1093c51f0>, <sqlite3.Row object at 0x1093c5070>, <sqlite3.Row object at 0x1093c5050>, <sqlite3.Row object at 0x1093c52b0>, <sqlite3.Row object at 0x1093c5210>, <sqlite3.Row object at 0x1093c5150>, <sqlite3.Row object at 0x1093c52d0>, <sqlite3.Row object at 0x1093c51d0>, <sqlite3.Row object at 0x1093c53d0>, <sqlite3.Row object at 0x1093c5430>, <sqlite3.Row object at 0x1093c5490>, <sqlite3.Row object at 0x1093c54f0>, <sqlite3.Row object at 0x1093c5550>, <sqlite3.Row object at 0x1093c55b0>, <sqlite3.Row object at 0x1093c5610>, <sqlite3.Row object at 0x1093c5670>, <sqlite3.Row object at 0x1093c56d0>, <sqlite3.Row object at 0x1093c5730>, <sqlite3.Row object at 0x1093c5790>, <sqlite3.Row object at 0x1093c57f0>, <sqlite3.Row object at 0x1093c5850>, <sqlite3.Row object at 0x1093c58b0>, <sqlite3.Row object at 0x1093c5910>, <sqlite3.Row object at 0x1093c5970>, <sqlite3.Row object at 0x1093c59d0>, <sqlite3.Row object at 0x1093c5a30>, <sqlite3.Row object at 0x1093c5a90>, <sqlite3.Row object at 0x1093c5af0>, <sqlite3.Row object at 0x1093c5b50>, <sqlite3.Row object at 0x1093c5bb0>, <sqlite3.Row object at 0x1093c5c10>, <sqlite3.Row object at 0x1093c5c70>, <sqlite3.Row object at 0x1093c5cd0>, <sqlite3.Row object at 0x1093c5d30>, <sqlite3.Row object at 0x1093c5d90>, <sqlite3.Row object at 0x1093c5df0>, <sqlite3.Row object at 0x1093c5e50>, <sqlite3.Row object at 0x1093c5eb0>, <sqlite3.Row object at 0x1093c5f10>, <sqlite3.Row object at 0x1093c5f70>, <sqlite3.Row object at 0x1093c5fd0>, <sqlite3.Row object at 0x1093e5070>, <sqlite3.Row object at 0x1093e50d0>, <sqlite3.Row object at 0x1093e5130>, <sqlite3.Row object at 0x1093e5190>, <sqlite3.Row object at 0x1093e51f0>, <sqlite3.Row object at 0x1093e5250>, <sqlite3.Row object at 0x1093e52b0>, <sqlite3.Row object at 0x1093e5310>, <sqlite3.Row object at 0x1093e5370>, <sqlite3.Row object at 0x1093e53d0>, <sqlite3.Row object at 0x1093e5430>, <sqlite3.Row object at 0x1093e5490>, <sqlite3.Row object at 0x1093e54f0>, <sqlite3.Row object at 0x1093e5550>, <sqlite3.Row object at 0x1093e55b0>, <sqlite3.Row object at 0x1093e5610>]
2025-06-14 11:45:12,125 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 11:45:12,126 - app - INFO - Final Assistant Response (NL): Sure, here's a detailed breakdown of your transactions for April 2024:

*   **April 1:** Bills Payment from BDO Makati: Withdrawal of â‚±7,109.38, leaving a balance of â‚±650,198.81.
*   **April 2:** Fund Transfer to 1298867122 from BDO Taguig: Withdrawal of â‚±6,607.71, leaving a balance of â‚±982,232.94. Receipt from BDO Makati: Deposit of â‚±23,829.81, leaving a balance of â‚±1,969,645.21.
*   **April 3:** ATM Withdrawal from BDO Cebu: Withdrawal of â‚±3,853.13, leaving a balance of â‚±516,562.02.
*   **April 5:** Service Charge from BDO Online: Withdrawal of â‚±63.14, leaving a balance of â‚±2,087,727.54. Service Charge from BDO Online: Withdrawal of â‚±300.64, leaving a balance of â‚±1,927,698.09.
*   **April 6:** Mobile Banking Transfer 9831336766 from BDO QC: Withdrawal of â‚±9,142.98, leaving a balance of â‚±2,567,856.33. Receipt from BDO Cebu: Deposit of â‚±15,603.58, leaving a balance of â‚±739,055.86.
*   **April 7:** Deposit: Salary from BDO Online: Deposit of â‚±2,382.67, leaving a balance of â‚±907,725.96. Fund Transfer to 7299922974 from BDO Online: Withdrawal of â‚±9,960.10, leaving a balance of â‚±1,509,709.52. Bills Payment from BDO Makati: Withdrawal of â‚±7,116.97, leaving a balance of â‚±432,066.62.
*   **April 8:** POS Purchase from BDO Makati: Withdrawal of â‚±2,569.95, leaving a balance of â‚±2,562,927.07.
*   **April 10:** Mobile Banking Transfer 8999963054 from BDO Makati: Withdrawal of â‚±2,697.30, leaving a balance of â‚±2,088,682.83.
*   **April 11:** Fund Transfer to 9592390865 from BDO Cebu: Withdrawal of â‚±7,648.86, leaving a balance of â‚±208,568.56. Mobile Banking Transfer 8769111397 from BDO QC: Withdrawal of â‚±1,010.59, leaving a balance of â‚±2,371,221.30. Service Charge from BDO Makati: Withdrawal of â‚±295.05, leaving a balance of â‚±646,336.44. Deposit: Salary from BDO Taguig: Deposit of â‚±17,296.30, leaving a balance of â‚±573,613.55.
*   **April 12:** ATM Withdrawal from BDO Taguig: Withdrawal of â‚±1,608.59, leaving a balance of â‚±512,433.64. Mobile Banking Transfer 6665653122 from BDO Cebu: Withdrawal of â‚±1,858.61, leaving a balance of â‚±1,963,731.12. Check Deposit from BDO Makati: Deposit of â‚±22,310.96, leaving a balance of â‚±2,668,213.49.
*   **April 13:** Receipt from BDO Cebu: Deposit of â‚±23,332.30, leaving a balance of â‚±1,518,388.96. Interest Credit from BDO Taguig: Deposit of â‚±3,831.32, leaving a balance of â‚±1,632,459.94. Fund Transfer to 9059914313 from BDO Davao: Withdrawal of â‚±3,088.47, leaving a balance of â‚±2,228,194.61.
*   **April 14:** Bills Payment from BDO QC: Withdrawal of â‚±7,696.76, leaving a balance of â‚±992,852.55. Service Charge from BDO Taguig: Withdrawal of â‚±398.74, leaving a balance of â‚±1,504,938.25. Check Deposit from BDO QC: Deposit of â‚±6,713.80, leaving a balance of â‚±349,757.52.
*   **April 15:** Interest Credit from BDO Online: Deposit of â‚±2,364.45, leaving a balance of â‚±1,637,818.77. Service Charge from BDO Online: Withdrawal of â‚±457.18, leaving a balance of â‚±498,789.25. Deposit: Salary from BDO Taguig: Deposit of â‚±5,258.22, leaving a balance of â‚±906,452.50. Receipt from BDO Taguig: Deposit of â‚±12,787.11, leaving a balance of â‚±2,254,947.18.
*   **April 17:** Bills Payment from BDO Davao: Withdrawal of â‚±9,372.88, leaving a balance of â‚±87,624.49. POS Purchase from BDO Davao: Withdrawal of â‚±771.17, leaving a balance of â‚±2,418,798.95.
*   **April 18:** Interest Credit from BDO Davao: Deposit of â‚±7,935.48, leaving a balance of â‚±122,472.34. Mobile Banking Transfer 9072992279 from BDO Cebu: Withdrawal of â‚±3,441.26, leaving a balance of â‚±513,120.76. Interest Credit from BDO Makati: Deposit of â‚±1,359.40, leaving a balance of â‚±909,085.36.
*   **April 19:** Interest Credit from BDO Cebu: Deposit of â‚±17,380.12, leaving a balance of â‚±1,384,761.29. Mobile Banking Transfer 8215470878 from BDO Makati: Withdrawal of â‚±1,413.73, leaving a balance of â‚±2,227,379.44.
*   **April 20:** Check Deposit from BDO Makati: Deposit of â‚±2,409.37, leaving a balance of â‚±47,998.39. Receipt from BDO Makati: Deposit of â‚±8,694.80, leaving a balance of â‚±999,661.33. ATM Withdrawal from BDO Makati: Withdrawal of â‚±9,491.93, leaving a balance of â‚±2,245,039.72. POS Purchase from BDO Cebu: Withdrawal of â‚±7,766.25, leaving a balance of â‚±898,686.25. Service Charge from BDO Online: Withdrawal of â‚±254.14, leaving a balance of â‚±974,492.29.
*   **April 21:** Service Charge from BDO Makati: Withdrawal of â‚±381.19, leaving a balance of â‚±2,099,147.63. Receipt from BDO Online: Deposit of â‚±9,392.70, leaving a balance of â‚±1,791,453.21.
*   **April 22:** Fund Transfer to 7896596272 from BDO Online: Withdrawal of â‚±1,616.54, leaving a balance of â‚±1,591,381.16. Service Charge from BDO Taguig: Withdrawal of â‚±74.65, leaving a balance of â‚±1,000,549.31.
*   **April 23:** Mobile Banking Transfer 3149484176 from BDO Cebu: Withdrawal of â‚±3,972.23, leaving a balance of â‚±2,001,838.68. Receipt from BDO Davao: Deposit of â‚±19,643.94, leaving a balance of â‚±2,625,425.38. Service Charge from BDO Davao: Withdrawal of â‚±159.49, leaving a balance of â‚±596,206.91.
*   **April 24:** ATM Withdrawal from BDO Makati: Withdrawal of â‚±9,787.06, leaving a balance of â‚±1,710,693.21.
*   **April 25:** Deposit: Salary from BDO Online: Deposit of â‚±23,681.81, leaving a balance of â‚±770,326.37. Bills Payment from BDO Cebu: Withdrawal of â‚±7,078.52, leaving a balance of â‚±1,486,593.65.
*   **April 27:** POS Purchase from BDO Davao: Withdrawal of â‚±8,886.79, leaving a balance of â‚±1,844,990.84.
*   **April 28:** Deposit: Salary from BDO Davao: Deposit of â‚±3,860.64, leaving a balance of â‚±1,782,060.51. Bills Payment from BDO Davao: Withdrawal of â‚±2,898.91, leaving a balance of â‚±633,419.35. Receipt from BDO Davao: Deposit of â‚±18,105.63, leaving a balance of â‚±1,582,185.57.
*   **April 29:** Fund Transfer to 6330710675 from BDO Makati: Withdrawal of â‚±2,553.78, leaving a balance of â‚±2,343,943.13.

Is there anything else I can help you with?
2025-06-14 11:49:51,563 - app - INFO - Flask Application started.
2025-06-14 11:49:51,578 - app - INFO - Database connection established.
2025-06-14 11:49:51,578 - app - INFO - Database schema retrieved and cached.
2025-06-14 11:49:51,621 - app - INFO - Philippine holidays fetched and cached.
2025-06-14 11:49:51,883 - app - INFO - Flask Application started.
2025-06-14 11:49:51,893 - app - INFO - Database connection established.
2025-06-14 11:49:51,893 - app - INFO - Database schema retrieved and cached.
2025-06-14 11:49:51,921 - app - INFO - Philippine holidays fetched and cached.
2025-06-14 11:49:57,749 - app - INFO - Initialized new chat session (messages in Flask session).
2025-06-14 11:51:08,041 - app - INFO - User Query (es): hola
2025-06-14 11:51:10,260 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 11:51:10,261 - app - INFO - Generated SQL Query: None
2025-06-14 11:51:10,264 - app - INFO - Database connection established.
2025-06-14 11:51:10,265 - app - CRITICAL - An unexpected critical error occurred: argument 1 must be str, not None
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/webapp/app.py", line 317, in chat
    cursor.execute(sql_query)
TypeError: argument 1 must be str, not None
2025-06-14 11:51:15,463 - app - INFO - User Query (es): oye
2025-06-14 11:51:16,787 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 11:51:16,788 - app - INFO - Generated SQL Query: SELECT 'Â¡Hola! Â¿En quÃ© puedo ayudarte hoy? ðŸ˜Š'
2025-06-14 11:51:16,790 - app - INFO - Database connection established.
2025-06-14 11:51:16,791 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x115f14250>]
2025-06-14 11:51:17,938 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 11:51:17,938 - app - INFO - Final Assistant Response (NL): Â¡Hola! Â¿En quÃ© puedo ayudarte hoy? ðŸ˜Š
2025-06-14 11:51:40,294 - app - INFO - User Query (es): um, quiero saber mis transacciones durante el dia Valentino este aÃ±o
2025-06-14 11:51:41,576 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 11:51:41,577 - app - INFO - Generated SQL Query: SELECT * FROM bank_transactions WHERE strftime('%Y', Date) = '2025' AND strftime('%m-%d', Date) = '02-14' ORDER BY Date ASC;
2025-06-14 11:51:41,578 - app - INFO - Database connection established.
2025-06-14 11:51:41,580 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x115f14470>, <sqlite3.Row object at 0x115f14250>, <sqlite3.Row object at 0x115f14490>, <sqlite3.Row object at 0x115f14330>]
2025-06-14 11:51:43,556 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 11:51:43,556 - app - INFO - Final Assistant Response (NL): Â¡Claro! El 14 de febrero de 2025, DÃ­a de San ValentÃ­n, estas fueron tus transacciones:

*   Compras con tarjeta: â‚±1,676.06 en BDO Cebu y â‚±6,835.39 en BDO QC.
*   DepÃ³sito de salario: â‚±10,670.04 desde BDO Davao.
*   CrÃ©dito por intereses: â‚±16,547.21 a travÃ©s de BDO Online.

Â¿Necesitas mÃ¡s detalles sobre alguna de estas transacciones, o hay algo mÃ¡s en lo que te pueda ayudar? ðŸ˜Š
2025-06-14 11:52:15,934 - app - INFO - User Query (es): puedes calculate el promedio y sumo de los transacciones?
2025-06-14 11:52:17,846 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 11:52:17,846 - app - INFO - Generated SQL Query: SELECT AVG(COALESCE(Withdrawals, 0) + COALESCE(Deposits, 0)) AS AverageTransaction, SUM(COALESCE(Withdrawals, 0) + COALESCE(Deposits, 0)) AS TotalTransaction FROM bank_transactions WHERE Date LIKE '2025-02-14%'
2025-06-14 11:52:17,849 - app - INFO - Database connection established.
2025-06-14 11:52:17,851 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x115f143f0>]
2025-06-14 11:52:19,377 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 11:52:19,378 - app - INFO - Final Assistant Response (NL): Â¡Por supuesto! El promedio de tus transacciones el DÃ­a de San ValentÃ­n fue de â‚±8,932.17, sumando un total de â‚±35,728.70. Â¿Hay algo mÃ¡s que quieras saber sobre tus finanzas?
2025-06-14 11:52:44,362 - app - INFO - User Query (es): hola banco
2025-06-14 11:52:45,701 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 11:52:45,701 - app - INFO - Generated SQL Query: SELECT DISTINCT 'Â¡Hola! Actualmente, puedo responder preguntas relacionadas con las transacciones bancarias. Â¿QuÃ© te gustarÃ­a saber?', 'pregunta'
2025-06-14 11:52:45,702 - app - INFO - Database connection established.
2025-06-14 11:52:45,702 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x115f147d0>]
2025-06-14 11:52:47,002 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 11:52:47,003 - app - INFO - Final Assistant Response (NL): Â¡Hola! Actualmente, puedo responder preguntas relacionadas con las transacciones bancarias. Â¿QuÃ© te gustarÃ­a saber?
2025-06-14 11:53:12,305 - app - INFO - User Query (es): mostrame los 5 transacciones mas recientes, por favor.
2025-06-14 11:53:14,468 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 11:53:14,469 - app - INFO - Generated SQL Query: SELECT * FROM bank_transactions ORDER BY Date DESC LIMIT 5;
2025-06-14 11:53:14,470 - app - INFO - Database connection established.
2025-06-14 11:53:14,473 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x115f14690>, <sqlite3.Row object at 0x115f14650>, <sqlite3.Row object at 0x115f146d0>, <sqlite3.Row object at 0x115f14530>, <sqlite3.Row object at 0x115f146b0>]
2025-06-14 11:53:16,318 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 11:53:16,319 - app - INFO - Final Assistant Response (NL): Â¡Claro! AquÃ­ estÃ¡n tus 5 transacciones mÃ¡s recientes:

*   **15 de mayo de 2025:** DepÃ³sito de salario (â‚±21,109.85) desde BDO Online, DepÃ³sito de salario (â‚±14,891.36) desde BDO Cebu, Cargo por servicio (â‚±53.64) desde BDO Cebu.
*   **14 de mayo de 2025:** CrÃ©dito por intereses (â‚±2,019.04) desde BDO Davao.
*   **13 de mayo de 2025:** Compra con tarjeta (â‚±7,002.25) desde BDO Online.

Â¿Hay algo mÃ¡s que quieras revisar?
2025-06-14 12:02:26,166 - app - INFO - Flask Application started.
2025-06-14 12:02:26,183 - app - INFO - Database connection established.
2025-06-14 12:02:26,183 - app - INFO - Database schema retrieved and cached.
2025-06-14 12:02:26,227 - app - INFO - Philippine holidays fetched and cached.
2025-06-14 12:02:26,481 - app - INFO - Flask Application started.
2025-06-14 12:02:26,492 - app - INFO - Database connection established.
2025-06-14 12:02:26,492 - app - INFO - Database schema retrieved and cached.
2025-06-14 12:02:26,522 - app - INFO - Philippine holidays fetched and cached.
2025-06-14 12:02:32,087 - app - INFO - Initialized new chat session (messages in Flask session).
2025-06-14 12:09:27,313 - app - INFO - User Query (en): hi
2025-06-14 12:09:29,530 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 12:09:29,530 - app - INFO - Generated SQL Query: SELECT strftime('%Y-%m-%d %H:%M:%S', 'now', 'localtime');
2025-06-14 12:09:29,534 - app - INFO - Database connection established.
2025-06-14 12:09:29,535 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1092f2d10>]
2025-06-14 12:09:30,754 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 12:09:30,754 - app - INFO - Final Assistant Response (NL): Hi there! What can I help you with today? Perhaps you'd like to check your balance or review recent transactions?
2025-06-14 12:09:47,358 - app - INFO - User Query (es): quiero ayudarme en los transacciones en Mayo 2025.
2025-06-14 12:09:48,981 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 12:09:48,982 - app - INFO - Generated SQL Query: SELECT * FROM bank_transactions WHERE strftime('%Y-%m', Date) = '2025-05' ORDER BY Date ASC;
2025-06-14 12:09:48,984 - app - INFO - Database connection established.
2025-06-14 12:09:48,986 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1093b22f0>, <sqlite3.Row object at 0x1093b2310>, <sqlite3.Row object at 0x1093b23d0>, <sqlite3.Row object at 0x1093b24f0>, <sqlite3.Row object at 0x1093b2470>, <sqlite3.Row object at 0x1093b23b0>, <sqlite3.Row object at 0x1093b2530>, <sqlite3.Row object at 0x1093b2510>, <sqlite3.Row object at 0x1093b2630>, <sqlite3.Row object at 0x1093b2690>, <sqlite3.Row object at 0x1093b26f0>, <sqlite3.Row object at 0x1093b2750>, <sqlite3.Row object at 0x1093b27b0>, <sqlite3.Row object at 0x1093b2810>, <sqlite3.Row object at 0x1093b2870>, <sqlite3.Row object at 0x1093b28d0>, <sqlite3.Row object at 0x1093b2930>, <sqlite3.Row object at 0x1093b2990>, <sqlite3.Row object at 0x1093b29f0>, <sqlite3.Row object at 0x1093b2a50>, <sqlite3.Row object at 0x1093b2ab0>, <sqlite3.Row object at 0x1093b2b10>, <sqlite3.Row object at 0x1093b2b70>, <sqlite3.Row object at 0x1093b2bd0>, <sqlite3.Row object at 0x1093b2c30>, <sqlite3.Row object at 0x1093b2c90>, <sqlite3.Row object at 0x1093b2cf0>, <sqlite3.Row object at 0x1093b2d50>, <sqlite3.Row object at 0x1093b2db0>, <sqlite3.Row object at 0x1093b2e10>, <sqlite3.Row object at 0x1093b2e70>, <sqlite3.Row object at 0x1093b2ed0>]
2025-06-14 12:09:50,824 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 12:09:50,824 - app - INFO - Final Assistant Response (NL): Â¡Claro! AquÃ­ estÃ¡n tus transacciones de Mayo de 2025. Hay una mezcla de depÃ³sitos de salario, retiros en cajeros automÃ¡ticos, compras con POS, cargos por servicio y transferencias bancarias mÃ³viles desde sucursales como BDO Taguig, BDO Cebu, BDO QC, BDO Davao, BDO Makati y BDO Online. Â¿Hay algo en particular que le gustarÃ­a revisar mÃ¡s de cerca o alguna transacciÃ³n que le parezca inusual?
2025-06-14 12:10:15,244 - app - INFO - User Query (en): yes, i want specifically those from Davao.
2025-06-14 12:10:16,937 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 12:10:16,938 - app - INFO - Generated SQL Query: SELECT Date, "Transaction Details", Withdrawals, Deposits, Balance FROM bank_transactions WHERE Date BETWEEN '2025-05-01' AND '2025-05-31' AND LOWER("Branch / Source") LIKE '%davao%' ORDER BY Date ASC;
2025-06-14 12:10:16,940 - app - INFO - Database connection established.
2025-06-14 12:10:16,942 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1093b2310>, <sqlite3.Row object at 0x1093b24f0>, <sqlite3.Row object at 0x1093b2530>, <sqlite3.Row object at 0x1093b2510>, <sqlite3.Row object at 0x1093b2690>]
2025-06-14 12:10:18,781 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 12:10:18,781 - app - INFO - Final Assistant Response (NL): Okay, here are your transactions in May 2025 specifically from Davao:

Looks like these are the Davao transactions we found. Is there anything specific about these transactions that you'd like to explore further? For example, are you curious about the total withdrawals, total deposits, or a particular transaction detail?
2025-06-14 12:10:29,985 - app - INFO - User Query (en): where
2025-06-14 12:10:31,348 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 12:10:31,349 - app - INFO - Generated SQL Query: SELECT DISTINCT "Branch / Source" FROM bank_transactions;
2025-06-14 12:10:31,351 - app - INFO - Database connection established.
2025-06-14 12:10:31,353 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1093b28d0>, <sqlite3.Row object at 0x1093b2690>, <sqlite3.Row object at 0x1093b2470>, <sqlite3.Row object at 0x1093b27b0>, <sqlite3.Row object at 0x1093b2430>, <sqlite3.Row object at 0x1093b2630>]
2025-06-14 12:10:32,790 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 12:10:32,790 - app - INFO - Final Assistant Response (NL): Okay, here's a list of all the branches or sources where your transactions originated from: BDO Cebu, BDO Davao, BDO Makati, BDO Online, BDO QC, and BDO Taguig. Did you have a specific location in mind you wanted to investigate further?
2025-06-14 12:11:17,899 - app - INFO - User Query (es): ayudame en los transacciones que haci en marzo 2025
2025-06-14 12:11:19,808 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 12:11:19,808 - app - INFO - Generated SQL Query: SELECT * FROM bank_transactions WHERE STRFTIME('%Y-%m', Date) = '2025-03' ORDER BY Date ASC;
2025-06-14 12:11:19,810 - app - INFO - Database connection established.
2025-06-14 12:11:19,812 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1093b2530>, <sqlite3.Row object at 0x1093b27b0>, <sqlite3.Row object at 0x1093b2750>, <sqlite3.Row object at 0x1093b2430>, <sqlite3.Row object at 0x1093b2a50>, <sqlite3.Row object at 0x1093b23d0>, <sqlite3.Row object at 0x1093b2870>, <sqlite3.Row object at 0x1093b23b0>, <sqlite3.Row object at 0x1093b2990>, <sqlite3.Row object at 0x1093b2b70>, <sqlite3.Row object at 0x1093b24f0>, <sqlite3.Row object at 0x1093b2fd0>, <sqlite3.Row object at 0x1093b29f0>, <sqlite3.Row object at 0x1093b26f0>, <sqlite3.Row object at 0x1093b2810>, <sqlite3.Row object at 0x1093b2d50>, <sqlite3.Row object at 0x1093b2c90>, <sqlite3.Row object at 0x1093b2cf0>, <sqlite3.Row object at 0x1093b2db0>, <sqlite3.Row object at 0x1093b2c30>, <sqlite3.Row object at 0x1093b2bd0>, <sqlite3.Row object at 0x1093b2e10>, <sqlite3.Row object at 0x1093b2e70>, <sqlite3.Row object at 0x1093b2ed0>, <sqlite3.Row object at 0x1093b24d0>, <sqlite3.Row object at 0x1093b2fb0>, <sqlite3.Row object at 0x1093b2ef0>, <sqlite3.Row object at 0x1093e70b0>, <sqlite3.Row object at 0x1093e7030>, <sqlite3.Row object at 0x1093e7090>, <sqlite3.Row object at 0x1093e70d0>, <sqlite3.Row object at 0x1093e70f0>, <sqlite3.Row object at 0x1093e7130>, <sqlite3.Row object at 0x1093e7190>, <sqlite3.Row object at 0x1093e7230>, <sqlite3.Row object at 0x1093e7110>, <sqlite3.Row object at 0x1093e7150>, <sqlite3.Row object at 0x1093e7270>, <sqlite3.Row object at 0x1093e72d0>, <sqlite3.Row object at 0x1093e7330>, <sqlite3.Row object at 0x1093e7390>, <sqlite3.Row object at 0x1093e73f0>, <sqlite3.Row object at 0x1093e7450>, <sqlite3.Row object at 0x1093e74b0>, <sqlite3.Row object at 0x1093e7510>, <sqlite3.Row object at 0x1093e7570>, <sqlite3.Row object at 0x1093e75d0>, <sqlite3.Row object at 0x1093e7630>, <sqlite3.Row object at 0x1093e7690>, <sqlite3.Row object at 0x1093e76f0>, <sqlite3.Row object at 0x1093e7750>, <sqlite3.Row object at 0x1093e77b0>, <sqlite3.Row object at 0x1093e7810>, <sqlite3.Row object at 0x1093e7870>, <sqlite3.Row object at 0x1093e78d0>, <sqlite3.Row object at 0x1093e7930>, <sqlite3.Row object at 0x1093e7990>, <sqlite3.Row object at 0x1093e79f0>]
2025-06-14 12:11:21,570 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 12:11:21,570 - app - INFO - Final Assistant Response (NL): Â¡Por supuesto! AquÃ­ estÃ¡n todas tus transacciones de Marzo de 2025. Hay depÃ³sitos de salario, transferencias bancarias mÃ³viles, pagos de facturas, crÃ©ditos de intereses, compras con POS, retiros de cajeros automÃ¡ticos y cargos por servicio desde varias sucursales como BDO Taguig, BDO Cebu, BDO QC, BDO Davao, BDO Makati y BDO Online. Â¿Hay algo especÃ­fico de este mes que quieras revisar mÃ¡s a fondo?
2025-06-14 12:11:34,948 - app - INFO - User Query (es): puedes mostrame en detalle?
2025-06-14 12:11:36,500 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 12:11:36,501 - app - INFO - Generated SQL Query: SELECT * FROM bank_transactions WHERE strftime('%Y', Date) = '2025' AND strftime('%m', Date) = '03' ORDER BY Date ASC;
2025-06-14 12:11:36,503 - app - INFO - Database connection established.
2025-06-14 12:11:36,505 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1093b2570>, <sqlite3.Row object at 0x1093b2690>, <sqlite3.Row object at 0x1093b2f50>, <sqlite3.Row object at 0x1093b2550>, <sqlite3.Row object at 0x1093b24b0>, <sqlite3.Row object at 0x1093b2490>, <sqlite3.Row object at 0x1093b2670>, <sqlite3.Row object at 0x1093b26b0>, <sqlite3.Row object at 0x1093b2410>, <sqlite3.Row object at 0x1093b25d0>, <sqlite3.Row object at 0x1093b2590>, <sqlite3.Row object at 0x1093b2f70>, <sqlite3.Row object at 0x1093b2450>, <sqlite3.Row object at 0x1093b2650>, <sqlite3.Row object at 0x1093b2610>, <sqlite3.Row object at 0x1093b26d0>, <sqlite3.Row object at 0x1093b2710>, <sqlite3.Row object at 0x1093b2730>, <sqlite3.Row object at 0x1093b2530>, <sqlite3.Row object at 0x1093b27b0>, <sqlite3.Row object at 0x1093b2750>, <sqlite3.Row object at 0x1093b2430>, <sqlite3.Row object at 0x1093b2a50>, <sqlite3.Row object at 0x1093b23d0>, <sqlite3.Row object at 0x1093b2870>, <sqlite3.Row object at 0x1093b23b0>, <sqlite3.Row object at 0x1093b2990>, <sqlite3.Row object at 0x1093b2b70>, <sqlite3.Row object at 0x1093b24f0>, <sqlite3.Row object at 0x1093b2fd0>, <sqlite3.Row object at 0x1093b29f0>, <sqlite3.Row object at 0x1093b26f0>, <sqlite3.Row object at 0x1093b2810>, <sqlite3.Row object at 0x1093b2d50>, <sqlite3.Row object at 0x1093b2c90>, <sqlite3.Row object at 0x1093b2cf0>, <sqlite3.Row object at 0x1093b2db0>, <sqlite3.Row object at 0x1093b2c30>, <sqlite3.Row object at 0x1093b2bd0>, <sqlite3.Row object at 0x1093b2e10>, <sqlite3.Row object at 0x1093b2e70>, <sqlite3.Row object at 0x1093b2ed0>, <sqlite3.Row object at 0x1093b24d0>, <sqlite3.Row object at 0x1093b2fb0>, <sqlite3.Row object at 0x1093b2ef0>, <sqlite3.Row object at 0x1093b2310>, <sqlite3.Row object at 0x1093b2630>, <sqlite3.Row object at 0x1093e7b90>, <sqlite3.Row object at 0x1093e7a10>, <sqlite3.Row object at 0x1093e70b0>, <sqlite3.Row object at 0x1093e70d0>, <sqlite3.Row object at 0x1093e7190>, <sqlite3.Row object at 0x1093e7150>, <sqlite3.Row object at 0x1093e7330>, <sqlite3.Row object at 0x1093e7450>, <sqlite3.Row object at 0x1093e7570>, <sqlite3.Row object at 0x1093e7690>, <sqlite3.Row object at 0x1093e77b0>]
2025-06-14 12:11:38,474 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 12:11:38,475 - app - INFO - Final Assistant Response (NL): Â¡Claro! AquÃ­ estÃ¡ el detalle completo de todas tus transacciones durante el mes de Marzo de 2025. Incluye depÃ³sitos de salario, transferencias bancarias, pagos de facturas, compras con POS, retiros de cajeros automÃ¡ticos y cargos por servicio. AdemÃ¡s, verÃ¡s las sucursales de donde se originaron las transacciones como BDO Taguig, BDO Cebu, BDO QC, BDO Davao, BDO Makati, y BDO Online. Â¿Hay algo en especÃ­fico que te gustarÃ­a revisar o alguna transacciÃ³n que quieras que veamos mÃ¡s a fondo?
2025-06-14 12:12:19,171 - app - INFO - Flask Application started.
2025-06-14 12:12:19,187 - app - INFO - Database connection established.
2025-06-14 12:12:19,187 - app - INFO - Database schema retrieved and cached.
2025-06-14 12:12:19,233 - app - INFO - Philippine holidays fetched and cached.
2025-06-14 12:12:26,793 - app - INFO - Flask Application started.
2025-06-14 12:12:26,807 - app - INFO - Database connection established.
2025-06-14 12:12:26,807 - app - INFO - Database schema retrieved and cached.
2025-06-14 12:12:26,849 - app - INFO - Philippine holidays fetched and cached.
2025-06-14 12:13:09,860 - app - INFO - Flask Application started.
2025-06-14 12:13:09,874 - app - INFO - Database connection established.
2025-06-14 12:13:09,874 - app - INFO - Database schema retrieved and cached.
2025-06-14 12:13:09,915 - app - INFO - Philippine holidays fetched and cached.
2025-06-14 12:13:11,272 - app - INFO - Flask Application started.
2025-06-14 12:13:11,286 - app - INFO - Database connection established.
2025-06-14 12:13:11,286 - app - INFO - Database schema retrieved and cached.
2025-06-14 12:13:11,317 - app - INFO - Philippine holidays fetched and cached.
2025-06-14 12:13:12,825 - app - INFO - Initialized new chat session (messages in Flask session).
2025-06-14 12:13:41,455 - app - INFO - User Query (es): oye, puedes ayudarme en los transacciones que haci durante enero despues Sinulog en Cebu
2025-06-14 12:13:44,199 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 12:13:44,199 - app - INFO - Generated SQL Query: SELECT * FROM bank_transactions WHERE Date >= '2025-01-20' AND Date < '2025-02-01' ORDER BY Date ASC;
2025-06-14 12:13:44,201 - app - INFO - Database connection established.
2025-06-14 12:13:44,203 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d0d58f0>, <sqlite3.Row object at 0x10d0d5d30>, <sqlite3.Row object at 0x10d0d5fd0>, <sqlite3.Row object at 0x10d1b9090>, <sqlite3.Row object at 0x10d1b9150>, <sqlite3.Row object at 0x10d0d5f90>, <sqlite3.Row object at 0x10d1b91b0>, <sqlite3.Row object at 0x10d1b91f0>, <sqlite3.Row object at 0x10d1b9250>, <sqlite3.Row object at 0x10d1b92b0>, <sqlite3.Row object at 0x10d1b9310>, <sqlite3.Row object at 0x10d1b9370>, <sqlite3.Row object at 0x10d1b93d0>, <sqlite3.Row object at 0x10d1b9430>, <sqlite3.Row object at 0x10d1b9490>, <sqlite3.Row object at 0x10d1b94f0>, <sqlite3.Row object at 0x10d1b9550>, <sqlite3.Row object at 0x10d1b95b0>, <sqlite3.Row object at 0x10d1b9610>, <sqlite3.Row object at 0x10d1b9670>]
2025-06-14 12:13:48,395 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 12:13:48,395 - app - INFO - Final Assistant Response (NL): Â¡Claro que sÃ­! AquÃ­ estÃ¡n tus transacciones desde el 20 de enero hasta el 31 de enero:

*   20 de enero: Compra POS en BDO Cebu por â‚±3,634.04.
*   21 de enero: Transferencia de fondos a 1172893522 desde BDO QC por â‚±6,064.38.
*   22 de enero: Recibido desde BDO QC por â‚±546.11, Transferencia de fondos a 2194673401 desde BDO Online por â‚±5,237.74, Compra POS en BDO QC por â‚±6,148.45, Retiro de ATM en BDO Davao por â‚±4,469.53.
*   23 de enero: Transferencia bancaria mÃ³vil 4890628295 desde BDO Online por â‚±6,191.95.
*   24 de enero: Pago de facturas en BDO Makati por â‚±1,411.82.
*   25 de enero: DepÃ³sito de salario en BDO QC por â‚±15,400.55.
*   26 de enero: Compra POS en BDO Makati por â‚±8,073.76, Pago de facturas en BDO Cebu por â‚±3,348.41.
*   27 de enero: CrÃ©dito de interÃ©s en BDO Online por â‚±15,490.90.
*   28 de enero: DepÃ³sito de salario en BDO Online por â‚±12,938.78, Transferencia de fondos a 4728940550 desde BDO Online por â‚±5,078.35.
*   29 de enero: Transferencia de fondos a 8325785916 desde BDO Davao por â‚±9,800.00, CrÃ©dito de interÃ©s en BDO Cebu por â‚±16,313.14, Retiro de ATM en BDO Cebu por â‚±8,090.37.
*   30 de enero: DepÃ³sito de cheque en BDO QC por â‚±7,613.93, CrÃ©dito de interÃ©s en BDO Cebu por â‚±19,971.57, Pago de facturas en BDO Makati por â‚±8,567.65.

Â¿Hay algo mÃ¡s en lo que te pueda ayudar?
2025-06-14 12:14:13,493 - app - INFO - User Query (es): oye, puedes ayudarme en los transacciones que haci en Cebu durante enero despues Sinulog
2025-06-14 12:14:15,630 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 12:14:15,630 - app - INFO - Generated SQL Query: SELECT * FROM bank_transactions WHERE strftime('%Y', Date) = '2025' AND strftime('%m', Date) = '01' AND Date >= '2025-01-20' AND LOWER("Branch / Source") LIKE '%cebu%' ORDER BY Date ASC;
2025-06-14 12:14:15,632 - app - INFO - Database connection established.
2025-06-14 12:14:15,633 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d1b9250>, <sqlite3.Row object at 0x10d1b9090>, <sqlite3.Row object at 0x10d1b9310>, <sqlite3.Row object at 0x10d1b91f0>, <sqlite3.Row object at 0x10d1b9370>]
2025-06-14 12:14:17,677 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 12:14:17,678 - app - INFO - Final Assistant Response (NL): Â¡Por supuesto! AquÃ­ estÃ¡n las transacciones que realizaste en Cebu desde el 20 de enero hasta el 31 de enero:

*   20 de enero: Compra POS en BDO Cebu por â‚±3,634.04.
*   26 de enero: Pago de facturas en BDO Cebu por â‚±3,348.41.
*   29 de enero: CrÃ©dito de interÃ©s en BDO Cebu por â‚±16,313.14 y Retiro de ATM en BDO Cebu por â‚±8,090.37.
*   30 de enero: CrÃ©dito de interÃ©s en BDO Cebu por â‚±19,971.57.

Â¿Hay algo mÃ¡s en lo que te pueda ayudar?
2025-06-14 12:14:48,368 - app - INFO - User Query (es): que es credito de interes, no recuerdo haciendo este transaccion en Cebu
2025-06-14 12:14:50,376 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 12:14:50,377 - app - INFO - Generated SQL Query: SELECT Date, "Transaction Details", "Branch / Source", Deposits FROM bank_transactions WHERE LOWER("Transaction Details") LIKE '%crÃ©dito de interÃ©s%' AND LOWER("Branch / Source") LIKE '%cebu%' AND Date >= '2025-01-20' AND Date <= '2025-01-31' ORDER BY Date ASC;
2025-06-14 12:14:50,379 - app - INFO - Database connection established.
2025-06-14 12:14:50,381 - app - INFO - SQL Query Executed Successfully. Results: []
2025-06-14 12:14:52,393 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 12:14:52,394 - app - INFO - Final Assistant Response (NL): Un 'crÃ©dito de interÃ©s' es cuando el banco te paga intereses por el dinero que tienes en tu cuenta. 

SegÃºn mis registros, no tienes ningun 'credito de interes' en Cebu. Es posible que haya un error en la transcripciÃ³n o que estÃ©s confundiendo la ubicaciÃ³n. Â¿Te gustarÃ­a que revisara tus transacciones de 'credito de interes' en otras sucursales o en una fecha diferente?
2025-06-14 12:15:19,767 - app - INFO - User Query (en): what is credito de interes?
2025-06-14 12:15:21,125 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 12:15:21,125 - app - INFO - Generated SQL Query: SELECT DISTINCT `Transaction Details` FROM bank_transactions WHERE LOWER(`Transaction Details`) LIKE '%credito de interes%';
2025-06-14 12:15:21,126 - app - INFO - Database connection established.
2025-06-14 12:15:21,128 - app - INFO - SQL Query Executed Successfully. Results: []
2025-06-14 12:15:22,395 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 12:15:22,395 - app - INFO - Final Assistant Response (NL): The term 'credito de interes' usually refers to interest credited to your account, basically the bank paying you for keeping your money with them. Do you want to know more about these transactions?
2025-06-14 12:15:39,862 - app - INFO - User Query (en): oh, i thought i made a transaction from it, but it's clear for me now.
2025-06-14 12:15:41,098 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 12:15:41,099 - app - INFO - Generated SQL Query: SELECT Date, "Transaction Details", "Branch / Source", Withdrawals, Deposits, Balance FROM bank_transactions ORDER BY Date ASC;
2025-06-14 12:15:41,101 - app - INFO - Database connection established.
2025-06-14 12:15:41,107 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d1b9370>, <sqlite3.Row object at 0x10d1b9090>, <sqlite3.Row object at 0x10d1b9150>, <sqlite3.Row object at 0x10d1b91b0>, <sqlite3.Row object at 0x10d1b9830>, <sqlite3.Row object at 0x10d1b9430>, <sqlite3.Row object at 0x10d1b9670>, <sqlite3.Row object at 0x10d1b97f0>, <sqlite3.Row object at 0x10d1b98f0>, <sqlite3.Row object at 0x10d1b9870>, <sqlite3.Row object at 0x10d1b9550>, <sqlite3.Row object at 0x10d1b93d0>, <sqlite3.Row object at 0x10d1b9890>, <sqlite3.Row object at 0x10d1b9790>, <sqlite3.Row object at 0x10d1b9850>, <sqlite3.Row object at 0x10d1b9930>, <sqlite3.Row object at 0x10d1b98b0>, <sqlite3.Row object at 0x10d1b9990>, <sqlite3.Row object at 0x10d1b98d0>, <sqlite3.Row object at 0x10d1b99b0>, <sqlite3.Row object at 0x10d1b99d0>, <sqlite3.Row object at 0x10d1b99f0>, <sqlite3.Row object at 0x10d1b9a10>, <sqlite3.Row object at 0x10d1b9a30>, <sqlite3.Row object at 0x10d1b9a50>, <sqlite3.Row object at 0x10d1b9ab0>, <sqlite3.Row object at 0x10d1b9b10>, <sqlite3.Row object at 0x10d1b9b70>, <sqlite3.Row object at 0x10d1b9bd0>, <sqlite3.Row object at 0x10d1b9c30>, <sqlite3.Row object at 0x10d1b9c90>, <sqlite3.Row object at 0x10d1b9cf0>, <sqlite3.Row object at 0x10d1b9d50>, <sqlite3.Row object at 0x10d1b9db0>, <sqlite3.Row object at 0x10d1b9e10>, <sqlite3.Row object at 0x10d1b9e70>, <sqlite3.Row object at 0x10d1b9ed0>, <sqlite3.Row object at 0x10d1b9f30>, <sqlite3.Row object at 0x10d1b9f90>, <sqlite3.Row object at 0x10d1e5030>, <sqlite3.Row object at 0x10d1e5090>, <sqlite3.Row object at 0x10d1e50f0>, <sqlite3.Row object at 0x10d1e5150>, <sqlite3.Row object at 0x10d1e51b0>, <sqlite3.Row object at 0x10d1e5210>, <sqlite3.Row object at 0x10d1e5270>, <sqlite3.Row object at 0x10d1e52d0>, <sqlite3.Row object at 0x10d1e5330>, <sqlite3.Row object at 0x10d1e5390>, <sqlite3.Row object at 0x10d1e53f0>, <sqlite3.Row object at 0x10d1e5450>, <sqlite3.Row object at 0x10d1e54b0>, <sqlite3.Row object at 0x10d1e5510>, <sqlite3.Row object at 0x10d1e5570>, <sqlite3.Row object at 0x10d1e55d0>, <sqlite3.Row object at 0x10d1e5630>, <sqlite3.Row object at 0x10d1e5690>, <sqlite3.Row object at 0x10d1e56f0>, <sqlite3.Row object at 0x10d1e5750>, <sqlite3.Row object at 0x10d1e57b0>, <sqlite3.Row object at 0x10d1e5810>, <sqlite3.Row object at 0x10d1e5870>, <sqlite3.Row object at 0x10d1e58d0>, <sqlite3.Row object at 0x10d1e5930>, <sqlite3.Row object at 0x10d1e5990>, <sqlite3.Row object at 0x10d1e59f0>, <sqlite3.Row object at 0x10d1e5a50>, <sqlite3.Row object at 0x10d1e5ab0>, <sqlite3.Row object at 0x10d1e5b10>, <sqlite3.Row object at 0x10d1e5b70>, <sqlite3.Row object at 0x10d1e5bd0>, <sqlite3.Row object at 0x10d1e5c30>, <sqlite3.Row object at 0x10d1e5c90>, <sqlite3.Row object at 0x10d1e5cf0>, <sqlite3.Row object at 0x10d1e5d50>, <sqlite3.Row object at 0x10d1e5db0>, <sqlite3.Row object at 0x10d1e5e10>, <sqlite3.Row object at 0x10d1e5e70>, <sqlite3.Row object at 0x10d1e5ed0>, <sqlite3.Row object at 0x10d1e5f30>, <sqlite3.Row object at 0x10d1e5f90>, <sqlite3.Row object at 0x10d1de030>, <sqlite3.Row object at 0x10d1de090>, <sqlite3.Row object at 0x10d1de0f0>, <sqlite3.Row object at 0x10d1de150>, <sqlite3.Row object at 0x10d1de1b0>, <sqlite3.Row object at 0x10d1de210>, <sqlite3.Row object at 0x10d1de270>, <sqlite3.Row object at 0x10d1de2d0>, <sqlite3.Row object at 0x10d1de330>, <sqlite3.Row object at 0x10d1de390>, <sqlite3.Row object at 0x10d1de3f0>, <sqlite3.Row object at 0x10d1de450>, <sqlite3.Row object at 0x10d1de4b0>, <sqlite3.Row object at 0x10d1de510>, <sqlite3.Row object at 0x10d1de570>, <sqlite3.Row object at 0x10d1de5d0>, <sqlite3.Row object at 0x10d1de630>, <sqlite3.Row object at 0x10d1de690>, <sqlite3.Row object at 0x10d1de6f0>, <sqlite3.Row object at 0x10d1de750>, <sqlite3.Row object at 0x10d1de7b0>, <sqlite3.Row object at 0x10d1de810>, <sqlite3.Row object at 0x10d1de870>, <sqlite3.Row object at 0x10d1de8d0>, <sqlite3.Row object at 0x10d1de930>, <sqlite3.Row object at 0x10d1de990>, <sqlite3.Row object at 0x10d1de9f0>, <sqlite3.Row object at 0x10d1dea50>, <sqlite3.Row object at 0x10d1deab0>, <sqlite3.Row object at 0x10d1deb10>, <sqlite3.Row object at 0x10d1deb70>, <sqlite3.Row object at 0x10d1debd0>, <sqlite3.Row object at 0x10d1dec30>, <sqlite3.Row object at 0x10d1dec90>, <sqlite3.Row object at 0x10d1decf0>, <sqlite3.Row object at 0x10d1ded50>, <sqlite3.Row object at 0x10d1dedb0>, <sqlite3.Row object at 0x10d1dee10>, <sqlite3.Row object at 0x10d1dee70>, <sqlite3.Row object at 0x10d1deed0>, <sqlite3.Row object at 0x10d1def30>, <sqlite3.Row object at 0x10d1def90>, <sqlite3.Row object at 0x10d1ec030>, <sqlite3.Row object at 0x10d1ec090>, <sqlite3.Row object at 0x10d1ec0f0>, <sqlite3.Row object at 0x10d1ec150>, <sqlite3.Row object at 0x10d1ec1b0>, <sqlite3.Row object at 0x10d1ec210>, <sqlite3.Row object at 0x10d1ec270>, <sqlite3.Row object at 0x10d1ec2d0>, <sqlite3.Row object at 0x10d1ec330>, <sqlite3.Row object at 0x10d1ec390>, <sqlite3.Row object at 0x10d1ec3f0>, <sqlite3.Row object at 0x10d1ec450>, <sqlite3.Row object at 0x10d1ec4b0>, <sqlite3.Row object at 0x10d1ec510>, <sqlite3.Row object at 0x10d1ec570>, <sqlite3.Row object at 0x10d1ec5d0>, <sqlite3.Row object at 0x10d1ec630>, <sqlite3.Row object at 0x10d1ec690>, <sqlite3.Row object at 0x10d1ec6f0>, <sqlite3.Row object at 0x10d1ec750>, <sqlite3.Row object at 0x10d1ec7b0>, <sqlite3.Row object at 0x10d1ec810>, <sqlite3.Row object at 0x10d1ec870>, <sqlite3.Row object at 0x10d1ec8d0>, <sqlite3.Row object at 0x10d1ec930>, <sqlite3.Row object at 0x10d1ec990>, <sqlite3.Row object at 0x10d1ec9f0>, <sqlite3.Row object at 0x10d1eca50>, <sqlite3.Row object at 0x10d1ecab0>, <sqlite3.Row object at 0x10d1ecb10>, <sqlite3.Row object at 0x10d1ecb70>, <sqlite3.Row object at 0x10d1ecbd0>, <sqlite3.Row object at 0x10d1ecc30>, <sqlite3.Row object at 0x10d1ecc90>, <sqlite3.Row object at 0x10d1eccf0>, <sqlite3.Row object at 0x10d1ecd50>, <sqlite3.Row object at 0x10d1ecdb0>, <sqlite3.Row object at 0x10d1ece10>, <sqlite3.Row object at 0x10d1ece70>, <sqlite3.Row object at 0x10d1eced0>, <sqlite3.Row object at 0x10d1ecf30>, <sqlite3.Row object at 0x10d1ecf90>, <sqlite3.Row object at 0x10d1f0030>, <sqlite3.Row object at 0x10d1f0090>, <sqlite3.Row object at 0x10d1f00f0>, <sqlite3.Row object at 0x10d1f0150>, <sqlite3.Row object at 0x10d1f01b0>, <sqlite3.Row object at 0x10d1f0210>, <sqlite3.Row object at 0x10d1f0270>, <sqlite3.Row object at 0x10d1f02d0>, <sqlite3.Row object at 0x10d1f0330>, <sqlite3.Row object at 0x10d1f0390>, <sqlite3.Row object at 0x10d1f03f0>, <sqlite3.Row object at 0x10d1f0450>, <sqlite3.Row object at 0x10d1f04b0>, <sqlite3.Row object at 0x10d1f0510>, <sqlite3.Row object at 0x10d1f0570>, <sqlite3.Row object at 0x10d1f05d0>, <sqlite3.Row object at 0x10d1f0630>, <sqlite3.Row object at 0x10d1f0690>, <sqlite3.Row object at 0x10d1f06f0>, <sqlite3.Row object at 0x10d1f0750>, <sqlite3.Row object at 0x10d1f07b0>, <sqlite3.Row object at 0x10d1f0810>, <sqlite3.Row object at 0x10d1f0870>, <sqlite3.Row object at 0x10d1f08d0>, <sqlite3.Row object at 0x10d1f0930>, <sqlite3.Row object at 0x10d1f0990>, <sqlite3.Row object at 0x10d1f09f0>, <sqlite3.Row object at 0x10d1f0a50>, <sqlite3.Row object at 0x10d1f0ab0>, <sqlite3.Row object at 0x10d1f0b10>, <sqlite3.Row object at 0x10d1f0b70>, <sqlite3.Row object at 0x10d1f0bd0>, <sqlite3.Row object at 0x10d1f0c30>, <sqlite3.Row object at 0x10d1f0c90>, <sqlite3.Row object at 0x10d1f0cf0>, <sqlite3.Row object at 0x10d1f0d50>, <sqlite3.Row object at 0x10d1f0db0>, <sqlite3.Row object at 0x10d1f0e10>, <sqlite3.Row object at 0x10d1f0e70>, <sqlite3.Row object at 0x10d1f0ed0>, <sqlite3.Row object at 0x10d1f0f30>, <sqlite3.Row object at 0x10d1f0f90>, <sqlite3.Row object at 0x10d1f5030>, <sqlite3.Row object at 0x10d1f5090>, <sqlite3.Row object at 0x10d1f50f0>, <sqlite3.Row object at 0x10d1f5150>, <sqlite3.Row object at 0x10d1f51b0>, <sqlite3.Row object at 0x10d1f5210>, <sqlite3.Row object at 0x10d1f5270>, <sqlite3.Row object at 0x10d1f52d0>, <sqlite3.Row object at 0x10d1f5330>, <sqlite3.Row object at 0x10d1f5390>, <sqlite3.Row object at 0x10d1f53f0>, <sqlite3.Row object at 0x10d1f5450>, <sqlite3.Row object at 0x10d1f54b0>, <sqlite3.Row object at 0x10d1f5510>, <sqlite3.Row object at 0x10d1f5570>, <sqlite3.Row object at 0x10d1f55d0>, <sqlite3.Row object at 0x10d1f5630>, <sqlite3.Row object at 0x10d1f5690>, <sqlite3.Row object at 0x10d1f56f0>, <sqlite3.Row object at 0x10d1f5750>, <sqlite3.Row object at 0x10d1f57b0>, <sqlite3.Row object at 0x10d1f5810>, <sqlite3.Row object at 0x10d1f5870>, <sqlite3.Row object at 0x10d1f58d0>, <sqlite3.Row object at 0x10d1f5930>, <sqlite3.Row object at 0x10d1f5990>, <sqlite3.Row object at 0x10d1f59f0>, <sqlite3.Row object at 0x10d1f5a50>, <sqlite3.Row object at 0x10d1f5ab0>, <sqlite3.Row object at 0x10d1f5b10>, <sqlite3.Row object at 0x10d1f5b70>, <sqlite3.Row object at 0x10d1f5bd0>, <sqlite3.Row object at 0x10d1f5c30>, <sqlite3.Row object at 0x10d1f5c90>, <sqlite3.Row object at 0x10d1f5cf0>, <sqlite3.Row object at 0x10d1f5d50>, <sqlite3.Row object at 0x10d1f5db0>, <sqlite3.Row object at 0x10d1f5e10>, <sqlite3.Row object at 0x10d1f5e70>, <sqlite3.Row object at 0x10d1f5ed0>, <sqlite3.Row object at 0x10d1f5f30>, <sqlite3.Row object at 0x10d1f5f90>, <sqlite3.Row object at 0x10d1f9030>, <sqlite3.Row object at 0x10d1f9090>, <sqlite3.Row object at 0x10d1f90f0>, <sqlite3.Row object at 0x10d1f9150>, <sqlite3.Row object at 0x10d1f91b0>, <sqlite3.Row object at 0x10d1f9210>, <sqlite3.Row object at 0x10d1f9270>, <sqlite3.Row object at 0x10d1f92d0>, <sqlite3.Row object at 0x10d1f9330>, <sqlite3.Row object at 0x10d1f9390>, <sqlite3.Row object at 0x10d1f93f0>, <sqlite3.Row object at 0x10d1f9450>, <sqlite3.Row object at 0x10d1f94b0>, <sqlite3.Row object at 0x10d1f9510>, <sqlite3.Row object at 0x10d1f9570>, <sqlite3.Row object at 0x10d1f95d0>, <sqlite3.Row object at 0x10d1f9630>, <sqlite3.Row object at 0x10d1f9690>, <sqlite3.Row object at 0x10d1f96f0>, <sqlite3.Row object at 0x10d1f9750>, <sqlite3.Row object at 0x10d1f97b0>, <sqlite3.Row object at 0x10d1f9810>, <sqlite3.Row object at 0x10d1f9870>, <sqlite3.Row object at 0x10d1f98d0>, <sqlite3.Row object at 0x10d1f9930>, <sqlite3.Row object at 0x10d1f9990>, <sqlite3.Row object at 0x10d1f99f0>, <sqlite3.Row object at 0x10d1f9a50>, <sqlite3.Row object at 0x10d1f9ab0>, <sqlite3.Row object at 0x10d1f9b10>, <sqlite3.Row object at 0x10d1f9b70>, <sqlite3.Row object at 0x10d1f9bd0>, <sqlite3.Row object at 0x10d1f9c30>, <sqlite3.Row object at 0x10d1f9c90>, <sqlite3.Row object at 0x10d1f9cf0>, <sqlite3.Row object at 0x10d1f9d50>, <sqlite3.Row object at 0x10d1f9db0>, <sqlite3.Row object at 0x10d1f9e10>, <sqlite3.Row object at 0x10d1f9e70>, <sqlite3.Row object at 0x10d1f9ed0>, <sqlite3.Row object at 0x10d1f9f30>, <sqlite3.Row object at 0x10d1f9f90>, <sqlite3.Row object at 0x10d1fe030>, <sqlite3.Row object at 0x10d1fe090>, <sqlite3.Row object at 0x10d1fe0f0>, <sqlite3.Row object at 0x10d1fe150>, <sqlite3.Row object at 0x10d1fe1b0>, <sqlite3.Row object at 0x10d1fe210>, <sqlite3.Row object at 0x10d1fe270>, <sqlite3.Row object at 0x10d1fe2d0>, <sqlite3.Row object at 0x10d1fe330>, <sqlite3.Row object at 0x10d1fe390>, <sqlite3.Row object at 0x10d1fe3f0>, <sqlite3.Row object at 0x10d1fe450>, <sqlite3.Row object at 0x10d1fe4b0>, <sqlite3.Row object at 0x10d1fe510>, <sqlite3.Row object at 0x10d1fe570>, <sqlite3.Row object at 0x10d1fe5d0>, <sqlite3.Row object at 0x10d1fe630>, <sqlite3.Row object at 0x10d1fe690>, <sqlite3.Row object at 0x10d1fe6f0>, <sqlite3.Row object at 0x10d1fe750>, <sqlite3.Row object at 0x10d1fe7b0>, <sqlite3.Row object at 0x10d1fe810>, <sqlite3.Row object at 0x10d1fe870>, <sqlite3.Row object at 0x10d1fe8d0>, <sqlite3.Row object at 0x10d1fe930>, <sqlite3.Row object at 0x10d1fe990>, <sqlite3.Row object at 0x10d1fe9f0>, <sqlite3.Row object at 0x10d1fea50>, <sqlite3.Row object at 0x10d1feab0>, <sqlite3.Row object at 0x10d1feb10>, <sqlite3.Row object at 0x10d1feb70>, <sqlite3.Row object at 0x10d1febd0>, <sqlite3.Row object at 0x10d1fec30>, <sqlite3.Row object at 0x10d1fec90>, <sqlite3.Row object at 0x10d1fecf0>, <sqlite3.Row object at 0x10d1fed50>, <sqlite3.Row object at 0x10d1fedb0>, <sqlite3.Row object at 0x10d1fee10>, <sqlite3.Row object at 0x10d1fee70>, <sqlite3.Row object at 0x10d1feed0>, <sqlite3.Row object at 0x10d1fef30>, <sqlite3.Row object at 0x10d1fef90>, <sqlite3.Row object at 0x10d201030>, <sqlite3.Row object at 0x10d201090>, <sqlite3.Row object at 0x10d2010f0>, <sqlite3.Row object at 0x10d201150>, <sqlite3.Row object at 0x10d2011b0>, <sqlite3.Row object at 0x10d201210>, <sqlite3.Row object at 0x10d201270>, <sqlite3.Row object at 0x10d2012d0>, <sqlite3.Row object at 0x10d201330>, <sqlite3.Row object at 0x10d201390>, <sqlite3.Row object at 0x10d2013f0>, <sqlite3.Row object at 0x10d201450>, <sqlite3.Row object at 0x10d2014b0>, <sqlite3.Row object at 0x10d201510>, <sqlite3.Row object at 0x10d201570>, <sqlite3.Row object at 0x10d2015d0>, <sqlite3.Row object at 0x10d201630>, <sqlite3.Row object at 0x10d201690>, <sqlite3.Row object at 0x10d2016f0>, <sqlite3.Row object at 0x10d201750>, <sqlite3.Row object at 0x10d2017b0>, <sqlite3.Row object at 0x10d201810>, <sqlite3.Row object at 0x10d201870>, <sqlite3.Row object at 0x10d2018d0>, <sqlite3.Row object at 0x10d201930>, <sqlite3.Row object at 0x10d201990>, <sqlite3.Row object at 0x10d2019f0>, <sqlite3.Row object at 0x10d201a50>, <sqlite3.Row object at 0x10d201ab0>, <sqlite3.Row object at 0x10d201b10>, <sqlite3.Row object at 0x10d201b70>, <sqlite3.Row object at 0x10d201bd0>, <sqlite3.Row object at 0x10d201c30>, <sqlite3.Row object at 0x10d201c90>, <sqlite3.Row object at 0x10d201cf0>, <sqlite3.Row object at 0x10d201d50>, <sqlite3.Row object at 0x10d201db0>, <sqlite3.Row object at 0x10d201e10>, <sqlite3.Row object at 0x10d201e70>, <sqlite3.Row object at 0x10d201ed0>, <sqlite3.Row object at 0x10d201f30>, <sqlite3.Row object at 0x10d201f90>, <sqlite3.Row object at 0x10d205030>, <sqlite3.Row object at 0x10d205090>, <sqlite3.Row object at 0x10d2050f0>, <sqlite3.Row object at 0x10d205150>, <sqlite3.Row object at 0x10d2051b0>, <sqlite3.Row object at 0x10d205210>, <sqlite3.Row object at 0x10d205270>, <sqlite3.Row object at 0x10d2052d0>, <sqlite3.Row object at 0x10d205330>, <sqlite3.Row object at 0x10d205390>, <sqlite3.Row object at 0x10d2053f0>, <sqlite3.Row object at 0x10d205450>, <sqlite3.Row object at 0x10d2054b0>, <sqlite3.Row object at 0x10d205510>, <sqlite3.Row object at 0x10d205570>, <sqlite3.Row object at 0x10d2055d0>, <sqlite3.Row object at 0x10d205630>, <sqlite3.Row object at 0x10d205690>, <sqlite3.Row object at 0x10d2056f0>, <sqlite3.Row object at 0x10d205750>, <sqlite3.Row object at 0x10d2057b0>, <sqlite3.Row object at 0x10d205810>, <sqlite3.Row object at 0x10d205870>, <sqlite3.Row object at 0x10d2058d0>, <sqlite3.Row object at 0x10d205930>, <sqlite3.Row object at 0x10d205990>, <sqlite3.Row object at 0x10d2059f0>, <sqlite3.Row object at 0x10d205a50>, <sqlite3.Row object at 0x10d205ab0>, <sqlite3.Row object at 0x10d205b10>, <sqlite3.Row object at 0x10d205b70>, <sqlite3.Row object at 0x10d205bd0>, <sqlite3.Row object at 0x10d205c30>, <sqlite3.Row object at 0x10d205c90>, <sqlite3.Row object at 0x10d205cf0>, <sqlite3.Row object at 0x10d205d50>, <sqlite3.Row object at 0x10d205db0>, <sqlite3.Row object at 0x10d205e10>, <sqlite3.Row object at 0x10d205e70>, <sqlite3.Row object at 0x10d205ed0>, <sqlite3.Row object at 0x10d205f30>, <sqlite3.Row object at 0x10d205f90>, <sqlite3.Row object at 0x10d20a030>, <sqlite3.Row object at 0x10d20a090>, <sqlite3.Row object at 0x10d20a0f0>, <sqlite3.Row object at 0x10d20a150>, <sqlite3.Row object at 0x10d20a1b0>, <sqlite3.Row object at 0x10d20a210>, <sqlite3.Row object at 0x10d20a270>, <sqlite3.Row object at 0x10d20a2d0>, <sqlite3.Row object at 0x10d20a330>, <sqlite3.Row object at 0x10d20a390>, <sqlite3.Row object at 0x10d20a3f0>, <sqlite3.Row object at 0x10d20a450>, <sqlite3.Row object at 0x10d20a4b0>, <sqlite3.Row object at 0x10d20a510>, <sqlite3.Row object at 0x10d20a570>, <sqlite3.Row object at 0x10d20a5d0>, <sqlite3.Row object at 0x10d20a630>, <sqlite3.Row object at 0x10d20a690>, <sqlite3.Row object at 0x10d20a6f0>, <sqlite3.Row object at 0x10d20a750>, <sqlite3.Row object at 0x10d20a7b0>, <sqlite3.Row object at 0x10d20a810>, <sqlite3.Row object at 0x10d20a870>, <sqlite3.Row object at 0x10d20a8d0>, <sqlite3.Row object at 0x10d20a930>, <sqlite3.Row object at 0x10d20a990>, <sqlite3.Row object at 0x10d20a9f0>, <sqlite3.Row object at 0x10d20aa50>, <sqlite3.Row object at 0x10d20aab0>, <sqlite3.Row object at 0x10d20ab10>, <sqlite3.Row object at 0x10d20ab70>, <sqlite3.Row object at 0x10d20abd0>, <sqlite3.Row object at 0x10d20ac30>, <sqlite3.Row object at 0x10d20ac90>, <sqlite3.Row object at 0x10d20acf0>, <sqlite3.Row object at 0x10d20ad50>, <sqlite3.Row object at 0x10d20adb0>, <sqlite3.Row object at 0x10d20ae10>, <sqlite3.Row object at 0x10d20ae70>, <sqlite3.Row object at 0x10d20aed0>, <sqlite3.Row object at 0x10d20af30>, <sqlite3.Row object at 0x10d20af90>, <sqlite3.Row object at 0x10d22e030>, <sqlite3.Row object at 0x10d22e090>, <sqlite3.Row object at 0x10d22e0f0>, <sqlite3.Row object at 0x10d22e150>, <sqlite3.Row object at 0x10d22e1b0>, <sqlite3.Row object at 0x10d22e210>, <sqlite3.Row object at 0x10d22e270>, <sqlite3.Row object at 0x10d22e2d0>, <sqlite3.Row object at 0x10d22e330>, <sqlite3.Row object at 0x10d22e390>, <sqlite3.Row object at 0x10d22e3f0>, <sqlite3.Row object at 0x10d22e450>, <sqlite3.Row object at 0x10d22e4b0>, <sqlite3.Row object at 0x10d22e510>, <sqlite3.Row object at 0x10d22e570>, <sqlite3.Row object at 0x10d22e5d0>, <sqlite3.Row object at 0x10d22e630>, <sqlite3.Row object at 0x10d22e690>, <sqlite3.Row object at 0x10d22e6f0>, <sqlite3.Row object at 0x10d22e750>, <sqlite3.Row object at 0x10d22e7b0>, <sqlite3.Row object at 0x10d22e810>, <sqlite3.Row object at 0x10d22e870>, <sqlite3.Row object at 0x10d22e8d0>, <sqlite3.Row object at 0x10d22e930>, <sqlite3.Row object at 0x10d22e990>, <sqlite3.Row object at 0x10d22e9f0>, <sqlite3.Row object at 0x10d22ea50>, <sqlite3.Row object at 0x10d22eab0>, <sqlite3.Row object at 0x10d22eb10>, <sqlite3.Row object at 0x10d22eb70>, <sqlite3.Row object at 0x10d22ebd0>, <sqlite3.Row object at 0x10d22ec30>, <sqlite3.Row object at 0x10d22ec90>, <sqlite3.Row object at 0x10d22ecf0>, <sqlite3.Row object at 0x10d22ed50>, <sqlite3.Row object at 0x10d22edb0>, <sqlite3.Row object at 0x10d22ee10>, <sqlite3.Row object at 0x10d22ee70>, <sqlite3.Row object at 0x10d22eed0>, <sqlite3.Row object at 0x10d22ef30>, <sqlite3.Row object at 0x10d22ef90>, <sqlite3.Row object at 0x10d232030>, <sqlite3.Row object at 0x10d232090>, <sqlite3.Row object at 0x10d2320f0>, <sqlite3.Row object at 0x10d232150>, <sqlite3.Row object at 0x10d2321b0>, <sqlite3.Row object at 0x10d232210>, <sqlite3.Row object at 0x10d232270>, <sqlite3.Row object at 0x10d2322d0>, <sqlite3.Row object at 0x10d232330>, <sqlite3.Row object at 0x10d232390>, <sqlite3.Row object at 0x10d2323f0>, <sqlite3.Row object at 0x10d232450>, <sqlite3.Row object at 0x10d2324b0>, <sqlite3.Row object at 0x10d232510>, <sqlite3.Row object at 0x10d232570>, <sqlite3.Row object at 0x10d2325d0>, <sqlite3.Row object at 0x10d232630>, <sqlite3.Row object at 0x10d232690>, <sqlite3.Row object at 0x10d2326f0>, <sqlite3.Row object at 0x10d232730>, <sqlite3.Row object at 0x10d232790>, <sqlite3.Row object at 0x10d2327f0>, <sqlite3.Row object at 0x10d232850>, <sqlite3.Row object at 0x10d2328b0>, <sqlite3.Row object at 0x10d232910>, <sqlite3.Row object at 0x10d232970>, <sqlite3.Row object at 0x10d2329d0>, <sqlite3.Row object at 0x10d232a30>, <sqlite3.Row object at 0x10d232a90>, <sqlite3.Row object at 0x10d232af0>, <sqlite3.Row object at 0x10d232b50>, <sqlite3.Row object at 0x10d232bb0>, <sqlite3.Row object at 0x10d232c10>, <sqlite3.Row object at 0x10d232c70>, <sqlite3.Row object at 0x10d232cd0>, <sqlite3.Row object at 0x10d232d30>, <sqlite3.Row object at 0x10d232d90>, <sqlite3.Row object at 0x10d232df0>, <sqlite3.Row object at 0x10d232e50>, <sqlite3.Row object at 0x10d232eb0>, <sqlite3.Row object at 0x10d232f10>, <sqlite3.Row object at 0x10d232f70>, <sqlite3.Row object at 0x10d232fd0>, <sqlite3.Row object at 0x10d236070>, <sqlite3.Row object at 0x10d2360d0>, <sqlite3.Row object at 0x10d236130>, <sqlite3.Row object at 0x10d236190>, <sqlite3.Row object at 0x10d2361f0>, <sqlite3.Row object at 0x10d236250>, <sqlite3.Row object at 0x10d2362b0>, <sqlite3.Row object at 0x10d236310>, <sqlite3.Row object at 0x10d236370>, <sqlite3.Row object at 0x10d2363d0>, <sqlite3.Row object at 0x10d236430>, <sqlite3.Row object at 0x10d236490>, <sqlite3.Row object at 0x10d2364f0>, <sqlite3.Row object at 0x10d236550>, <sqlite3.Row object at 0x10d2365b0>, <sqlite3.Row object at 0x10d236610>, <sqlite3.Row object at 0x10d236670>, <sqlite3.Row object at 0x10d2366d0>, <sqlite3.Row object at 0x10d236730>, <sqlite3.Row object at 0x10d236790>, <sqlite3.Row object at 0x10d2367f0>, <sqlite3.Row object at 0x10d236850>, <sqlite3.Row object at 0x10d2368b0>, <sqlite3.Row object at 0x10d236910>, <sqlite3.Row object at 0x10d236970>, <sqlite3.Row object at 0x10d2369d0>, <sqlite3.Row object at 0x10d236a30>, <sqlite3.Row object at 0x10d236a90>, <sqlite3.Row object at 0x10d236af0>, <sqlite3.Row object at 0x10d236b50>, <sqlite3.Row object at 0x10d236bb0>, <sqlite3.Row object at 0x10d236c10>, <sqlite3.Row object at 0x10d236c70>, <sqlite3.Row object at 0x10d236cd0>, <sqlite3.Row object at 0x10d236d30>, <sqlite3.Row object at 0x10d236d90>, <sqlite3.Row object at 0x10d236df0>, <sqlite3.Row object at 0x10d236e50>, <sqlite3.Row object at 0x10d236eb0>, <sqlite3.Row object at 0x10d236f10>, <sqlite3.Row object at 0x10d236f70>, <sqlite3.Row object at 0x10d236fd0>, <sqlite3.Row object at 0x10d23a070>, <sqlite3.Row object at 0x10d23a0d0>, <sqlite3.Row object at 0x10d23a130>, <sqlite3.Row object at 0x10d23a190>, <sqlite3.Row object at 0x10d23a1f0>, <sqlite3.Row object at 0x10d23a250>, <sqlite3.Row object at 0x10d23a2b0>, <sqlite3.Row object at 0x10d23a310>, <sqlite3.Row object at 0x10d23a370>, <sqlite3.Row object at 0x10d23a3d0>, <sqlite3.Row object at 0x10d23a430>, <sqlite3.Row object at 0x10d23a490>, <sqlite3.Row object at 0x10d23a4f0>, <sqlite3.Row object at 0x10d23a550>, <sqlite3.Row object at 0x10d23a5b0>, <sqlite3.Row object at 0x10d23a610>, <sqlite3.Row object at 0x10d23a670>, <sqlite3.Row object at 0x10d23a6d0>, <sqlite3.Row object at 0x10d23a730>, <sqlite3.Row object at 0x10d23a790>, <sqlite3.Row object at 0x10d23a7f0>, <sqlite3.Row object at 0x10d23a850>, <sqlite3.Row object at 0x10d23a8b0>, <sqlite3.Row object at 0x10d23a910>, <sqlite3.Row object at 0x10d23a970>, <sqlite3.Row object at 0x10d23a9d0>, <sqlite3.Row object at 0x10d23aa30>, <sqlite3.Row object at 0x10d23aa90>, <sqlite3.Row object at 0x10d23aaf0>, <sqlite3.Row object at 0x10d23ab50>, <sqlite3.Row object at 0x10d23abb0>, <sqlite3.Row object at 0x10d23ac10>, <sqlite3.Row object at 0x10d23ac70>, <sqlite3.Row object at 0x10d23acd0>, <sqlite3.Row object at 0x10d23ad30>, <sqlite3.Row object at 0x10d23ad90>, <sqlite3.Row object at 0x10d23adf0>, <sqlite3.Row object at 0x10d23ae50>, <sqlite3.Row object at 0x10d23aeb0>, <sqlite3.Row object at 0x10d23af10>, <sqlite3.Row object at 0x10d23af70>, <sqlite3.Row object at 0x10d23afd0>, <sqlite3.Row object at 0x10d23e070>, <sqlite3.Row object at 0x10d23e0d0>, <sqlite3.Row object at 0x10d23e130>, <sqlite3.Row object at 0x10d23e190>, <sqlite3.Row object at 0x10d23e1f0>, <sqlite3.Row object at 0x10d23e250>, <sqlite3.Row object at 0x10d23e2b0>, <sqlite3.Row object at 0x10d23e310>, <sqlite3.Row object at 0x10d23e370>, <sqlite3.Row object at 0x10d23e3d0>, <sqlite3.Row object at 0x10d23e430>, <sqlite3.Row object at 0x10d23e490>, <sqlite3.Row object at 0x10d23e4f0>, <sqlite3.Row object at 0x10d23e550>, <sqlite3.Row object at 0x10d23e5b0>, <sqlite3.Row object at 0x10d23e610>, <sqlite3.Row object at 0x10d23e670>, <sqlite3.Row object at 0x10d23e6d0>, <sqlite3.Row object at 0x10d23e730>, <sqlite3.Row object at 0x10d23e790>, <sqlite3.Row object at 0x10d23e7f0>, <sqlite3.Row object at 0x10d23e850>, <sqlite3.Row object at 0x10d23e8b0>, <sqlite3.Row object at 0x10d23e910>, <sqlite3.Row object at 0x10d23e970>, <sqlite3.Row object at 0x10d23e9d0>, <sqlite3.Row object at 0x10d23ea30>, <sqlite3.Row object at 0x10d23ea90>, <sqlite3.Row object at 0x10d23eaf0>, <sqlite3.Row object at 0x10d23eb50>, <sqlite3.Row object at 0x10d23ebb0>, <sqlite3.Row object at 0x10d23ec10>, <sqlite3.Row object at 0x10d23ec70>, <sqlite3.Row object at 0x10d23ecd0>, <sqlite3.Row object at 0x10d23ed30>, <sqlite3.Row object at 0x10d23ed90>, <sqlite3.Row object at 0x10d23edf0>, <sqlite3.Row object at 0x10d23ee50>, <sqlite3.Row object at 0x10d23eeb0>, <sqlite3.Row object at 0x10d23ef10>, <sqlite3.Row object at 0x10d23ef70>, <sqlite3.Row object at 0x10d23efd0>, <sqlite3.Row object at 0x10d243070>, <sqlite3.Row object at 0x10d2430d0>, <sqlite3.Row object at 0x10d243130>, <sqlite3.Row object at 0x10d243190>, <sqlite3.Row object at 0x10d2431f0>, <sqlite3.Row object at 0x10d243250>, <sqlite3.Row object at 0x10d2432b0>, <sqlite3.Row object at 0x10d243310>, <sqlite3.Row object at 0x10d243370>, <sqlite3.Row object at 0x10d2433d0>, <sqlite3.Row object at 0x10d243430>, <sqlite3.Row object at 0x10d243490>, <sqlite3.Row object at 0x10d2434f0>, <sqlite3.Row object at 0x10d243550>, <sqlite3.Row object at 0x10d2435b0>, <sqlite3.Row object at 0x10d243610>, <sqlite3.Row object at 0x10d243670>, <sqlite3.Row object at 0x10d2436d0>, <sqlite3.Row object at 0x10d243730>, <sqlite3.Row object at 0x10d243790>, <sqlite3.Row object at 0x10d2437f0>, <sqlite3.Row object at 0x10d243850>, <sqlite3.Row object at 0x10d2438b0>, <sqlite3.Row object at 0x10d243910>, <sqlite3.Row object at 0x10d243970>, <sqlite3.Row object at 0x10d2439d0>, <sqlite3.Row object at 0x10d243a30>, <sqlite3.Row object at 0x10d243a90>, <sqlite3.Row object at 0x10d243af0>, <sqlite3.Row object at 0x10d243b50>, <sqlite3.Row object at 0x10d243bb0>, <sqlite3.Row object at 0x10d243c10>, <sqlite3.Row object at 0x10d243c70>, <sqlite3.Row object at 0x10d243cd0>, <sqlite3.Row object at 0x10d243d30>, <sqlite3.Row object at 0x10d243d90>, <sqlite3.Row object at 0x10d243df0>, <sqlite3.Row object at 0x10d243e50>, <sqlite3.Row object at 0x10d243eb0>, <sqlite3.Row object at 0x10d243f10>, <sqlite3.Row object at 0x10d243f70>, <sqlite3.Row object at 0x10d243fd0>, <sqlite3.Row object at 0x10d247070>, <sqlite3.Row object at 0x10d2470d0>, <sqlite3.Row object at 0x10d247130>, <sqlite3.Row object at 0x10d247190>, <sqlite3.Row object at 0x10d2471f0>, <sqlite3.Row object at 0x10d247250>, <sqlite3.Row object at 0x10d2472b0>, <sqlite3.Row object at 0x10d247310>, <sqlite3.Row object at 0x10d247370>, <sqlite3.Row object at 0x10d2473d0>, <sqlite3.Row object at 0x10d247430>, <sqlite3.Row object at 0x10d247490>, <sqlite3.Row object at 0x10d2474f0>, <sqlite3.Row object at 0x10d247550>, <sqlite3.Row object at 0x10d2475b0>, <sqlite3.Row object at 0x10d247610>, <sqlite3.Row object at 0x10d247670>, <sqlite3.Row object at 0x10d2476d0>, <sqlite3.Row object at 0x10d247730>, <sqlite3.Row object at 0x10d247790>, <sqlite3.Row object at 0x10d2477f0>, <sqlite3.Row object at 0x10d247850>, <sqlite3.Row object at 0x10d2478b0>, <sqlite3.Row object at 0x10d247910>, <sqlite3.Row object at 0x10d247970>, <sqlite3.Row object at 0x10d2479d0>, <sqlite3.Row object at 0x10d247a30>, <sqlite3.Row object at 0x10d247a90>, <sqlite3.Row object at 0x10d247af0>, <sqlite3.Row object at 0x10d247b50>, <sqlite3.Row object at 0x10d247bb0>, <sqlite3.Row object at 0x10d247c10>, <sqlite3.Row object at 0x10d247c70>, <sqlite3.Row object at 0x10d247cd0>, <sqlite3.Row object at 0x10d247d30>, <sqlite3.Row object at 0x10d247d90>, <sqlite3.Row object at 0x10d247df0>, <sqlite3.Row object at 0x10d247e50>, <sqlite3.Row object at 0x10d247eb0>, <sqlite3.Row object at 0x10d247f10>, <sqlite3.Row object at 0x10d247f70>, <sqlite3.Row object at 0x10d247fd0>, <sqlite3.Row object at 0x10d24b070>, <sqlite3.Row object at 0x10d24b0d0>, <sqlite3.Row object at 0x10d24b130>, <sqlite3.Row object at 0x10d24b190>, <sqlite3.Row object at 0x10d24b1f0>, <sqlite3.Row object at 0x10d24b250>, <sqlite3.Row object at 0x10d24b2b0>, <sqlite3.Row object at 0x10d24b310>, <sqlite3.Row object at 0x10d24b370>, <sqlite3.Row object at 0x10d24b3d0>, <sqlite3.Row object at 0x10d24b430>, <sqlite3.Row object at 0x10d24b490>, <sqlite3.Row object at 0x10d24b4f0>, <sqlite3.Row object at 0x10d24b550>, <sqlite3.Row object at 0x10d24b5b0>, <sqlite3.Row object at 0x10d24b610>, <sqlite3.Row object at 0x10d24b670>, <sqlite3.Row object at 0x10d24b6d0>, <sqlite3.Row object at 0x10d24b730>, <sqlite3.Row object at 0x10d24b790>, <sqlite3.Row object at 0x10d24b7f0>, <sqlite3.Row object at 0x10d24b850>, <sqlite3.Row object at 0x10d24b8b0>, <sqlite3.Row object at 0x10d24b910>, <sqlite3.Row object at 0x10d24b970>, <sqlite3.Row object at 0x10d24b9d0>, <sqlite3.Row object at 0x10d24ba30>, <sqlite3.Row object at 0x10d24ba90>, <sqlite3.Row object at 0x10d24baf0>, <sqlite3.Row object at 0x10d24bb50>, <sqlite3.Row object at 0x10d24bbb0>, <sqlite3.Row object at 0x10d24bc10>, <sqlite3.Row object at 0x10d24bc70>, <sqlite3.Row object at 0x10d24bcd0>, <sqlite3.Row object at 0x10d24bd30>, <sqlite3.Row object at 0x10d24bd90>, <sqlite3.Row object at 0x10d24bdf0>, <sqlite3.Row object at 0x10d24be50>, <sqlite3.Row object at 0x10d24beb0>, <sqlite3.Row object at 0x10d24bf10>, <sqlite3.Row object at 0x10d24bf70>, <sqlite3.Row object at 0x10d24bfd0>, <sqlite3.Row object at 0x10d24f070>, <sqlite3.Row object at 0x10d24f0d0>, <sqlite3.Row object at 0x10d24f130>, <sqlite3.Row object at 0x10d24f190>, <sqlite3.Row object at 0x10d24f1f0>, <sqlite3.Row object at 0x10d24f250>, <sqlite3.Row object at 0x10d24f2b0>, <sqlite3.Row object at 0x10d24f310>, <sqlite3.Row object at 0x10d24f370>, <sqlite3.Row object at 0x10d24f3d0>, <sqlite3.Row object at 0x10d24f430>, <sqlite3.Row object at 0x10d24f490>, <sqlite3.Row object at 0x10d24f4f0>, <sqlite3.Row object at 0x10d24f550>, <sqlite3.Row object at 0x10d24f5b0>, <sqlite3.Row object at 0x10d24f610>, <sqlite3.Row object at 0x10d24f670>, <sqlite3.Row object at 0x10d24f6d0>, <sqlite3.Row object at 0x10d24f730>, <sqlite3.Row object at 0x10d24f790>, <sqlite3.Row object at 0x10d24f7f0>, <sqlite3.Row object at 0x10d24f850>, <sqlite3.Row object at 0x10d24f8b0>, <sqlite3.Row object at 0x10d24f910>, <sqlite3.Row object at 0x10d24f970>, <sqlite3.Row object at 0x10d24f9d0>, <sqlite3.Row object at 0x10d24fa30>, <sqlite3.Row object at 0x10d24fa90>, <sqlite3.Row object at 0x10d24faf0>, <sqlite3.Row object at 0x10d24fb50>, <sqlite3.Row object at 0x10d24fbb0>, <sqlite3.Row object at 0x10d24fc10>, <sqlite3.Row object at 0x10d24fc70>, <sqlite3.Row object at 0x10d24fcd0>, <sqlite3.Row object at 0x10d24fd30>, <sqlite3.Row object at 0x10d24fd90>, <sqlite3.Row object at 0x10d24fdf0>, <sqlite3.Row object at 0x10d24fe50>, <sqlite3.Row object at 0x10d24feb0>, <sqlite3.Row object at 0x10d24ff10>, <sqlite3.Row object at 0x10d24ff70>, <sqlite3.Row object at 0x10d24ffd0>, <sqlite3.Row object at 0x10d253070>, <sqlite3.Row object at 0x10d2530d0>, <sqlite3.Row object at 0x10d253130>, <sqlite3.Row object at 0x10d253190>, <sqlite3.Row object at 0x10d2531f0>, <sqlite3.Row object at 0x10d253250>, <sqlite3.Row object at 0x10d2532b0>, <sqlite3.Row object at 0x10d253310>, <sqlite3.Row object at 0x10d253370>, <sqlite3.Row object at 0x10d2533d0>, <sqlite3.Row object at 0x10d253430>, <sqlite3.Row object at 0x10d253490>, <sqlite3.Row object at 0x10d2534f0>, <sqlite3.Row object at 0x10d253550>, <sqlite3.Row object at 0x10d2535b0>, <sqlite3.Row object at 0x10d253610>, <sqlite3.Row object at 0x10d253670>, <sqlite3.Row object at 0x10d2536d0>, <sqlite3.Row object at 0x10d253730>, <sqlite3.Row object at 0x10d253790>, <sqlite3.Row object at 0x10d2537f0>, <sqlite3.Row object at 0x10d253850>, <sqlite3.Row object at 0x10d2538b0>, <sqlite3.Row object at 0x10d253910>, <sqlite3.Row object at 0x10d253970>, <sqlite3.Row object at 0x10d2539d0>, <sqlite3.Row object at 0x10d253a30>, <sqlite3.Row object at 0x10d253a90>, <sqlite3.Row object at 0x10d253af0>, <sqlite3.Row object at 0x10d253b50>, <sqlite3.Row object at 0x10d253bb0>, <sqlite3.Row object at 0x10d253c10>, <sqlite3.Row object at 0x10d253c70>, <sqlite3.Row object at 0x10d253cd0>, <sqlite3.Row object at 0x10d253d30>, <sqlite3.Row object at 0x10d253d90>, <sqlite3.Row object at 0x10d253df0>, <sqlite3.Row object at 0x10d253e50>, <sqlite3.Row object at 0x10d253eb0>, <sqlite3.Row object at 0x10d253f10>, <sqlite3.Row object at 0x10d253f70>, <sqlite3.Row object at 0x10d253fd0>, <sqlite3.Row object at 0x10d257070>, <sqlite3.Row object at 0x10d2570d0>, <sqlite3.Row object at 0x10d257130>, <sqlite3.Row object at 0x10d257190>, <sqlite3.Row object at 0x10d2571f0>, <sqlite3.Row object at 0x10d257250>, <sqlite3.Row object at 0x10d2572b0>, <sqlite3.Row object at 0x10d257310>, <sqlite3.Row object at 0x10d257370>, <sqlite3.Row object at 0x10d2573d0>, <sqlite3.Row object at 0x10d257430>, <sqlite3.Row object at 0x10d257490>, <sqlite3.Row object at 0x10d2574f0>, <sqlite3.Row object at 0x10d257550>, <sqlite3.Row object at 0x10d2575b0>, <sqlite3.Row object at 0x10d257610>, <sqlite3.Row object at 0x10d257670>, <sqlite3.Row object at 0x10d2576d0>, <sqlite3.Row object at 0x10d257730>, <sqlite3.Row object at 0x10d257790>, <sqlite3.Row object at 0x10d2577f0>, <sqlite3.Row object at 0x10d257850>, <sqlite3.Row object at 0x10d2578b0>, <sqlite3.Row object at 0x10d257910>, <sqlite3.Row object at 0x10d257970>, <sqlite3.Row object at 0x10d2579d0>, <sqlite3.Row object at 0x10d257a30>, <sqlite3.Row object at 0x10d257a90>, <sqlite3.Row object at 0x10d257af0>, <sqlite3.Row object at 0x10d257b50>, <sqlite3.Row object at 0x10d257bb0>, <sqlite3.Row object at 0x10d257c10>, <sqlite3.Row object at 0x10d257c70>, <sqlite3.Row object at 0x10d257cd0>, <sqlite3.Row object at 0x10d257d30>, <sqlite3.Row object at 0x10d257d90>, <sqlite3.Row object at 0x10d257df0>, <sqlite3.Row object at 0x10d257e50>, <sqlite3.Row object at 0x10d257eb0>, <sqlite3.Row object at 0x10d257f10>, <sqlite3.Row object at 0x10d257f70>, <sqlite3.Row object at 0x10d257fd0>, <sqlite3.Row object at 0x10d25c070>, <sqlite3.Row object at 0x10d25c0d0>, <sqlite3.Row object at 0x10d25c130>, <sqlite3.Row object at 0x10d25c190>, <sqlite3.Row object at 0x10d25c1f0>, <sqlite3.Row object at 0x10d25c250>, <sqlite3.Row object at 0x10d25c2b0>, <sqlite3.Row object at 0x10d25c310>, <sqlite3.Row object at 0x10d25c370>, <sqlite3.Row object at 0x10d25c3d0>, <sqlite3.Row object at 0x10d25c430>, <sqlite3.Row object at 0x10d25c490>, <sqlite3.Row object at 0x10d25c4f0>, <sqlite3.Row object at 0x10d25c550>, <sqlite3.Row object at 0x10d25c5b0>, <sqlite3.Row object at 0x10d25c610>, <sqlite3.Row object at 0x10d25c670>, <sqlite3.Row object at 0x10d25c6d0>, <sqlite3.Row object at 0x10d25c730>, <sqlite3.Row object at 0x10d25c790>, <sqlite3.Row object at 0x10d25c7f0>, <sqlite3.Row object at 0x10d25c850>, <sqlite3.Row object at 0x10d25c8b0>, <sqlite3.Row object at 0x10d25c910>, <sqlite3.Row object at 0x10d25c970>, <sqlite3.Row object at 0x10d25c9d0>, <sqlite3.Row object at 0x10d25ca30>, <sqlite3.Row object at 0x10d25ca90>, <sqlite3.Row object at 0x10d25caf0>, <sqlite3.Row object at 0x10d25cb50>, <sqlite3.Row object at 0x10d25cbb0>, <sqlite3.Row object at 0x10d25cc10>, <sqlite3.Row object at 0x10d25cc70>, <sqlite3.Row object at 0x10d25ccd0>, <sqlite3.Row object at 0x10d25cd30>, <sqlite3.Row object at 0x10d25cd90>, <sqlite3.Row object at 0x10d25cdf0>, <sqlite3.Row object at 0x10d25ce50>, <sqlite3.Row object at 0x10d25ceb0>, <sqlite3.Row object at 0x10d25cf10>, <sqlite3.Row object at 0x10d25cf70>, <sqlite3.Row object at 0x10d25cfd0>, <sqlite3.Row object at 0x10d260070>, <sqlite3.Row object at 0x10d2600d0>, <sqlite3.Row object at 0x10d260130>, <sqlite3.Row object at 0x10d260190>, <sqlite3.Row object at 0x10d2601f0>, <sqlite3.Row object at 0x10d260250>, <sqlite3.Row object at 0x10d2602b0>, <sqlite3.Row object at 0x10d260310>, <sqlite3.Row object at 0x10d260370>, <sqlite3.Row object at 0x10d2603d0>, <sqlite3.Row object at 0x10d260430>, <sqlite3.Row object at 0x10d260490>, <sqlite3.Row object at 0x10d2604f0>, <sqlite3.Row object at 0x10d260550>, <sqlite3.Row object at 0x10d2605b0>, <sqlite3.Row object at 0x10d260610>, <sqlite3.Row object at 0x10d260670>, <sqlite3.Row object at 0x10d2606d0>, <sqlite3.Row object at 0x10d260730>, <sqlite3.Row object at 0x10d260790>, <sqlite3.Row object at 0x10d2607f0>, <sqlite3.Row object at 0x10d260850>, <sqlite3.Row object at 0x10d2608b0>, <sqlite3.Row object at 0x10d260910>, <sqlite3.Row object at 0x10d260970>, <sqlite3.Row object at 0x10d2609d0>, <sqlite3.Row object at 0x10d260a30>, <sqlite3.Row object at 0x10d260a90>, <sqlite3.Row object at 0x10d260af0>, <sqlite3.Row object at 0x10d260b50>, <sqlite3.Row object at 0x10d260bb0>, <sqlite3.Row object at 0x10d260c10>, <sqlite3.Row object at 0x10d260c70>, <sqlite3.Row object at 0x10d260cd0>, <sqlite3.Row object at 0x10d260d30>, <sqlite3.Row object at 0x10d260d90>]
2025-06-14 12:15:45,669 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 12:15:45,670 - app - INFO - Final Assistant Response (NL): Great! I'm glad I could help clear things up. If you have any other questions or need assistance with anything else, feel free to ask. Have a good one!
2025-06-14 12:16:05,729 - app - INFO - User Query (es): ok gracias guey
2025-06-14 12:16:05,729 - app - INFO - Chat ended with exit phrase. Assistant Response: Â¡Gracias por chatear! Â¡Que tengas un gran dÃ­a!
2025-06-14 12:16:10,447 - app - INFO - User Query (es): hola guey
2025-06-14 12:16:12,161 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 12:16:12,161 - app - INFO - Generated SQL Query: SELECT 'Hola, bienvenido de nuevo! Dime, Â¿en quÃ© puedo ayudarte hoy?' AS saludo;
2025-06-14 12:16:12,163 - app - INFO - Database connection established.
2025-06-14 12:16:12,164 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d25c150>]
2025-06-14 12:16:13,389 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 12:16:13,390 - app - INFO - Final Assistant Response (NL): Â¡Hola, bienvenido de nuevo! Dime, Â¿en quÃ© puedo ayudarte hoy?
2025-06-14 12:16:24,751 - app - INFO - User Query (es): que hubo
2025-06-14 12:16:25,981 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 12:16:25,982 - app - INFO - Generated SQL Query: None
2025-06-14 12:16:25,984 - app - INFO - Database connection established.
2025-06-14 12:16:25,984 - app - CRITICAL - An unexpected critical error occurred: argument 1 must be str, not None
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/webapp/app.py", line 318, in chat
    cursor.execute(sql_query)
TypeError: argument 1 must be str, not None
2025-06-14 12:16:29,894 - app - INFO - User Query (es): que hubo
2025-06-14 12:16:31,108 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 12:16:31,108 - app - INFO - Generated SQL Query: SELECT COUNT(*) FROM bank_transactions;
2025-06-14 12:16:31,110 - app - INFO - Database connection established.
2025-06-14 12:16:31,113 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d0d58d0>]
2025-06-14 12:16:32,740 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 12:16:32,740 - app - INFO - Final Assistant Response (NL): Â¿QuÃ© tal? Veo que tu saldo estÃ¡ por debajo de â‚±1,000.00. Â¿Quieres ayuda para revisar eso?
2025-06-14 12:17:18,758 - app - INFO - User Query (es): quiero saber la fecha mas reciente donde mis saldos fui debajo 50 mil pesos
2025-06-14 12:17:20,256 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 12:17:20,257 - app - INFO - Generated SQL Query: SELECT Date FROM bank_transactions WHERE Balance < 50000 ORDER BY Date DESC LIMIT 1;
2025-06-14 12:17:20,260 - app - INFO - Database connection established.
2025-06-14 12:17:20,262 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d25c150>]
2025-06-14 12:17:22,408 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 12:17:22,408 - app - INFO - Final Assistant Response (NL): Â¡Hola! La fecha mÃ¡s reciente en la que tu saldo estuvo por debajo de â‚±50,000 fue el 12 de diciembre de 2024. Â¿Te gustarÃ­a revisar las transacciones de ese dÃ­a?
2025-06-14 12:17:41,719 - app - INFO - User Query (es): quiero saber la fecha mas reciente donde mis saldos fui debajo cien mil pesos
2025-06-14 12:17:42,989 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 12:17:42,989 - app - INFO - Generated SQL Query: SELECT Date FROM bank_transactions WHERE Balance < 100000 ORDER BY Date DESC LIMIT 1;
2025-06-14 12:17:42,990 - app - INFO - Database connection established.
2025-06-14 12:17:42,992 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d25c030>]
2025-06-14 12:17:44,334 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 12:17:44,334 - app - INFO - Final Assistant Response (NL): Â¡Hola! La fecha mÃ¡s reciente en la que tu saldo estuvo por debajo de â‚±100,000 fue el 19 de marzo de 2025. Â¿Te gustarÃ­a revisar las transacciones de ese dÃ­a?
2025-06-14 12:18:17,661 - app - INFO - Flask Application started.
2025-06-14 12:18:17,676 - app - INFO - Database connection established.
2025-06-14 12:18:17,676 - app - INFO - Database schema retrieved and cached.
2025-06-14 12:18:17,718 - app - INFO - Philippine holidays fetched and cached.
2025-06-14 12:18:17,758 - app - INFO - Initialized new chat session (messages in Flask session).
2025-06-14 12:18:24,345 - app - INFO - User Query (es): hola que hubo
2025-06-14 12:18:27,020 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 12:18:27,021 - app - INFO - Generated SQL Query: None
2025-06-14 12:18:27,023 - app - INFO - Database connection established.
2025-06-14 12:18:27,024 - app - CRITICAL - An unexpected critical error occurred: argument 1 must be str, not None
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/webapp/app.py", line 318, in chat
    cursor.execute(sql_query)
TypeError: argument 1 must be str, not None
2025-06-14 12:18:33,276 - app - INFO - User Query (es): hola que lo que
2025-06-14 12:18:34,396 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 12:18:34,397 - app - INFO - Generated SQL Query: None
2025-06-14 12:18:34,398 - app - INFO - Database connection established.
2025-06-14 12:18:34,398 - app - CRITICAL - An unexpected critical error occurred: argument 1 must be str, not None
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/webapp/app.py", line 318, in chat
    cursor.execute(sql_query)
TypeError: argument 1 must be str, not None
2025-06-14 12:18:36,332 - app - INFO - User Query (es): hola
2025-06-14 12:18:37,364 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 12:18:37,365 - app - INFO - Generated SQL Query: 
2025-06-14 12:18:37,366 - app - INFO - Database connection established.
2025-06-14 12:18:37,366 - app - INFO - SQL Query Executed Successfully. Results: []
2025-06-14 12:18:37,366 - app - CRITICAL - An unexpected critical error occurred: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/webapp/app.py", line 323, in chat
    column_headers = [description[0] for description in cursor.description]
TypeError: 'NoneType' object is not iterable
2025-06-14 12:18:48,693 - app - INFO - Flask Application started.
2025-06-14 12:18:48,708 - app - INFO - Database connection established.
2025-06-14 12:18:48,708 - app - INFO - Database schema retrieved and cached.
2025-06-14 12:18:48,749 - app - INFO - Philippine holidays fetched and cached.
2025-06-14 12:18:48,786 - app - INFO - Initialized new chat session (messages in Flask session).
2025-06-14 12:18:50,559 - app - INFO - User Query (es): hola
2025-06-14 12:18:52,587 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 12:18:52,587 - app - INFO - Generated SQL Query: None
2025-06-14 12:18:52,589 - app - INFO - Database connection established.
2025-06-14 12:18:52,590 - app - CRITICAL - An unexpected critical error occurred: argument 1 must be str, not None
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/webapp/app.py", line 318, in chat
    cursor.execute(sql_query)
TypeError: argument 1 must be str, not None
2025-06-14 12:18:56,227 - app - INFO - User Query (es): que lo qu
2025-06-14 12:18:57,644 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 12:18:57,645 - app - INFO - Generated SQL Query: SELECT * FROM bank_transactions ORDER BY Date ASC;
2025-06-14 12:18:57,646 - app - INFO - Database connection established.
2025-06-14 12:18:57,651 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x108f15fd0>, <sqlite3.Row object at 0x108f15fb0>, <sqlite3.Row object at 0x10d004050>, <sqlite3.Row object at 0x10d0040d0>, <sqlite3.Row object at 0x10d004070>, <sqlite3.Row object at 0x108f15e50>, <sqlite3.Row object at 0x10d004150>, <sqlite3.Row object at 0x10d0041b0>, <sqlite3.Row object at 0x10d004210>, <sqlite3.Row object at 0x10d004270>, <sqlite3.Row object at 0x10d0042d0>, <sqlite3.Row object at 0x10d004330>, <sqlite3.Row object at 0x10d004390>, <sqlite3.Row object at 0x10d0043f0>, <sqlite3.Row object at 0x10d004450>, <sqlite3.Row object at 0x10d0044b0>, <sqlite3.Row object at 0x10d004510>, <sqlite3.Row object at 0x10d004570>, <sqlite3.Row object at 0x10d0045d0>, <sqlite3.Row object at 0x10d004630>, <sqlite3.Row object at 0x10d004690>, <sqlite3.Row object at 0x10d0046f0>, <sqlite3.Row object at 0x10d004750>, <sqlite3.Row object at 0x10d0047b0>, <sqlite3.Row object at 0x10d004810>, <sqlite3.Row object at 0x10d004870>, <sqlite3.Row object at 0x10d0048d0>, <sqlite3.Row object at 0x10d004930>, <sqlite3.Row object at 0x10d004990>, <sqlite3.Row object at 0x10d0049f0>, <sqlite3.Row object at 0x10d004a50>, <sqlite3.Row object at 0x10d004ab0>, <sqlite3.Row object at 0x10d004b10>, <sqlite3.Row object at 0x10d004b70>, <sqlite3.Row object at 0x10d004bd0>, <sqlite3.Row object at 0x10d004c30>, <sqlite3.Row object at 0x10d004c90>, <sqlite3.Row object at 0x10d004cf0>, <sqlite3.Row object at 0x10d004d50>, <sqlite3.Row object at 0x10d004db0>, <sqlite3.Row object at 0x10d004e10>, <sqlite3.Row object at 0x10d004e70>, <sqlite3.Row object at 0x10d004ed0>, <sqlite3.Row object at 0x10d004f30>, <sqlite3.Row object at 0x10d004f90>, <sqlite3.Row object at 0x10d00a030>, <sqlite3.Row object at 0x10d00a090>, <sqlite3.Row object at 0x10d00a0f0>, <sqlite3.Row object at 0x10d00a150>, <sqlite3.Row object at 0x10d00a1b0>, <sqlite3.Row object at 0x10d00a210>, <sqlite3.Row object at 0x10d00a270>, <sqlite3.Row object at 0x10d00a2d0>, <sqlite3.Row object at 0x10d00a330>, <sqlite3.Row object at 0x10d00a390>, <sqlite3.Row object at 0x10d00a3f0>, <sqlite3.Row object at 0x10d00a450>, <sqlite3.Row object at 0x10d00a4b0>, <sqlite3.Row object at 0x10d00a510>, <sqlite3.Row object at 0x10d00a570>, <sqlite3.Row object at 0x10d00a5d0>, <sqlite3.Row object at 0x10d00a630>, <sqlite3.Row object at 0x10d00a690>, <sqlite3.Row object at 0x10d00a6f0>, <sqlite3.Row object at 0x10d00a750>, <sqlite3.Row object at 0x10d00a7b0>, <sqlite3.Row object at 0x10d00a810>, <sqlite3.Row object at 0x10d00a870>, <sqlite3.Row object at 0x10d00a8d0>, <sqlite3.Row object at 0x10d00a930>, <sqlite3.Row object at 0x10d00a990>, <sqlite3.Row object at 0x10d00a9f0>, <sqlite3.Row object at 0x10d00aa50>, <sqlite3.Row object at 0x10d00aab0>, <sqlite3.Row object at 0x10d00ab10>, <sqlite3.Row object at 0x10d00ab70>, <sqlite3.Row object at 0x10d00abd0>, <sqlite3.Row object at 0x10d00ac30>, <sqlite3.Row object at 0x10d00ac90>, <sqlite3.Row object at 0x10d00acf0>, <sqlite3.Row object at 0x10d00ad50>, <sqlite3.Row object at 0x10d00adb0>, <sqlite3.Row object at 0x10d00ae10>, <sqlite3.Row object at 0x10d00ae70>, <sqlite3.Row object at 0x10d00aed0>, <sqlite3.Row object at 0x10d00af30>, <sqlite3.Row object at 0x10d00af90>, <sqlite3.Row object at 0x10d00e030>, <sqlite3.Row object at 0x10d00e090>, <sqlite3.Row object at 0x10d00e0f0>, <sqlite3.Row object at 0x10d00e150>, <sqlite3.Row object at 0x10d00e1b0>, <sqlite3.Row object at 0x10d00e210>, <sqlite3.Row object at 0x10d00e270>, <sqlite3.Row object at 0x10d00e2d0>, <sqlite3.Row object at 0x10d00e330>, <sqlite3.Row object at 0x10d00e390>, <sqlite3.Row object at 0x10d00e3f0>, <sqlite3.Row object at 0x10d00e450>, <sqlite3.Row object at 0x10d00e4b0>, <sqlite3.Row object at 0x10d00e510>, <sqlite3.Row object at 0x10d00e570>, <sqlite3.Row object at 0x10d00e5d0>, <sqlite3.Row object at 0x10d00e630>, <sqlite3.Row object at 0x10d00e690>, <sqlite3.Row object at 0x10d00e6f0>, <sqlite3.Row object at 0x10d00e750>, <sqlite3.Row object at 0x10d00e7b0>, <sqlite3.Row object at 0x10d00e810>, <sqlite3.Row object at 0x10d00e870>, <sqlite3.Row object at 0x10d00e8d0>, <sqlite3.Row object at 0x10d00e930>, <sqlite3.Row object at 0x10d00e990>, <sqlite3.Row object at 0x10d00e9f0>, <sqlite3.Row object at 0x10d00ea50>, <sqlite3.Row object at 0x10d00eab0>, <sqlite3.Row object at 0x10d00eb10>, <sqlite3.Row object at 0x10d00eb70>, <sqlite3.Row object at 0x10d00ebd0>, <sqlite3.Row object at 0x10d00ec30>, <sqlite3.Row object at 0x10d00ec90>, <sqlite3.Row object at 0x10d00ecf0>, <sqlite3.Row object at 0x10d00ed50>, <sqlite3.Row object at 0x10d00edb0>, <sqlite3.Row object at 0x10d00ee10>, <sqlite3.Row object at 0x10d00ee70>, <sqlite3.Row object at 0x10d00eed0>, <sqlite3.Row object at 0x10d00ef30>, <sqlite3.Row object at 0x10d00ef90>, <sqlite3.Row object at 0x10d012030>, <sqlite3.Row object at 0x10d012090>, <sqlite3.Row object at 0x10d0120f0>, <sqlite3.Row object at 0x10d012150>, <sqlite3.Row object at 0x10d0121b0>, <sqlite3.Row object at 0x10d012210>, <sqlite3.Row object at 0x10d012270>, <sqlite3.Row object at 0x10d0122d0>, <sqlite3.Row object at 0x10d012330>, <sqlite3.Row object at 0x10d012390>, <sqlite3.Row object at 0x10d0123f0>, <sqlite3.Row object at 0x10d012450>, <sqlite3.Row object at 0x10d0124b0>, <sqlite3.Row object at 0x10d012510>, <sqlite3.Row object at 0x10d012570>, <sqlite3.Row object at 0x10d0125d0>, <sqlite3.Row object at 0x10d012630>, <sqlite3.Row object at 0x10d012690>, <sqlite3.Row object at 0x10d0126f0>, <sqlite3.Row object at 0x10d012750>, <sqlite3.Row object at 0x10d0127b0>, <sqlite3.Row object at 0x10d012810>, <sqlite3.Row object at 0x10d012870>, <sqlite3.Row object at 0x10d0128d0>, <sqlite3.Row object at 0x10d012930>, <sqlite3.Row object at 0x10d012990>, <sqlite3.Row object at 0x10d0129f0>, <sqlite3.Row object at 0x10d012a50>, <sqlite3.Row object at 0x10d012ab0>, <sqlite3.Row object at 0x10d012b10>, <sqlite3.Row object at 0x10d012b70>, <sqlite3.Row object at 0x10d012bd0>, <sqlite3.Row object at 0x10d012c30>, <sqlite3.Row object at 0x10d012c90>, <sqlite3.Row object at 0x10d012cf0>, <sqlite3.Row object at 0x10d012d50>, <sqlite3.Row object at 0x10d012db0>, <sqlite3.Row object at 0x10d012e10>, <sqlite3.Row object at 0x10d012e70>, <sqlite3.Row object at 0x10d012ed0>, <sqlite3.Row object at 0x10d012f30>, <sqlite3.Row object at 0x10d012f90>, <sqlite3.Row object at 0x10d016030>, <sqlite3.Row object at 0x10d016090>, <sqlite3.Row object at 0x10d0160f0>, <sqlite3.Row object at 0x10d016150>, <sqlite3.Row object at 0x10d0161b0>, <sqlite3.Row object at 0x10d016210>, <sqlite3.Row object at 0x10d016270>, <sqlite3.Row object at 0x10d0162d0>, <sqlite3.Row object at 0x10d016330>, <sqlite3.Row object at 0x10d016390>, <sqlite3.Row object at 0x10d0163f0>, <sqlite3.Row object at 0x10d016450>, <sqlite3.Row object at 0x10d0164b0>, <sqlite3.Row object at 0x10d016510>, <sqlite3.Row object at 0x10d016570>, <sqlite3.Row object at 0x10d0165d0>, <sqlite3.Row object at 0x10d016630>, <sqlite3.Row object at 0x10d016690>, <sqlite3.Row object at 0x10d0166f0>, <sqlite3.Row object at 0x10d016750>, <sqlite3.Row object at 0x10d0167b0>, <sqlite3.Row object at 0x10d016810>, <sqlite3.Row object at 0x10d016870>, <sqlite3.Row object at 0x10d0168d0>, <sqlite3.Row object at 0x10d016930>, <sqlite3.Row object at 0x10d016990>, <sqlite3.Row object at 0x10d0169f0>, <sqlite3.Row object at 0x10d016a50>, <sqlite3.Row object at 0x10d016ab0>, <sqlite3.Row object at 0x10d016b10>, <sqlite3.Row object at 0x10d016b70>, <sqlite3.Row object at 0x10d016bd0>, <sqlite3.Row object at 0x10d016c30>, <sqlite3.Row object at 0x10d016c90>, <sqlite3.Row object at 0x10d016cf0>, <sqlite3.Row object at 0x10d016d50>, <sqlite3.Row object at 0x10d016db0>, <sqlite3.Row object at 0x10d016e10>, <sqlite3.Row object at 0x10d016e70>, <sqlite3.Row object at 0x10d016ed0>, <sqlite3.Row object at 0x10d016f30>, <sqlite3.Row object at 0x10d016f90>, <sqlite3.Row object at 0x10d01b030>, <sqlite3.Row object at 0x10d01b090>, <sqlite3.Row object at 0x10d01b0f0>, <sqlite3.Row object at 0x10d01b150>, <sqlite3.Row object at 0x10d01b1b0>, <sqlite3.Row object at 0x10d01b210>, <sqlite3.Row object at 0x10d01b270>, <sqlite3.Row object at 0x10d01b2d0>, <sqlite3.Row object at 0x10d01b330>, <sqlite3.Row object at 0x10d01b390>, <sqlite3.Row object at 0x10d01b3f0>, <sqlite3.Row object at 0x10d01b450>, <sqlite3.Row object at 0x10d01b4b0>, <sqlite3.Row object at 0x10d01b510>, <sqlite3.Row object at 0x10d01b570>, <sqlite3.Row object at 0x10d01b5d0>, <sqlite3.Row object at 0x10d01b630>, <sqlite3.Row object at 0x10d01b690>, <sqlite3.Row object at 0x10d01b6f0>, <sqlite3.Row object at 0x10d01b750>, <sqlite3.Row object at 0x10d01b7b0>, <sqlite3.Row object at 0x10d01b810>, <sqlite3.Row object at 0x10d01b870>, <sqlite3.Row object at 0x10d01b8d0>, <sqlite3.Row object at 0x10d01b930>, <sqlite3.Row object at 0x10d01b990>, <sqlite3.Row object at 0x10d01b9f0>, <sqlite3.Row object at 0x10d01ba50>, <sqlite3.Row object at 0x10d01bab0>, <sqlite3.Row object at 0x10d01bb10>, <sqlite3.Row object at 0x10d01bb70>, <sqlite3.Row object at 0x10d01bbd0>, <sqlite3.Row object at 0x10d01bc30>, <sqlite3.Row object at 0x10d01bc90>, <sqlite3.Row object at 0x10d01bcf0>, <sqlite3.Row object at 0x10d01bd50>, <sqlite3.Row object at 0x10d01bdb0>, <sqlite3.Row object at 0x10d01be10>, <sqlite3.Row object at 0x10d01be70>, <sqlite3.Row object at 0x10d01bed0>, <sqlite3.Row object at 0x10d01bf30>, <sqlite3.Row object at 0x10d01bf90>, <sqlite3.Row object at 0x10d020030>, <sqlite3.Row object at 0x10d020090>, <sqlite3.Row object at 0x10d0200f0>, <sqlite3.Row object at 0x10d020150>, <sqlite3.Row object at 0x10d0201b0>, <sqlite3.Row object at 0x10d020210>, <sqlite3.Row object at 0x10d020270>, <sqlite3.Row object at 0x10d0202d0>, <sqlite3.Row object at 0x10d020330>, <sqlite3.Row object at 0x10d020390>, <sqlite3.Row object at 0x10d0203f0>, <sqlite3.Row object at 0x10d020450>, <sqlite3.Row object at 0x10d0204b0>, <sqlite3.Row object at 0x10d020510>, <sqlite3.Row object at 0x10d020570>, <sqlite3.Row object at 0x10d0205d0>, <sqlite3.Row object at 0x10d020630>, <sqlite3.Row object at 0x10d020690>, <sqlite3.Row object at 0x10d0206f0>, <sqlite3.Row object at 0x10d020750>, <sqlite3.Row object at 0x10d0207b0>, <sqlite3.Row object at 0x10d020810>, <sqlite3.Row object at 0x10d020870>, <sqlite3.Row object at 0x10d0208d0>, <sqlite3.Row object at 0x10d020930>, <sqlite3.Row object at 0x10d020990>, <sqlite3.Row object at 0x10d0209f0>, <sqlite3.Row object at 0x10d020a50>, <sqlite3.Row object at 0x10d020ab0>, <sqlite3.Row object at 0x10d020b10>, <sqlite3.Row object at 0x10d020b70>, <sqlite3.Row object at 0x10d020bd0>, <sqlite3.Row object at 0x10d020c30>, <sqlite3.Row object at 0x10d020c90>, <sqlite3.Row object at 0x10d020cf0>, <sqlite3.Row object at 0x10d020d50>, <sqlite3.Row object at 0x10d020db0>, <sqlite3.Row object at 0x10d020e10>, <sqlite3.Row object at 0x10d020e70>, <sqlite3.Row object at 0x10d020ed0>, <sqlite3.Row object at 0x10d020f30>, <sqlite3.Row object at 0x10d020f90>, <sqlite3.Row object at 0x10d024030>, <sqlite3.Row object at 0x10d024090>, <sqlite3.Row object at 0x10d0240f0>, <sqlite3.Row object at 0x10d024150>, <sqlite3.Row object at 0x10d0241b0>, <sqlite3.Row object at 0x10d024210>, <sqlite3.Row object at 0x10d024270>, <sqlite3.Row object at 0x10d0242d0>, <sqlite3.Row object at 0x10d024330>, <sqlite3.Row object at 0x10d024390>, <sqlite3.Row object at 0x10d0243f0>, <sqlite3.Row object at 0x10d024450>, <sqlite3.Row object at 0x10d0244b0>, <sqlite3.Row object at 0x10d024510>, <sqlite3.Row object at 0x10d024570>, <sqlite3.Row object at 0x10d0245d0>, <sqlite3.Row object at 0x10d024630>, <sqlite3.Row object at 0x10d024690>, <sqlite3.Row object at 0x10d0246f0>, <sqlite3.Row object at 0x10d024750>, <sqlite3.Row object at 0x10d0247b0>, <sqlite3.Row object at 0x10d024810>, <sqlite3.Row object at 0x10d024870>, <sqlite3.Row object at 0x10d0248d0>, <sqlite3.Row object at 0x10d024930>, <sqlite3.Row object at 0x10d024990>, <sqlite3.Row object at 0x10d0249f0>, <sqlite3.Row object at 0x10d024a50>, <sqlite3.Row object at 0x10d024ab0>, <sqlite3.Row object at 0x10d024b10>, <sqlite3.Row object at 0x10d024b70>, <sqlite3.Row object at 0x10d024bd0>, <sqlite3.Row object at 0x10d024c30>, <sqlite3.Row object at 0x10d024c90>, <sqlite3.Row object at 0x10d024cf0>, <sqlite3.Row object at 0x10d024d50>, <sqlite3.Row object at 0x10d024db0>, <sqlite3.Row object at 0x10d024e10>, <sqlite3.Row object at 0x10d024e70>, <sqlite3.Row object at 0x10d024ed0>, <sqlite3.Row object at 0x10d024f30>, <sqlite3.Row object at 0x10d024f90>, <sqlite3.Row object at 0x10d028030>, <sqlite3.Row object at 0x10d028090>, <sqlite3.Row object at 0x10d0280f0>, <sqlite3.Row object at 0x10d028150>, <sqlite3.Row object at 0x10d0281b0>, <sqlite3.Row object at 0x10d028210>, <sqlite3.Row object at 0x10d028270>, <sqlite3.Row object at 0x10d0282d0>, <sqlite3.Row object at 0x10d028330>, <sqlite3.Row object at 0x10d028390>, <sqlite3.Row object at 0x10d0283f0>, <sqlite3.Row object at 0x10d028450>, <sqlite3.Row object at 0x10d0284b0>, <sqlite3.Row object at 0x10d028510>, <sqlite3.Row object at 0x10d028570>, <sqlite3.Row object at 0x10d0285d0>, <sqlite3.Row object at 0x10d028630>, <sqlite3.Row object at 0x10d028690>, <sqlite3.Row object at 0x10d0286f0>, <sqlite3.Row object at 0x10d028750>, <sqlite3.Row object at 0x10d0287b0>, <sqlite3.Row object at 0x10d028810>, <sqlite3.Row object at 0x10d028870>, <sqlite3.Row object at 0x10d0288d0>, <sqlite3.Row object at 0x10d028930>, <sqlite3.Row object at 0x10d028990>, <sqlite3.Row object at 0x10d0289f0>, <sqlite3.Row object at 0x10d028a50>, <sqlite3.Row object at 0x10d028ab0>, <sqlite3.Row object at 0x10d028b10>, <sqlite3.Row object at 0x10d028b70>, <sqlite3.Row object at 0x10d028bd0>, <sqlite3.Row object at 0x10d028c30>, <sqlite3.Row object at 0x10d028c90>, <sqlite3.Row object at 0x10d028cf0>, <sqlite3.Row object at 0x10d028d50>, <sqlite3.Row object at 0x10d028db0>, <sqlite3.Row object at 0x10d028e10>, <sqlite3.Row object at 0x10d028e70>, <sqlite3.Row object at 0x10d028ed0>, <sqlite3.Row object at 0x10d028f30>, <sqlite3.Row object at 0x10d028f90>, <sqlite3.Row object at 0x10d02b030>, <sqlite3.Row object at 0x10d02b090>, <sqlite3.Row object at 0x10d02b0f0>, <sqlite3.Row object at 0x10d02b150>, <sqlite3.Row object at 0x10d02b1b0>, <sqlite3.Row object at 0x10d02b210>, <sqlite3.Row object at 0x10d02b270>, <sqlite3.Row object at 0x10d02b2d0>, <sqlite3.Row object at 0x10d02b330>, <sqlite3.Row object at 0x10d02b390>, <sqlite3.Row object at 0x10d02b3f0>, <sqlite3.Row object at 0x10d02b450>, <sqlite3.Row object at 0x10d02b4b0>, <sqlite3.Row object at 0x10d02b510>, <sqlite3.Row object at 0x10d02b570>, <sqlite3.Row object at 0x10d02b5d0>, <sqlite3.Row object at 0x10d02b630>, <sqlite3.Row object at 0x10d02b690>, <sqlite3.Row object at 0x10d02b6f0>, <sqlite3.Row object at 0x10d02b750>, <sqlite3.Row object at 0x10d02b7b0>, <sqlite3.Row object at 0x10d02b810>, <sqlite3.Row object at 0x10d02b870>, <sqlite3.Row object at 0x10d02b8d0>, <sqlite3.Row object at 0x10d02b930>, <sqlite3.Row object at 0x10d02b990>, <sqlite3.Row object at 0x10d02b9f0>, <sqlite3.Row object at 0x10d02ba50>, <sqlite3.Row object at 0x10d02bab0>, <sqlite3.Row object at 0x10d02bb10>, <sqlite3.Row object at 0x10d02bb70>, <sqlite3.Row object at 0x10d02bbd0>, <sqlite3.Row object at 0x10d02bc30>, <sqlite3.Row object at 0x10d02bc90>, <sqlite3.Row object at 0x10d02bcf0>, <sqlite3.Row object at 0x10d02bd50>, <sqlite3.Row object at 0x10d02bdb0>, <sqlite3.Row object at 0x10d02be10>, <sqlite3.Row object at 0x10d02be70>, <sqlite3.Row object at 0x10d02bed0>, <sqlite3.Row object at 0x10d02bf30>, <sqlite3.Row object at 0x10d02bf90>, <sqlite3.Row object at 0x10d02f030>, <sqlite3.Row object at 0x10d02f090>, <sqlite3.Row object at 0x10d02f0f0>, <sqlite3.Row object at 0x10d02f150>, <sqlite3.Row object at 0x10d02f1b0>, <sqlite3.Row object at 0x10d02f210>, <sqlite3.Row object at 0x10d02f270>, <sqlite3.Row object at 0x10d02f2d0>, <sqlite3.Row object at 0x10d02f330>, <sqlite3.Row object at 0x10d02f390>, <sqlite3.Row object at 0x10d02f3f0>, <sqlite3.Row object at 0x10d02f450>, <sqlite3.Row object at 0x10d02f4b0>, <sqlite3.Row object at 0x10d02f510>, <sqlite3.Row object at 0x10d02f570>, <sqlite3.Row object at 0x10d02f5d0>, <sqlite3.Row object at 0x10d02f630>, <sqlite3.Row object at 0x10d02f690>, <sqlite3.Row object at 0x10d02f6f0>, <sqlite3.Row object at 0x10d02f750>, <sqlite3.Row object at 0x10d02f7b0>, <sqlite3.Row object at 0x10d02f810>, <sqlite3.Row object at 0x10d02f870>, <sqlite3.Row object at 0x10d02f8d0>, <sqlite3.Row object at 0x10d02f930>, <sqlite3.Row object at 0x10d02f990>, <sqlite3.Row object at 0x10d02f9f0>, <sqlite3.Row object at 0x10d02fa50>, <sqlite3.Row object at 0x10d02fab0>, <sqlite3.Row object at 0x10d02fb10>, <sqlite3.Row object at 0x10d02fb70>, <sqlite3.Row object at 0x10d02fbd0>, <sqlite3.Row object at 0x10d02fc30>, <sqlite3.Row object at 0x10d02fc90>, <sqlite3.Row object at 0x10d02fcf0>, <sqlite3.Row object at 0x10d02fd50>, <sqlite3.Row object at 0x10d02fdb0>, <sqlite3.Row object at 0x10d02fe10>, <sqlite3.Row object at 0x10d02fe70>, <sqlite3.Row object at 0x10d02fed0>, <sqlite3.Row object at 0x10d02ff30>, <sqlite3.Row object at 0x10d02ff90>, <sqlite3.Row object at 0x10d034030>, <sqlite3.Row object at 0x10d034090>, <sqlite3.Row object at 0x10d0340f0>, <sqlite3.Row object at 0x10d034150>, <sqlite3.Row object at 0x10d0341b0>, <sqlite3.Row object at 0x10d034210>, <sqlite3.Row object at 0x10d034270>, <sqlite3.Row object at 0x10d0342d0>, <sqlite3.Row object at 0x10d034330>, <sqlite3.Row object at 0x10d034390>, <sqlite3.Row object at 0x10d0343f0>, <sqlite3.Row object at 0x10d034450>, <sqlite3.Row object at 0x10d0344b0>, <sqlite3.Row object at 0x10d034510>, <sqlite3.Row object at 0x10d034570>, <sqlite3.Row object at 0x10d0345d0>, <sqlite3.Row object at 0x10d034630>, <sqlite3.Row object at 0x10d034690>, <sqlite3.Row object at 0x10d0346f0>, <sqlite3.Row object at 0x10d034750>, <sqlite3.Row object at 0x10d0347b0>, <sqlite3.Row object at 0x10d034810>, <sqlite3.Row object at 0x10d034870>, <sqlite3.Row object at 0x10d0348d0>, <sqlite3.Row object at 0x10d034930>, <sqlite3.Row object at 0x10d034990>, <sqlite3.Row object at 0x10d0349f0>, <sqlite3.Row object at 0x10d034a50>, <sqlite3.Row object at 0x10d034ab0>, <sqlite3.Row object at 0x10d034b10>, <sqlite3.Row object at 0x10d034b70>, <sqlite3.Row object at 0x10d034bd0>, <sqlite3.Row object at 0x10d034c30>, <sqlite3.Row object at 0x10d034c90>, <sqlite3.Row object at 0x10d034cf0>, <sqlite3.Row object at 0x10d034d50>, <sqlite3.Row object at 0x10d034db0>, <sqlite3.Row object at 0x10d034e10>, <sqlite3.Row object at 0x10d034e70>, <sqlite3.Row object at 0x10d034eb0>, <sqlite3.Row object at 0x10d034f10>, <sqlite3.Row object at 0x10d034f70>, <sqlite3.Row object at 0x10d034fd0>, <sqlite3.Row object at 0x10d007070>, <sqlite3.Row object at 0x10d0070d0>, <sqlite3.Row object at 0x10d007130>, <sqlite3.Row object at 0x10d007190>, <sqlite3.Row object at 0x10d0071f0>, <sqlite3.Row object at 0x10d007250>, <sqlite3.Row object at 0x10d0072b0>, <sqlite3.Row object at 0x10d007310>, <sqlite3.Row object at 0x10d007370>, <sqlite3.Row object at 0x10d0073d0>, <sqlite3.Row object at 0x10d007430>, <sqlite3.Row object at 0x10d007490>, <sqlite3.Row object at 0x10d0074f0>, <sqlite3.Row object at 0x10d007550>, <sqlite3.Row object at 0x10d0075b0>, <sqlite3.Row object at 0x10d007610>, <sqlite3.Row object at 0x10d007670>, <sqlite3.Row object at 0x10d0076d0>, <sqlite3.Row object at 0x10d007730>, <sqlite3.Row object at 0x10d007790>, <sqlite3.Row object at 0x10d0077f0>, <sqlite3.Row object at 0x10d007850>, <sqlite3.Row object at 0x10d0078b0>, <sqlite3.Row object at 0x10d007910>, <sqlite3.Row object at 0x10d007970>, <sqlite3.Row object at 0x10d0079d0>, <sqlite3.Row object at 0x10d007a30>, <sqlite3.Row object at 0x10d007a90>, <sqlite3.Row object at 0x10d007af0>, <sqlite3.Row object at 0x10d007b50>, <sqlite3.Row object at 0x10d007bb0>, <sqlite3.Row object at 0x10d007c10>, <sqlite3.Row object at 0x10d007c70>, <sqlite3.Row object at 0x10d007cd0>, <sqlite3.Row object at 0x10d007d30>, <sqlite3.Row object at 0x10d007d90>, <sqlite3.Row object at 0x10d007df0>, <sqlite3.Row object at 0x10d007e50>, <sqlite3.Row object at 0x10d007eb0>, <sqlite3.Row object at 0x10d007f10>, <sqlite3.Row object at 0x10d007f70>, <sqlite3.Row object at 0x10d007fd0>, <sqlite3.Row object at 0x10d03a070>, <sqlite3.Row object at 0x10d03a0d0>, <sqlite3.Row object at 0x10d03a130>, <sqlite3.Row object at 0x10d03a190>, <sqlite3.Row object at 0x10d03a1f0>, <sqlite3.Row object at 0x10d03a250>, <sqlite3.Row object at 0x10d03a2b0>, <sqlite3.Row object at 0x10d03a310>, <sqlite3.Row object at 0x10d03a370>, <sqlite3.Row object at 0x10d03a3d0>, <sqlite3.Row object at 0x10d03a430>, <sqlite3.Row object at 0x10d03a490>, <sqlite3.Row object at 0x10d03a4f0>, <sqlite3.Row object at 0x10d03a550>, <sqlite3.Row object at 0x10d03a5b0>, <sqlite3.Row object at 0x10d03a610>, <sqlite3.Row object at 0x10d03a670>, <sqlite3.Row object at 0x10d03a6d0>, <sqlite3.Row object at 0x10d03a730>, <sqlite3.Row object at 0x10d03a790>, <sqlite3.Row object at 0x10d03a7f0>, <sqlite3.Row object at 0x10d03a850>, <sqlite3.Row object at 0x10d03a8b0>, <sqlite3.Row object at 0x10d03a910>, <sqlite3.Row object at 0x10d03a970>, <sqlite3.Row object at 0x10d03a9d0>, <sqlite3.Row object at 0x10d03aa30>, <sqlite3.Row object at 0x10d03aa90>, <sqlite3.Row object at 0x10d03aaf0>, <sqlite3.Row object at 0x10d03ab50>, <sqlite3.Row object at 0x10d03abb0>, <sqlite3.Row object at 0x10d03ac10>, <sqlite3.Row object at 0x10d03ac70>, <sqlite3.Row object at 0x10d03acd0>, <sqlite3.Row object at 0x10d03ad30>, <sqlite3.Row object at 0x10d03ad90>, <sqlite3.Row object at 0x10d03adf0>, <sqlite3.Row object at 0x10d03ae50>, <sqlite3.Row object at 0x10d03aeb0>, <sqlite3.Row object at 0x10d03af10>, <sqlite3.Row object at 0x10d03af70>, <sqlite3.Row object at 0x10d03afd0>, <sqlite3.Row object at 0x10d03f070>, <sqlite3.Row object at 0x10d03f0d0>, <sqlite3.Row object at 0x10d03f130>, <sqlite3.Row object at 0x10d03f190>, <sqlite3.Row object at 0x10d03f1f0>, <sqlite3.Row object at 0x10d03f250>, <sqlite3.Row object at 0x10d03f2b0>, <sqlite3.Row object at 0x10d03f310>, <sqlite3.Row object at 0x10d03f370>, <sqlite3.Row object at 0x10d03f3d0>, <sqlite3.Row object at 0x10d03f430>, <sqlite3.Row object at 0x10d03f490>, <sqlite3.Row object at 0x10d03f4f0>, <sqlite3.Row object at 0x10d03f550>, <sqlite3.Row object at 0x10d03f5b0>, <sqlite3.Row object at 0x10d03f610>, <sqlite3.Row object at 0x10d03f670>, <sqlite3.Row object at 0x10d03f6d0>, <sqlite3.Row object at 0x10d03f730>, <sqlite3.Row object at 0x10d03f790>, <sqlite3.Row object at 0x10d03f7f0>, <sqlite3.Row object at 0x10d03f850>, <sqlite3.Row object at 0x10d03f8b0>, <sqlite3.Row object at 0x10d03f910>, <sqlite3.Row object at 0x10d03f970>, <sqlite3.Row object at 0x10d03f9d0>, <sqlite3.Row object at 0x10d03fa30>, <sqlite3.Row object at 0x10d03fa90>, <sqlite3.Row object at 0x10d03faf0>, <sqlite3.Row object at 0x10d03fb50>, <sqlite3.Row object at 0x10d03fbb0>, <sqlite3.Row object at 0x10d03fc10>, <sqlite3.Row object at 0x10d03fc70>, <sqlite3.Row object at 0x10d03fcd0>, <sqlite3.Row object at 0x10d03fd30>, <sqlite3.Row object at 0x10d03fd90>, <sqlite3.Row object at 0x10d03fdf0>, <sqlite3.Row object at 0x10d03fe50>, <sqlite3.Row object at 0x10d03feb0>, <sqlite3.Row object at 0x10d03ff10>, <sqlite3.Row object at 0x10d03ff70>, <sqlite3.Row object at 0x10d03ffd0>, <sqlite3.Row object at 0x10d063070>, <sqlite3.Row object at 0x10d0630d0>, <sqlite3.Row object at 0x10d063130>, <sqlite3.Row object at 0x10d063190>, <sqlite3.Row object at 0x10d0631f0>, <sqlite3.Row object at 0x10d063250>, <sqlite3.Row object at 0x10d0632b0>, <sqlite3.Row object at 0x10d063310>, <sqlite3.Row object at 0x10d063370>, <sqlite3.Row object at 0x10d0633d0>, <sqlite3.Row object at 0x10d063430>, <sqlite3.Row object at 0x10d063490>, <sqlite3.Row object at 0x10d0634f0>, <sqlite3.Row object at 0x10d063550>, <sqlite3.Row object at 0x10d0635b0>, <sqlite3.Row object at 0x10d063610>, <sqlite3.Row object at 0x10d063670>, <sqlite3.Row object at 0x10d0636d0>, <sqlite3.Row object at 0x10d063730>, <sqlite3.Row object at 0x10d063790>, <sqlite3.Row object at 0x10d0637f0>, <sqlite3.Row object at 0x10d063850>, <sqlite3.Row object at 0x10d0638b0>, <sqlite3.Row object at 0x10d063910>, <sqlite3.Row object at 0x10d063970>, <sqlite3.Row object at 0x10d0639d0>, <sqlite3.Row object at 0x10d063a30>, <sqlite3.Row object at 0x10d063a90>, <sqlite3.Row object at 0x10d063af0>, <sqlite3.Row object at 0x10d063b50>, <sqlite3.Row object at 0x10d063bb0>, <sqlite3.Row object at 0x10d063c10>, <sqlite3.Row object at 0x10d063c70>, <sqlite3.Row object at 0x10d063cd0>, <sqlite3.Row object at 0x10d063d30>, <sqlite3.Row object at 0x10d063d90>, <sqlite3.Row object at 0x10d063df0>, <sqlite3.Row object at 0x10d063e50>, <sqlite3.Row object at 0x10d063eb0>, <sqlite3.Row object at 0x10d063f10>, <sqlite3.Row object at 0x10d063f70>, <sqlite3.Row object at 0x10d063fd0>, <sqlite3.Row object at 0x10d068070>, <sqlite3.Row object at 0x10d0680d0>, <sqlite3.Row object at 0x10d068130>, <sqlite3.Row object at 0x10d068190>, <sqlite3.Row object at 0x10d0681f0>, <sqlite3.Row object at 0x10d068250>, <sqlite3.Row object at 0x10d0682b0>, <sqlite3.Row object at 0x10d068310>, <sqlite3.Row object at 0x10d068370>, <sqlite3.Row object at 0x10d0683d0>, <sqlite3.Row object at 0x10d068430>, <sqlite3.Row object at 0x10d068490>, <sqlite3.Row object at 0x10d0684f0>, <sqlite3.Row object at 0x10d068550>, <sqlite3.Row object at 0x10d0685b0>, <sqlite3.Row object at 0x10d068610>, <sqlite3.Row object at 0x10d068670>, <sqlite3.Row object at 0x10d0686d0>, <sqlite3.Row object at 0x10d068730>, <sqlite3.Row object at 0x10d068790>, <sqlite3.Row object at 0x10d0687f0>, <sqlite3.Row object at 0x10d068850>, <sqlite3.Row object at 0x10d0688b0>, <sqlite3.Row object at 0x10d068910>, <sqlite3.Row object at 0x10d068970>, <sqlite3.Row object at 0x10d0689d0>, <sqlite3.Row object at 0x10d068a30>, <sqlite3.Row object at 0x10d068a90>, <sqlite3.Row object at 0x10d068af0>, <sqlite3.Row object at 0x10d068b50>, <sqlite3.Row object at 0x10d068bb0>, <sqlite3.Row object at 0x10d068c10>, <sqlite3.Row object at 0x10d068c70>, <sqlite3.Row object at 0x10d068cd0>, <sqlite3.Row object at 0x10d068d30>, <sqlite3.Row object at 0x10d068d90>, <sqlite3.Row object at 0x10d068df0>, <sqlite3.Row object at 0x10d068e50>, <sqlite3.Row object at 0x10d068eb0>, <sqlite3.Row object at 0x10d068f10>, <sqlite3.Row object at 0x10d068f70>, <sqlite3.Row object at 0x10d068fd0>, <sqlite3.Row object at 0x10d06c070>, <sqlite3.Row object at 0x10d06c0d0>, <sqlite3.Row object at 0x10d06c130>, <sqlite3.Row object at 0x10d06c190>, <sqlite3.Row object at 0x10d06c1f0>, <sqlite3.Row object at 0x10d06c250>, <sqlite3.Row object at 0x10d06c2b0>, <sqlite3.Row object at 0x10d06c310>, <sqlite3.Row object at 0x10d06c370>, <sqlite3.Row object at 0x10d06c3d0>, <sqlite3.Row object at 0x10d06c430>, <sqlite3.Row object at 0x10d06c490>, <sqlite3.Row object at 0x10d06c4f0>, <sqlite3.Row object at 0x10d06c550>, <sqlite3.Row object at 0x10d06c5b0>, <sqlite3.Row object at 0x10d06c610>, <sqlite3.Row object at 0x10d06c670>, <sqlite3.Row object at 0x10d06c6d0>, <sqlite3.Row object at 0x10d06c730>, <sqlite3.Row object at 0x10d06c790>, <sqlite3.Row object at 0x10d06c7f0>, <sqlite3.Row object at 0x10d06c850>, <sqlite3.Row object at 0x10d06c8b0>, <sqlite3.Row object at 0x10d06c910>, <sqlite3.Row object at 0x10d06c970>, <sqlite3.Row object at 0x10d06c9d0>, <sqlite3.Row object at 0x10d06ca30>, <sqlite3.Row object at 0x10d06ca90>, <sqlite3.Row object at 0x10d06caf0>, <sqlite3.Row object at 0x10d06cb50>, <sqlite3.Row object at 0x10d06cbb0>, <sqlite3.Row object at 0x10d06cc10>, <sqlite3.Row object at 0x10d06cc70>, <sqlite3.Row object at 0x10d06ccd0>, <sqlite3.Row object at 0x10d06cd30>, <sqlite3.Row object at 0x10d06cd90>, <sqlite3.Row object at 0x10d06cdf0>, <sqlite3.Row object at 0x10d06ce50>, <sqlite3.Row object at 0x10d06ceb0>, <sqlite3.Row object at 0x10d06cf10>, <sqlite3.Row object at 0x10d06cf70>, <sqlite3.Row object at 0x10d06cfd0>, <sqlite3.Row object at 0x10d070070>, <sqlite3.Row object at 0x10d0700d0>, <sqlite3.Row object at 0x10d070130>, <sqlite3.Row object at 0x10d070190>, <sqlite3.Row object at 0x10d0701f0>, <sqlite3.Row object at 0x10d070250>, <sqlite3.Row object at 0x10d0702b0>, <sqlite3.Row object at 0x10d070310>, <sqlite3.Row object at 0x10d070370>, <sqlite3.Row object at 0x10d0703d0>, <sqlite3.Row object at 0x10d070430>, <sqlite3.Row object at 0x10d070490>, <sqlite3.Row object at 0x10d0704f0>, <sqlite3.Row object at 0x10d070550>, <sqlite3.Row object at 0x10d0705b0>, <sqlite3.Row object at 0x10d070610>, <sqlite3.Row object at 0x10d070670>, <sqlite3.Row object at 0x10d0706d0>, <sqlite3.Row object at 0x10d070730>, <sqlite3.Row object at 0x10d070790>, <sqlite3.Row object at 0x10d0707f0>, <sqlite3.Row object at 0x10d070850>, <sqlite3.Row object at 0x10d0708b0>, <sqlite3.Row object at 0x10d070910>, <sqlite3.Row object at 0x10d070970>, <sqlite3.Row object at 0x10d0709d0>, <sqlite3.Row object at 0x10d070a30>, <sqlite3.Row object at 0x10d070a90>, <sqlite3.Row object at 0x10d070af0>, <sqlite3.Row object at 0x10d070b50>, <sqlite3.Row object at 0x10d070bb0>, <sqlite3.Row object at 0x10d070c10>, <sqlite3.Row object at 0x10d070c70>, <sqlite3.Row object at 0x10d070cd0>, <sqlite3.Row object at 0x10d070d30>, <sqlite3.Row object at 0x10d070d90>, <sqlite3.Row object at 0x10d070df0>, <sqlite3.Row object at 0x10d070e50>, <sqlite3.Row object at 0x10d070eb0>, <sqlite3.Row object at 0x10d070f10>, <sqlite3.Row object at 0x10d070f70>, <sqlite3.Row object at 0x10d070fd0>, <sqlite3.Row object at 0x10d074070>, <sqlite3.Row object at 0x10d0740d0>, <sqlite3.Row object at 0x10d074130>, <sqlite3.Row object at 0x10d074190>, <sqlite3.Row object at 0x10d0741f0>, <sqlite3.Row object at 0x10d074250>, <sqlite3.Row object at 0x10d0742b0>, <sqlite3.Row object at 0x10d074310>, <sqlite3.Row object at 0x10d074370>, <sqlite3.Row object at 0x10d0743d0>, <sqlite3.Row object at 0x10d074430>, <sqlite3.Row object at 0x10d074490>, <sqlite3.Row object at 0x10d0744f0>, <sqlite3.Row object at 0x10d074550>, <sqlite3.Row object at 0x10d0745b0>, <sqlite3.Row object at 0x10d074610>, <sqlite3.Row object at 0x10d074670>, <sqlite3.Row object at 0x10d0746d0>, <sqlite3.Row object at 0x10d074730>, <sqlite3.Row object at 0x10d074790>, <sqlite3.Row object at 0x10d0747f0>, <sqlite3.Row object at 0x10d074850>, <sqlite3.Row object at 0x10d0748b0>, <sqlite3.Row object at 0x10d074910>, <sqlite3.Row object at 0x10d074970>, <sqlite3.Row object at 0x10d0749d0>, <sqlite3.Row object at 0x10d074a30>, <sqlite3.Row object at 0x10d074a90>, <sqlite3.Row object at 0x10d074af0>, <sqlite3.Row object at 0x10d074b50>, <sqlite3.Row object at 0x10d074bb0>, <sqlite3.Row object at 0x10d074c10>, <sqlite3.Row object at 0x10d074c70>, <sqlite3.Row object at 0x10d074cd0>, <sqlite3.Row object at 0x10d074d30>, <sqlite3.Row object at 0x10d074d90>, <sqlite3.Row object at 0x10d074df0>, <sqlite3.Row object at 0x10d074e50>, <sqlite3.Row object at 0x10d074eb0>, <sqlite3.Row object at 0x10d074f10>, <sqlite3.Row object at 0x10d074f70>, <sqlite3.Row object at 0x10d074fd0>, <sqlite3.Row object at 0x10d078070>, <sqlite3.Row object at 0x10d0780d0>, <sqlite3.Row object at 0x10d078130>, <sqlite3.Row object at 0x10d078190>, <sqlite3.Row object at 0x10d0781f0>, <sqlite3.Row object at 0x10d078250>, <sqlite3.Row object at 0x10d0782b0>, <sqlite3.Row object at 0x10d078310>, <sqlite3.Row object at 0x10d078370>, <sqlite3.Row object at 0x10d0783d0>, <sqlite3.Row object at 0x10d078430>, <sqlite3.Row object at 0x10d078490>, <sqlite3.Row object at 0x10d0784f0>, <sqlite3.Row object at 0x10d078550>, <sqlite3.Row object at 0x10d0785b0>, <sqlite3.Row object at 0x10d078610>, <sqlite3.Row object at 0x10d078670>, <sqlite3.Row object at 0x10d0786d0>, <sqlite3.Row object at 0x10d078730>, <sqlite3.Row object at 0x10d078790>, <sqlite3.Row object at 0x10d0787f0>, <sqlite3.Row object at 0x10d078850>, <sqlite3.Row object at 0x10d0788b0>, <sqlite3.Row object at 0x10d078910>, <sqlite3.Row object at 0x10d078970>, <sqlite3.Row object at 0x10d0789d0>, <sqlite3.Row object at 0x10d078a30>, <sqlite3.Row object at 0x10d078a90>, <sqlite3.Row object at 0x10d078af0>, <sqlite3.Row object at 0x10d078b50>, <sqlite3.Row object at 0x10d078bb0>, <sqlite3.Row object at 0x10d078c10>, <sqlite3.Row object at 0x10d078c70>, <sqlite3.Row object at 0x10d078cd0>, <sqlite3.Row object at 0x10d078d30>, <sqlite3.Row object at 0x10d078d90>, <sqlite3.Row object at 0x10d078df0>, <sqlite3.Row object at 0x10d078e50>, <sqlite3.Row object at 0x10d078eb0>, <sqlite3.Row object at 0x10d078f10>, <sqlite3.Row object at 0x10d078f70>, <sqlite3.Row object at 0x10d078fd0>, <sqlite3.Row object at 0x10d07c070>, <sqlite3.Row object at 0x10d07c0d0>, <sqlite3.Row object at 0x10d07c130>, <sqlite3.Row object at 0x10d07c190>, <sqlite3.Row object at 0x10d07c1f0>, <sqlite3.Row object at 0x10d07c250>, <sqlite3.Row object at 0x10d07c2b0>, <sqlite3.Row object at 0x10d07c310>, <sqlite3.Row object at 0x10d07c370>, <sqlite3.Row object at 0x10d07c3d0>, <sqlite3.Row object at 0x10d07c430>, <sqlite3.Row object at 0x10d07c490>, <sqlite3.Row object at 0x10d07c4f0>, <sqlite3.Row object at 0x10d07c550>, <sqlite3.Row object at 0x10d07c5b0>, <sqlite3.Row object at 0x10d07c610>, <sqlite3.Row object at 0x10d07c670>, <sqlite3.Row object at 0x10d07c6d0>, <sqlite3.Row object at 0x10d07c730>, <sqlite3.Row object at 0x10d07c790>, <sqlite3.Row object at 0x10d07c7f0>, <sqlite3.Row object at 0x10d07c850>, <sqlite3.Row object at 0x10d07c8b0>, <sqlite3.Row object at 0x10d07c910>, <sqlite3.Row object at 0x10d07c970>, <sqlite3.Row object at 0x10d07c9d0>, <sqlite3.Row object at 0x10d07ca30>, <sqlite3.Row object at 0x10d07ca90>, <sqlite3.Row object at 0x10d07caf0>, <sqlite3.Row object at 0x10d07cb50>, <sqlite3.Row object at 0x10d07cbb0>, <sqlite3.Row object at 0x10d07cc10>, <sqlite3.Row object at 0x10d07cc70>, <sqlite3.Row object at 0x10d07ccd0>, <sqlite3.Row object at 0x10d07cd30>, <sqlite3.Row object at 0x10d07cd90>, <sqlite3.Row object at 0x10d07cdf0>, <sqlite3.Row object at 0x10d07ce50>, <sqlite3.Row object at 0x10d07ceb0>, <sqlite3.Row object at 0x10d07cf10>, <sqlite3.Row object at 0x10d07cf70>, <sqlite3.Row object at 0x10d07cfd0>, <sqlite3.Row object at 0x10d081070>, <sqlite3.Row object at 0x10d0810d0>, <sqlite3.Row object at 0x10d081130>, <sqlite3.Row object at 0x10d081190>, <sqlite3.Row object at 0x10d0811f0>, <sqlite3.Row object at 0x10d081250>, <sqlite3.Row object at 0x10d0812b0>, <sqlite3.Row object at 0x10d081310>, <sqlite3.Row object at 0x10d081370>, <sqlite3.Row object at 0x10d0813d0>, <sqlite3.Row object at 0x10d081430>, <sqlite3.Row object at 0x10d081490>, <sqlite3.Row object at 0x10d0814f0>, <sqlite3.Row object at 0x10d081550>, <sqlite3.Row object at 0x10d0815b0>, <sqlite3.Row object at 0x10d081610>, <sqlite3.Row object at 0x10d081670>, <sqlite3.Row object at 0x10d0816d0>, <sqlite3.Row object at 0x10d081730>, <sqlite3.Row object at 0x10d081790>, <sqlite3.Row object at 0x10d0817f0>, <sqlite3.Row object at 0x10d081850>, <sqlite3.Row object at 0x10d0818b0>, <sqlite3.Row object at 0x10d081910>, <sqlite3.Row object at 0x10d081970>, <sqlite3.Row object at 0x10d0819d0>, <sqlite3.Row object at 0x10d081a30>, <sqlite3.Row object at 0x10d081a90>, <sqlite3.Row object at 0x10d081af0>, <sqlite3.Row object at 0x10d081b50>, <sqlite3.Row object at 0x10d081bb0>, <sqlite3.Row object at 0x10d081c10>, <sqlite3.Row object at 0x10d081c70>, <sqlite3.Row object at 0x10d081cd0>, <sqlite3.Row object at 0x10d081d30>, <sqlite3.Row object at 0x10d081d90>, <sqlite3.Row object at 0x10d081df0>, <sqlite3.Row object at 0x10d081e50>, <sqlite3.Row object at 0x10d081eb0>, <sqlite3.Row object at 0x10d081f10>, <sqlite3.Row object at 0x10d081f70>, <sqlite3.Row object at 0x10d081fd0>, <sqlite3.Row object at 0x10d085070>, <sqlite3.Row object at 0x10d0850d0>, <sqlite3.Row object at 0x10d085130>, <sqlite3.Row object at 0x10d085190>, <sqlite3.Row object at 0x10d0851f0>, <sqlite3.Row object at 0x10d085250>, <sqlite3.Row object at 0x10d0852b0>, <sqlite3.Row object at 0x10d085310>, <sqlite3.Row object at 0x10d085370>, <sqlite3.Row object at 0x10d0853d0>, <sqlite3.Row object at 0x10d085430>, <sqlite3.Row object at 0x10d085490>, <sqlite3.Row object at 0x10d0854f0>, <sqlite3.Row object at 0x10d085550>, <sqlite3.Row object at 0x10d0855b0>, <sqlite3.Row object at 0x10d085610>, <sqlite3.Row object at 0x10d085670>, <sqlite3.Row object at 0x10d0856d0>, <sqlite3.Row object at 0x10d085730>, <sqlite3.Row object at 0x10d085790>, <sqlite3.Row object at 0x10d0857f0>, <sqlite3.Row object at 0x10d085850>, <sqlite3.Row object at 0x10d0858b0>, <sqlite3.Row object at 0x10d085910>, <sqlite3.Row object at 0x10d085970>, <sqlite3.Row object at 0x10d0859d0>, <sqlite3.Row object at 0x10d085a30>, <sqlite3.Row object at 0x10d085a90>, <sqlite3.Row object at 0x10d085af0>, <sqlite3.Row object at 0x10d085b50>]
2025-06-14 12:19:01,763 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 12:19:01,763 - app - INFO - Final Assistant Response (NL): Â¡Hola! AquÃ­ estÃ¡n todas las transacciones en tu cuenta. Â¿Hay algo especÃ­fico que te gustarÃ­a revisar?
2025-06-14 12:19:05,994 - app - INFO - User Query (es): klk
2025-06-14 12:19:07,466 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 12:19:07,467 - app - INFO - Generated SQL Query: SELECT * FROM bank_transactions ORDER BY Date ASC;
2025-06-14 12:19:07,467 - app - INFO - Database connection established.
2025-06-14 12:19:07,470 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d081150>, <sqlite3.Row object at 0x10d0811b0>, <sqlite3.Row object at 0x10d081330>, <sqlite3.Row object at 0x10d081350>, <sqlite3.Row object at 0x10d081290>, <sqlite3.Row object at 0x10d0812f0>, <sqlite3.Row object at 0x10d081470>, <sqlite3.Row object at 0x10d0813f0>, <sqlite3.Row object at 0x10d081410>, <sqlite3.Row object at 0x10d0813b0>, <sqlite3.Row object at 0x10d081450>, <sqlite3.Row object at 0x10d0812d0>, <sqlite3.Row object at 0x10d081390>, <sqlite3.Row object at 0x10d0814b0>, <sqlite3.Row object at 0x10d0814d0>, <sqlite3.Row object at 0x10d081510>, <sqlite3.Row object at 0x10d081530>, <sqlite3.Row object at 0x10d081570>, <sqlite3.Row object at 0x10d081590>, <sqlite3.Row object at 0x10d0815d0>, <sqlite3.Row object at 0x10d0815f0>, <sqlite3.Row object at 0x10d081630>, <sqlite3.Row object at 0x10d081650>, <sqlite3.Row object at 0x10d081690>, <sqlite3.Row object at 0x10d0816b0>, <sqlite3.Row object at 0x10d0816f0>, <sqlite3.Row object at 0x10d081710>, <sqlite3.Row object at 0x10d081750>, <sqlite3.Row object at 0x10d081770>, <sqlite3.Row object at 0x10d0817b0>, <sqlite3.Row object at 0x10d0817d0>, <sqlite3.Row object at 0x10d081810>, <sqlite3.Row object at 0x10d081830>, <sqlite3.Row object at 0x10d081870>, <sqlite3.Row object at 0x10d081890>, <sqlite3.Row object at 0x10d0818d0>, <sqlite3.Row object at 0x10d0818f0>, <sqlite3.Row object at 0x10d081930>, <sqlite3.Row object at 0x10d081950>, <sqlite3.Row object at 0x10d081990>, <sqlite3.Row object at 0x10d0819b0>, <sqlite3.Row object at 0x10d0819f0>, <sqlite3.Row object at 0x10d081070>, <sqlite3.Row object at 0x10d0810d0>, <sqlite3.Row object at 0x10d081130>, <sqlite3.Row object at 0x10d081190>, <sqlite3.Row object at 0x10d0811f0>, <sqlite3.Row object at 0x10d081250>, <sqlite3.Row object at 0x10d0812b0>, <sqlite3.Row object at 0x10d081310>, <sqlite3.Row object at 0x10d081430>, <sqlite3.Row object at 0x10d081550>, <sqlite3.Row object at 0x10d081670>, <sqlite3.Row object at 0x10d081790>, <sqlite3.Row object at 0x10d0818b0>, <sqlite3.Row object at 0x10d0819d0>, <sqlite3.Row object at 0x10d081af0>, <sqlite3.Row object at 0x10d081c10>, <sqlite3.Row object at 0x10d081d30>, <sqlite3.Row object at 0x10d081e50>, <sqlite3.Row object at 0x10d081f70>, <sqlite3.Row object at 0x108f15410>, <sqlite3.Row object at 0x108f15330>, <sqlite3.Row object at 0x108f15690>, <sqlite3.Row object at 0x108f15f70>, <sqlite3.Row object at 0x108f15fd0>, <sqlite3.Row object at 0x108f15850>, <sqlite3.Row object at 0x10d085c50>, <sqlite3.Row object at 0x10d085130>, <sqlite3.Row object at 0x10d085250>, <sqlite3.Row object at 0x10d085370>, <sqlite3.Row object at 0x10d085490>, <sqlite3.Row object at 0x10d0855b0>, <sqlite3.Row object at 0x10d0856d0>, <sqlite3.Row object at 0x10d0857f0>, <sqlite3.Row object at 0x10d085910>, <sqlite3.Row object at 0x10d085a30>, <sqlite3.Row object at 0x10d085b50>, <sqlite3.Row object at 0x10d085c30>, <sqlite3.Row object at 0x10d085d30>, <sqlite3.Row object at 0x10d085d70>, <sqlite3.Row object at 0x10d085e70>, <sqlite3.Row object at 0x10d085eb0>, <sqlite3.Row object at 0x10d085f10>, <sqlite3.Row object at 0x10d085f70>, <sqlite3.Row object at 0x10d085fd0>, <sqlite3.Row object at 0x10d00b070>, <sqlite3.Row object at 0x10d00b0d0>, <sqlite3.Row object at 0x10d00b130>, <sqlite3.Row object at 0x10d00b190>, <sqlite3.Row object at 0x10d00b1f0>, <sqlite3.Row object at 0x10d00b250>, <sqlite3.Row object at 0x10d00b2b0>, <sqlite3.Row object at 0x10d00b310>, <sqlite3.Row object at 0x10d00b370>, <sqlite3.Row object at 0x10d00b3d0>, <sqlite3.Row object at 0x10d00b430>, <sqlite3.Row object at 0x10d00b490>, <sqlite3.Row object at 0x10d00b4f0>, <sqlite3.Row object at 0x10d00b550>, <sqlite3.Row object at 0x10d00b5b0>, <sqlite3.Row object at 0x10d00b610>, <sqlite3.Row object at 0x10d00b670>, <sqlite3.Row object at 0x10d00b6d0>, <sqlite3.Row object at 0x10d00b730>, <sqlite3.Row object at 0x10d00b790>, <sqlite3.Row object at 0x10d00b7f0>, <sqlite3.Row object at 0x10d00b850>, <sqlite3.Row object at 0x10d00b8b0>, <sqlite3.Row object at 0x10d00b910>, <sqlite3.Row object at 0x10d00b970>, <sqlite3.Row object at 0x10d00b9d0>, <sqlite3.Row object at 0x10d00ba30>, <sqlite3.Row object at 0x10d00ba90>, <sqlite3.Row object at 0x10d00baf0>, <sqlite3.Row object at 0x10d00bb50>, <sqlite3.Row object at 0x10d00bbb0>, <sqlite3.Row object at 0x10d00bc10>, <sqlite3.Row object at 0x10d00bc70>, <sqlite3.Row object at 0x10d00bcd0>, <sqlite3.Row object at 0x10d00bd30>, <sqlite3.Row object at 0x10d00bd90>, <sqlite3.Row object at 0x10d00bdf0>, <sqlite3.Row object at 0x10d00be50>, <sqlite3.Row object at 0x10d00beb0>, <sqlite3.Row object at 0x10d00bf10>, <sqlite3.Row object at 0x10d00bf70>, <sqlite3.Row object at 0x10d00bfd0>, <sqlite3.Row object at 0x10d00e070>, <sqlite3.Row object at 0x10d00e0d0>, <sqlite3.Row object at 0x10d00e130>, <sqlite3.Row object at 0x10d00e190>, <sqlite3.Row object at 0x10d00e1f0>, <sqlite3.Row object at 0x10d00e250>, <sqlite3.Row object at 0x10d00e2b0>, <sqlite3.Row object at 0x10d00e310>, <sqlite3.Row object at 0x10d00e370>, <sqlite3.Row object at 0x10d00e3d0>, <sqlite3.Row object at 0x10d00e430>, <sqlite3.Row object at 0x10d00e490>, <sqlite3.Row object at 0x10d00e4f0>, <sqlite3.Row object at 0x10d00e550>, <sqlite3.Row object at 0x10d00e5b0>, <sqlite3.Row object at 0x10d00e610>, <sqlite3.Row object at 0x10d00e670>, <sqlite3.Row object at 0x10d00e6d0>, <sqlite3.Row object at 0x10d00e730>, <sqlite3.Row object at 0x10d00e790>, <sqlite3.Row object at 0x10d00e7f0>, <sqlite3.Row object at 0x10d00e850>, <sqlite3.Row object at 0x10d00e8b0>, <sqlite3.Row object at 0x10d00e910>, <sqlite3.Row object at 0x10d00e970>, <sqlite3.Row object at 0x10d00e9d0>, <sqlite3.Row object at 0x10d00ea30>, <sqlite3.Row object at 0x10d00ea90>, <sqlite3.Row object at 0x10d00eaf0>, <sqlite3.Row object at 0x10d00eb50>, <sqlite3.Row object at 0x10d00ebb0>, <sqlite3.Row object at 0x10d00ec10>, <sqlite3.Row object at 0x10d00ec70>, <sqlite3.Row object at 0x10d00ecd0>, <sqlite3.Row object at 0x10d00ed30>, <sqlite3.Row object at 0x10d00ed90>, <sqlite3.Row object at 0x10d00edf0>, <sqlite3.Row object at 0x10d00ee50>, <sqlite3.Row object at 0x10d00eeb0>, <sqlite3.Row object at 0x10d00ef10>, <sqlite3.Row object at 0x10d00ef70>, <sqlite3.Row object at 0x10d00efd0>, <sqlite3.Row object at 0x10d011070>, <sqlite3.Row object at 0x10d0110d0>, <sqlite3.Row object at 0x10d011130>, <sqlite3.Row object at 0x10d011190>, <sqlite3.Row object at 0x10d0111f0>, <sqlite3.Row object at 0x10d011250>, <sqlite3.Row object at 0x10d0112b0>, <sqlite3.Row object at 0x10d011310>, <sqlite3.Row object at 0x10d011370>, <sqlite3.Row object at 0x10d0113d0>, <sqlite3.Row object at 0x10d011430>, <sqlite3.Row object at 0x10d011490>, <sqlite3.Row object at 0x10d0114f0>, <sqlite3.Row object at 0x10d011550>, <sqlite3.Row object at 0x10d0115b0>, <sqlite3.Row object at 0x10d011610>, <sqlite3.Row object at 0x10d011670>, <sqlite3.Row object at 0x10d0116d0>, <sqlite3.Row object at 0x10d011730>, <sqlite3.Row object at 0x10d011790>, <sqlite3.Row object at 0x10d0117f0>, <sqlite3.Row object at 0x10d011850>, <sqlite3.Row object at 0x10d0118b0>, <sqlite3.Row object at 0x10d011910>, <sqlite3.Row object at 0x10d011970>, <sqlite3.Row object at 0x10d0119d0>, <sqlite3.Row object at 0x10d011a30>, <sqlite3.Row object at 0x10d011a90>, <sqlite3.Row object at 0x10d011af0>, <sqlite3.Row object at 0x10d011b50>, <sqlite3.Row object at 0x10d011bb0>, <sqlite3.Row object at 0x10d011c10>, <sqlite3.Row object at 0x10d011c70>, <sqlite3.Row object at 0x10d011cd0>, <sqlite3.Row object at 0x10d011d30>, <sqlite3.Row object at 0x10d011d90>, <sqlite3.Row object at 0x10d011df0>, <sqlite3.Row object at 0x10d011e50>, <sqlite3.Row object at 0x10d011eb0>, <sqlite3.Row object at 0x10d011f10>, <sqlite3.Row object at 0x10d011f70>, <sqlite3.Row object at 0x10d011fd0>, <sqlite3.Row object at 0x10d014070>, <sqlite3.Row object at 0x10d0140d0>, <sqlite3.Row object at 0x10d014130>, <sqlite3.Row object at 0x10d014190>, <sqlite3.Row object at 0x10d0141f0>, <sqlite3.Row object at 0x10d014250>, <sqlite3.Row object at 0x10d0142b0>, <sqlite3.Row object at 0x10d014310>, <sqlite3.Row object at 0x10d014370>, <sqlite3.Row object at 0x10d0143d0>, <sqlite3.Row object at 0x10d014430>, <sqlite3.Row object at 0x10d014490>, <sqlite3.Row object at 0x10d0144f0>, <sqlite3.Row object at 0x10d014550>, <sqlite3.Row object at 0x10d0145b0>, <sqlite3.Row object at 0x10d014610>, <sqlite3.Row object at 0x10d014670>, <sqlite3.Row object at 0x10d0146d0>, <sqlite3.Row object at 0x10d014730>, <sqlite3.Row object at 0x10d014790>, <sqlite3.Row object at 0x10d0147f0>, <sqlite3.Row object at 0x10d014850>, <sqlite3.Row object at 0x10d0148b0>, <sqlite3.Row object at 0x10d014910>, <sqlite3.Row object at 0x10d014970>, <sqlite3.Row object at 0x10d0149d0>, <sqlite3.Row object at 0x10d014a30>, <sqlite3.Row object at 0x10d014a90>, <sqlite3.Row object at 0x10d014af0>, <sqlite3.Row object at 0x10d014b50>, <sqlite3.Row object at 0x10d014bb0>, <sqlite3.Row object at 0x10d014c10>, <sqlite3.Row object at 0x10d014c70>, <sqlite3.Row object at 0x10d014cd0>, <sqlite3.Row object at 0x10d014d30>, <sqlite3.Row object at 0x10d014d90>, <sqlite3.Row object at 0x10d014df0>, <sqlite3.Row object at 0x10d014e50>, <sqlite3.Row object at 0x10d014eb0>, <sqlite3.Row object at 0x10d014f10>, <sqlite3.Row object at 0x10d014f70>, <sqlite3.Row object at 0x10d014fd0>, <sqlite3.Row object at 0x10d018070>, <sqlite3.Row object at 0x10d0180d0>, <sqlite3.Row object at 0x10d018130>, <sqlite3.Row object at 0x10d018190>, <sqlite3.Row object at 0x10d0181f0>, <sqlite3.Row object at 0x10d018250>, <sqlite3.Row object at 0x10d0182b0>, <sqlite3.Row object at 0x10d018310>, <sqlite3.Row object at 0x10d018370>, <sqlite3.Row object at 0x10d0183d0>, <sqlite3.Row object at 0x10d018430>, <sqlite3.Row object at 0x10d018490>, <sqlite3.Row object at 0x10d0184f0>, <sqlite3.Row object at 0x10d018550>, <sqlite3.Row object at 0x10d0185b0>, <sqlite3.Row object at 0x10d018610>, <sqlite3.Row object at 0x10d018670>, <sqlite3.Row object at 0x10d0186d0>, <sqlite3.Row object at 0x10d018730>, <sqlite3.Row object at 0x10d018790>, <sqlite3.Row object at 0x10d0187f0>, <sqlite3.Row object at 0x10d018850>, <sqlite3.Row object at 0x10d0188b0>, <sqlite3.Row object at 0x10d018910>, <sqlite3.Row object at 0x10d018970>, <sqlite3.Row object at 0x10d0189d0>, <sqlite3.Row object at 0x10d018a30>, <sqlite3.Row object at 0x10d018a90>, <sqlite3.Row object at 0x10d018af0>, <sqlite3.Row object at 0x10d018b50>, <sqlite3.Row object at 0x10d018bb0>, <sqlite3.Row object at 0x10d018c10>, <sqlite3.Row object at 0x10d018c70>, <sqlite3.Row object at 0x10d018cd0>, <sqlite3.Row object at 0x10d018d30>, <sqlite3.Row object at 0x10d018d90>, <sqlite3.Row object at 0x10d018df0>, <sqlite3.Row object at 0x10d018e50>, <sqlite3.Row object at 0x10d018eb0>, <sqlite3.Row object at 0x10d018f10>, <sqlite3.Row object at 0x10d018f70>, <sqlite3.Row object at 0x10d018fd0>, <sqlite3.Row object at 0x10d01c070>, <sqlite3.Row object at 0x10d01c0d0>, <sqlite3.Row object at 0x10d01c130>, <sqlite3.Row object at 0x10d01c190>, <sqlite3.Row object at 0x10d01c1f0>, <sqlite3.Row object at 0x10d01c250>, <sqlite3.Row object at 0x10d01c2b0>, <sqlite3.Row object at 0x10d01c310>, <sqlite3.Row object at 0x10d01c370>, <sqlite3.Row object at 0x10d01c3d0>, <sqlite3.Row object at 0x10d01c430>, <sqlite3.Row object at 0x10d01c490>, <sqlite3.Row object at 0x10d01c4f0>, <sqlite3.Row object at 0x10d01c550>, <sqlite3.Row object at 0x10d01c5b0>, <sqlite3.Row object at 0x10d01c610>, <sqlite3.Row object at 0x10d01c670>, <sqlite3.Row object at 0x10d01c6d0>, <sqlite3.Row object at 0x10d01c730>, <sqlite3.Row object at 0x10d01c790>, <sqlite3.Row object at 0x10d01c7f0>, <sqlite3.Row object at 0x10d01c850>, <sqlite3.Row object at 0x10d01c8b0>, <sqlite3.Row object at 0x10d01c910>, <sqlite3.Row object at 0x10d01c970>, <sqlite3.Row object at 0x10d01c9d0>, <sqlite3.Row object at 0x10d01ca30>, <sqlite3.Row object at 0x10d01ca90>, <sqlite3.Row object at 0x10d01caf0>, <sqlite3.Row object at 0x10d01cb50>, <sqlite3.Row object at 0x10d01cbb0>, <sqlite3.Row object at 0x10d01cc10>, <sqlite3.Row object at 0x10d01cc70>, <sqlite3.Row object at 0x10d01ccd0>, <sqlite3.Row object at 0x10d01cd30>, <sqlite3.Row object at 0x10d01cd90>, <sqlite3.Row object at 0x10d01cdf0>, <sqlite3.Row object at 0x10d01ce50>, <sqlite3.Row object at 0x10d01ceb0>, <sqlite3.Row object at 0x10d01cf10>, <sqlite3.Row object at 0x10d01cf70>, <sqlite3.Row object at 0x10d01cfd0>, <sqlite3.Row object at 0x10d0200b0>, <sqlite3.Row object at 0x10d020130>, <sqlite3.Row object at 0x10d0201d0>, <sqlite3.Row object at 0x10d020250>, <sqlite3.Row object at 0x10d0202f0>, <sqlite3.Row object at 0x10d020370>, <sqlite3.Row object at 0x10d020410>, <sqlite3.Row object at 0x10d020490>, <sqlite3.Row object at 0x10d020530>, <sqlite3.Row object at 0x10d0205b0>, <sqlite3.Row object at 0x10d020650>, <sqlite3.Row object at 0x10d0206d0>, <sqlite3.Row object at 0x10d020770>, <sqlite3.Row object at 0x10d0207f0>, <sqlite3.Row object at 0x10d020890>, <sqlite3.Row object at 0x10d020910>, <sqlite3.Row object at 0x10d0209b0>, <sqlite3.Row object at 0x10d020a30>, <sqlite3.Row object at 0x10d020ad0>, <sqlite3.Row object at 0x10d020b50>, <sqlite3.Row object at 0x10d020bf0>, <sqlite3.Row object at 0x10d020c70>, <sqlite3.Row object at 0x10d020d10>, <sqlite3.Row object at 0x10d020d90>, <sqlite3.Row object at 0x10d020e30>, <sqlite3.Row object at 0x10d020eb0>, <sqlite3.Row object at 0x10d020f50>, <sqlite3.Row object at 0x10d020fd0>, <sqlite3.Row object at 0x10d0200f0>, <sqlite3.Row object at 0x10d020210>, <sqlite3.Row object at 0x10d020330>, <sqlite3.Row object at 0x10d020450>, <sqlite3.Row object at 0x10d020570>, <sqlite3.Row object at 0x10d020690>, <sqlite3.Row object at 0x10d0207b0>, <sqlite3.Row object at 0x10d0208d0>, <sqlite3.Row object at 0x10d0209f0>, <sqlite3.Row object at 0x10d020b10>, <sqlite3.Row object at 0x10d020c30>, <sqlite3.Row object at 0x10d020d50>, <sqlite3.Row object at 0x10d020e70>, <sqlite3.Row object at 0x10d020f90>, <sqlite3.Row object at 0x10d0240b0>, <sqlite3.Row object at 0x10d024130>, <sqlite3.Row object at 0x10d0241d0>, <sqlite3.Row object at 0x10d024250>, <sqlite3.Row object at 0x10d0242f0>, <sqlite3.Row object at 0x10d024370>, <sqlite3.Row object at 0x10d024410>, <sqlite3.Row object at 0x10d024490>, <sqlite3.Row object at 0x10d024530>, <sqlite3.Row object at 0x10d0245b0>, <sqlite3.Row object at 0x10d024650>, <sqlite3.Row object at 0x10d0246d0>, <sqlite3.Row object at 0x10d024770>, <sqlite3.Row object at 0x10d0247f0>, <sqlite3.Row object at 0x10d024890>, <sqlite3.Row object at 0x10d024910>, <sqlite3.Row object at 0x10d0249b0>, <sqlite3.Row object at 0x10d024a30>, <sqlite3.Row object at 0x10d024ad0>, <sqlite3.Row object at 0x10d024b50>, <sqlite3.Row object at 0x10d024bf0>, <sqlite3.Row object at 0x10d024c70>, <sqlite3.Row object at 0x10d024d10>, <sqlite3.Row object at 0x10d024d90>, <sqlite3.Row object at 0x10d024e30>, <sqlite3.Row object at 0x10d024eb0>, <sqlite3.Row object at 0x10d024f50>, <sqlite3.Row object at 0x10d024fd0>, <sqlite3.Row object at 0x10d0240f0>, <sqlite3.Row object at 0x10d024210>, <sqlite3.Row object at 0x10d024330>, <sqlite3.Row object at 0x10d024450>, <sqlite3.Row object at 0x10d024570>, <sqlite3.Row object at 0x10d024690>, <sqlite3.Row object at 0x10d0247b0>, <sqlite3.Row object at 0x10d0248d0>, <sqlite3.Row object at 0x10d0249f0>, <sqlite3.Row object at 0x10d024b10>, <sqlite3.Row object at 0x10d024c30>, <sqlite3.Row object at 0x10d024d50>, <sqlite3.Row object at 0x10d024e70>, <sqlite3.Row object at 0x10d024f90>, <sqlite3.Row object at 0x10d029070>, <sqlite3.Row object at 0x10d0290d0>, <sqlite3.Row object at 0x10d029130>, <sqlite3.Row object at 0x10d029190>, <sqlite3.Row object at 0x10d0291f0>, <sqlite3.Row object at 0x10d029250>, <sqlite3.Row object at 0x10d0292b0>, <sqlite3.Row object at 0x10d029310>, <sqlite3.Row object at 0x10d029370>, <sqlite3.Row object at 0x10d0293d0>, <sqlite3.Row object at 0x10d029430>, <sqlite3.Row object at 0x10d029490>, <sqlite3.Row object at 0x10d0294f0>, <sqlite3.Row object at 0x10d029550>, <sqlite3.Row object at 0x10d0295b0>, <sqlite3.Row object at 0x10d029610>, <sqlite3.Row object at 0x10d029670>, <sqlite3.Row object at 0x10d0296d0>, <sqlite3.Row object at 0x10d029730>, <sqlite3.Row object at 0x10d029790>, <sqlite3.Row object at 0x10d0297f0>, <sqlite3.Row object at 0x10d029850>, <sqlite3.Row object at 0x10d0298b0>, <sqlite3.Row object at 0x10d029910>, <sqlite3.Row object at 0x10d029970>, <sqlite3.Row object at 0x10d0299d0>, <sqlite3.Row object at 0x10d029a30>, <sqlite3.Row object at 0x10d029a90>, <sqlite3.Row object at 0x10d029af0>, <sqlite3.Row object at 0x10d029b50>, <sqlite3.Row object at 0x10d029bb0>, <sqlite3.Row object at 0x10d029c10>, <sqlite3.Row object at 0x10d029c70>, <sqlite3.Row object at 0x10d029cd0>, <sqlite3.Row object at 0x10d029d30>, <sqlite3.Row object at 0x10d029d90>, <sqlite3.Row object at 0x10d029df0>, <sqlite3.Row object at 0x10d029e50>, <sqlite3.Row object at 0x10d029eb0>, <sqlite3.Row object at 0x10d029f10>, <sqlite3.Row object at 0x10d029f70>, <sqlite3.Row object at 0x10d029fd0>, <sqlite3.Row object at 0x10d02d070>, <sqlite3.Row object at 0x10d02d0d0>, <sqlite3.Row object at 0x10d02d130>, <sqlite3.Row object at 0x10d02d190>, <sqlite3.Row object at 0x10d02d1f0>, <sqlite3.Row object at 0x10d02d250>, <sqlite3.Row object at 0x10d02d2b0>, <sqlite3.Row object at 0x10d02d310>, <sqlite3.Row object at 0x10d02d370>, <sqlite3.Row object at 0x10d02d3d0>, <sqlite3.Row object at 0x10d02d430>, <sqlite3.Row object at 0x10d02d490>, <sqlite3.Row object at 0x10d02d4f0>, <sqlite3.Row object at 0x10d02d550>, <sqlite3.Row object at 0x10d02d5b0>, <sqlite3.Row object at 0x10d02d610>, <sqlite3.Row object at 0x10d02d670>, <sqlite3.Row object at 0x10d02d6d0>, <sqlite3.Row object at 0x10d02d730>, <sqlite3.Row object at 0x10d02d790>, <sqlite3.Row object at 0x10d02d7f0>, <sqlite3.Row object at 0x10d02d850>, <sqlite3.Row object at 0x10d02d8b0>, <sqlite3.Row object at 0x10d02d910>, <sqlite3.Row object at 0x10d02d970>, <sqlite3.Row object at 0x10d02d9d0>, <sqlite3.Row object at 0x10d02da30>, <sqlite3.Row object at 0x10d02da90>, <sqlite3.Row object at 0x10d02daf0>, <sqlite3.Row object at 0x10d02db50>, <sqlite3.Row object at 0x10d02dbb0>, <sqlite3.Row object at 0x10d02dc10>, <sqlite3.Row object at 0x10d02dc70>, <sqlite3.Row object at 0x10d02dcd0>, <sqlite3.Row object at 0x10d02dd30>, <sqlite3.Row object at 0x10d02dd90>, <sqlite3.Row object at 0x10d02ddf0>, <sqlite3.Row object at 0x10d02de50>, <sqlite3.Row object at 0x10d02deb0>, <sqlite3.Row object at 0x10d02df10>, <sqlite3.Row object at 0x10d02df70>, <sqlite3.Row object at 0x10d02dfd0>, <sqlite3.Row object at 0x10d031070>, <sqlite3.Row object at 0x10d0310d0>, <sqlite3.Row object at 0x10d031130>, <sqlite3.Row object at 0x10d031190>, <sqlite3.Row object at 0x10d0311f0>, <sqlite3.Row object at 0x10d031250>, <sqlite3.Row object at 0x10d0312b0>, <sqlite3.Row object at 0x10d031310>, <sqlite3.Row object at 0x10d031370>, <sqlite3.Row object at 0x10d0313d0>, <sqlite3.Row object at 0x10d031430>, <sqlite3.Row object at 0x10d031490>, <sqlite3.Row object at 0x10d0314f0>, <sqlite3.Row object at 0x10d031550>, <sqlite3.Row object at 0x10d0315b0>, <sqlite3.Row object at 0x10d031610>, <sqlite3.Row object at 0x10d031670>, <sqlite3.Row object at 0x10d0316d0>, <sqlite3.Row object at 0x10d031730>, <sqlite3.Row object at 0x10d031790>, <sqlite3.Row object at 0x10d0317f0>, <sqlite3.Row object at 0x10d031850>, <sqlite3.Row object at 0x10d0318b0>, <sqlite3.Row object at 0x10d031910>, <sqlite3.Row object at 0x10d031970>, <sqlite3.Row object at 0x10d0319d0>, <sqlite3.Row object at 0x10d031a30>, <sqlite3.Row object at 0x10d031a90>, <sqlite3.Row object at 0x10d031af0>, <sqlite3.Row object at 0x10d031b50>, <sqlite3.Row object at 0x10d031bb0>, <sqlite3.Row object at 0x10d031c10>, <sqlite3.Row object at 0x10d031c70>, <sqlite3.Row object at 0x10d031cd0>, <sqlite3.Row object at 0x10d031d30>, <sqlite3.Row object at 0x10d031d90>, <sqlite3.Row object at 0x10d031df0>, <sqlite3.Row object at 0x10d031e50>, <sqlite3.Row object at 0x10d031eb0>, <sqlite3.Row object at 0x10d031f10>, <sqlite3.Row object at 0x10d031f70>, <sqlite3.Row object at 0x10d031fd0>, <sqlite3.Row object at 0x10d0340b0>, <sqlite3.Row object at 0x10d034130>, <sqlite3.Row object at 0x10d0341d0>, <sqlite3.Row object at 0x10d034250>, <sqlite3.Row object at 0x10d0342f0>, <sqlite3.Row object at 0x10d034370>, <sqlite3.Row object at 0x10d034410>, <sqlite3.Row object at 0x10d034490>, <sqlite3.Row object at 0x10d034530>, <sqlite3.Row object at 0x10d0345b0>, <sqlite3.Row object at 0x10d034650>, <sqlite3.Row object at 0x10d0346d0>, <sqlite3.Row object at 0x10d034770>, <sqlite3.Row object at 0x10d0347f0>, <sqlite3.Row object at 0x10d034890>, <sqlite3.Row object at 0x10d034910>, <sqlite3.Row object at 0x10d0349b0>, <sqlite3.Row object at 0x10d034a30>, <sqlite3.Row object at 0x10d034ad0>, <sqlite3.Row object at 0x10d034b50>, <sqlite3.Row object at 0x10d034bf0>, <sqlite3.Row object at 0x10d034c70>, <sqlite3.Row object at 0x10d034d10>, <sqlite3.Row object at 0x10d034d90>, <sqlite3.Row object at 0x10d034e30>, <sqlite3.Row object at 0x10d034ed0>, <sqlite3.Row object at 0x10d034f50>, <sqlite3.Row object at 0x10d034030>, <sqlite3.Row object at 0x10d034150>, <sqlite3.Row object at 0x10d034270>, <sqlite3.Row object at 0x10d034390>, <sqlite3.Row object at 0x10d0344b0>, <sqlite3.Row object at 0x10d0345d0>, <sqlite3.Row object at 0x10d0346f0>, <sqlite3.Row object at 0x10d034810>, <sqlite3.Row object at 0x10d034930>, <sqlite3.Row object at 0x10d034a50>, <sqlite3.Row object at 0x10d034b70>, <sqlite3.Row object at 0x10d034c90>, <sqlite3.Row object at 0x10d034db0>, <sqlite3.Row object at 0x10d034eb0>, <sqlite3.Row object at 0x10d034fd0>, <sqlite3.Row object at 0x10d007090>, <sqlite3.Row object at 0x10d007110>, <sqlite3.Row object at 0x10d0071b0>, <sqlite3.Row object at 0x10d007230>, <sqlite3.Row object at 0x10d0072d0>, <sqlite3.Row object at 0x10d007350>, <sqlite3.Row object at 0x10d0073f0>, <sqlite3.Row object at 0x10d007470>, <sqlite3.Row object at 0x10d007510>, <sqlite3.Row object at 0x10d007590>, <sqlite3.Row object at 0x10d007630>, <sqlite3.Row object at 0x10d0076b0>, <sqlite3.Row object at 0x10d007750>, <sqlite3.Row object at 0x10d0077d0>, <sqlite3.Row object at 0x10d007870>, <sqlite3.Row object at 0x10d0078f0>, <sqlite3.Row object at 0x10d007990>, <sqlite3.Row object at 0x10d007a10>, <sqlite3.Row object at 0x10d007ab0>, <sqlite3.Row object at 0x10d007b30>, <sqlite3.Row object at 0x10d007bd0>, <sqlite3.Row object at 0x10d007c50>, <sqlite3.Row object at 0x10d007cf0>, <sqlite3.Row object at 0x10d007d70>, <sqlite3.Row object at 0x10d007e10>, <sqlite3.Row object at 0x10d007e90>, <sqlite3.Row object at 0x10d007f30>, <sqlite3.Row object at 0x10d007fb0>, <sqlite3.Row object at 0x10d007130>, <sqlite3.Row object at 0x10d007250>, <sqlite3.Row object at 0x10d007370>, <sqlite3.Row object at 0x10d007490>, <sqlite3.Row object at 0x10d0075b0>, <sqlite3.Row object at 0x10d0076d0>, <sqlite3.Row object at 0x10d0077f0>, <sqlite3.Row object at 0x10d007910>, <sqlite3.Row object at 0x10d007a30>, <sqlite3.Row object at 0x10d007b50>, <sqlite3.Row object at 0x10d007c70>, <sqlite3.Row object at 0x10d007d90>, <sqlite3.Row object at 0x10d007eb0>, <sqlite3.Row object at 0x10d007fd0>, <sqlite3.Row object at 0x10d03c070>, <sqlite3.Row object at 0x10d03c0d0>, <sqlite3.Row object at 0x10d03c130>, <sqlite3.Row object at 0x10d03c190>, <sqlite3.Row object at 0x10d03c1f0>, <sqlite3.Row object at 0x10d03c250>, <sqlite3.Row object at 0x10d03c2b0>, <sqlite3.Row object at 0x10d03c310>, <sqlite3.Row object at 0x10d03c370>, <sqlite3.Row object at 0x10d03c3d0>, <sqlite3.Row object at 0x10d03c430>, <sqlite3.Row object at 0x10d03c490>, <sqlite3.Row object at 0x10d03c4f0>, <sqlite3.Row object at 0x10d03c550>, <sqlite3.Row object at 0x10d03c5b0>, <sqlite3.Row object at 0x10d03c610>, <sqlite3.Row object at 0x10d03c670>, <sqlite3.Row object at 0x10d03c6d0>, <sqlite3.Row object at 0x10d03c730>, <sqlite3.Row object at 0x10d03c790>, <sqlite3.Row object at 0x10d03c7f0>, <sqlite3.Row object at 0x10d03c850>, <sqlite3.Row object at 0x10d03c8b0>, <sqlite3.Row object at 0x10d03c910>, <sqlite3.Row object at 0x10d03c970>, <sqlite3.Row object at 0x10d03c9d0>, <sqlite3.Row object at 0x10d03ca30>, <sqlite3.Row object at 0x10d03ca90>, <sqlite3.Row object at 0x10d03caf0>, <sqlite3.Row object at 0x10d03cb50>, <sqlite3.Row object at 0x10d03cbb0>, <sqlite3.Row object at 0x10d03cc10>, <sqlite3.Row object at 0x10d03cc70>, <sqlite3.Row object at 0x10d03ccd0>, <sqlite3.Row object at 0x10d03cd30>, <sqlite3.Row object at 0x10d03cd90>, <sqlite3.Row object at 0x10d03cdf0>, <sqlite3.Row object at 0x10d03ce50>, <sqlite3.Row object at 0x10d03ceb0>, <sqlite3.Row object at 0x10d03cf10>, <sqlite3.Row object at 0x10d03cf70>, <sqlite3.Row object at 0x10d03cfd0>, <sqlite3.Row object at 0x10d088070>, <sqlite3.Row object at 0x10d0880d0>, <sqlite3.Row object at 0x10d088130>, <sqlite3.Row object at 0x10d088190>, <sqlite3.Row object at 0x10d0881f0>, <sqlite3.Row object at 0x10d088250>, <sqlite3.Row object at 0x10d0882b0>, <sqlite3.Row object at 0x10d088310>, <sqlite3.Row object at 0x10d088370>, <sqlite3.Row object at 0x10d0883d0>, <sqlite3.Row object at 0x10d088430>, <sqlite3.Row object at 0x10d088490>, <sqlite3.Row object at 0x10d0884f0>, <sqlite3.Row object at 0x10d088550>, <sqlite3.Row object at 0x10d0885b0>, <sqlite3.Row object at 0x10d088610>, <sqlite3.Row object at 0x10d088670>, <sqlite3.Row object at 0x10d0886d0>, <sqlite3.Row object at 0x10d088730>, <sqlite3.Row object at 0x10d088790>, <sqlite3.Row object at 0x10d0887f0>, <sqlite3.Row object at 0x10d088850>, <sqlite3.Row object at 0x10d0888b0>, <sqlite3.Row object at 0x10d088910>, <sqlite3.Row object at 0x10d088970>, <sqlite3.Row object at 0x10d0889d0>, <sqlite3.Row object at 0x10d088a30>, <sqlite3.Row object at 0x10d088a90>, <sqlite3.Row object at 0x10d088af0>, <sqlite3.Row object at 0x10d088b50>, <sqlite3.Row object at 0x10d088bb0>, <sqlite3.Row object at 0x10d088c10>, <sqlite3.Row object at 0x10d088c70>, <sqlite3.Row object at 0x10d088cd0>, <sqlite3.Row object at 0x10d088d30>, <sqlite3.Row object at 0x10d088d90>, <sqlite3.Row object at 0x10d088df0>, <sqlite3.Row object at 0x10d088e50>, <sqlite3.Row object at 0x10d088eb0>, <sqlite3.Row object at 0x10d088f10>, <sqlite3.Row object at 0x10d088f70>, <sqlite3.Row object at 0x10d088fd0>, <sqlite3.Row object at 0x10d08b070>, <sqlite3.Row object at 0x10d08b0d0>, <sqlite3.Row object at 0x10d08b130>, <sqlite3.Row object at 0x10d08b190>, <sqlite3.Row object at 0x10d08b1f0>, <sqlite3.Row object at 0x10d08b250>, <sqlite3.Row object at 0x10d08b2b0>, <sqlite3.Row object at 0x10d08b310>, <sqlite3.Row object at 0x10d08b370>, <sqlite3.Row object at 0x10d08b3d0>, <sqlite3.Row object at 0x10d08b430>, <sqlite3.Row object at 0x10d08b490>, <sqlite3.Row object at 0x10d08b4f0>, <sqlite3.Row object at 0x10d08b550>, <sqlite3.Row object at 0x10d08b5b0>, <sqlite3.Row object at 0x10d08b610>, <sqlite3.Row object at 0x10d08b670>, <sqlite3.Row object at 0x10d08b6d0>, <sqlite3.Row object at 0x10d08b730>, <sqlite3.Row object at 0x10d08b790>, <sqlite3.Row object at 0x10d08b7f0>, <sqlite3.Row object at 0x10d08b850>, <sqlite3.Row object at 0x10d08b8b0>, <sqlite3.Row object at 0x10d08b910>, <sqlite3.Row object at 0x10d08b970>, <sqlite3.Row object at 0x10d08b9d0>, <sqlite3.Row object at 0x10d08ba30>, <sqlite3.Row object at 0x10d08ba90>, <sqlite3.Row object at 0x10d08baf0>, <sqlite3.Row object at 0x10d08bb50>, <sqlite3.Row object at 0x10d08bbb0>, <sqlite3.Row object at 0x10d08bc10>, <sqlite3.Row object at 0x10d08bc70>, <sqlite3.Row object at 0x10d08bcd0>, <sqlite3.Row object at 0x10d08bd30>, <sqlite3.Row object at 0x10d08bd90>, <sqlite3.Row object at 0x10d08bdf0>, <sqlite3.Row object at 0x10d08be50>, <sqlite3.Row object at 0x10d08beb0>, <sqlite3.Row object at 0x10d08bf10>, <sqlite3.Row object at 0x10d08bf70>, <sqlite3.Row object at 0x10d08bfd0>, <sqlite3.Row object at 0x10d08e070>, <sqlite3.Row object at 0x10d08e0d0>, <sqlite3.Row object at 0x10d08e130>, <sqlite3.Row object at 0x10d08e190>, <sqlite3.Row object at 0x10d08e1f0>, <sqlite3.Row object at 0x10d08e250>, <sqlite3.Row object at 0x10d08e2b0>, <sqlite3.Row object at 0x10d08e310>, <sqlite3.Row object at 0x10d08e370>, <sqlite3.Row object at 0x10d08e3d0>, <sqlite3.Row object at 0x10d08e430>, <sqlite3.Row object at 0x10d08e490>, <sqlite3.Row object at 0x10d08e4f0>, <sqlite3.Row object at 0x10d08e550>, <sqlite3.Row object at 0x10d08e5b0>, <sqlite3.Row object at 0x10d08e610>, <sqlite3.Row object at 0x10d08e670>, <sqlite3.Row object at 0x10d08e6d0>, <sqlite3.Row object at 0x10d08e730>, <sqlite3.Row object at 0x10d08e790>, <sqlite3.Row object at 0x10d08e7f0>, <sqlite3.Row object at 0x10d08e850>, <sqlite3.Row object at 0x10d08e8b0>, <sqlite3.Row object at 0x10d08e910>, <sqlite3.Row object at 0x10d08e970>, <sqlite3.Row object at 0x10d08e9d0>, <sqlite3.Row object at 0x10d08ea30>, <sqlite3.Row object at 0x10d08ea90>, <sqlite3.Row object at 0x10d08eaf0>, <sqlite3.Row object at 0x10d08eb50>, <sqlite3.Row object at 0x10d08ebb0>, <sqlite3.Row object at 0x10d08ec10>, <sqlite3.Row object at 0x10d08ec70>, <sqlite3.Row object at 0x10d08ecd0>, <sqlite3.Row object at 0x10d08ed30>, <sqlite3.Row object at 0x10d08ed90>, <sqlite3.Row object at 0x10d08edf0>, <sqlite3.Row object at 0x10d08ee50>, <sqlite3.Row object at 0x10d08eeb0>, <sqlite3.Row object at 0x10d08ef10>, <sqlite3.Row object at 0x10d08ef70>, <sqlite3.Row object at 0x10d08efd0>, <sqlite3.Row object at 0x10d091070>, <sqlite3.Row object at 0x10d0910d0>, <sqlite3.Row object at 0x10d091130>, <sqlite3.Row object at 0x10d091190>, <sqlite3.Row object at 0x10d0911f0>, <sqlite3.Row object at 0x10d091250>, <sqlite3.Row object at 0x10d0912b0>, <sqlite3.Row object at 0x10d091310>, <sqlite3.Row object at 0x10d091370>, <sqlite3.Row object at 0x10d0913d0>, <sqlite3.Row object at 0x10d091430>, <sqlite3.Row object at 0x10d091490>, <sqlite3.Row object at 0x10d0914f0>, <sqlite3.Row object at 0x10d091550>, <sqlite3.Row object at 0x10d0915b0>, <sqlite3.Row object at 0x10d091610>, <sqlite3.Row object at 0x10d091670>, <sqlite3.Row object at 0x10d0916d0>, <sqlite3.Row object at 0x10d091730>, <sqlite3.Row object at 0x10d091790>, <sqlite3.Row object at 0x10d0917f0>, <sqlite3.Row object at 0x10d091850>, <sqlite3.Row object at 0x10d0918b0>, <sqlite3.Row object at 0x10d091910>, <sqlite3.Row object at 0x10d091970>, <sqlite3.Row object at 0x10d0919d0>, <sqlite3.Row object at 0x10d091a30>, <sqlite3.Row object at 0x10d091a90>, <sqlite3.Row object at 0x10d091af0>, <sqlite3.Row object at 0x10d091b50>, <sqlite3.Row object at 0x10d091bb0>, <sqlite3.Row object at 0x10d091c10>, <sqlite3.Row object at 0x10d091c70>, <sqlite3.Row object at 0x10d091cd0>, <sqlite3.Row object at 0x10d091d30>, <sqlite3.Row object at 0x10d091d90>, <sqlite3.Row object at 0x10d091df0>, <sqlite3.Row object at 0x10d091e50>, <sqlite3.Row object at 0x10d091eb0>, <sqlite3.Row object at 0x10d091f10>, <sqlite3.Row object at 0x10d091f70>, <sqlite3.Row object at 0x10d091fd0>, <sqlite3.Row object at 0x10d095070>, <sqlite3.Row object at 0x10d0950d0>, <sqlite3.Row object at 0x10d095130>, <sqlite3.Row object at 0x10d095190>, <sqlite3.Row object at 0x10d0951f0>, <sqlite3.Row object at 0x10d095250>, <sqlite3.Row object at 0x10d0952b0>, <sqlite3.Row object at 0x10d095310>, <sqlite3.Row object at 0x10d095370>, <sqlite3.Row object at 0x10d0953d0>, <sqlite3.Row object at 0x10d095430>, <sqlite3.Row object at 0x10d095490>, <sqlite3.Row object at 0x10d0954f0>, <sqlite3.Row object at 0x10d095550>, <sqlite3.Row object at 0x10d0955b0>, <sqlite3.Row object at 0x10d095610>, <sqlite3.Row object at 0x10d095670>, <sqlite3.Row object at 0x10d0956d0>, <sqlite3.Row object at 0x10d095730>, <sqlite3.Row object at 0x10d095790>, <sqlite3.Row object at 0x10d0957f0>, <sqlite3.Row object at 0x10d095850>, <sqlite3.Row object at 0x10d0958b0>, <sqlite3.Row object at 0x10d095910>, <sqlite3.Row object at 0x10d095970>, <sqlite3.Row object at 0x10d0959d0>, <sqlite3.Row object at 0x10d095a30>, <sqlite3.Row object at 0x10d095a90>, <sqlite3.Row object at 0x10d095af0>, <sqlite3.Row object at 0x10d095b50>, <sqlite3.Row object at 0x10d095bb0>, <sqlite3.Row object at 0x10d095c10>, <sqlite3.Row object at 0x10d095c70>, <sqlite3.Row object at 0x10d095cd0>, <sqlite3.Row object at 0x10d095d30>, <sqlite3.Row object at 0x10d095d90>, <sqlite3.Row object at 0x10d095df0>, <sqlite3.Row object at 0x10d095e50>, <sqlite3.Row object at 0x10d095eb0>, <sqlite3.Row object at 0x10d095f10>, <sqlite3.Row object at 0x10d095f70>, <sqlite3.Row object at 0x10d095fd0>, <sqlite3.Row object at 0x10d060070>, <sqlite3.Row object at 0x10d0600d0>, <sqlite3.Row object at 0x10d060130>, <sqlite3.Row object at 0x10d060190>, <sqlite3.Row object at 0x10d0601f0>, <sqlite3.Row object at 0x10d060250>, <sqlite3.Row object at 0x10d0602b0>, <sqlite3.Row object at 0x10d060310>, <sqlite3.Row object at 0x10d060370>, <sqlite3.Row object at 0x10d0603d0>, <sqlite3.Row object at 0x10d060430>, <sqlite3.Row object at 0x10d060490>, <sqlite3.Row object at 0x10d0604f0>, <sqlite3.Row object at 0x10d060550>, <sqlite3.Row object at 0x10d0605b0>, <sqlite3.Row object at 0x10d060610>, <sqlite3.Row object at 0x10d060670>, <sqlite3.Row object at 0x10d0606d0>, <sqlite3.Row object at 0x10d060730>, <sqlite3.Row object at 0x10d060790>, <sqlite3.Row object at 0x10d0607f0>, <sqlite3.Row object at 0x10d060850>, <sqlite3.Row object at 0x10d0608b0>, <sqlite3.Row object at 0x10d060910>, <sqlite3.Row object at 0x10d060970>, <sqlite3.Row object at 0x10d0609d0>, <sqlite3.Row object at 0x10d060a30>, <sqlite3.Row object at 0x10d060a90>, <sqlite3.Row object at 0x10d060af0>, <sqlite3.Row object at 0x10d060b50>, <sqlite3.Row object at 0x10d060bb0>, <sqlite3.Row object at 0x10d060c10>, <sqlite3.Row object at 0x10d060c70>, <sqlite3.Row object at 0x10d060cd0>, <sqlite3.Row object at 0x10d060d30>, <sqlite3.Row object at 0x10d060d90>, <sqlite3.Row object at 0x10d060df0>, <sqlite3.Row object at 0x10d060e50>, <sqlite3.Row object at 0x10d060eb0>, <sqlite3.Row object at 0x10d060f10>, <sqlite3.Row object at 0x10d060f70>, <sqlite3.Row object at 0x10d060fd0>, <sqlite3.Row object at 0x10d063090>, <sqlite3.Row object at 0x10d063110>, <sqlite3.Row object at 0x10d0631b0>, <sqlite3.Row object at 0x10d063230>, <sqlite3.Row object at 0x10d0632d0>, <sqlite3.Row object at 0x10d063350>, <sqlite3.Row object at 0x10d0633f0>, <sqlite3.Row object at 0x10d063470>, <sqlite3.Row object at 0x10d063510>, <sqlite3.Row object at 0x10d063590>, <sqlite3.Row object at 0x10d063630>, <sqlite3.Row object at 0x10d0636b0>, <sqlite3.Row object at 0x10d063750>, <sqlite3.Row object at 0x10d0637d0>, <sqlite3.Row object at 0x10d063870>, <sqlite3.Row object at 0x10d0638f0>, <sqlite3.Row object at 0x10d063990>, <sqlite3.Row object at 0x10d063a10>, <sqlite3.Row object at 0x10d063ab0>, <sqlite3.Row object at 0x10d063b30>, <sqlite3.Row object at 0x10d063bd0>, <sqlite3.Row object at 0x10d063c50>, <sqlite3.Row object at 0x10d063cf0>, <sqlite3.Row object at 0x10d063d70>, <sqlite3.Row object at 0x10d063e10>, <sqlite3.Row object at 0x10d063e90>, <sqlite3.Row object at 0x10d063f30>, <sqlite3.Row object at 0x10d063fb0>, <sqlite3.Row object at 0x10d063130>, <sqlite3.Row object at 0x10d063250>, <sqlite3.Row object at 0x10d063370>, <sqlite3.Row object at 0x10d063490>, <sqlite3.Row object at 0x10d0635b0>, <sqlite3.Row object at 0x10d0636d0>, <sqlite3.Row object at 0x10d0637f0>, <sqlite3.Row object at 0x10d063910>, <sqlite3.Row object at 0x10d063a30>, <sqlite3.Row object at 0x10d063b50>, <sqlite3.Row object at 0x10d063c70>, <sqlite3.Row object at 0x10d063d90>, <sqlite3.Row object at 0x10d063eb0>, <sqlite3.Row object at 0x10d063fd0>, <sqlite3.Row object at 0x10d067070>, <sqlite3.Row object at 0x10d0670d0>, <sqlite3.Row object at 0x10d067130>, <sqlite3.Row object at 0x10d067190>, <sqlite3.Row object at 0x10d0671f0>, <sqlite3.Row object at 0x10d067250>, <sqlite3.Row object at 0x10d0672b0>, <sqlite3.Row object at 0x10d067310>, <sqlite3.Row object at 0x10d067370>, <sqlite3.Row object at 0x10d0673d0>, <sqlite3.Row object at 0x10d067430>, <sqlite3.Row object at 0x10d067490>, <sqlite3.Row object at 0x10d0674f0>, <sqlite3.Row object at 0x10d067550>, <sqlite3.Row object at 0x10d0675b0>, <sqlite3.Row object at 0x10d067610>, <sqlite3.Row object at 0x10d067670>, <sqlite3.Row object at 0x10d0676d0>, <sqlite3.Row object at 0x10d067730>, <sqlite3.Row object at 0x10d067790>, <sqlite3.Row object at 0x10d0677f0>, <sqlite3.Row object at 0x10d067850>, <sqlite3.Row object at 0x10d0678b0>, <sqlite3.Row object at 0x10d067910>, <sqlite3.Row object at 0x10d067970>, <sqlite3.Row object at 0x10d0679d0>, <sqlite3.Row object at 0x10d067a30>, <sqlite3.Row object at 0x10d067a90>, <sqlite3.Row object at 0x10d067af0>, <sqlite3.Row object at 0x10d067b50>, <sqlite3.Row object at 0x10d067bb0>, <sqlite3.Row object at 0x10d067c10>]
2025-06-14 12:19:12,688 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 12:19:12,689 - app - INFO - Final Assistant Response (NL): Â¡Hola! AquÃ­ estÃ¡n todas las transacciones en tu cuenta. Â¿Hay algo especÃ­fico que te gustarÃ­a revisar?
2025-06-14 12:19:58,022 - app - INFO - User Query (es): si, espicificamente durante el cinco de mayo, holiday mexicano
2025-06-14 12:19:59,485 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 12:19:59,486 - app - INFO - Generated SQL Query: SELECT * FROM bank_transactions WHERE Date LIKE '2025-05-05%' OR Date LIKE '2026-05-05%' ORDER BY Date ASC;
2025-06-14 12:19:59,489 - app - INFO - Database connection established.
2025-06-14 12:19:59,493 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x108f15690>]
2025-06-14 12:20:00,758 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 12:20:00,759 - app - INFO - Final Assistant Response (NL): Â¡Hola! El cinco de mayo, tuviste una compra con tarjeta POS por â‚±5,625.06 en BDO Cebu.  Â¿Quieres revisar algo mÃ¡s de esa transacciÃ³n o de algÃºn otro dÃ­a?
2025-06-14 12:20:28,239 - app - INFO - User Query (es): ah si, recuerdo que compre algo durante este dia, recuerde ahora.
2025-06-14 12:20:29,595 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 12:20:29,596 - app - INFO - Generated SQL Query: SELECT * FROM bank_transactions WHERE Date BETWEEN '2025-05-05 00:00:00' AND '2025-05-05 23:59:59' ORDER BY Date ASC;
2025-06-14 12:20:29,597 - app - INFO - Database connection established.
2025-06-14 12:20:29,599 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x108f15770>]
2025-06-14 12:20:30,924 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 12:20:30,924 - app - INFO - Final Assistant Response (NL): Â¡Ah, sÃ­! El 5 de mayo de 2025, tuviste una compra con tarjeta POS por â‚±5,625.06 en BDO Cebu, lo que dejÃ³ tu saldo en â‚±1,493,672.17. Â¿Te gustarÃ­a que revisemos algo mÃ¡s de este dÃ­a o algÃºn otro perÃ­odo?
2025-06-14 12:21:04,693 - app - INFO - User Query (es): vale
2025-06-14 12:21:05,722 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 12:21:05,722 - app - INFO - Generated SQL Query: SELECT * FROM bank_transactions ORDER BY Date ASC;
2025-06-14 12:21:05,723 - app - INFO - Database connection established.
2025-06-14 12:21:05,726 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x108f15e70>, <sqlite3.Row object at 0x108f15770>, <sqlite3.Row object at 0x108f15370>, <sqlite3.Row object at 0x108f158d0>, <sqlite3.Row object at 0x108f15810>, <sqlite3.Row object at 0x108f151b0>, <sqlite3.Row object at 0x108f15730>, <sqlite3.Row object at 0x108f15150>, <sqlite3.Row object at 0x108f15510>, <sqlite3.Row object at 0x108f15f50>, <sqlite3.Row object at 0x108f15470>, <sqlite3.Row object at 0x10d085050>, <sqlite3.Row object at 0x10d0850b0>, <sqlite3.Row object at 0x10d085090>, <sqlite3.Row object at 0x10d0850f0>, <sqlite3.Row object at 0x10d085110>, <sqlite3.Row object at 0x10d085150>, <sqlite3.Row object at 0x10d0851b0>, <sqlite3.Row object at 0x10d085210>, <sqlite3.Row object at 0x10d085030>, <sqlite3.Row object at 0x10d085170>, <sqlite3.Row object at 0x10d0851d0>, <sqlite3.Row object at 0x10d085230>, <sqlite3.Row object at 0x10d085270>, <sqlite3.Row object at 0x10d085290>, <sqlite3.Row object at 0x10d0852d0>, <sqlite3.Row object at 0x10d0852f0>, <sqlite3.Row object at 0x10d085330>, <sqlite3.Row object at 0x10d085350>, <sqlite3.Row object at 0x10d085390>, <sqlite3.Row object at 0x10d0853b0>, <sqlite3.Row object at 0x10d0853f0>, <sqlite3.Row object at 0x10d085410>, <sqlite3.Row object at 0x10d085450>, <sqlite3.Row object at 0x10d085470>, <sqlite3.Row object at 0x10d0854b0>, <sqlite3.Row object at 0x10d0854d0>, <sqlite3.Row object at 0x10d085510>, <sqlite3.Row object at 0x10d085530>, <sqlite3.Row object at 0x10d085570>, <sqlite3.Row object at 0x10d085590>, <sqlite3.Row object at 0x10d0855d0>, <sqlite3.Row object at 0x10d0855f0>, <sqlite3.Row object at 0x10d085630>, <sqlite3.Row object at 0x10d085650>, <sqlite3.Row object at 0x10d085690>, <sqlite3.Row object at 0x10d0856b0>, <sqlite3.Row object at 0x10d0856f0>, <sqlite3.Row object at 0x10d085710>, <sqlite3.Row object at 0x10d0857b0>, <sqlite3.Row object at 0x10d085830>, <sqlite3.Row object at 0x10d0858d0>, <sqlite3.Row object at 0x10d085950>, <sqlite3.Row object at 0x10d0859f0>, <sqlite3.Row object at 0x10d085a70>, <sqlite3.Row object at 0x10d085b10>, <sqlite3.Row object at 0x10d085b90>, <sqlite3.Row object at 0x10d085cb0>, <sqlite3.Row object at 0x10d085e50>, <sqlite3.Row object at 0x10d0850d0>, <sqlite3.Row object at 0x10d0852b0>, <sqlite3.Row object at 0x10d085430>, <sqlite3.Row object at 0x10d085610>, <sqlite3.Row object at 0x10d085790>, <sqlite3.Row object at 0x10d085970>, <sqlite3.Row object at 0x10d085af0>, <sqlite3.Row object at 0x10d085c70>, <sqlite3.Row object at 0x10d085dd0>, <sqlite3.Row object at 0x10d085db0>, <sqlite3.Row object at 0x10d085ef0>, <sqlite3.Row object at 0x10d085f90>, <sqlite3.Row object at 0x10d085130>, <sqlite3.Row object at 0x10d085490>, <sqlite3.Row object at 0x10d0857f0>, <sqlite3.Row object at 0x10d085b50>, <sqlite3.Row object at 0x10d085d70>, <sqlite3.Row object at 0x10d085f10>, <sqlite3.Row object at 0x10d063190>, <sqlite3.Row object at 0x10d063050>, <sqlite3.Row object at 0x10d063150>, <sqlite3.Row object at 0x10d063210>, <sqlite3.Row object at 0x10d0632f0>, <sqlite3.Row object at 0x10d0633b0>, <sqlite3.Row object at 0x10d0634b0>, <sqlite3.Row object at 0x10d063570>, <sqlite3.Row object at 0x10d063650>, <sqlite3.Row object at 0x10d063710>, <sqlite3.Row object at 0x10d063810>, <sqlite3.Row object at 0x10d0638d0>, <sqlite3.Row object at 0x10d0639b0>, <sqlite3.Row object at 0x10d063a70>, <sqlite3.Row object at 0x10d063b70>, <sqlite3.Row object at 0x10d063c30>, <sqlite3.Row object at 0x10d063d10>, <sqlite3.Row object at 0x10d063dd0>, <sqlite3.Row object at 0x10d063ed0>, <sqlite3.Row object at 0x10d063f90>, <sqlite3.Row object at 0x10d063110>, <sqlite3.Row object at 0x10d0632d0>, <sqlite3.Row object at 0x10d063470>, <sqlite3.Row object at 0x10d063630>, <sqlite3.Row object at 0x10d0637d0>, <sqlite3.Row object at 0x10d063990>, <sqlite3.Row object at 0x10d063b30>, <sqlite3.Row object at 0x10d063cf0>, <sqlite3.Row object at 0x10d063e90>, <sqlite3.Row object at 0x10d063130>, <sqlite3.Row object at 0x10d063490>, <sqlite3.Row object at 0x10d0637f0>, <sqlite3.Row object at 0x10d063b50>, <sqlite3.Row object at 0x10d063eb0>, <sqlite3.Row object at 0x10d081210>, <sqlite3.Row object at 0x10d081030>, <sqlite3.Row object at 0x10d081230>, <sqlite3.Row object at 0x10d081ab0>, <sqlite3.Row object at 0x10d081ad0>, <sqlite3.Row object at 0x10d081b90>, <sqlite3.Row object at 0x10d081c30>, <sqlite3.Row object at 0x10d081cb0>, <sqlite3.Row object at 0x10d081d50>, <sqlite3.Row object at 0x10d081dd0>, <sqlite3.Row object at 0x10d081e70>, <sqlite3.Row object at 0x10d081ef0>, <sqlite3.Row object at 0x10d081f90>, <sqlite3.Row object at 0x10d0813d0>, <sqlite3.Row object at 0x10d0815b0>, <sqlite3.Row object at 0x10d081730>, <sqlite3.Row object at 0x10d081910>, <sqlite3.Row object at 0x10d081a90>, <sqlite3.Row object at 0x10d081c70>, <sqlite3.Row object at 0x10d081df0>, <sqlite3.Row object at 0x10d081fd0>, <sqlite3.Row object at 0x10d081330>, <sqlite3.Row object at 0x10d0812f0>, <sqlite3.Row object at 0x10d081410>, <sqlite3.Row object at 0x10d0812d0>, <sqlite3.Row object at 0x10d0814d0>, <sqlite3.Row object at 0x10d081570>, <sqlite3.Row object at 0x10d0815f0>, <sqlite3.Row object at 0x10d081690>, <sqlite3.Row object at 0x10d081710>, <sqlite3.Row object at 0x10d0817b0>, <sqlite3.Row object at 0x10d081830>, <sqlite3.Row object at 0x10d0818d0>, <sqlite3.Row object at 0x10d081950>, <sqlite3.Row object at 0x10d0819f0>, <sqlite3.Row object at 0x10d081130>, <sqlite3.Row object at 0x10d081250>, <sqlite3.Row object at 0x10d081430>, <sqlite3.Row object at 0x10d081790>, <sqlite3.Row object at 0x10d081af0>, <sqlite3.Row object at 0x10d081e50>, <sqlite3.Row object at 0x10d081270>, <sqlite3.Row object at 0x10d067070>, <sqlite3.Row object at 0x10d067190>, <sqlite3.Row object at 0x10d0672b0>, <sqlite3.Row object at 0x10d0673d0>, <sqlite3.Row object at 0x10d0674f0>, <sqlite3.Row object at 0x10d067610>, <sqlite3.Row object at 0x10d067730>, <sqlite3.Row object at 0x10d067850>, <sqlite3.Row object at 0x10d067970>, <sqlite3.Row object at 0x10d067a90>, <sqlite3.Row object at 0x10d067bb0>, <sqlite3.Row object at 0x10d067dd0>, <sqlite3.Row object at 0x10d067db0>, <sqlite3.Row object at 0x10d067ef0>, <sqlite3.Row object at 0x10d067e30>, <sqlite3.Row object at 0x10d067f10>, <sqlite3.Row object at 0x10d067f70>, <sqlite3.Row object at 0x10d067fd0>, <sqlite3.Row object at 0x10d027070>, <sqlite3.Row object at 0x10d0270d0>, <sqlite3.Row object at 0x10d027130>, <sqlite3.Row object at 0x10d027190>, <sqlite3.Row object at 0x10d0271f0>, <sqlite3.Row object at 0x10d027250>, <sqlite3.Row object at 0x10d0272b0>, <sqlite3.Row object at 0x10d027310>, <sqlite3.Row object at 0x10d027370>, <sqlite3.Row object at 0x10d0273d0>, <sqlite3.Row object at 0x10d027430>, <sqlite3.Row object at 0x10d027490>, <sqlite3.Row object at 0x10d0274f0>, <sqlite3.Row object at 0x10d027550>, <sqlite3.Row object at 0x10d0275b0>, <sqlite3.Row object at 0x10d027610>, <sqlite3.Row object at 0x10d027670>, <sqlite3.Row object at 0x10d0276d0>, <sqlite3.Row object at 0x10d027730>, <sqlite3.Row object at 0x10d027790>, <sqlite3.Row object at 0x10d0277f0>, <sqlite3.Row object at 0x10d027850>, <sqlite3.Row object at 0x10d0278b0>, <sqlite3.Row object at 0x10d027910>, <sqlite3.Row object at 0x10d027970>, <sqlite3.Row object at 0x10d0279d0>, <sqlite3.Row object at 0x10d027a30>, <sqlite3.Row object at 0x10d027a90>, <sqlite3.Row object at 0x10d027af0>, <sqlite3.Row object at 0x10d027b50>, <sqlite3.Row object at 0x10d027bb0>, <sqlite3.Row object at 0x10d027c10>, <sqlite3.Row object at 0x10d027c70>, <sqlite3.Row object at 0x10d027cd0>, <sqlite3.Row object at 0x10d027d30>, <sqlite3.Row object at 0x10d027d90>, <sqlite3.Row object at 0x10d027df0>, <sqlite3.Row object at 0x10d027e50>, <sqlite3.Row object at 0x10d027eb0>, <sqlite3.Row object at 0x10d027f10>, <sqlite3.Row object at 0x10d027f70>, <sqlite3.Row object at 0x10d027fd0>, <sqlite3.Row object at 0x10d020070>, <sqlite3.Row object at 0x10d0200d0>, <sqlite3.Row object at 0x10d020130>, <sqlite3.Row object at 0x10d020190>, <sqlite3.Row object at 0x10d0201f0>, <sqlite3.Row object at 0x10d020250>, <sqlite3.Row object at 0x10d0202b0>, <sqlite3.Row object at 0x10d020310>, <sqlite3.Row object at 0x10d020370>, <sqlite3.Row object at 0x10d0203d0>, <sqlite3.Row object at 0x10d020430>, <sqlite3.Row object at 0x10d020490>, <sqlite3.Row object at 0x10d0204f0>, <sqlite3.Row object at 0x10d020550>, <sqlite3.Row object at 0x10d0205b0>, <sqlite3.Row object at 0x10d020610>, <sqlite3.Row object at 0x10d020670>, <sqlite3.Row object at 0x10d0206d0>, <sqlite3.Row object at 0x10d020730>, <sqlite3.Row object at 0x10d020790>, <sqlite3.Row object at 0x10d0207f0>, <sqlite3.Row object at 0x10d020850>, <sqlite3.Row object at 0x10d0208b0>, <sqlite3.Row object at 0x10d020910>, <sqlite3.Row object at 0x10d020970>, <sqlite3.Row object at 0x10d0209d0>, <sqlite3.Row object at 0x10d020a30>, <sqlite3.Row object at 0x10d020a90>, <sqlite3.Row object at 0x10d020af0>, <sqlite3.Row object at 0x10d020b50>, <sqlite3.Row object at 0x10d020bb0>, <sqlite3.Row object at 0x10d020c10>, <sqlite3.Row object at 0x10d020c70>, <sqlite3.Row object at 0x10d020cd0>, <sqlite3.Row object at 0x10d020d30>, <sqlite3.Row object at 0x10d020d90>, <sqlite3.Row object at 0x10d020df0>, <sqlite3.Row object at 0x10d020e50>, <sqlite3.Row object at 0x10d020eb0>, <sqlite3.Row object at 0x10d020f10>, <sqlite3.Row object at 0x10d020f70>, <sqlite3.Row object at 0x10d020fd0>, <sqlite3.Row object at 0x10d016070>, <sqlite3.Row object at 0x10d0160d0>, <sqlite3.Row object at 0x10d016130>, <sqlite3.Row object at 0x10d016190>, <sqlite3.Row object at 0x10d0161f0>, <sqlite3.Row object at 0x10d016250>, <sqlite3.Row object at 0x10d0162b0>, <sqlite3.Row object at 0x10d016310>, <sqlite3.Row object at 0x10d016370>, <sqlite3.Row object at 0x10d0163d0>, <sqlite3.Row object at 0x10d016430>, <sqlite3.Row object at 0x10d016490>, <sqlite3.Row object at 0x10d0164f0>, <sqlite3.Row object at 0x10d016550>, <sqlite3.Row object at 0x10d0165b0>, <sqlite3.Row object at 0x10d016610>, <sqlite3.Row object at 0x10d016670>, <sqlite3.Row object at 0x10d0166d0>, <sqlite3.Row object at 0x10d016730>, <sqlite3.Row object at 0x10d016790>, <sqlite3.Row object at 0x10d0167f0>, <sqlite3.Row object at 0x10d016850>, <sqlite3.Row object at 0x10d0168b0>, <sqlite3.Row object at 0x10d016910>, <sqlite3.Row object at 0x10d016970>, <sqlite3.Row object at 0x10d0169d0>, <sqlite3.Row object at 0x10d016a30>, <sqlite3.Row object at 0x10d016a90>, <sqlite3.Row object at 0x10d016af0>, <sqlite3.Row object at 0x10d016b50>, <sqlite3.Row object at 0x10d016bb0>, <sqlite3.Row object at 0x10d016c10>, <sqlite3.Row object at 0x10d016c70>, <sqlite3.Row object at 0x10d016cd0>, <sqlite3.Row object at 0x10d016d30>, <sqlite3.Row object at 0x10d016d90>, <sqlite3.Row object at 0x10d016df0>, <sqlite3.Row object at 0x10d016e50>, <sqlite3.Row object at 0x10d016eb0>, <sqlite3.Row object at 0x10d016f10>, <sqlite3.Row object at 0x10d016f70>, <sqlite3.Row object at 0x10d016fd0>, <sqlite3.Row object at 0x10d011070>, <sqlite3.Row object at 0x10d0110d0>, <sqlite3.Row object at 0x10d011130>, <sqlite3.Row object at 0x10d011190>, <sqlite3.Row object at 0x10d0111f0>, <sqlite3.Row object at 0x10d011250>, <sqlite3.Row object at 0x10d0112b0>, <sqlite3.Row object at 0x10d011310>, <sqlite3.Row object at 0x10d011370>, <sqlite3.Row object at 0x10d0113d0>, <sqlite3.Row object at 0x10d011430>, <sqlite3.Row object at 0x10d011490>, <sqlite3.Row object at 0x10d0114f0>, <sqlite3.Row object at 0x10d011550>, <sqlite3.Row object at 0x10d0115b0>, <sqlite3.Row object at 0x10d011610>, <sqlite3.Row object at 0x10d011670>, <sqlite3.Row object at 0x10d0116d0>, <sqlite3.Row object at 0x10d011730>, <sqlite3.Row object at 0x10d011790>, <sqlite3.Row object at 0x10d0117f0>, <sqlite3.Row object at 0x10d011850>, <sqlite3.Row object at 0x10d0118b0>, <sqlite3.Row object at 0x10d011910>, <sqlite3.Row object at 0x10d011970>, <sqlite3.Row object at 0x10d0119d0>, <sqlite3.Row object at 0x10d011a30>, <sqlite3.Row object at 0x10d011a90>, <sqlite3.Row object at 0x10d011af0>, <sqlite3.Row object at 0x10d011b50>, <sqlite3.Row object at 0x10d011bb0>, <sqlite3.Row object at 0x10d011c10>, <sqlite3.Row object at 0x10d011c70>, <sqlite3.Row object at 0x10d011cd0>, <sqlite3.Row object at 0x10d011d30>, <sqlite3.Row object at 0x10d011d90>, <sqlite3.Row object at 0x10d011df0>, <sqlite3.Row object at 0x10d011e50>, <sqlite3.Row object at 0x10d011eb0>, <sqlite3.Row object at 0x10d011f10>, <sqlite3.Row object at 0x10d011f70>, <sqlite3.Row object at 0x10d011fd0>, <sqlite3.Row object at 0x10d00e070>, <sqlite3.Row object at 0x10d00e0d0>, <sqlite3.Row object at 0x10d00e130>, <sqlite3.Row object at 0x10d00e190>, <sqlite3.Row object at 0x10d00e1f0>, <sqlite3.Row object at 0x10d00e250>, <sqlite3.Row object at 0x10d00e2b0>, <sqlite3.Row object at 0x10d00e310>, <sqlite3.Row object at 0x10d00e370>, <sqlite3.Row object at 0x10d00e3d0>, <sqlite3.Row object at 0x10d00e430>, <sqlite3.Row object at 0x10d00e490>, <sqlite3.Row object at 0x10d00e4f0>, <sqlite3.Row object at 0x10d00e550>, <sqlite3.Row object at 0x10d00e5b0>, <sqlite3.Row object at 0x10d00e610>, <sqlite3.Row object at 0x10d00e670>, <sqlite3.Row object at 0x10d00e6d0>, <sqlite3.Row object at 0x10d00e730>, <sqlite3.Row object at 0x10d00e790>, <sqlite3.Row object at 0x10d00e7f0>, <sqlite3.Row object at 0x10d00e850>, <sqlite3.Row object at 0x10d00e8b0>, <sqlite3.Row object at 0x10d00e910>, <sqlite3.Row object at 0x10d00e970>, <sqlite3.Row object at 0x10d00e9d0>, <sqlite3.Row object at 0x10d00ea30>, <sqlite3.Row object at 0x10d00ea90>, <sqlite3.Row object at 0x10d00eaf0>, <sqlite3.Row object at 0x10d00eb50>, <sqlite3.Row object at 0x10d00ebb0>, <sqlite3.Row object at 0x10d00ec10>, <sqlite3.Row object at 0x10d00ec70>, <sqlite3.Row object at 0x10d00ecd0>, <sqlite3.Row object at 0x10d00ed30>, <sqlite3.Row object at 0x10d00ed90>, <sqlite3.Row object at 0x10d00edf0>, <sqlite3.Row object at 0x10d00ee50>, <sqlite3.Row object at 0x10d00eeb0>, <sqlite3.Row object at 0x10d00ef10>, <sqlite3.Row object at 0x10d00ef70>, <sqlite3.Row object at 0x10d00efd0>, <sqlite3.Row object at 0x10d02b070>, <sqlite3.Row object at 0x10d02b0d0>, <sqlite3.Row object at 0x10d02b130>, <sqlite3.Row object at 0x10d02b190>, <sqlite3.Row object at 0x10d02b1f0>, <sqlite3.Row object at 0x10d02b250>, <sqlite3.Row object at 0x10d02b2b0>, <sqlite3.Row object at 0x10d02b310>, <sqlite3.Row object at 0x10d02b370>, <sqlite3.Row object at 0x10d02b3d0>, <sqlite3.Row object at 0x10d02b430>, <sqlite3.Row object at 0x10d02b490>, <sqlite3.Row object at 0x10d02b4f0>, <sqlite3.Row object at 0x10d02b550>, <sqlite3.Row object at 0x10d02b5b0>, <sqlite3.Row object at 0x10d02b610>, <sqlite3.Row object at 0x10d02b670>, <sqlite3.Row object at 0x10d02b6d0>, <sqlite3.Row object at 0x10d02b730>, <sqlite3.Row object at 0x10d02b790>, <sqlite3.Row object at 0x10d02b7f0>, <sqlite3.Row object at 0x10d02b850>, <sqlite3.Row object at 0x10d02b8b0>, <sqlite3.Row object at 0x10d02b910>, <sqlite3.Row object at 0x10d02b970>, <sqlite3.Row object at 0x10d02b9d0>, <sqlite3.Row object at 0x10d02ba30>, <sqlite3.Row object at 0x10d02ba90>, <sqlite3.Row object at 0x10d02baf0>, <sqlite3.Row object at 0x10d02bb50>, <sqlite3.Row object at 0x10d02bbb0>, <sqlite3.Row object at 0x10d02bc10>, <sqlite3.Row object at 0x10d02bc70>, <sqlite3.Row object at 0x10d02bcd0>, <sqlite3.Row object at 0x10d02bd30>, <sqlite3.Row object at 0x10d02bd90>, <sqlite3.Row object at 0x10d02bdf0>, <sqlite3.Row object at 0x10d02be50>, <sqlite3.Row object at 0x10d02beb0>, <sqlite3.Row object at 0x10d02bf10>, <sqlite3.Row object at 0x10d02bf70>, <sqlite3.Row object at 0x10d02bfd0>, <sqlite3.Row object at 0x10d030070>, <sqlite3.Row object at 0x10d0300d0>, <sqlite3.Row object at 0x10d030130>, <sqlite3.Row object at 0x10d030190>, <sqlite3.Row object at 0x10d0301f0>, <sqlite3.Row object at 0x10d030250>, <sqlite3.Row object at 0x10d0302b0>, <sqlite3.Row object at 0x10d030310>, <sqlite3.Row object at 0x10d030370>, <sqlite3.Row object at 0x10d0303d0>, <sqlite3.Row object at 0x10d030430>, <sqlite3.Row object at 0x10d030490>, <sqlite3.Row object at 0x10d0304f0>, <sqlite3.Row object at 0x10d030550>, <sqlite3.Row object at 0x10d0305b0>, <sqlite3.Row object at 0x10d030610>, <sqlite3.Row object at 0x10d030670>, <sqlite3.Row object at 0x10d0306d0>, <sqlite3.Row object at 0x10d030730>, <sqlite3.Row object at 0x10d030790>, <sqlite3.Row object at 0x10d0307f0>, <sqlite3.Row object at 0x10d030850>, <sqlite3.Row object at 0x10d0308b0>, <sqlite3.Row object at 0x10d030910>, <sqlite3.Row object at 0x10d030970>, <sqlite3.Row object at 0x10d0309d0>, <sqlite3.Row object at 0x10d030a30>, <sqlite3.Row object at 0x10d030a90>, <sqlite3.Row object at 0x10d030af0>, <sqlite3.Row object at 0x10d030b50>, <sqlite3.Row object at 0x10d030bb0>, <sqlite3.Row object at 0x10d030c10>, <sqlite3.Row object at 0x10d030c70>, <sqlite3.Row object at 0x10d030cd0>, <sqlite3.Row object at 0x10d030d30>, <sqlite3.Row object at 0x10d030d90>, <sqlite3.Row object at 0x10d030df0>, <sqlite3.Row object at 0x10d030e50>, <sqlite3.Row object at 0x10d030eb0>, <sqlite3.Row object at 0x10d030f10>, <sqlite3.Row object at 0x10d030f70>, <sqlite3.Row object at 0x10d030fd0>, <sqlite3.Row object at 0x10d0340d0>, <sqlite3.Row object at 0x10d034190>, <sqlite3.Row object at 0x10d034290>, <sqlite3.Row object at 0x10d034350>, <sqlite3.Row object at 0x10d034430>, <sqlite3.Row object at 0x10d0344f0>, <sqlite3.Row object at 0x10d0345f0>, <sqlite3.Row object at 0x10d0346b0>, <sqlite3.Row object at 0x10d034790>, <sqlite3.Row object at 0x10d034850>, <sqlite3.Row object at 0x10d034950>, <sqlite3.Row object at 0x10d034a10>, <sqlite3.Row object at 0x10d034af0>, <sqlite3.Row object at 0x10d034bb0>, <sqlite3.Row object at 0x10d034cb0>, <sqlite3.Row object at 0x10d034d70>, <sqlite3.Row object at 0x10d034e50>, <sqlite3.Row object at 0x10d034f30>, <sqlite3.Row object at 0x10d034090>, <sqlite3.Row object at 0x10d034210>, <sqlite3.Row object at 0x10d0343f0>, <sqlite3.Row object at 0x10d034570>, <sqlite3.Row object at 0x10d034750>, <sqlite3.Row object at 0x10d0348d0>, <sqlite3.Row object at 0x10d034ab0>, <sqlite3.Row object at 0x10d034c30>, <sqlite3.Row object at 0x10d034e10>, <sqlite3.Row object at 0x10d034f70>, <sqlite3.Row object at 0x10d0341d0>, <sqlite3.Row object at 0x10d034370>, <sqlite3.Row object at 0x10d034530>, <sqlite3.Row object at 0x10d0346d0>, <sqlite3.Row object at 0x10d034890>, <sqlite3.Row object at 0x10d034a30>, <sqlite3.Row object at 0x10d034bf0>, <sqlite3.Row object at 0x10d034d90>, <sqlite3.Row object at 0x10d034f50>, <sqlite3.Row object at 0x10d034270>, <sqlite3.Row object at 0x10d0345d0>, <sqlite3.Row object at 0x10d034930>, <sqlite3.Row object at 0x10d034c90>, <sqlite3.Row object at 0x10d034fd0>, <sqlite3.Row object at 0x10d0070b0>, <sqlite3.Row object at 0x10d007170>, <sqlite3.Row object at 0x10d007270>, <sqlite3.Row object at 0x10d007330>, <sqlite3.Row object at 0x10d007410>, <sqlite3.Row object at 0x10d0074d0>, <sqlite3.Row object at 0x10d0075d0>, <sqlite3.Row object at 0x10d007690>, <sqlite3.Row object at 0x10d007770>, <sqlite3.Row object at 0x10d007830>, <sqlite3.Row object at 0x10d007930>, <sqlite3.Row object at 0x10d0079f0>, <sqlite3.Row object at 0x10d007ad0>, <sqlite3.Row object at 0x10d007b90>, <sqlite3.Row object at 0x10d007c90>, <sqlite3.Row object at 0x10d007d50>, <sqlite3.Row object at 0x10d007e30>, <sqlite3.Row object at 0x10d007ef0>, <sqlite3.Row object at 0x10d007070>, <sqlite3.Row object at 0x10d0071f0>, <sqlite3.Row object at 0x10d0073d0>, <sqlite3.Row object at 0x10d007550>, <sqlite3.Row object at 0x10d007730>, <sqlite3.Row object at 0x10d0078b0>, <sqlite3.Row object at 0x10d007a90>, <sqlite3.Row object at 0x10d007c10>, <sqlite3.Row object at 0x10d007df0>, <sqlite3.Row object at 0x10d007f70>, <sqlite3.Row object at 0x10d0071b0>, <sqlite3.Row object at 0x10d007350>, <sqlite3.Row object at 0x10d007510>, <sqlite3.Row object at 0x10d0076b0>, <sqlite3.Row object at 0x10d007870>, <sqlite3.Row object at 0x10d007a10>, <sqlite3.Row object at 0x10d007bd0>, <sqlite3.Row object at 0x10d007d70>, <sqlite3.Row object at 0x10d007f30>, <sqlite3.Row object at 0x10d007250>, <sqlite3.Row object at 0x10d0075b0>, <sqlite3.Row object at 0x10d007910>, <sqlite3.Row object at 0x10d007c70>, <sqlite3.Row object at 0x10d007fd0>, <sqlite3.Row object at 0x10d03a070>, <sqlite3.Row object at 0x10d03a0d0>, <sqlite3.Row object at 0x10d03a130>, <sqlite3.Row object at 0x10d03a190>, <sqlite3.Row object at 0x10d03a1f0>, <sqlite3.Row object at 0x10d03a250>, <sqlite3.Row object at 0x10d03a2b0>, <sqlite3.Row object at 0x10d03a310>, <sqlite3.Row object at 0x10d03a370>, <sqlite3.Row object at 0x10d03a3d0>, <sqlite3.Row object at 0x10d03a430>, <sqlite3.Row object at 0x10d03a490>, <sqlite3.Row object at 0x10d03a4f0>, <sqlite3.Row object at 0x10d03a550>, <sqlite3.Row object at 0x10d03a5b0>, <sqlite3.Row object at 0x10d03a610>, <sqlite3.Row object at 0x10d03a670>, <sqlite3.Row object at 0x10d03a6d0>, <sqlite3.Row object at 0x10d03a730>, <sqlite3.Row object at 0x10d03a790>, <sqlite3.Row object at 0x10d03a7f0>, <sqlite3.Row object at 0x10d03a850>, <sqlite3.Row object at 0x10d03a8b0>, <sqlite3.Row object at 0x10d03a910>, <sqlite3.Row object at 0x10d03a970>, <sqlite3.Row object at 0x10d03a9d0>, <sqlite3.Row object at 0x10d03aa30>, <sqlite3.Row object at 0x10d03aa90>, <sqlite3.Row object at 0x10d03aaf0>, <sqlite3.Row object at 0x10d03ab50>, <sqlite3.Row object at 0x10d03abb0>, <sqlite3.Row object at 0x10d03ac10>, <sqlite3.Row object at 0x10d03ac70>, <sqlite3.Row object at 0x10d03acd0>, <sqlite3.Row object at 0x10d03ad30>, <sqlite3.Row object at 0x10d03ad90>, <sqlite3.Row object at 0x10d03adf0>, <sqlite3.Row object at 0x10d03ae50>, <sqlite3.Row object at 0x10d03aeb0>, <sqlite3.Row object at 0x10d03af10>, <sqlite3.Row object at 0x10d03af70>, <sqlite3.Row object at 0x10d03afd0>, <sqlite3.Row object at 0x10d065070>, <sqlite3.Row object at 0x10d0650d0>, <sqlite3.Row object at 0x10d065130>, <sqlite3.Row object at 0x10d065190>, <sqlite3.Row object at 0x10d0651f0>, <sqlite3.Row object at 0x10d065250>, <sqlite3.Row object at 0x10d0652b0>, <sqlite3.Row object at 0x10d065310>, <sqlite3.Row object at 0x10d065370>, <sqlite3.Row object at 0x10d0653d0>, <sqlite3.Row object at 0x10d065430>, <sqlite3.Row object at 0x10d065490>, <sqlite3.Row object at 0x10d0654f0>, <sqlite3.Row object at 0x10d065550>, <sqlite3.Row object at 0x10d0655b0>, <sqlite3.Row object at 0x10d065610>, <sqlite3.Row object at 0x10d065670>, <sqlite3.Row object at 0x10d0656d0>, <sqlite3.Row object at 0x10d065730>, <sqlite3.Row object at 0x10d065790>, <sqlite3.Row object at 0x10d0657f0>, <sqlite3.Row object at 0x10d065850>, <sqlite3.Row object at 0x10d0658b0>, <sqlite3.Row object at 0x10d065910>, <sqlite3.Row object at 0x10d065970>, <sqlite3.Row object at 0x10d0659d0>, <sqlite3.Row object at 0x10d065a30>, <sqlite3.Row object at 0x10d065a90>, <sqlite3.Row object at 0x10d065af0>, <sqlite3.Row object at 0x10d065b50>, <sqlite3.Row object at 0x10d065bb0>, <sqlite3.Row object at 0x10d065c10>, <sqlite3.Row object at 0x10d065c70>, <sqlite3.Row object at 0x10d065cd0>, <sqlite3.Row object at 0x10d065d30>, <sqlite3.Row object at 0x10d065d90>, <sqlite3.Row object at 0x10d065df0>, <sqlite3.Row object at 0x10d065e50>, <sqlite3.Row object at 0x10d065eb0>, <sqlite3.Row object at 0x10d065f10>, <sqlite3.Row object at 0x10d065f70>, <sqlite3.Row object at 0x10d065fd0>, <sqlite3.Row object at 0x10d09a070>, <sqlite3.Row object at 0x10d09a0d0>, <sqlite3.Row object at 0x10d09a130>, <sqlite3.Row object at 0x10d09a190>, <sqlite3.Row object at 0x10d09a1f0>, <sqlite3.Row object at 0x10d09a250>, <sqlite3.Row object at 0x10d09a2b0>, <sqlite3.Row object at 0x10d09a310>, <sqlite3.Row object at 0x10d09a370>, <sqlite3.Row object at 0x10d09a3d0>, <sqlite3.Row object at 0x10d09a430>, <sqlite3.Row object at 0x10d09a490>, <sqlite3.Row object at 0x10d09a4f0>, <sqlite3.Row object at 0x10d09a550>, <sqlite3.Row object at 0x10d09a5b0>, <sqlite3.Row object at 0x10d09a610>, <sqlite3.Row object at 0x10d09a670>, <sqlite3.Row object at 0x10d09a6d0>, <sqlite3.Row object at 0x10d09a730>, <sqlite3.Row object at 0x10d09a790>, <sqlite3.Row object at 0x10d09a7f0>, <sqlite3.Row object at 0x10d09a850>, <sqlite3.Row object at 0x10d09a8b0>, <sqlite3.Row object at 0x10d09a910>, <sqlite3.Row object at 0x10d09a970>, <sqlite3.Row object at 0x10d09a9d0>, <sqlite3.Row object at 0x10d09aa30>, <sqlite3.Row object at 0x10d09aa90>, <sqlite3.Row object at 0x10d09aaf0>, <sqlite3.Row object at 0x10d09ab50>, <sqlite3.Row object at 0x10d09abb0>, <sqlite3.Row object at 0x10d09ac10>, <sqlite3.Row object at 0x10d09ac70>, <sqlite3.Row object at 0x10d09acd0>, <sqlite3.Row object at 0x10d09ad30>, <sqlite3.Row object at 0x10d09ad90>, <sqlite3.Row object at 0x10d09adf0>, <sqlite3.Row object at 0x10d09ae50>, <sqlite3.Row object at 0x10d09aeb0>, <sqlite3.Row object at 0x10d09af10>, <sqlite3.Row object at 0x10d09af70>, <sqlite3.Row object at 0x10d09afd0>, <sqlite3.Row object at 0x10d06c070>, <sqlite3.Row object at 0x10d06c0d0>, <sqlite3.Row object at 0x10d06c130>, <sqlite3.Row object at 0x10d06c190>, <sqlite3.Row object at 0x10d06c1f0>, <sqlite3.Row object at 0x10d06c250>, <sqlite3.Row object at 0x10d06c2b0>, <sqlite3.Row object at 0x10d06c310>, <sqlite3.Row object at 0x10d06c370>, <sqlite3.Row object at 0x10d06c3d0>, <sqlite3.Row object at 0x10d06c430>, <sqlite3.Row object at 0x10d06c490>, <sqlite3.Row object at 0x10d06c4f0>, <sqlite3.Row object at 0x10d06c550>, <sqlite3.Row object at 0x10d06c5b0>, <sqlite3.Row object at 0x10d06c610>, <sqlite3.Row object at 0x10d06c670>, <sqlite3.Row object at 0x10d06c6d0>, <sqlite3.Row object at 0x10d06c730>, <sqlite3.Row object at 0x10d06c790>, <sqlite3.Row object at 0x10d06c7f0>, <sqlite3.Row object at 0x10d06c850>, <sqlite3.Row object at 0x10d06c8b0>, <sqlite3.Row object at 0x10d06c910>, <sqlite3.Row object at 0x10d06c970>, <sqlite3.Row object at 0x10d06c9d0>, <sqlite3.Row object at 0x10d06ca30>, <sqlite3.Row object at 0x10d06ca90>, <sqlite3.Row object at 0x10d06caf0>, <sqlite3.Row object at 0x10d06cb50>, <sqlite3.Row object at 0x10d06cbb0>, <sqlite3.Row object at 0x10d06cc10>, <sqlite3.Row object at 0x10d06cc70>, <sqlite3.Row object at 0x10d06ccd0>, <sqlite3.Row object at 0x10d06cd30>, <sqlite3.Row object at 0x10d06cd90>, <sqlite3.Row object at 0x10d06cdf0>, <sqlite3.Row object at 0x10d06ce50>, <sqlite3.Row object at 0x10d06ceb0>, <sqlite3.Row object at 0x10d06cf10>, <sqlite3.Row object at 0x10d06cf70>, <sqlite3.Row object at 0x10d06cfd0>, <sqlite3.Row object at 0x10d09c070>, <sqlite3.Row object at 0x10d09c0d0>, <sqlite3.Row object at 0x10d09c130>, <sqlite3.Row object at 0x10d09c190>, <sqlite3.Row object at 0x10d09c1f0>, <sqlite3.Row object at 0x10d09c250>, <sqlite3.Row object at 0x10d09c2b0>, <sqlite3.Row object at 0x10d09c310>, <sqlite3.Row object at 0x10d09c370>, <sqlite3.Row object at 0x10d09c3d0>, <sqlite3.Row object at 0x10d09c430>, <sqlite3.Row object at 0x10d09c490>, <sqlite3.Row object at 0x10d09c4f0>, <sqlite3.Row object at 0x10d09c550>, <sqlite3.Row object at 0x10d09c5b0>, <sqlite3.Row object at 0x10d09c610>, <sqlite3.Row object at 0x10d09c670>, <sqlite3.Row object at 0x10d09c6d0>, <sqlite3.Row object at 0x10d09c730>, <sqlite3.Row object at 0x10d09c790>, <sqlite3.Row object at 0x10d09c7f0>, <sqlite3.Row object at 0x10d09c850>, <sqlite3.Row object at 0x10d09c8b0>, <sqlite3.Row object at 0x10d09c910>, <sqlite3.Row object at 0x10d09c970>, <sqlite3.Row object at 0x10d09c9d0>, <sqlite3.Row object at 0x10d09ca30>, <sqlite3.Row object at 0x10d09ca90>, <sqlite3.Row object at 0x10d09caf0>, <sqlite3.Row object at 0x10d09cb50>, <sqlite3.Row object at 0x10d09cbb0>, <sqlite3.Row object at 0x10d09cc10>, <sqlite3.Row object at 0x10d09cc70>, <sqlite3.Row object at 0x10d09ccd0>, <sqlite3.Row object at 0x10d09cd30>, <sqlite3.Row object at 0x10d09cd90>, <sqlite3.Row object at 0x10d09cdf0>, <sqlite3.Row object at 0x10d09ce50>, <sqlite3.Row object at 0x10d09ceb0>, <sqlite3.Row object at 0x10d09cf10>, <sqlite3.Row object at 0x10d09cf70>, <sqlite3.Row object at 0x10d09cfd0>, <sqlite3.Row object at 0x10d073070>, <sqlite3.Row object at 0x10d0730d0>, <sqlite3.Row object at 0x10d073130>, <sqlite3.Row object at 0x10d073190>, <sqlite3.Row object at 0x10d0731f0>, <sqlite3.Row object at 0x10d073250>, <sqlite3.Row object at 0x10d0732b0>, <sqlite3.Row object at 0x10d073310>, <sqlite3.Row object at 0x10d073370>, <sqlite3.Row object at 0x10d0733d0>, <sqlite3.Row object at 0x10d073430>, <sqlite3.Row object at 0x10d073490>, <sqlite3.Row object at 0x10d0734f0>, <sqlite3.Row object at 0x10d073550>, <sqlite3.Row object at 0x10d0735b0>, <sqlite3.Row object at 0x10d073610>, <sqlite3.Row object at 0x10d073670>, <sqlite3.Row object at 0x10d0736d0>, <sqlite3.Row object at 0x10d073730>, <sqlite3.Row object at 0x10d073790>, <sqlite3.Row object at 0x10d0737f0>, <sqlite3.Row object at 0x10d073850>, <sqlite3.Row object at 0x10d0738b0>, <sqlite3.Row object at 0x10d073910>, <sqlite3.Row object at 0x10d073970>, <sqlite3.Row object at 0x10d0739d0>, <sqlite3.Row object at 0x10d073a30>, <sqlite3.Row object at 0x10d073a90>, <sqlite3.Row object at 0x10d073af0>, <sqlite3.Row object at 0x10d073b50>, <sqlite3.Row object at 0x10d073bb0>, <sqlite3.Row object at 0x10d073c10>, <sqlite3.Row object at 0x10d073c70>, <sqlite3.Row object at 0x10d073cd0>, <sqlite3.Row object at 0x10d073d30>, <sqlite3.Row object at 0x10d073d90>, <sqlite3.Row object at 0x10d073df0>, <sqlite3.Row object at 0x10d073e50>, <sqlite3.Row object at 0x10d073eb0>, <sqlite3.Row object at 0x10d073f10>, <sqlite3.Row object at 0x10d073f70>, <sqlite3.Row object at 0x10d073fd0>, <sqlite3.Row object at 0x10d077070>, <sqlite3.Row object at 0x10d0770d0>, <sqlite3.Row object at 0x10d077130>, <sqlite3.Row object at 0x10d077190>, <sqlite3.Row object at 0x10d0771f0>, <sqlite3.Row object at 0x10d077250>, <sqlite3.Row object at 0x10d0772b0>, <sqlite3.Row object at 0x10d077310>, <sqlite3.Row object at 0x10d077370>, <sqlite3.Row object at 0x10d0773d0>, <sqlite3.Row object at 0x10d077430>, <sqlite3.Row object at 0x10d077490>, <sqlite3.Row object at 0x10d0774f0>, <sqlite3.Row object at 0x10d077550>, <sqlite3.Row object at 0x10d0775b0>, <sqlite3.Row object at 0x10d077610>, <sqlite3.Row object at 0x10d077670>, <sqlite3.Row object at 0x10d0776d0>, <sqlite3.Row object at 0x10d077730>, <sqlite3.Row object at 0x10d077790>, <sqlite3.Row object at 0x10d0777f0>, <sqlite3.Row object at 0x10d077850>, <sqlite3.Row object at 0x10d0778b0>, <sqlite3.Row object at 0x10d077910>, <sqlite3.Row object at 0x10d077970>, <sqlite3.Row object at 0x10d0779d0>, <sqlite3.Row object at 0x10d077a30>, <sqlite3.Row object at 0x10d077a90>, <sqlite3.Row object at 0x10d077af0>, <sqlite3.Row object at 0x10d077b50>, <sqlite3.Row object at 0x10d077bb0>, <sqlite3.Row object at 0x10d077c10>, <sqlite3.Row object at 0x10d077c70>, <sqlite3.Row object at 0x10d077cd0>, <sqlite3.Row object at 0x10d077d30>, <sqlite3.Row object at 0x10d077d90>, <sqlite3.Row object at 0x10d077df0>, <sqlite3.Row object at 0x10d077e50>, <sqlite3.Row object at 0x10d077eb0>, <sqlite3.Row object at 0x10d077f10>, <sqlite3.Row object at 0x10d077f70>, <sqlite3.Row object at 0x10d077fd0>, <sqlite3.Row object at 0x10d089070>, <sqlite3.Row object at 0x10d0890d0>, <sqlite3.Row object at 0x10d089130>, <sqlite3.Row object at 0x10d089190>, <sqlite3.Row object at 0x10d0891f0>, <sqlite3.Row object at 0x10d089250>, <sqlite3.Row object at 0x10d0892b0>, <sqlite3.Row object at 0x10d089310>, <sqlite3.Row object at 0x10d089370>, <sqlite3.Row object at 0x10d0893d0>, <sqlite3.Row object at 0x10d089430>, <sqlite3.Row object at 0x10d089490>, <sqlite3.Row object at 0x10d0894f0>, <sqlite3.Row object at 0x10d089550>, <sqlite3.Row object at 0x10d0895b0>, <sqlite3.Row object at 0x10d089610>, <sqlite3.Row object at 0x10d089670>, <sqlite3.Row object at 0x10d0896d0>, <sqlite3.Row object at 0x10d089730>, <sqlite3.Row object at 0x10d089790>, <sqlite3.Row object at 0x10d0897f0>, <sqlite3.Row object at 0x10d089850>, <sqlite3.Row object at 0x10d0898b0>, <sqlite3.Row object at 0x10d089910>, <sqlite3.Row object at 0x10d089970>, <sqlite3.Row object at 0x10d0899d0>, <sqlite3.Row object at 0x10d089a30>, <sqlite3.Row object at 0x10d089a90>, <sqlite3.Row object at 0x10d089af0>, <sqlite3.Row object at 0x10d089b50>, <sqlite3.Row object at 0x10d089bb0>, <sqlite3.Row object at 0x10d089c10>, <sqlite3.Row object at 0x10d089c70>, <sqlite3.Row object at 0x10d089cd0>, <sqlite3.Row object at 0x10d089d30>, <sqlite3.Row object at 0x10d089d90>, <sqlite3.Row object at 0x10d089df0>, <sqlite3.Row object at 0x10d089e50>, <sqlite3.Row object at 0x10d089eb0>, <sqlite3.Row object at 0x10d089f10>, <sqlite3.Row object at 0x10d089f70>, <sqlite3.Row object at 0x10d089fd0>, <sqlite3.Row object at 0x10d08c070>, <sqlite3.Row object at 0x10d08c0d0>, <sqlite3.Row object at 0x10d08c130>, <sqlite3.Row object at 0x10d08c190>, <sqlite3.Row object at 0x10d08c1f0>, <sqlite3.Row object at 0x10d08c250>, <sqlite3.Row object at 0x10d08c2b0>, <sqlite3.Row object at 0x10d08c310>, <sqlite3.Row object at 0x10d08c370>, <sqlite3.Row object at 0x10d08c3d0>, <sqlite3.Row object at 0x10d08c430>, <sqlite3.Row object at 0x10d08c490>, <sqlite3.Row object at 0x10d08c4f0>, <sqlite3.Row object at 0x10d08c550>, <sqlite3.Row object at 0x10d08c5b0>, <sqlite3.Row object at 0x10d08c610>, <sqlite3.Row object at 0x10d08c670>, <sqlite3.Row object at 0x10d08c6d0>, <sqlite3.Row object at 0x10d08c730>, <sqlite3.Row object at 0x10d08c790>, <sqlite3.Row object at 0x10d08c7f0>, <sqlite3.Row object at 0x10d08c850>, <sqlite3.Row object at 0x10d08c8b0>, <sqlite3.Row object at 0x10d08c910>, <sqlite3.Row object at 0x10d08c970>, <sqlite3.Row object at 0x10d08c9d0>, <sqlite3.Row object at 0x10d08ca30>, <sqlite3.Row object at 0x10d08ca90>, <sqlite3.Row object at 0x10d08caf0>, <sqlite3.Row object at 0x10d08cb50>, <sqlite3.Row object at 0x10d08cbb0>, <sqlite3.Row object at 0x10d08cc10>, <sqlite3.Row object at 0x10d08cc70>, <sqlite3.Row object at 0x10d08ccd0>, <sqlite3.Row object at 0x10d08cd30>, <sqlite3.Row object at 0x10d08cd90>, <sqlite3.Row object at 0x10d08cdf0>, <sqlite3.Row object at 0x10d08ce50>, <sqlite3.Row object at 0x10d08ceb0>, <sqlite3.Row object at 0x10d08cf10>, <sqlite3.Row object at 0x10d08cf70>, <sqlite3.Row object at 0x10d08cfd0>, <sqlite3.Row object at 0x10d079070>, <sqlite3.Row object at 0x10d0790d0>, <sqlite3.Row object at 0x10d079130>, <sqlite3.Row object at 0x10d079190>, <sqlite3.Row object at 0x10d0791f0>, <sqlite3.Row object at 0x10d079250>, <sqlite3.Row object at 0x10d0792b0>, <sqlite3.Row object at 0x10d079310>, <sqlite3.Row object at 0x10d079370>, <sqlite3.Row object at 0x10d0793d0>, <sqlite3.Row object at 0x10d079430>, <sqlite3.Row object at 0x10d079490>, <sqlite3.Row object at 0x10d0794f0>, <sqlite3.Row object at 0x10d079550>, <sqlite3.Row object at 0x10d0795b0>, <sqlite3.Row object at 0x10d079610>, <sqlite3.Row object at 0x10d079670>, <sqlite3.Row object at 0x10d0796d0>, <sqlite3.Row object at 0x10d079730>, <sqlite3.Row object at 0x10d079790>, <sqlite3.Row object at 0x10d0797f0>, <sqlite3.Row object at 0x10d079850>, <sqlite3.Row object at 0x10d0798b0>, <sqlite3.Row object at 0x10d079910>, <sqlite3.Row object at 0x10d079970>, <sqlite3.Row object at 0x10d0799d0>, <sqlite3.Row object at 0x10d079a30>, <sqlite3.Row object at 0x10d079a90>, <sqlite3.Row object at 0x10d079af0>, <sqlite3.Row object at 0x10d079b50>, <sqlite3.Row object at 0x10d079bb0>, <sqlite3.Row object at 0x10d079c10>, <sqlite3.Row object at 0x10d079c70>, <sqlite3.Row object at 0x10d079cd0>, <sqlite3.Row object at 0x10d079d30>, <sqlite3.Row object at 0x10d079d90>, <sqlite3.Row object at 0x10d079df0>, <sqlite3.Row object at 0x10d079e50>, <sqlite3.Row object at 0x10d079eb0>, <sqlite3.Row object at 0x10d079f10>, <sqlite3.Row object at 0x10d079f70>, <sqlite3.Row object at 0x10d079fd0>, <sqlite3.Row object at 0x10d08f070>, <sqlite3.Row object at 0x10d08f0d0>, <sqlite3.Row object at 0x10d08f130>, <sqlite3.Row object at 0x10d08f190>, <sqlite3.Row object at 0x10d08f1f0>, <sqlite3.Row object at 0x10d08f250>, <sqlite3.Row object at 0x10d08f2b0>, <sqlite3.Row object at 0x10d08f310>, <sqlite3.Row object at 0x10d08f370>, <sqlite3.Row object at 0x10d08f3d0>, <sqlite3.Row object at 0x10d08f430>, <sqlite3.Row object at 0x10d08f490>, <sqlite3.Row object at 0x10d08f4f0>, <sqlite3.Row object at 0x10d08f550>, <sqlite3.Row object at 0x10d08f5b0>, <sqlite3.Row object at 0x10d08f610>, <sqlite3.Row object at 0x10d08f670>, <sqlite3.Row object at 0x10d08f6d0>, <sqlite3.Row object at 0x10d08f730>, <sqlite3.Row object at 0x10d08f790>, <sqlite3.Row object at 0x10d08f7f0>, <sqlite3.Row object at 0x10d08f850>, <sqlite3.Row object at 0x10d08f8b0>, <sqlite3.Row object at 0x10d08f910>, <sqlite3.Row object at 0x10d08f970>, <sqlite3.Row object at 0x10d08f9d0>, <sqlite3.Row object at 0x10d08fa30>, <sqlite3.Row object at 0x10d08fa90>, <sqlite3.Row object at 0x10d08faf0>, <sqlite3.Row object at 0x10d08fb50>, <sqlite3.Row object at 0x10d08fbb0>]
2025-06-14 12:21:11,164 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 12:21:11,165 - app - INFO - Final Assistant Response (NL): Â¡Entendido! AquÃ­ estÃ¡n todas las transacciones en tu cuenta. Â¿Te gustarÃ­a que revisemos algÃºn perÃ­odo o tipo de transacciÃ³n en particular?
2025-06-14 12:21:18,374 - app - INFO - User Query (es): gracias otra ve
2025-06-14 12:21:18,374 - app - INFO - Chat ended with exit phrase. Assistant Response: Â¡Gracias por chatear! Â¡Que tengas un gran dÃ­a!
2025-06-14 13:13:09,333 - app - INFO - Flask Application started.
2025-06-14 13:13:09,349 - app - INFO - Database connection established.
2025-06-14 13:13:09,350 - app - INFO - Database schema retrieved and cached.
2025-06-14 13:13:09,394 - app - INFO - Philippine holidays fetched and cached.
2025-06-14 13:13:09,647 - app - INFO - Flask Application started.
2025-06-14 13:13:09,658 - app - INFO - Database connection established.
2025-06-14 13:13:09,659 - app - INFO - Database schema retrieved and cached.
2025-06-14 13:13:09,686 - app - INFO - Philippine holidays fetched and cached.
2025-06-14 13:13:15,394 - app - INFO - Initialized new chat session (messages in Flask session).
2025-06-14 13:17:25,122 - app - INFO - Flask Application started.
2025-06-14 13:17:25,138 - app - INFO - Database connection established.
2025-06-14 13:17:25,138 - app - INFO - Database schema retrieved and cached.
2025-06-14 13:17:25,185 - app - INFO - Philippine holidays fetched and cached.
2025-06-14 13:17:27,659 - app - INFO - Flask Application started.
2025-06-14 13:17:27,674 - app - INFO - Database connection established.
2025-06-14 13:17:27,674 - app - INFO - Database schema retrieved and cached.
2025-06-14 13:17:27,716 - app - INFO - Philippine holidays fetched and cached.
2025-06-14 13:19:54,172 - app - INFO - Flask Application started.
2025-06-14 13:19:54,188 - app - INFO - Database connection established.
2025-06-14 13:19:54,189 - app - INFO - Database schema retrieved and cached.
2025-06-14 13:19:54,231 - app - INFO - Philippine holidays fetched and cached.
2025-06-14 13:19:54,509 - app - INFO - Flask Application started.
2025-06-14 13:19:54,523 - app - INFO - Database connection established.
2025-06-14 13:19:54,523 - app - INFO - Database schema retrieved and cached.
2025-06-14 13:19:54,554 - app - INFO - Philippine holidays fetched and cached.
2025-06-14 13:19:59,868 - app - INFO - Initialized new chat session (messages in Flask session).
2025-06-14 13:27:26,661 - app - INFO - Flask Application started.
2025-06-14 13:27:26,677 - app - INFO - Database connection established.
2025-06-14 13:27:26,677 - app - INFO - Database schema retrieved and cached.
2025-06-14 13:27:26,722 - app - INFO - Philippine holidays fetched and cached.
2025-06-14 13:27:27,005 - app - INFO - Flask Application started.
2025-06-14 13:27:27,015 - app - INFO - Database connection established.
2025-06-14 13:27:27,015 - app - INFO - Database schema retrieved and cached.
2025-06-14 13:27:27,046 - app - INFO - Philippine holidays fetched and cached.
2025-06-14 13:27:29,733 - app - INFO - Initialized new chat session (messages in Flask session).
2025-06-14 13:28:14,768 - app - INFO - User Query (en): hi
2025-06-14 13:28:23,894 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 13:28:23,895 - app - INFO - Generated SQL Query: None
2025-06-14 13:28:23,897 - app - INFO - Database connection established.
2025-06-14 13:28:23,897 - app - CRITICAL - An unexpected critical error occurred: argument 1 must be str, not None
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/webapp/app.py", line 318, in chat
    cursor.execute(sql_query)
TypeError: argument 1 must be str, not None
2025-06-14 13:28:26,986 - app - INFO - User Query (en): hi
2025-06-14 13:28:30,464 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 13:28:30,465 - app - INFO - Generated SQL Query: SELECT strftime('%Y-%m-%d %H:%M:%S', 'now', 'localtime');
2025-06-14 13:28:30,466 - app - INFO - Database connection established.
2025-06-14 13:28:30,466 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10b231330>]
2025-06-14 13:28:31,796 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 13:28:31,797 - app - INFO - Final Assistant Response (NL): Hi there! How can I help you manage your account today? Just let me know what you'd like to check!
2025-06-14 13:33:28,158 - app - INFO - User Query (es): hola
2025-06-14 13:33:53,652 - app - INFO - User Query (en): hola
2025-06-14 13:34:02,759 - app - INFO - User Query (en): hola
2025-06-14 13:35:01,126 - app - INFO - User Query (es): hola
2025-06-14 13:36:35,726 - app - INFO - User Query (es): hola
2025-06-14 13:43:00,914 - app - INFO - User Query (es): hola
2025-06-14 13:43:28,173 - app - ERROR - An error occurred during Gemini API call: 504 Deadline Exceeded
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/webapp/app.py", line 234, in get_gemini_response
    gemini_response = model_obj.generate_content(full_prompt)
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/generativeai/generative_models.py", line 331, in generate_content
    response = self._client.generate_content(
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py", line 835, in generate_content
    response = rpc(
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/retry/retry_unary.py", line 294, in retry_wrapped_func
    return retry_target(
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/retry/retry_unary.py", line 156, in retry_target
    next_sleep = _retry_error_helper(
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/retry/retry_base.py", line 214, in _retry_error_helper
    raise final_exc from source_exc
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/retry/retry_unary.py", line 147, in retry_target
    result = target()
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/grpc_helpers.py", line 78, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.DeadlineExceeded: 504 Deadline Exceeded
2025-06-14 13:43:28,197 - app - WARNING - Gemini failed to generate SQL for user query: hola. Assistant response: Lo siento, no pude generar una consulta SQL para esa solicitud. Â¿PodrÃ­as reformularla?
2025-06-14 14:07:23,095 - app - INFO - Flask Application started.
2025-06-14 14:07:23,111 - app - INFO - Database connection established.
2025-06-14 14:07:23,111 - app - INFO - Database schema retrieved and cached.
2025-06-14 14:07:23,157 - app - INFO - Philippine holidays fetched and cached.
2025-06-14 14:07:23,421 - app - INFO - Flask Application started.
2025-06-14 14:07:23,431 - app - INFO - Database connection established.
2025-06-14 14:07:23,431 - app - INFO - Database schema retrieved and cached.
2025-06-14 14:07:23,462 - app - INFO - Philippine holidays fetched and cached.
2025-06-14 14:07:25,589 - app - INFO - Initialized new chat session (messages in Flask session).
2025-06-14 14:09:33,965 - app - INFO - User Query (es): hola
2025-06-14 14:09:36,309 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:09:36,309 - app - INFO - Generated SQL Query: SELECT 1;
2025-06-14 14:09:36,313 - app - INFO - Database connection established.
2025-06-14 14:09:36,314 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10cf9f330>]
2025-06-14 14:09:37,186 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:09:37,187 - app - INFO - Final Assistant Response (NL): Â¡Hola! Â¿En quÃ© puedo ayudarte hoy con tu cuenta?
2025-06-14 14:10:04,897 - app - INFO - User Query (es): dime detalles de transacciones que haci desde mayo este aÃ±o
2025-06-14 14:10:06,903 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:10:06,903 - app - INFO - Generated SQL Query: SELECT * FROM bank_transactions WHERE Date >= '2025-05-01' ORDER BY Date ASC;
2025-06-14 14:10:06,905 - app - INFO - Database connection established.
2025-06-14 14:10:06,907 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10cf9fd70>, <sqlite3.Row object at 0x10cf9f330>, <sqlite3.Row object at 0x10cf9fc50>, <sqlite3.Row object at 0x10cf9fc90>, <sqlite3.Row object at 0x10cf9f3f0>, <sqlite3.Row object at 0x10cf9f4b0>, <sqlite3.Row object at 0x10cf9fdb0>, <sqlite3.Row object at 0x10cf9fe90>, <sqlite3.Row object at 0x10cf9fef0>, <sqlite3.Row object at 0x10cf9ff50>, <sqlite3.Row object at 0x10cf9ffb0>, <sqlite3.Row object at 0x111080050>, <sqlite3.Row object at 0x1110800b0>, <sqlite3.Row object at 0x111080110>, <sqlite3.Row object at 0x111080170>, <sqlite3.Row object at 0x1110801d0>, <sqlite3.Row object at 0x111080230>, <sqlite3.Row object at 0x111080290>, <sqlite3.Row object at 0x1110802f0>, <sqlite3.Row object at 0x111080350>, <sqlite3.Row object at 0x1110803b0>, <sqlite3.Row object at 0x111080410>, <sqlite3.Row object at 0x111080470>, <sqlite3.Row object at 0x1110804d0>, <sqlite3.Row object at 0x111080530>, <sqlite3.Row object at 0x111080590>, <sqlite3.Row object at 0x1110805f0>, <sqlite3.Row object at 0x111080650>, <sqlite3.Row object at 0x1110806b0>, <sqlite3.Row object at 0x111080710>, <sqlite3.Row object at 0x111080770>, <sqlite3.Row object at 0x1110807d0>]
2025-06-14 14:10:11,193 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:10:11,194 - app - INFO - Final Assistant Response (NL): Â¡Por supuesto! AquÃ­ estÃ¡n los detalles de tus transacciones desde mayo de este aÃ±o:

*   **1 de mayo de 2025:** Transferencia bancaria mÃ³vil (â‚±8,168.56) y compra en punto de venta (â‚±1,083.61).
*   **2 de mayo de 2025:** DepÃ³sito de cheque (â‚±16,288.59).
*   **3 de mayo de 2025:** DepÃ³sito de cheque (â‚±14,603.27) y transferencia de fondos (â‚±9,237.55).
*   **5 de mayo de 2025:** Compra en punto de venta (â‚±5,625.06).
*   **6 de mayo de 2025:** Recibo de fondos (â‚±21,298.43), retiro en cajero automÃ¡tico (â‚±8,050.84) y dos depÃ³sitos de salario (â‚±18,418.30 y â‚±15,675.32).
*   **7 de mayo de 2025:** Cargo por servicio (â‚±162.54).
*   **8 de mayo de 2025:** Retiro en cajero automÃ¡tico (â‚±9,986.01), dos compras en punto de venta (â‚±7,577.13 y â‚±3,152.25) y tres depÃ³sitos de salario (â‚±14,110.83, â‚±16,373.00 y â‚±16,783.61).
*   **10 de mayo de 2025:** Pago de facturas (â‚±8,716.93), crÃ©dito de interÃ©s (â‚±5,765.83) y depÃ³sito de cheque (â‚±2,738.02).
*   **11 de mayo de 2025:** Pago de facturas (â‚±5,847.84), cargo por servicio (â‚±421.22), depÃ³sito de salario (â‚±8,764.23) y transferencia bancaria mÃ³vil (â‚±2,920.79).
*   **12 de mayo de 2025:** Recibo de fondos (â‚±17,039.06).
*   **13 de mayo de 2025:** Compra en punto de venta (â‚±7,002.25), transferencia bancaria mÃ³vil (â‚±2,767.26) y crÃ©dito de interÃ©s (â‚±16,906.92).
*   **14 de mayo de 2025:** CrÃ©dito de interÃ©s (â‚±2,019.04).
*   **15 de mayo de 2025:** Dos depÃ³sitos de salario (â‚±21,109.85 y â‚±14,891.36) y cargo por servicio (â‚±53.64).

Â¿Te gustarÃ­a que revisemos alguna transacciÃ³n en particular o que te dÃ© mÃ¡s detalles sobre alguna de ellas?
2025-06-14 14:10:35,585 - app - INFO - User Query (es): calculate promedio de credito y debito porfavor
2025-06-14 14:10:37,206 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:10:37,206 - app - INFO - Generated SQL Query: SELECT AVG(COALESCE(Deposits, 0)) AS Promedio_Credito, AVG(COALESCE(Withdrawals, 0)) AS Promedio_Debito FROM bank_transactions WHERE Date >= '2025-05-01';
2025-06-14 14:10:37,209 - app - INFO - Database connection established.
2025-06-14 14:10:37,214 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10cf9f4b0>]
2025-06-14 14:10:38,606 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:10:38,606 - app - INFO - Final Assistant Response (NL): Â¡Claro! El promedio de crÃ©dito (depÃ³sitos) es de â‚±6,962.05 y el promedio de dÃ©bito (retiros) es de â‚±2,524.17. Â¿Hay algo mÃ¡s que te gustarÃ­a calcular o revisar?
2025-06-14 14:11:24,249 - app - INFO - User Query (es): ay, que es recibo de fondos y cargo por servicio, explicarme en terminos generales
2025-06-14 14:11:25,717 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:11:25,717 - app - INFO - Generated SQL Query: SELECT DISTINCT "Transaction Details" FROM bank_transactions WHERE LOWER("Transaction Details") LIKE '%recibo de fondos%' OR LOWER("Transaction Details") LIKE '%cargo por servicio%';
2025-06-14 14:11:25,719 - app - INFO - Database connection established.
2025-06-14 14:11:25,720 - app - INFO - SQL Query Executed Successfully. Results: []
2025-06-14 14:11:27,483 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:11:27,484 - app - INFO - Final Assistant Response (NL): Â¡Por supuesto! En tÃ©rminos generales:

*   **Recibo de fondos:** Es cuando recibes dinero en tu cuenta desde otra cuenta, ya sea de otra persona o desde otra de tus cuentas. Es como recibir un pago.
*   **Cargo por servicio:** Es un cobro que el banco realiza por algÃºn servicio que utilizas, como mantenimiento de cuenta, transferencias, o el uso de ciertos productos bancarios. Â¡Es como una pequeÃ±a tarifa por usar los servicios del banco!

Â¿Te gustarÃ­a saber mÃ¡s detalles sobre alguno de estos conceptos?
2025-06-14 14:12:29,737 - app - INFO - User Query (es): entonces, recibo de fondos es 'fund transfer' en ingles, cierto?
2025-06-14 14:12:31,278 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:12:31,279 - app - INFO - Generated SQL Query: SELECT CASE WHEN COUNT(*) > 0 THEN 'SÃ­, en general, un "recibo de fondos" es similar a un "fund transfer" en inglÃ©s, ya que ambos implican la transferencia de dinero de una cuenta a otra.' ELSE 'No hay registros disponibles para confirmar esa informaciÃ³n.' END AS Respuesta;
2025-06-14 14:12:31,282 - app - INFO - Database connection established.
2025-06-14 14:12:31,283 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10cf9f330>]
2025-06-14 14:12:32,865 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:12:32,866 - app - INFO - Final Assistant Response (NL): Â¡Correcto! En general, sÃ­, un "recibo de fondos" es similar a un "fund transfer" en inglÃ©s, ya que ambos implican la transferencia de dinero de una cuenta a otra. Â¿Algo mÃ¡s en lo que te pueda ayudar?
2025-06-14 14:13:01,537 - app - INFO - User Query (es): y cargo por servicio es 'service charge' o como dijemos 'fees' aqui en filipinas, cierto?
2025-06-14 14:13:02,731 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:13:02,731 - app - INFO - Generated SQL Query: SELECT 1;
2025-06-14 14:13:02,733 - app - INFO - Database connection established.
2025-06-14 14:13:02,734 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10cf9f410>]
2025-06-14 14:13:04,148 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:13:04,148 - app - INFO - Final Assistant Response (NL): Â¡Exactamente! "Cargo por servicio" se traduce como "service charge" y es lo mismo que "fees" aquÃ­ en Filipinas. Â¿Te puedo ayudar con algo mÃ¡s?
2025-06-14 14:13:26,278 - app - INFO - User Query (es): que caro son cargos, no?
2025-06-14 14:13:27,733 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:13:27,734 - app - INFO - Generated SQL Query: SELECT COUNT(*) FROM bank_transactions WHERE LOWER("Transaction Details") LIKE '%service charge%';
2025-06-14 14:13:27,735 - app - INFO - Database connection established.
2025-06-14 14:13:27,736 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10cf9fb70>]
2025-06-14 14:13:29,031 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:13:29,032 - app - INFO - Final Assistant Response (NL): Â¡SÃ­! Hay un total de 95 cargos por servicio registrados. Â¿Quieres que revisemos el total gastado en estos cargos o algÃºn perÃ­odo en particular?
2025-06-14 14:13:38,814 - app - INFO - User Query (es): no
2025-06-14 14:13:39,987 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:13:39,987 - app - INFO - Generated SQL Query: SELECT COUNT(*) FROM bank_transactions WHERE LOWER("Transaction Details") LIKE '%service charge%';
2025-06-14 14:13:39,988 - app - INFO - Database connection established.
2025-06-14 14:13:39,989 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10cf9f4b0>]
2025-06-14 14:13:41,113 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:13:41,113 - app - INFO - Final Assistant Response (NL): Â¡Entendido! Â¿Hay algo mÃ¡s en lo que te pueda ayudar hoy?
2025-06-14 14:14:08,043 - app - INFO - User Query (es): calculate los retiros por tipo de transaccion desde abril 2025
2025-06-14 14:14:10,092 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:14:10,092 - app - INFO - Generated SQL Query: SELECT "Transaction Details", SUM(COALESCE(Withdrawals, 0)) AS Total_Retiros FROM bank_transactions WHERE Date >= '2025-04-01' AND Withdrawals > 0 GROUP BY "Transaction Details" ORDER BY Total_Retiros DESC;
2025-06-14 14:14:10,095 - app - INFO - Database connection established.
2025-06-14 14:14:10,098 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10cf9f330>, <sqlite3.Row object at 0x111080050>, <sqlite3.Row object at 0x111080230>, <sqlite3.Row object at 0x1110800b0>, <sqlite3.Row object at 0x1110803b0>, <sqlite3.Row object at 0x111080170>, <sqlite3.Row object at 0x111080530>, <sqlite3.Row object at 0x111080410>, <sqlite3.Row object at 0x1110804d0>, <sqlite3.Row object at 0x111080290>, <sqlite3.Row object at 0x1110807f0>, <sqlite3.Row object at 0x111080350>, <sqlite3.Row object at 0x1110802f0>, <sqlite3.Row object at 0x111080110>]
2025-06-14 14:14:13,982 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:14:13,983 - app - INFO - Final Assistant Response (NL): Â¡AquÃ­ tienes un resumen de tus retiros por tipo de transacciÃ³n desde abril de 2025! El mayor gasto fue en compras en punto de venta (POS) con â‚±51,499.28. Luego, el pago de facturas con â‚±41,909.77. Los retiros en cajeros automÃ¡ticos suman â‚±31,590.10. Â¿Quieres que desglosemos algo mÃ¡s o que veamos algÃºn tipo de transacciÃ³n en particular?
2025-06-14 14:14:30,303 - app - INFO - User Query (es): calculate los retiros (promedio y sumo) por tipo de transaccion desde abril 2025
2025-06-14 14:14:33,218 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:14:33,218 - app - INFO - Generated SQL Query: SELECT 
    CASE
        WHEN LOWER("Transaction Details") LIKE '%atm withdrawal%' THEN 'ATM Withdrawal'
        WHEN LOWER("Transaction Details") LIKE '%point of sale%' THEN 'Point of Sale'
        WHEN LOWER("Transaction Details") LIKE '%bill payment%' THEN 'Bill Payment'
        WHEN LOWER("Transaction Details") LIKE '%fund transfer%' THEN 'Fund Transfer'
        ELSE 'Other'
    END AS transaction_type,
    SUM(COALESCE(Withdrawals, 0)) AS total_withdrawals,
    AVG(COALESCE(Withdrawals, 0)) AS average_withdrawals
FROM bank_transactions
WHERE Date >= '2025-04-01'
GROUP BY transaction_type
ORDER BY transaction_type;
2025-06-14 14:14:33,220 - app - INFO - Database connection established.
2025-06-14 14:14:33,221 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10cf9f4b0>, <sqlite3.Row object at 0x10cf9fc90>, <sqlite3.Row object at 0x10cf9fb70>]
2025-06-14 14:14:35,487 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:14:35,488 - app - INFO - Final Assistant Response (NL): Â¡AquÃ­ tienes el cÃ¡lculo de los retiros (promedio y suma) por tipo de transacciÃ³n desde abril de 2025!

*   **Otros:** El total de retiros es de â‚±135,485.40, con un promedio de â‚±1,963.56.
*   **Retiro en cajero automÃ¡tico (ATM Withdrawal):** El total de retiros es de â‚±31,590.10, con un promedio de â‚±5,265.02.
*   **Transferencia de fondos (Fund Transfer):** El total de retiros es de â‚±17,341.31, con un promedio de â‚±8,670.65.

Â¿Te gustarÃ­a que desglosemos alguna categorÃ­a en particular o que veamos otro perÃ­odo?
2025-06-14 14:15:21,712 - app - INFO - User Query (es): como son aumentos de retiros en abril 2025 que abril 2024?
2025-06-14 14:15:23,704 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:15:23,704 - app - INFO - Generated SQL Query: SELECT
  SUM(CASE WHEN strftime('%Y', Date) = '2024' THEN COALESCE(Withdrawals, 0) ELSE 0 END) AS total_retiros_2024,
  SUM(CASE WHEN strftime('%Y', Date) = '2025' THEN COALESCE(Withdrawals, 0) ELSE 0 END) AS total_retiros_2025
FROM bank_transactions
WHERE strftime('%m', Date) = '04';
2025-06-14 14:15:23,707 - app - INFO - Database connection established.
2025-06-14 14:15:23,711 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10cf9fcb0>]
2025-06-14 14:15:25,764 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:15:25,765 - app - INFO - Final Assistant Response (NL): Comparando abril de 2024 con abril de 2025, veo que en abril de 2024 tus retiros sumaron â‚±143,878.39, mientras que en abril de 2025 fueron de â‚±103,643.33. Esto significa que tus retiros disminuyeron en comparaciÃ³n con el aÃ±o pasado. Â¿Te gustarÃ­a que revisemos los detalles de estos retiros o que comparemos algÃºn otro mes?
2025-06-14 14:15:51,279 - app - INFO - User Query (es): cuanto es el porciento de cambio en retiros sumos en abril 2024 y abril 2025
2025-06-14 14:15:53,647 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:15:53,647 - app - INFO - Generated SQL Query: SELECT
  (SUM(CASE WHEN STRFTIME('%Y-%m', Date) = '2025-04' THEN COALESCE(Withdrawals, 0) ELSE 0 END) - SUM(CASE WHEN STRFTIME('%Y-%m', Date) = '2024-04' THEN COALESCE(Withdrawals, 0) ELSE 0 END)) * 100.0 /
  SUM(CASE WHEN STRFTIME('%Y-%m', Date) = '2024-04' THEN COALESCE(Withdrawals, 0) ELSE 0 END)
FROM bank_transactions
WHERE STRFTIME('%Y-%m', Date) IN ('2024-04', '2025-04');
2025-06-14 14:15:53,649 - app - INFO - Database connection established.
2025-06-14 14:15:53,651 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10cf9f4b0>]
2025-06-14 14:15:55,578 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:15:55,578 - app - INFO - Final Assistant Response (NL): Â¡El cambio porcentual en tus retiros entre abril de 2024 y abril de 2025 es de -27.96%! Eso indica una disminuciÃ³n en tus retiros. Â¿Quieres que revisemos los detalles de este cambio o que comparemos algÃºn otro perÃ­odo?
2025-06-14 14:16:16,913 - app - INFO - User Query (en): what is the change of withdrawal sums from april 2024 to april 2025
2025-06-14 14:16:19,711 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:16:19,712 - app - INFO - Generated SQL Query: SELECT
  SUM(CASE WHEN strftime('%Y', Date) = '2024' AND strftime('%m', Date) = '04' THEN COALESCE(Withdrawals, 0) ELSE 0 END) AS withdrawals_2024,
  SUM(CASE WHEN strftime('%Y', Date) = '2025' AND strftime('%m', Date) = '04' THEN COALESCE(Withdrawals, 0) ELSE 0 END) AS withdrawals_2025,
  (SUM(CASE WHEN strftime('%Y', Date) = '2025' AND strftime('%m', Date) = '04' THEN COALESCE(Withdrawals, 0) ELSE 0 END) - SUM(CASE WHEN strftime('%Y', Date) = '2024' AND strftime('%m', Date) = '04' THEN COALESCE(Withdrawals, 0) ELSE 0 END)) * 100.0 / SUM(CASE WHEN strftime('%Y', Date) = '2024' AND strftime('%m', Date) = '04' THEN COALESCE(Withdrawals, 0) ELSE 0 END) AS percentage_change
FROM bank_transactions;
2025-06-14 14:16:19,714 - app - INFO - Database connection established.
2025-06-14 14:16:19,717 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x111080350>]
2025-06-14 14:16:22,292 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:16:22,292 - app - INFO - Final Assistant Response (NL): The withdrawals in April 2024 and April 2025 were â‚±143,878.39 and â‚±103,643.33, respectively. This represents a percentage change of -27.96%. Is there anything else I can help you with?
2025-06-14 14:18:27,898 - app - INFO - User Query (es): hola
2025-06-14 14:18:29,169 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:18:29,170 - app - INFO - Generated SQL Query: SELECT strftime('%Y-%m-%d %H:%M:%S', 'now', 'localtime');
2025-06-14 14:18:29,174 - app - INFO - Database connection established.
2025-06-14 14:18:29,176 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10cf9f4b0>]
2025-06-14 14:18:30,271 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:18:30,271 - app - INFO - Final Assistant Response (NL): Â¡Hola! Â¿En quÃ© puedo ayudarte hoy con tu cuenta?
2025-06-14 14:21:24,789 - app - INFO - User Query (es): hola
2025-06-14 14:21:26,049 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:21:26,050 - app - INFO - Generated SQL Query: SELECT strftime('%Y-%m-%d %H:%M:%S', 'now', 'localtime');
2025-06-14 14:21:26,052 - app - INFO - Database connection established.
2025-06-14 14:21:26,053 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1110805f0>]
2025-06-14 14:21:27,189 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:21:27,190 - app - INFO - Final Assistant Response (NL): Â¡Hola! Â¿En quÃ© puedo ayudarte hoy con tu cuenta?
2025-06-14 14:22:04,088 - app - INFO - User Query (en): uhh, i need to assess my spending. i want to know the change in spendings from april to may 2025
2025-06-14 14:22:07,583 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:22:07,583 - app - INFO - Generated SQL Query: SELECT
  SUM(CASE WHEN strftime('%Y-%m', Date) = '2025-04' THEN COALESCE(Withdrawals, 0) ELSE 0 END) AS April_Withdrawals,
  SUM(CASE WHEN strftime('%Y-%m', Date) = '2025-05' THEN COALESCE(Withdrawals, 0) ELSE 0 END) AS May_Withdrawals,
  (
    SUM(CASE WHEN strftime('%Y-%m', Date) = '2025-05' THEN COALESCE(Withdrawals, 0) ELSE 0 END) -
    SUM(CASE WHEN strftime('%Y-%m', Date) = '2025-04' THEN COALESCE(Withdrawals, 0) ELSE 0 END)
  ) AS Difference,
  (
    SUM(CASE WHEN strftime('%Y-%m', Date) = '2025-05' THEN COALESCE(Withdrawals, 0) ELSE 0 END) -
    SUM(CASE WHEN strftime('%Y-%m', Date) = '2025-04' THEN COALESCE(Withdrawals, 0) ELSE 0 END)
  ) * 100.0 / SUM(CASE WHEN strftime('%Y-%m', Date) = '2025-04' THEN COALESCE(Withdrawals, 0) ELSE 0 END) AS Percentage_Change
FROM bank_transactions
WHERE strftime('%Y', Date) = '2025' AND strftime('%m', Date) IN ('04', '05');
2025-06-14 14:22:07,586 - app - INFO - Database connection established.
2025-06-14 14:22:07,589 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10cf9fef0>]
2025-06-14 14:22:10,862 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:22:10,863 - app - INFO - Final Assistant Response (NL): Alright, I've assessed the change in your spending from April to May 2025. Your withdrawals decreased from â‚±103,643.33 in April to â‚±80,773.48 in May, a change of -22.07%. Want help reviewing this!
2025-06-14 14:22:54,829 - app - INFO - User Query (en): how about the monthly changes since 2025?
2025-06-14 14:22:57,411 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:22:57,411 - app - INFO - Generated SQL Query: SELECT strftime('%Y-%m', Date) AS Month, SUM(COALESCE(Withdrawals, 0)) AS TotalWithdrawals FROM bank_transactions WHERE strftime('%Y', Date) = '2025' GROUP BY Month ORDER BY Month ASC;
2025-06-14 14:22:57,413 - app - INFO - Database connection established.
2025-06-14 14:22:57,416 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x111080950>, <sqlite3.Row object at 0x1110807d0>, <sqlite3.Row object at 0x111080350>, <sqlite3.Row object at 0x111080650>, <sqlite3.Row object at 0x111080590>]
2025-06-14 14:22:59,400 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:22:59,400 - app - INFO - Final Assistant Response (NL): Here's a breakdown of your total withdrawals each month since the start of 2025:

*   **January:** â‚±149,681.15
*   **February:** â‚±132,981.93
*   **March:** â‚±146,370.13
*   **April:** â‚±103,643.33
*   **May:** â‚±80,773.48

Let me know if you'd like to see a comparison between any of these months!
2025-06-14 14:23:19,979 - app - INFO - User Query (en): when is the last time my balance dipped below 50k
2025-06-14 14:23:21,429 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:23:21,430 - app - INFO - Generated SQL Query: SELECT Date FROM bank_transactions WHERE Balance < 50000 ORDER BY Date DESC LIMIT 1;
2025-06-14 14:23:21,432 - app - INFO - Database connection established.
2025-06-14 14:23:21,434 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1110807d0>]
2025-06-14 14:23:22,775 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:23:22,775 - app - INFO - Final Assistant Response (NL): The last time your balance dipped below â‚±50,000 was on December 12, 2024. Let me know if that looks off!
2025-06-14 14:23:28,748 - app - INFO - User Query (en): how about the highest one
2025-06-14 14:23:30,426 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:23:30,427 - app - INFO - Generated SQL Query: SELECT
  strftime('%Y-%m', Date) AS month,
  SUM(COALESCE(Withdrawals, 0)) AS total_withdrawals
FROM bank_transactions
WHERE strftime('%Y', Date) = '2025'
GROUP BY month
ORDER BY total_withdrawals DESC
LIMIT 1;
2025-06-14 14:23:30,429 - app - INFO - Database connection established.
2025-06-14 14:23:30,430 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x111080590>]
2025-06-14 14:23:32,069 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:23:32,069 - app - INFO - Final Assistant Response (NL): Your highest spending month so far in 2025 was January, with total withdrawals of â‚±149,681.15! Let me know if that looks off!
2025-06-14 14:23:44,963 - app - INFO - User Query (en): how about the highest balance i had
2025-06-14 14:23:46,021 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:23:46,021 - app - INFO - Generated SQL Query: SELECT MAX(Balance) FROM bank_transactions;
2025-06-14 14:23:46,022 - app - INFO - Database connection established.
2025-06-14 14:23:46,022 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x111080a10>]
2025-06-14 14:23:47,429 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:23:47,429 - app - INFO - Final Assistant Response (NL): Your highest balance was â‚±2,678,155.79. Feeling like a high-roller! Anything else I can help you with?
2025-06-14 14:23:56,063 - app - INFO - User Query (en): when did this happen
2025-06-14 14:24:01,067 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:24:01,069 - app - INFO - Generated SQL Query: SELECT Date, Withdrawals FROM bank_transactions WHERE Date BETWEEN '2025-04-01' AND '2025-05-31' ORDER BY Date ASC;
2025-06-14 14:24:01,070 - app - INFO - Database connection established.
2025-06-14 14:24:01,073 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x111080b50>, <sqlite3.Row object at 0x111080a50>, <sqlite3.Row object at 0x1110808b0>, <sqlite3.Row object at 0x111080b10>, <sqlite3.Row object at 0x111080990>, <sqlite3.Row object at 0x111080950>, <sqlite3.Row object at 0x111080bd0>, <sqlite3.Row object at 0x1110804d0>, <sqlite3.Row object at 0x111080b70>, <sqlite3.Row object at 0x1110805f0>, <sqlite3.Row object at 0x111080b30>, <sqlite3.Row object at 0x111080b90>, <sqlite3.Row object at 0x1110809f0>, <sqlite3.Row object at 0x111080bb0>, <sqlite3.Row object at 0x111080bf0>, <sqlite3.Row object at 0x111080c10>, <sqlite3.Row object at 0x111080c30>, <sqlite3.Row object at 0x111080c50>, <sqlite3.Row object at 0x111080c70>, <sqlite3.Row object at 0x111080c90>, <sqlite3.Row object at 0x111080cb0>, <sqlite3.Row object at 0x111080cd0>, <sqlite3.Row object at 0x111080cf0>, <sqlite3.Row object at 0x111080d10>, <sqlite3.Row object at 0x111080d30>, <sqlite3.Row object at 0x111080d50>, <sqlite3.Row object at 0x111080d70>, <sqlite3.Row object at 0x111080d90>, <sqlite3.Row object at 0x111080db0>, <sqlite3.Row object at 0x111080dd0>, <sqlite3.Row object at 0x111080df0>, <sqlite3.Row object at 0x111080e10>, <sqlite3.Row object at 0x111080e30>, <sqlite3.Row object at 0x111080e50>, <sqlite3.Row object at 0x111080e70>, <sqlite3.Row object at 0x111080e90>, <sqlite3.Row object at 0x111080eb0>, <sqlite3.Row object at 0x111080ed0>, <sqlite3.Row object at 0x111080ef0>, <sqlite3.Row object at 0x111080f10>, <sqlite3.Row object at 0x111080f30>, <sqlite3.Row object at 0x111080f50>, <sqlite3.Row object at 0x111080f70>, <sqlite3.Row object at 0x111080f90>, <sqlite3.Row object at 0x111080fb0>, <sqlite3.Row object at 0x111080fd0>, <sqlite3.Row object at 0x1110ce030>, <sqlite3.Row object at 0x1110ce050>, <sqlite3.Row object at 0x1110ce070>, <sqlite3.Row object at 0x1110ce090>, <sqlite3.Row object at 0x1110ce0b0>, <sqlite3.Row object at 0x1110ce0d0>, <sqlite3.Row object at 0x1110ce0f0>, <sqlite3.Row object at 0x1110ce110>, <sqlite3.Row object at 0x1110ce130>, <sqlite3.Row object at 0x1110ce150>, <sqlite3.Row object at 0x1110ce170>, <sqlite3.Row object at 0x1110ce190>, <sqlite3.Row object at 0x1110ce1b0>, <sqlite3.Row object at 0x1110ce1d0>, <sqlite3.Row object at 0x1110ce1f0>, <sqlite3.Row object at 0x1110ce210>, <sqlite3.Row object at 0x1110ce230>, <sqlite3.Row object at 0x1110ce250>, <sqlite3.Row object at 0x1110ce270>, <sqlite3.Row object at 0x1110ce290>, <sqlite3.Row object at 0x1110ce2b0>, <sqlite3.Row object at 0x1110ce2d0>, <sqlite3.Row object at 0x1110ce2f0>, <sqlite3.Row object at 0x1110ce310>, <sqlite3.Row object at 0x1110ce330>, <sqlite3.Row object at 0x1110ce350>, <sqlite3.Row object at 0x1110ce370>, <sqlite3.Row object at 0x1110ce390>, <sqlite3.Row object at 0x1110ce3b0>, <sqlite3.Row object at 0x1110ce3d0>, <sqlite3.Row object at 0x1110ce3f0>]
2025-06-14 14:24:02,649 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:24:02,650 - app - INFO - Final Assistant Response (NL): I've listed all your transactions with withdrawals from April 1, 2025, to May 31, 2025, arranged by date. Would you like me to highlight any specific dates or types of transactions?
2025-06-14 14:24:16,569 - app - INFO - User Query (en): how about the highest balance i had in my transactions, when also
2025-06-14 14:24:18,142 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:24:18,143 - app - INFO - Generated SQL Query: SELECT Date, Balance FROM bank_transactions ORDER BY Balance DESC LIMIT 1;
2025-06-14 14:24:18,145 - app - INFO - Database connection established.
2025-06-14 14:24:18,148 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x111080bd0>]
2025-06-14 14:24:19,575 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:24:19,575 - app - INFO - Final Assistant Response (NL): Okay, the highest balance you had in your transactions was â‚±2,678,155.79 on March 4, 2024. Let me know if that looks off!
2025-06-14 14:25:08,733 - app - INFO - User Query (es): no recuerdo comprando en cebu en enero despues Sinulog, puedes ayudarme recordando esos?
2025-06-14 14:25:10,881 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:25:10,882 - app - INFO - Generated SQL Query: SELECT * FROM bank_transactions WHERE Date BETWEEN '2025-01-20' AND '2025-01-31' AND LOWER("Branch / Source") LIKE '%cebu%' AND Withdrawals > 0 ORDER BY Date ASC;
2025-06-14 14:25:10,884 - app - INFO - Database connection established.
2025-06-14 14:25:10,886 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x111080b10>, <sqlite3.Row object at 0x111080b30>, <sqlite3.Row object at 0x111080c30>]
2025-06-14 14:25:12,822 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:25:12,822 - app - INFO - Final Assistant Response (NL): Â¡Claro que sÃ­! EncontrÃ© estas transacciones en CebÃº despuÃ©s del Sinulog en enero de 2025: Un compra en punto de venta (â‚±3,634.04) el 20 de enero, un pago de facturas (â‚±3,348.41) el 26 de enero, y un retiro en cajero automÃ¡tico (â‚±8,090.37) el 29 de enero. Â¿Te refresca la memoria?
2025-06-14 14:25:43,073 - app - INFO - User Query (es): ah siii, lo compro un algo en cebu
2025-06-14 14:25:45,284 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:25:45,284 - app - INFO - Generated SQL Query: SELECT SUM(CASE WHEN strftime('%m', Date) = '04' THEN COALESCE(Withdrawals, 0) ELSE 0 END) AS April_Withdrawals, SUM(CASE WHEN strftime('%m', Date) = '05' THEN COALESCE(Withdrawals, 0) ELSE 0 END) AS May_Withdrawals FROM bank_transactions WHERE strftime('%Y', Date) = '2025' AND LOWER("Branch / Source") LIKE '%cebu%';
2025-06-14 14:25:45,286 - app - INFO - Database connection established.
2025-06-14 14:25:45,289 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x111080c70>]
2025-06-14 14:25:47,433 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-14 14:25:47,434 - app - INFO - Final Assistant Response (NL): Â¡Ah, entiendo! Tus retiros en abril fueron de â‚±23,383.60, y tus gastos en Cebu en mayo fueron de â‚±9,529.57. Â¿Te gustarÃ­a que desglosemos estos gastos en Cebu o que revisemos otros detalles de tus compras?
2025-06-15 15:44:33,143 - __main__ - INFO - Flask Application started.
2025-06-15 15:44:33,168 - __main__ - INFO - Database connection established.
2025-06-15 15:44:33,168 - __main__ - INFO - Database schema retrieved and cached.
2025-06-15 15:44:33,213 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-15 15:44:33,484 - __main__ - INFO - Flask Application started.
2025-06-15 15:44:33,495 - __main__ - INFO - Database connection established.
2025-06-15 15:44:33,495 - __main__ - INFO - Database schema retrieved and cached.
2025-06-15 15:44:33,524 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-15 15:44:39,478 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-15 15:44:58,387 - __main__ - INFO - User Query (es): oye, necesito ayuda
2025-06-15 15:45:00,504 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 15:45:00,504 - __main__ - INFO - Generated SQL Query: None
2025-06-15 15:45:00,507 - __main__ - INFO - Database connection established.
2025-06-15 15:45:00,507 - __main__ - CRITICAL - An unexpected critical error occurred: argument 1 must be str, not None
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app.py", line 318, in chat
    cursor.execute(sql_query)
TypeError: argument 1 must be str, not None
2025-06-15 15:45:05,327 - __main__ - INFO - User Query (es): oye, necesito ayuda
2025-06-15 15:45:06,406 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 15:45:06,407 - __main__ - INFO - Generated SQL Query: None
2025-06-15 15:45:06,410 - __main__ - INFO - Database connection established.
2025-06-15 15:45:06,410 - __main__ - CRITICAL - An unexpected critical error occurred: argument 1 must be str, not None
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app.py", line 318, in chat
    cursor.execute(sql_query)
TypeError: argument 1 must be str, not None
2025-06-15 15:45:15,284 - __main__ - INFO - User Query (es): necesito ayuda
2025-06-15 15:45:16,503 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 15:45:16,504 - __main__ - INFO - Generated SQL Query: None
2025-06-15 15:45:16,505 - __main__ - INFO - Database connection established.
2025-06-15 15:45:16,505 - __main__ - CRITICAL - An unexpected critical error occurred: argument 1 must be str, not None
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app.py", line 318, in chat
    cursor.execute(sql_query)
TypeError: argument 1 must be str, not None
2025-06-15 15:45:19,082 - __main__ - INFO - User Query (es): hola
2025-06-15 15:45:20,126 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 15:45:20,127 - __main__ - INFO - Generated SQL Query: SELECT 'Â¡Hola! Â¿En quÃ© puedo ayudarte hoy?' AS saludo;
2025-06-15 15:45:20,128 - __main__ - INFO - Database connection established.
2025-06-15 15:45:20,128 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10da77cb0>]
2025-06-15 15:45:21,201 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 15:45:21,201 - __main__ - INFO - Final Assistant Response (NL): Â¡Hola! Â¿En quÃ© puedo ayudarte hoy?
2025-06-15 15:45:31,149 - __main__ - INFO - User Query (es): necesito ayuda para mis transacciones
2025-06-15 15:45:32,347 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 15:45:32,347 - __main__ - INFO - Generated SQL Query: SELECT * FROM bank_transactions LIMIT 5;
2025-06-15 15:45:32,349 - __main__ - INFO - Database connection established.
2025-06-15 15:45:32,352 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10da77510>, <sqlite3.Row object at 0x10da77ed0>, <sqlite3.Row object at 0x10da77650>, <sqlite3.Row object at 0x10da77a10>, <sqlite3.Row object at 0x10da77d70>]
2025-06-15 15:45:33,513 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 15:45:33,513 - __main__ - INFO - Final Assistant Response (NL): Â¡Claro! Puedo ayudarte con eso. AquÃ­ tienes algunas de tus transacciones mÃ¡s recientes. Â¿QuÃ© te gustarÃ­a saber especÃ­ficamente? Por ejemplo, Â¿quieres ver tus depÃ³sitos, retiros, o quizÃ¡s transacciones en una fecha especÃ­fica?
2025-06-15 15:47:42,902 - app - INFO - Flask Application started.
2025-06-15 15:47:42,917 - app - INFO - Database connection established.
2025-06-15 15:47:42,918 - app - INFO - Database schema retrieved and cached.
2025-06-15 15:47:42,962 - app - INFO - Philippine holidays fetched and cached.
2025-06-15 15:47:43,221 - app - INFO - Flask Application started.
2025-06-15 15:47:43,231 - app - INFO - Database connection established.
2025-06-15 15:47:43,231 - app - INFO - Database schema retrieved and cached.
2025-06-15 15:47:43,260 - app - INFO - Philippine holidays fetched and cached.
2025-06-15 15:47:50,300 - app - INFO - Initialized new chat session (messages in Flask session).
2025-06-15 15:47:53,403 - app - INFO - User Query (es): hola
2025-06-15 15:47:55,713 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 15:47:55,714 - app - INFO - Generated SQL Query: SELECT strftime('%Y-%m-%d', Date) AS Date, "Transaction Details", "Branch / Source", Withdrawals, Deposits, Balance FROM bank_transactions ORDER BY Date ASC;
2025-06-15 15:47:55,717 - app - INFO - Database connection established.
2025-06-15 15:47:55,725 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x108e88130>, <sqlite3.Row object at 0x108e88c50>, <sqlite3.Row object at 0x108e88fd0>, <sqlite3.Row object at 0x108e88f90>, <sqlite3.Row object at 0x108e88f30>, <sqlite3.Row object at 0x108e88ed0>, <sqlite3.Row object at 0x108f5d0f0>, <sqlite3.Row object at 0x108f5d170>, <sqlite3.Row object at 0x108f5d1d0>, <sqlite3.Row object at 0x108f5d230>, <sqlite3.Row object at 0x108f5d290>, <sqlite3.Row object at 0x108f5d2f0>, <sqlite3.Row object at 0x108f5d350>, <sqlite3.Row object at 0x108f5d3b0>, <sqlite3.Row object at 0x108f5d410>, <sqlite3.Row object at 0x108f5d470>, <sqlite3.Row object at 0x108f5d4d0>, <sqlite3.Row object at 0x108f5d530>, <sqlite3.Row object at 0x108f5d590>, <sqlite3.Row object at 0x108f5d5f0>, <sqlite3.Row object at 0x108f5d650>, <sqlite3.Row object at 0x108f5d6b0>, <sqlite3.Row object at 0x108f5d710>, <sqlite3.Row object at 0x108f5d770>, <sqlite3.Row object at 0x108f5d7d0>, <sqlite3.Row object at 0x108f5d830>, <sqlite3.Row object at 0x108f5d890>, <sqlite3.Row object at 0x108f5d8f0>, <sqlite3.Row object at 0x108f5d950>, <sqlite3.Row object at 0x108f5d9b0>, <sqlite3.Row object at 0x108f5da10>, <sqlite3.Row object at 0x108f5da70>, <sqlite3.Row object at 0x108f5dad0>, <sqlite3.Row object at 0x108f5db30>, <sqlite3.Row object at 0x108f5db90>, <sqlite3.Row object at 0x108f5dbf0>, <sqlite3.Row object at 0x108f5dc50>, <sqlite3.Row object at 0x108f5dcb0>, <sqlite3.Row object at 0x108f5dd10>, <sqlite3.Row object at 0x108f5dd70>, <sqlite3.Row object at 0x108f5ddd0>, <sqlite3.Row object at 0x108f5de30>, <sqlite3.Row object at 0x108f5de90>, <sqlite3.Row object at 0x108f5def0>, <sqlite3.Row object at 0x108f5df50>, <sqlite3.Row object at 0x108f5dfb0>, <sqlite3.Row object at 0x108f6d050>, <sqlite3.Row object at 0x108f6d0b0>, <sqlite3.Row object at 0x108f6d110>, <sqlite3.Row object at 0x108f6d170>, <sqlite3.Row object at 0x108f6d1d0>, <sqlite3.Row object at 0x108f6d230>, <sqlite3.Row object at 0x108f6d290>, <sqlite3.Row object at 0x108f6d2f0>, <sqlite3.Row object at 0x108f6d350>, <sqlite3.Row object at 0x108f6d3b0>, <sqlite3.Row object at 0x108f6d410>, <sqlite3.Row object at 0x108f6d470>, <sqlite3.Row object at 0x108f6d4d0>, <sqlite3.Row object at 0x108f6d530>, <sqlite3.Row object at 0x108f6d590>, <sqlite3.Row object at 0x108f6d5f0>, <sqlite3.Row object at 0x108f6d650>, <sqlite3.Row object at 0x108f6d6b0>, <sqlite3.Row object at 0x108f6d710>, <sqlite3.Row object at 0x108f6d770>, <sqlite3.Row object at 0x108f6d7d0>, <sqlite3.Row object at 0x108f6d830>, <sqlite3.Row object at 0x108f6d890>, <sqlite3.Row object at 0x108f6d8f0>, <sqlite3.Row object at 0x108f6d950>, <sqlite3.Row object at 0x108f6d9b0>, <sqlite3.Row object at 0x108f6da10>, <sqlite3.Row object at 0x108f6da70>, <sqlite3.Row object at 0x108f6dad0>, <sqlite3.Row object at 0x108f6db30>, <sqlite3.Row object at 0x108f6db90>, <sqlite3.Row object at 0x108f6dbf0>, <sqlite3.Row object at 0x108f6dc50>, <sqlite3.Row object at 0x108f6dcb0>, <sqlite3.Row object at 0x108f6dd10>, <sqlite3.Row object at 0x108f6dd70>, <sqlite3.Row object at 0x108f6ddd0>, <sqlite3.Row object at 0x108f6de30>, <sqlite3.Row object at 0x108f6de90>, <sqlite3.Row object at 0x108f6def0>, <sqlite3.Row object at 0x108f6df50>, <sqlite3.Row object at 0x108f6dfb0>, <sqlite3.Row object at 0x108f72050>, <sqlite3.Row object at 0x108f720b0>, <sqlite3.Row object at 0x108f72110>, <sqlite3.Row object at 0x108f72170>, <sqlite3.Row object at 0x108f721d0>, <sqlite3.Row object at 0x108f72230>, <sqlite3.Row object at 0x108f72290>, <sqlite3.Row object at 0x108f722f0>, <sqlite3.Row object at 0x108f72350>, <sqlite3.Row object at 0x108f723b0>, <sqlite3.Row object at 0x108f72410>, <sqlite3.Row object at 0x108f72470>, <sqlite3.Row object at 0x108f724d0>, <sqlite3.Row object at 0x108f72530>, <sqlite3.Row object at 0x108f72590>, <sqlite3.Row object at 0x108f725f0>, <sqlite3.Row object at 0x108f72650>, <sqlite3.Row object at 0x108f726b0>, <sqlite3.Row object at 0x108f72710>, <sqlite3.Row object at 0x108f72770>, <sqlite3.Row object at 0x108f727d0>, <sqlite3.Row object at 0x108f72830>, <sqlite3.Row object at 0x108f72890>, <sqlite3.Row object at 0x108f728f0>, <sqlite3.Row object at 0x108f72950>, <sqlite3.Row object at 0x108f729b0>, <sqlite3.Row object at 0x108f72a10>, <sqlite3.Row object at 0x108f72a70>, <sqlite3.Row object at 0x108f72ad0>, <sqlite3.Row object at 0x108f72b30>, <sqlite3.Row object at 0x108f72b90>, <sqlite3.Row object at 0x108f72bf0>, <sqlite3.Row object at 0x108f72c50>, <sqlite3.Row object at 0x108f72cb0>, <sqlite3.Row object at 0x108f72d10>, <sqlite3.Row object at 0x108f72d70>, <sqlite3.Row object at 0x108f72dd0>, <sqlite3.Row object at 0x108f72e30>, <sqlite3.Row object at 0x108f72e90>, <sqlite3.Row object at 0x108f72ef0>, <sqlite3.Row object at 0x108f72f50>, <sqlite3.Row object at 0x108f72fb0>, <sqlite3.Row object at 0x108f95050>, <sqlite3.Row object at 0x108f950b0>, <sqlite3.Row object at 0x108f95110>, <sqlite3.Row object at 0x108f95170>, <sqlite3.Row object at 0x108f951d0>, <sqlite3.Row object at 0x108f95230>, <sqlite3.Row object at 0x108f95290>, <sqlite3.Row object at 0x108f952f0>, <sqlite3.Row object at 0x108f95350>, <sqlite3.Row object at 0x108f953b0>, <sqlite3.Row object at 0x108f95410>, <sqlite3.Row object at 0x108f95470>, <sqlite3.Row object at 0x108f954d0>, <sqlite3.Row object at 0x108f95530>, <sqlite3.Row object at 0x108f95590>, <sqlite3.Row object at 0x108f955f0>, <sqlite3.Row object at 0x108f95650>, <sqlite3.Row object at 0x108f956b0>, <sqlite3.Row object at 0x108f95710>, <sqlite3.Row object at 0x108f95770>, <sqlite3.Row object at 0x108f957d0>, <sqlite3.Row object at 0x108f95830>, <sqlite3.Row object at 0x108f95890>, <sqlite3.Row object at 0x108f958f0>, <sqlite3.Row object at 0x108f95950>, <sqlite3.Row object at 0x108f959b0>, <sqlite3.Row object at 0x108f95a10>, <sqlite3.Row object at 0x108f95a70>, <sqlite3.Row object at 0x108f95ad0>, <sqlite3.Row object at 0x108f95b30>, <sqlite3.Row object at 0x108f95b90>, <sqlite3.Row object at 0x108f95bf0>, <sqlite3.Row object at 0x108f95c50>, <sqlite3.Row object at 0x108f95cb0>, <sqlite3.Row object at 0x108f95d10>, <sqlite3.Row object at 0x108f95d70>, <sqlite3.Row object at 0x108f95dd0>, <sqlite3.Row object at 0x108f95e30>, <sqlite3.Row object at 0x108f95e90>, <sqlite3.Row object at 0x108f95ef0>, <sqlite3.Row object at 0x108f95f50>, <sqlite3.Row object at 0x108f95fb0>, <sqlite3.Row object at 0x108f99050>, <sqlite3.Row object at 0x108f990b0>, <sqlite3.Row object at 0x108f99110>, <sqlite3.Row object at 0x108f99170>, <sqlite3.Row object at 0x108f991d0>, <sqlite3.Row object at 0x108f99230>, <sqlite3.Row object at 0x108f99290>, <sqlite3.Row object at 0x108f992f0>, <sqlite3.Row object at 0x108f99350>, <sqlite3.Row object at 0x108f993b0>, <sqlite3.Row object at 0x108f99410>, <sqlite3.Row object at 0x108f99470>, <sqlite3.Row object at 0x108f994d0>, <sqlite3.Row object at 0x108f99530>, <sqlite3.Row object at 0x108f99590>, <sqlite3.Row object at 0x108f995f0>, <sqlite3.Row object at 0x108f99650>, <sqlite3.Row object at 0x108f996b0>, <sqlite3.Row object at 0x108f99710>, <sqlite3.Row object at 0x108f99770>, <sqlite3.Row object at 0x108f997d0>, <sqlite3.Row object at 0x108f99830>, <sqlite3.Row object at 0x108f99890>, <sqlite3.Row object at 0x108f998f0>, <sqlite3.Row object at 0x108f99950>, <sqlite3.Row object at 0x108f999b0>, <sqlite3.Row object at 0x108f99a10>, <sqlite3.Row object at 0x108f99a70>, <sqlite3.Row object at 0x108f99ad0>, <sqlite3.Row object at 0x108f99b30>, <sqlite3.Row object at 0x108f99b90>, <sqlite3.Row object at 0x108f99bf0>, <sqlite3.Row object at 0x108f99c50>, <sqlite3.Row object at 0x108f99cb0>, <sqlite3.Row object at 0x108f99d10>, <sqlite3.Row object at 0x108f99d70>, <sqlite3.Row object at 0x108f99dd0>, <sqlite3.Row object at 0x108f99e30>, <sqlite3.Row object at 0x108f99e90>, <sqlite3.Row object at 0x108f99ef0>, <sqlite3.Row object at 0x108f99f50>, <sqlite3.Row object at 0x108f99fb0>, <sqlite3.Row object at 0x108f9d050>, <sqlite3.Row object at 0x108f9d0b0>, <sqlite3.Row object at 0x108f9d110>, <sqlite3.Row object at 0x108f9d170>, <sqlite3.Row object at 0x108f9d1d0>, <sqlite3.Row object at 0x108f9d230>, <sqlite3.Row object at 0x108f9d290>, <sqlite3.Row object at 0x108f9d2f0>, <sqlite3.Row object at 0x108f9d350>, <sqlite3.Row object at 0x108f9d3b0>, <sqlite3.Row object at 0x108f9d410>, <sqlite3.Row object at 0x108f9d470>, <sqlite3.Row object at 0x108f9d4d0>, <sqlite3.Row object at 0x108f9d530>, <sqlite3.Row object at 0x108f9d590>, <sqlite3.Row object at 0x108f9d5f0>, <sqlite3.Row object at 0x108f9d650>, <sqlite3.Row object at 0x108f9d6b0>, <sqlite3.Row object at 0x108f9d710>, <sqlite3.Row object at 0x108f9d770>, <sqlite3.Row object at 0x108f9d7d0>, <sqlite3.Row object at 0x108f9d830>, <sqlite3.Row object at 0x108f9d890>, <sqlite3.Row object at 0x108f9d8f0>, <sqlite3.Row object at 0x108f9d950>, <sqlite3.Row object at 0x108f9d9b0>, <sqlite3.Row object at 0x108f9da10>, <sqlite3.Row object at 0x108f9da70>, <sqlite3.Row object at 0x108f9dad0>, <sqlite3.Row object at 0x108f9db30>, <sqlite3.Row object at 0x108f9db90>, <sqlite3.Row object at 0x108f9dbf0>, <sqlite3.Row object at 0x108f9dc50>, <sqlite3.Row object at 0x108f9dcb0>, <sqlite3.Row object at 0x108f9dd10>, <sqlite3.Row object at 0x108f9dd70>, <sqlite3.Row object at 0x108f9ddd0>, <sqlite3.Row object at 0x108f9de30>, <sqlite3.Row object at 0x108f9de90>, <sqlite3.Row object at 0x108f9def0>, <sqlite3.Row object at 0x108f9df50>, <sqlite3.Row object at 0x108f9dfb0>, <sqlite3.Row object at 0x108fa1050>, <sqlite3.Row object at 0x108fa10b0>, <sqlite3.Row object at 0x108fa1110>, <sqlite3.Row object at 0x108fa1170>, <sqlite3.Row object at 0x108fa11d0>, <sqlite3.Row object at 0x108fa1230>, <sqlite3.Row object at 0x108fa1290>, <sqlite3.Row object at 0x108fa12f0>, <sqlite3.Row object at 0x108fa1350>, <sqlite3.Row object at 0x108fa13b0>, <sqlite3.Row object at 0x108fa1410>, <sqlite3.Row object at 0x108fa1470>, <sqlite3.Row object at 0x108fa14d0>, <sqlite3.Row object at 0x108fa1530>, <sqlite3.Row object at 0x108fa1590>, <sqlite3.Row object at 0x108fa15f0>, <sqlite3.Row object at 0x108fa1650>, <sqlite3.Row object at 0x108fa16b0>, <sqlite3.Row object at 0x108fa1710>, <sqlite3.Row object at 0x108fa1770>, <sqlite3.Row object at 0x108fa17d0>, <sqlite3.Row object at 0x108fa1830>, <sqlite3.Row object at 0x108fa1890>, <sqlite3.Row object at 0x108fa18f0>, <sqlite3.Row object at 0x108fa1950>, <sqlite3.Row object at 0x108fa19b0>, <sqlite3.Row object at 0x108fa1a10>, <sqlite3.Row object at 0x108fa1a70>, <sqlite3.Row object at 0x108fa1ad0>, <sqlite3.Row object at 0x108fa1b30>, <sqlite3.Row object at 0x108fa1b90>, <sqlite3.Row object at 0x108fa1bf0>, <sqlite3.Row object at 0x108fa1c50>, <sqlite3.Row object at 0x108fa1cb0>, <sqlite3.Row object at 0x108fa1d10>, <sqlite3.Row object at 0x108fa1d70>, <sqlite3.Row object at 0x108fa1dd0>, <sqlite3.Row object at 0x108fa1e30>, <sqlite3.Row object at 0x108fa1e90>, <sqlite3.Row object at 0x108fa1ef0>, <sqlite3.Row object at 0x108fa1f50>, <sqlite3.Row object at 0x108fa1fb0>, <sqlite3.Row object at 0x108fa5050>, <sqlite3.Row object at 0x108fa50b0>, <sqlite3.Row object at 0x108fa5110>, <sqlite3.Row object at 0x108fa5170>, <sqlite3.Row object at 0x108fa51d0>, <sqlite3.Row object at 0x108fa5230>, <sqlite3.Row object at 0x108fa5290>, <sqlite3.Row object at 0x108fa52f0>, <sqlite3.Row object at 0x108fa5350>, <sqlite3.Row object at 0x108fa53b0>, <sqlite3.Row object at 0x108fa5410>, <sqlite3.Row object at 0x108fa5470>, <sqlite3.Row object at 0x108fa54d0>, <sqlite3.Row object at 0x108fa5530>, <sqlite3.Row object at 0x108fa5590>, <sqlite3.Row object at 0x108fa55f0>, <sqlite3.Row object at 0x108fa5650>, <sqlite3.Row object at 0x108fa56b0>, <sqlite3.Row object at 0x108fa5710>, <sqlite3.Row object at 0x108fa5770>, <sqlite3.Row object at 0x108fa57d0>, <sqlite3.Row object at 0x108fa5830>, <sqlite3.Row object at 0x108fa5890>, <sqlite3.Row object at 0x108fa58f0>, <sqlite3.Row object at 0x108fa5950>, <sqlite3.Row object at 0x108fa59b0>, <sqlite3.Row object at 0x108fa5a10>, <sqlite3.Row object at 0x108fa5a70>, <sqlite3.Row object at 0x108fa5ad0>, <sqlite3.Row object at 0x108fa5b30>, <sqlite3.Row object at 0x108fa5b90>, <sqlite3.Row object at 0x108fa5bf0>, <sqlite3.Row object at 0x108fa5c50>, <sqlite3.Row object at 0x108fa5cb0>, <sqlite3.Row object at 0x108fa5d10>, <sqlite3.Row object at 0x108fa5d70>, <sqlite3.Row object at 0x108fa5dd0>, <sqlite3.Row object at 0x108fa5e30>, <sqlite3.Row object at 0x108fa5e90>, <sqlite3.Row object at 0x108fa5ef0>, <sqlite3.Row object at 0x108fa5f50>, <sqlite3.Row object at 0x108fa5fb0>, <sqlite3.Row object at 0x108fa9050>, <sqlite3.Row object at 0x108fa90b0>, <sqlite3.Row object at 0x108fa9110>, <sqlite3.Row object at 0x108fa9170>, <sqlite3.Row object at 0x108fa91d0>, <sqlite3.Row object at 0x108fa9230>, <sqlite3.Row object at 0x108fa9290>, <sqlite3.Row object at 0x108fa92f0>, <sqlite3.Row object at 0x108fa9350>, <sqlite3.Row object at 0x108fa93b0>, <sqlite3.Row object at 0x108fa9410>, <sqlite3.Row object at 0x108fa9470>, <sqlite3.Row object at 0x108fa94d0>, <sqlite3.Row object at 0x108fa9530>, <sqlite3.Row object at 0x108fa9590>, <sqlite3.Row object at 0x108fa95f0>, <sqlite3.Row object at 0x108fa9650>, <sqlite3.Row object at 0x108fa96b0>, <sqlite3.Row object at 0x108fa9710>, <sqlite3.Row object at 0x108fa9770>, <sqlite3.Row object at 0x108fa97d0>, <sqlite3.Row object at 0x108fa9830>, <sqlite3.Row object at 0x108fa9890>, <sqlite3.Row object at 0x108fa98f0>, <sqlite3.Row object at 0x108fa9950>, <sqlite3.Row object at 0x108fa99b0>, <sqlite3.Row object at 0x108fa9a10>, <sqlite3.Row object at 0x108fa9a70>, <sqlite3.Row object at 0x108fa9ad0>, <sqlite3.Row object at 0x108fa9b30>, <sqlite3.Row object at 0x108fa9b90>, <sqlite3.Row object at 0x108fa9bf0>, <sqlite3.Row object at 0x108fa9c50>, <sqlite3.Row object at 0x108fa9cb0>, <sqlite3.Row object at 0x108fa9d10>, <sqlite3.Row object at 0x108fa9d70>, <sqlite3.Row object at 0x108fa9dd0>, <sqlite3.Row object at 0x108fa9e30>, <sqlite3.Row object at 0x108fa9e90>, <sqlite3.Row object at 0x108fa9ef0>, <sqlite3.Row object at 0x108fa9f50>, <sqlite3.Row object at 0x108fa9fb0>, <sqlite3.Row object at 0x108fad050>, <sqlite3.Row object at 0x108fad0b0>, <sqlite3.Row object at 0x108fad110>, <sqlite3.Row object at 0x108fad170>, <sqlite3.Row object at 0x108fad1d0>, <sqlite3.Row object at 0x108fad230>, <sqlite3.Row object at 0x108fad290>, <sqlite3.Row object at 0x108fad2f0>, <sqlite3.Row object at 0x108fad350>, <sqlite3.Row object at 0x108fad3b0>, <sqlite3.Row object at 0x108fad410>, <sqlite3.Row object at 0x108fad470>, <sqlite3.Row object at 0x108fad4d0>, <sqlite3.Row object at 0x108fad530>, <sqlite3.Row object at 0x108fad590>, <sqlite3.Row object at 0x108fad5f0>, <sqlite3.Row object at 0x108fad650>, <sqlite3.Row object at 0x108fad6b0>, <sqlite3.Row object at 0x108fad710>, <sqlite3.Row object at 0x108fad770>, <sqlite3.Row object at 0x108fad7d0>, <sqlite3.Row object at 0x108fad830>, <sqlite3.Row object at 0x108fad890>, <sqlite3.Row object at 0x108fad8f0>, <sqlite3.Row object at 0x108fad950>, <sqlite3.Row object at 0x108fad9b0>, <sqlite3.Row object at 0x108fada10>, <sqlite3.Row object at 0x108fada70>, <sqlite3.Row object at 0x108fadad0>, <sqlite3.Row object at 0x108fadb30>, <sqlite3.Row object at 0x108fadb90>, <sqlite3.Row object at 0x108fadbf0>, <sqlite3.Row object at 0x108fadc50>, <sqlite3.Row object at 0x108fadcb0>, <sqlite3.Row object at 0x108fadd10>, <sqlite3.Row object at 0x108fadd70>, <sqlite3.Row object at 0x108faddd0>, <sqlite3.Row object at 0x108fade30>, <sqlite3.Row object at 0x108fade90>, <sqlite3.Row object at 0x108fadef0>, <sqlite3.Row object at 0x108fadf50>, <sqlite3.Row object at 0x108fadfb0>, <sqlite3.Row object at 0x108fb1050>, <sqlite3.Row object at 0x108fb10b0>, <sqlite3.Row object at 0x108fb1110>, <sqlite3.Row object at 0x108fb1170>, <sqlite3.Row object at 0x108fb11d0>, <sqlite3.Row object at 0x108fb1230>, <sqlite3.Row object at 0x108fb1290>, <sqlite3.Row object at 0x108fb12f0>, <sqlite3.Row object at 0x108fb1350>, <sqlite3.Row object at 0x108fb13b0>, <sqlite3.Row object at 0x108fb1410>, <sqlite3.Row object at 0x108fb1470>, <sqlite3.Row object at 0x108fb14d0>, <sqlite3.Row object at 0x108fb1530>, <sqlite3.Row object at 0x108fb1590>, <sqlite3.Row object at 0x108fb15f0>, <sqlite3.Row object at 0x108fb1650>, <sqlite3.Row object at 0x108fb16b0>, <sqlite3.Row object at 0x108fb1710>, <sqlite3.Row object at 0x108fb1770>, <sqlite3.Row object at 0x108fb17d0>, <sqlite3.Row object at 0x108fb1830>, <sqlite3.Row object at 0x108fb1890>, <sqlite3.Row object at 0x108fb18f0>, <sqlite3.Row object at 0x108fb1950>, <sqlite3.Row object at 0x108fb19b0>, <sqlite3.Row object at 0x108fb1a10>, <sqlite3.Row object at 0x108fb1a70>, <sqlite3.Row object at 0x108fb1ad0>, <sqlite3.Row object at 0x108fb1b30>, <sqlite3.Row object at 0x108fb1b90>, <sqlite3.Row object at 0x108fb1bf0>, <sqlite3.Row object at 0x108fb1c50>, <sqlite3.Row object at 0x108fb1cb0>, <sqlite3.Row object at 0x108fb1d10>, <sqlite3.Row object at 0x108fb1d70>, <sqlite3.Row object at 0x108fb1dd0>, <sqlite3.Row object at 0x108fb1e30>, <sqlite3.Row object at 0x108fb1e90>, <sqlite3.Row object at 0x108fb1ef0>, <sqlite3.Row object at 0x108fb1f50>, <sqlite3.Row object at 0x108fb1fb0>, <sqlite3.Row object at 0x108fb5050>, <sqlite3.Row object at 0x108fb50b0>, <sqlite3.Row object at 0x108fb5110>, <sqlite3.Row object at 0x108fb5170>, <sqlite3.Row object at 0x108fb51d0>, <sqlite3.Row object at 0x108fb5230>, <sqlite3.Row object at 0x108fb5290>, <sqlite3.Row object at 0x108fb52f0>, <sqlite3.Row object at 0x108fb5350>, <sqlite3.Row object at 0x108fb53b0>, <sqlite3.Row object at 0x108fb5410>, <sqlite3.Row object at 0x108fb5470>, <sqlite3.Row object at 0x108fb54d0>, <sqlite3.Row object at 0x108fb5530>, <sqlite3.Row object at 0x108fb5590>, <sqlite3.Row object at 0x108fb55f0>, <sqlite3.Row object at 0x108fb5650>, <sqlite3.Row object at 0x108fb56b0>, <sqlite3.Row object at 0x108fb5710>, <sqlite3.Row object at 0x108fb5770>, <sqlite3.Row object at 0x108fb57d0>, <sqlite3.Row object at 0x108fb5830>, <sqlite3.Row object at 0x108fb5890>, <sqlite3.Row object at 0x108fb58f0>, <sqlite3.Row object at 0x108fb5950>, <sqlite3.Row object at 0x108fb59b0>, <sqlite3.Row object at 0x108fb5a10>, <sqlite3.Row object at 0x108fb5a70>, <sqlite3.Row object at 0x108fb5ad0>, <sqlite3.Row object at 0x108fb5b30>, <sqlite3.Row object at 0x108fb5b90>, <sqlite3.Row object at 0x108fb5bf0>, <sqlite3.Row object at 0x108fb5c50>, <sqlite3.Row object at 0x108fb5cb0>, <sqlite3.Row object at 0x108fb5d10>, <sqlite3.Row object at 0x108fb5d70>, <sqlite3.Row object at 0x108fb5dd0>, <sqlite3.Row object at 0x108fb5e30>, <sqlite3.Row object at 0x108fb5e90>, <sqlite3.Row object at 0x108fb5ef0>, <sqlite3.Row object at 0x108fb5f50>, <sqlite3.Row object at 0x108fb5fb0>, <sqlite3.Row object at 0x108fb9050>, <sqlite3.Row object at 0x108fb90b0>, <sqlite3.Row object at 0x108fb9110>, <sqlite3.Row object at 0x108fb9170>, <sqlite3.Row object at 0x108fb91d0>, <sqlite3.Row object at 0x108fb9230>, <sqlite3.Row object at 0x108fb9290>, <sqlite3.Row object at 0x108fb92f0>, <sqlite3.Row object at 0x108fb9350>, <sqlite3.Row object at 0x108fb93b0>, <sqlite3.Row object at 0x108fb9410>, <sqlite3.Row object at 0x108fb9470>, <sqlite3.Row object at 0x108fb94d0>, <sqlite3.Row object at 0x108fb9530>, <sqlite3.Row object at 0x108fb9590>, <sqlite3.Row object at 0x108fb95f0>, <sqlite3.Row object at 0x108fb9650>, <sqlite3.Row object at 0x108fb96b0>, <sqlite3.Row object at 0x108fb9710>, <sqlite3.Row object at 0x108fb9770>, <sqlite3.Row object at 0x108fb97d0>, <sqlite3.Row object at 0x108fb9830>, <sqlite3.Row object at 0x108fb9890>, <sqlite3.Row object at 0x108fb98f0>, <sqlite3.Row object at 0x108fb9950>, <sqlite3.Row object at 0x108fb99b0>, <sqlite3.Row object at 0x108fb9a10>, <sqlite3.Row object at 0x108fb9a70>, <sqlite3.Row object at 0x108fb9ad0>, <sqlite3.Row object at 0x108fb9b30>, <sqlite3.Row object at 0x108fb9b90>, <sqlite3.Row object at 0x108fb9bf0>, <sqlite3.Row object at 0x108fb9c50>, <sqlite3.Row object at 0x108fb9cb0>, <sqlite3.Row object at 0x108fb9d10>, <sqlite3.Row object at 0x108fb9d70>, <sqlite3.Row object at 0x108fb9dd0>, <sqlite3.Row object at 0x108fb9e30>, <sqlite3.Row object at 0x108fb9e90>, <sqlite3.Row object at 0x108fb9ef0>, <sqlite3.Row object at 0x108fb9f50>, <sqlite3.Row object at 0x108fb9fb0>, <sqlite3.Row object at 0x108fbe050>, <sqlite3.Row object at 0x108fbe0b0>, <sqlite3.Row object at 0x108fbe110>, <sqlite3.Row object at 0x108fbe170>, <sqlite3.Row object at 0x108fbe1d0>, <sqlite3.Row object at 0x108fbe230>, <sqlite3.Row object at 0x108fbe290>, <sqlite3.Row object at 0x108fbe2f0>, <sqlite3.Row object at 0x108fbe350>, <sqlite3.Row object at 0x108fbe3b0>, <sqlite3.Row object at 0x108fbe410>, <sqlite3.Row object at 0x108fbe470>, <sqlite3.Row object at 0x108fbe4d0>, <sqlite3.Row object at 0x108fbe530>, <sqlite3.Row object at 0x108fbe590>, <sqlite3.Row object at 0x108fbe5f0>, <sqlite3.Row object at 0x108fbe650>, <sqlite3.Row object at 0x108fbe6b0>, <sqlite3.Row object at 0x108fbe710>, <sqlite3.Row object at 0x108fbe770>, <sqlite3.Row object at 0x108fbe7d0>, <sqlite3.Row object at 0x108fbe830>, <sqlite3.Row object at 0x108fbe890>, <sqlite3.Row object at 0x108fbe8f0>, <sqlite3.Row object at 0x108fbe950>, <sqlite3.Row object at 0x108fbe9b0>, <sqlite3.Row object at 0x108fbea10>, <sqlite3.Row object at 0x108fbea70>, <sqlite3.Row object at 0x108fbead0>, <sqlite3.Row object at 0x108fbeb30>, <sqlite3.Row object at 0x108fbeb90>, <sqlite3.Row object at 0x108fbebf0>, <sqlite3.Row object at 0x108fbec50>, <sqlite3.Row object at 0x108fbecb0>, <sqlite3.Row object at 0x108fbed10>, <sqlite3.Row object at 0x108fbed70>, <sqlite3.Row object at 0x108fbedd0>, <sqlite3.Row object at 0x108fbee30>, <sqlite3.Row object at 0x108fbee90>, <sqlite3.Row object at 0x108fbeef0>, <sqlite3.Row object at 0x108fbef50>, <sqlite3.Row object at 0x108fbefb0>, <sqlite3.Row object at 0x108fc2050>, <sqlite3.Row object at 0x108fc20b0>, <sqlite3.Row object at 0x108fc2110>, <sqlite3.Row object at 0x108fc2170>, <sqlite3.Row object at 0x108fc21d0>, <sqlite3.Row object at 0x108fc2230>, <sqlite3.Row object at 0x108fc2290>, <sqlite3.Row object at 0x108fc22f0>, <sqlite3.Row object at 0x108fc2350>, <sqlite3.Row object at 0x108fc23b0>, <sqlite3.Row object at 0x108fc2410>, <sqlite3.Row object at 0x108fc2470>, <sqlite3.Row object at 0x108fc24d0>, <sqlite3.Row object at 0x108fc2530>, <sqlite3.Row object at 0x108fc2590>, <sqlite3.Row object at 0x108fc25f0>, <sqlite3.Row object at 0x108fc2650>, <sqlite3.Row object at 0x108fc26b0>, <sqlite3.Row object at 0x108fc2710>, <sqlite3.Row object at 0x108fc2770>, <sqlite3.Row object at 0x108fc27d0>, <sqlite3.Row object at 0x108fc2830>, <sqlite3.Row object at 0x108fc2890>, <sqlite3.Row object at 0x108fc28f0>, <sqlite3.Row object at 0x108fc2950>, <sqlite3.Row object at 0x108fc29b0>, <sqlite3.Row object at 0x108fc2a10>, <sqlite3.Row object at 0x108fc2a70>, <sqlite3.Row object at 0x108fc2ad0>, <sqlite3.Row object at 0x108fc2b30>, <sqlite3.Row object at 0x108fc2b90>, <sqlite3.Row object at 0x108fc2bf0>, <sqlite3.Row object at 0x108fc2c50>, <sqlite3.Row object at 0x108fc2cb0>, <sqlite3.Row object at 0x108fc2d10>, <sqlite3.Row object at 0x108fc2d70>, <sqlite3.Row object at 0x108fc2dd0>, <sqlite3.Row object at 0x108fc2e30>, <sqlite3.Row object at 0x108fc2e90>, <sqlite3.Row object at 0x108fc2ef0>, <sqlite3.Row object at 0x108fc2f50>, <sqlite3.Row object at 0x108fc2fb0>, <sqlite3.Row object at 0x108fc6050>, <sqlite3.Row object at 0x108fc60b0>, <sqlite3.Row object at 0x108fc6110>, <sqlite3.Row object at 0x108fc6170>, <sqlite3.Row object at 0x108fc61d0>, <sqlite3.Row object at 0x108fc6230>, <sqlite3.Row object at 0x108fc6290>, <sqlite3.Row object at 0x108fc62f0>, <sqlite3.Row object at 0x108fc6350>, <sqlite3.Row object at 0x108fc63b0>, <sqlite3.Row object at 0x108fc6410>, <sqlite3.Row object at 0x108fc6470>, <sqlite3.Row object at 0x108fc64d0>, <sqlite3.Row object at 0x108fc6530>, <sqlite3.Row object at 0x108fc6590>, <sqlite3.Row object at 0x108fc65f0>, <sqlite3.Row object at 0x108fc6650>, <sqlite3.Row object at 0x108fc66b0>, <sqlite3.Row object at 0x108fc6710>, <sqlite3.Row object at 0x108fc6770>, <sqlite3.Row object at 0x108fc67d0>, <sqlite3.Row object at 0x108fc6830>, <sqlite3.Row object at 0x108fc6890>, <sqlite3.Row object at 0x108fc68f0>, <sqlite3.Row object at 0x108fc6950>, <sqlite3.Row object at 0x108fc69b0>, <sqlite3.Row object at 0x108fc6a10>, <sqlite3.Row object at 0x108fc6a70>, <sqlite3.Row object at 0x108fc6ad0>, <sqlite3.Row object at 0x108fc6b30>, <sqlite3.Row object at 0x108fc6b90>, <sqlite3.Row object at 0x108fc6bf0>, <sqlite3.Row object at 0x108fc6c50>, <sqlite3.Row object at 0x108fc6cb0>, <sqlite3.Row object at 0x108fc6d10>, <sqlite3.Row object at 0x108fc6d70>, <sqlite3.Row object at 0x108fc6dd0>, <sqlite3.Row object at 0x108fc6e30>, <sqlite3.Row object at 0x108fc6e90>, <sqlite3.Row object at 0x108fc6ef0>, <sqlite3.Row object at 0x108fc6f50>, <sqlite3.Row object at 0x108fc6fb0>, <sqlite3.Row object at 0x108fca050>, <sqlite3.Row object at 0x108fca0b0>, <sqlite3.Row object at 0x108fca110>, <sqlite3.Row object at 0x108fca170>, <sqlite3.Row object at 0x108fca1d0>, <sqlite3.Row object at 0x108fca230>, <sqlite3.Row object at 0x108fca290>, <sqlite3.Row object at 0x108fca2f0>, <sqlite3.Row object at 0x108fca350>, <sqlite3.Row object at 0x108fca3b0>, <sqlite3.Row object at 0x108fca410>, <sqlite3.Row object at 0x108fca470>, <sqlite3.Row object at 0x108fca4d0>, <sqlite3.Row object at 0x108fca530>, <sqlite3.Row object at 0x108fca590>, <sqlite3.Row object at 0x108fca5f0>, <sqlite3.Row object at 0x108fca650>, <sqlite3.Row object at 0x108fca6b0>, <sqlite3.Row object at 0x108fca710>, <sqlite3.Row object at 0x108fca770>, <sqlite3.Row object at 0x108fca7d0>, <sqlite3.Row object at 0x108fca830>, <sqlite3.Row object at 0x108fca890>, <sqlite3.Row object at 0x108fca8f0>, <sqlite3.Row object at 0x108fca950>, <sqlite3.Row object at 0x108fca9b0>, <sqlite3.Row object at 0x108fcaa10>, <sqlite3.Row object at 0x108fcaa70>, <sqlite3.Row object at 0x108fcaad0>, <sqlite3.Row object at 0x108fcab30>, <sqlite3.Row object at 0x108fcab90>, <sqlite3.Row object at 0x108fcabf0>, <sqlite3.Row object at 0x108fcac50>, <sqlite3.Row object at 0x108fcacb0>, <sqlite3.Row object at 0x108fcad10>, <sqlite3.Row object at 0x108fcad70>, <sqlite3.Row object at 0x108fcadd0>, <sqlite3.Row object at 0x108fcae30>, <sqlite3.Row object at 0x108fcae90>, <sqlite3.Row object at 0x108fcaef0>, <sqlite3.Row object at 0x108fcaf50>, <sqlite3.Row object at 0x108fcafb0>, <sqlite3.Row object at 0x108fcd050>, <sqlite3.Row object at 0x108fcd0b0>, <sqlite3.Row object at 0x108fcd110>, <sqlite3.Row object at 0x108fcd170>, <sqlite3.Row object at 0x108fcd1d0>, <sqlite3.Row object at 0x108fcd230>, <sqlite3.Row object at 0x108fcd290>, <sqlite3.Row object at 0x108fcd2f0>, <sqlite3.Row object at 0x108fcd350>, <sqlite3.Row object at 0x108fcd3b0>, <sqlite3.Row object at 0x108fcd410>, <sqlite3.Row object at 0x108fcd470>, <sqlite3.Row object at 0x108fcd4d0>, <sqlite3.Row object at 0x108fcd530>, <sqlite3.Row object at 0x108fcd590>, <sqlite3.Row object at 0x108fcd5f0>, <sqlite3.Row object at 0x108fcd650>, <sqlite3.Row object at 0x108fcd6b0>, <sqlite3.Row object at 0x108fcd710>, <sqlite3.Row object at 0x108fcd770>, <sqlite3.Row object at 0x108fcd7d0>, <sqlite3.Row object at 0x108fcd830>, <sqlite3.Row object at 0x108fcd890>, <sqlite3.Row object at 0x108fcd8f0>, <sqlite3.Row object at 0x108fcd950>, <sqlite3.Row object at 0x108fcd9b0>, <sqlite3.Row object at 0x108fcda10>, <sqlite3.Row object at 0x108fcda70>, <sqlite3.Row object at 0x108fcdad0>, <sqlite3.Row object at 0x108fcdb30>, <sqlite3.Row object at 0x108fcdb90>, <sqlite3.Row object at 0x108fcdbf0>, <sqlite3.Row object at 0x108fcdc50>, <sqlite3.Row object at 0x108fcdcb0>, <sqlite3.Row object at 0x108fcdd10>, <sqlite3.Row object at 0x108fcdd70>, <sqlite3.Row object at 0x108fcddd0>, <sqlite3.Row object at 0x108fcde30>, <sqlite3.Row object at 0x108fcde90>, <sqlite3.Row object at 0x108fcdef0>, <sqlite3.Row object at 0x108fcdf50>, <sqlite3.Row object at 0x108fcdfb0>, <sqlite3.Row object at 0x108fd1050>, <sqlite3.Row object at 0x108fd10b0>, <sqlite3.Row object at 0x108fd1110>, <sqlite3.Row object at 0x108fd1170>, <sqlite3.Row object at 0x108fd11d0>, <sqlite3.Row object at 0x108fd1230>, <sqlite3.Row object at 0x108fd1290>, <sqlite3.Row object at 0x108fd12f0>, <sqlite3.Row object at 0x108fd1350>, <sqlite3.Row object at 0x108fd13b0>, <sqlite3.Row object at 0x108fd1410>, <sqlite3.Row object at 0x108fd1470>, <sqlite3.Row object at 0x108fd14d0>, <sqlite3.Row object at 0x108fd1530>, <sqlite3.Row object at 0x108fd1590>, <sqlite3.Row object at 0x108fd15f0>, <sqlite3.Row object at 0x108fd1650>, <sqlite3.Row object at 0x108fd16b0>, <sqlite3.Row object at 0x108fd1710>, <sqlite3.Row object at 0x108fd1770>, <sqlite3.Row object at 0x108fd17d0>, <sqlite3.Row object at 0x108fd1830>, <sqlite3.Row object at 0x108fd1890>, <sqlite3.Row object at 0x108fd18f0>, <sqlite3.Row object at 0x108fd1950>, <sqlite3.Row object at 0x108fd19b0>, <sqlite3.Row object at 0x108fd1a10>, <sqlite3.Row object at 0x108fd1a70>, <sqlite3.Row object at 0x108fd1ad0>, <sqlite3.Row object at 0x108fd1b30>, <sqlite3.Row object at 0x108fd1b90>, <sqlite3.Row object at 0x108fd1bf0>, <sqlite3.Row object at 0x108fd1c50>, <sqlite3.Row object at 0x108fd1cb0>, <sqlite3.Row object at 0x108fd1d10>, <sqlite3.Row object at 0x108fd1d70>, <sqlite3.Row object at 0x108fd1dd0>, <sqlite3.Row object at 0x108fd1e30>, <sqlite3.Row object at 0x108fd1e90>, <sqlite3.Row object at 0x108fd1ef0>, <sqlite3.Row object at 0x108fd1f50>, <sqlite3.Row object at 0x108fd1fb0>, <sqlite3.Row object at 0x10d002050>, <sqlite3.Row object at 0x10d0020b0>, <sqlite3.Row object at 0x10d002110>, <sqlite3.Row object at 0x10d002170>, <sqlite3.Row object at 0x10d0021d0>, <sqlite3.Row object at 0x10d002230>, <sqlite3.Row object at 0x10d002290>, <sqlite3.Row object at 0x10d0022f0>, <sqlite3.Row object at 0x10d002350>, <sqlite3.Row object at 0x10d0023b0>, <sqlite3.Row object at 0x10d002410>, <sqlite3.Row object at 0x10d002470>, <sqlite3.Row object at 0x10d0024d0>, <sqlite3.Row object at 0x10d002530>, <sqlite3.Row object at 0x10d002590>, <sqlite3.Row object at 0x10d0025f0>, <sqlite3.Row object at 0x10d002650>, <sqlite3.Row object at 0x10d0026b0>, <sqlite3.Row object at 0x10d002710>, <sqlite3.Row object at 0x10d002770>, <sqlite3.Row object at 0x10d0027d0>, <sqlite3.Row object at 0x10d002830>, <sqlite3.Row object at 0x10d002890>, <sqlite3.Row object at 0x10d0028f0>, <sqlite3.Row object at 0x10d002950>, <sqlite3.Row object at 0x10d0029b0>, <sqlite3.Row object at 0x10d002a10>, <sqlite3.Row object at 0x10d002a70>, <sqlite3.Row object at 0x10d002ad0>, <sqlite3.Row object at 0x10d002b30>, <sqlite3.Row object at 0x10d002b90>, <sqlite3.Row object at 0x10d002bf0>, <sqlite3.Row object at 0x10d002c50>, <sqlite3.Row object at 0x10d002cb0>, <sqlite3.Row object at 0x10d002d10>, <sqlite3.Row object at 0x10d002d70>, <sqlite3.Row object at 0x10d002dd0>, <sqlite3.Row object at 0x10d002e30>, <sqlite3.Row object at 0x10d002e90>, <sqlite3.Row object at 0x10d002ef0>, <sqlite3.Row object at 0x10d002f50>, <sqlite3.Row object at 0x10d002fb0>, <sqlite3.Row object at 0x10d006050>, <sqlite3.Row object at 0x10d0060b0>, <sqlite3.Row object at 0x10d006110>, <sqlite3.Row object at 0x10d006170>, <sqlite3.Row object at 0x10d0061d0>, <sqlite3.Row object at 0x10d006230>, <sqlite3.Row object at 0x10d006290>, <sqlite3.Row object at 0x10d0062f0>, <sqlite3.Row object at 0x10d006350>, <sqlite3.Row object at 0x10d0063b0>, <sqlite3.Row object at 0x10d006410>, <sqlite3.Row object at 0x10d006470>, <sqlite3.Row object at 0x10d0064d0>, <sqlite3.Row object at 0x10d006530>, <sqlite3.Row object at 0x10d006590>, <sqlite3.Row object at 0x10d0065f0>, <sqlite3.Row object at 0x10d006650>, <sqlite3.Row object at 0x10d0066b0>, <sqlite3.Row object at 0x10d006710>, <sqlite3.Row object at 0x10d006770>, <sqlite3.Row object at 0x10d0067d0>, <sqlite3.Row object at 0x10d006830>, <sqlite3.Row object at 0x10d006890>, <sqlite3.Row object at 0x10d0068f0>, <sqlite3.Row object at 0x10d006950>, <sqlite3.Row object at 0x10d0069b0>, <sqlite3.Row object at 0x10d006a10>, <sqlite3.Row object at 0x10d006a70>, <sqlite3.Row object at 0x10d006ad0>, <sqlite3.Row object at 0x10d006b30>, <sqlite3.Row object at 0x10d006b90>, <sqlite3.Row object at 0x10d006bf0>, <sqlite3.Row object at 0x10d006c50>, <sqlite3.Row object at 0x10d006cb0>, <sqlite3.Row object at 0x10d006d10>, <sqlite3.Row object at 0x10d006d70>, <sqlite3.Row object at 0x10d006dd0>, <sqlite3.Row object at 0x10d006e30>, <sqlite3.Row object at 0x10d006e90>, <sqlite3.Row object at 0x10d006ef0>, <sqlite3.Row object at 0x10d006f50>, <sqlite3.Row object at 0x10d006fb0>, <sqlite3.Row object at 0x10d00a050>, <sqlite3.Row object at 0x10d00a0b0>, <sqlite3.Row object at 0x10d00a110>, <sqlite3.Row object at 0x10d00a170>, <sqlite3.Row object at 0x10d00a1d0>, <sqlite3.Row object at 0x10d00a230>, <sqlite3.Row object at 0x10d00a290>, <sqlite3.Row object at 0x10d00a2f0>, <sqlite3.Row object at 0x10d00a350>, <sqlite3.Row object at 0x10d00a3b0>, <sqlite3.Row object at 0x10d00a410>, <sqlite3.Row object at 0x10d00a470>, <sqlite3.Row object at 0x10d00a4d0>, <sqlite3.Row object at 0x10d00a530>, <sqlite3.Row object at 0x10d00a590>, <sqlite3.Row object at 0x10d00a5f0>, <sqlite3.Row object at 0x10d00a650>, <sqlite3.Row object at 0x10d00a6b0>, <sqlite3.Row object at 0x10d00a710>, <sqlite3.Row object at 0x10d00a770>, <sqlite3.Row object at 0x10d00a7d0>, <sqlite3.Row object at 0x10d00a830>, <sqlite3.Row object at 0x10d00a890>, <sqlite3.Row object at 0x10d00a8f0>, <sqlite3.Row object at 0x10d00a950>, <sqlite3.Row object at 0x10d00a9b0>, <sqlite3.Row object at 0x10d00aa10>, <sqlite3.Row object at 0x10d00aa70>, <sqlite3.Row object at 0x10d00aad0>, <sqlite3.Row object at 0x10d00ab30>, <sqlite3.Row object at 0x10d00ab90>, <sqlite3.Row object at 0x10d00abf0>, <sqlite3.Row object at 0x10d00ac50>, <sqlite3.Row object at 0x10d00acb0>, <sqlite3.Row object at 0x10d00ad10>, <sqlite3.Row object at 0x10d00ad70>, <sqlite3.Row object at 0x10d00add0>, <sqlite3.Row object at 0x10d00ae30>, <sqlite3.Row object at 0x10d00ae90>, <sqlite3.Row object at 0x10d00aef0>, <sqlite3.Row object at 0x10d00af50>, <sqlite3.Row object at 0x10d00afb0>, <sqlite3.Row object at 0x10d00e050>, <sqlite3.Row object at 0x10d00e0b0>, <sqlite3.Row object at 0x10d00e110>, <sqlite3.Row object at 0x10d00e170>, <sqlite3.Row object at 0x10d00e1d0>, <sqlite3.Row object at 0x10d00e230>, <sqlite3.Row object at 0x10d00e290>, <sqlite3.Row object at 0x10d00e2f0>, <sqlite3.Row object at 0x10d00e350>, <sqlite3.Row object at 0x10d00e3b0>, <sqlite3.Row object at 0x10d00e410>, <sqlite3.Row object at 0x10d00e470>, <sqlite3.Row object at 0x10d00e4d0>, <sqlite3.Row object at 0x10d00e530>, <sqlite3.Row object at 0x10d00e590>, <sqlite3.Row object at 0x10d00e5f0>, <sqlite3.Row object at 0x10d00e650>, <sqlite3.Row object at 0x10d00e6b0>, <sqlite3.Row object at 0x10d00e710>, <sqlite3.Row object at 0x10d00e770>, <sqlite3.Row object at 0x10d00e7d0>, <sqlite3.Row object at 0x10d00e830>, <sqlite3.Row object at 0x10d00e890>, <sqlite3.Row object at 0x10d00e8f0>, <sqlite3.Row object at 0x10d00e950>, <sqlite3.Row object at 0x10d00e9b0>, <sqlite3.Row object at 0x10d00ea10>, <sqlite3.Row object at 0x10d00ea70>, <sqlite3.Row object at 0x10d00ead0>, <sqlite3.Row object at 0x10d00eb30>, <sqlite3.Row object at 0x10d00eb90>, <sqlite3.Row object at 0x10d00ebf0>, <sqlite3.Row object at 0x10d00ec50>, <sqlite3.Row object at 0x10d00ecb0>, <sqlite3.Row object at 0x10d00ed10>, <sqlite3.Row object at 0x10d00ed70>, <sqlite3.Row object at 0x10d00edd0>, <sqlite3.Row object at 0x10d00ee30>, <sqlite3.Row object at 0x10d00ee90>, <sqlite3.Row object at 0x10d00eef0>, <sqlite3.Row object at 0x10d00ef50>, <sqlite3.Row object at 0x10d00efb0>, <sqlite3.Row object at 0x10d012050>, <sqlite3.Row object at 0x10d0120b0>, <sqlite3.Row object at 0x10d012110>, <sqlite3.Row object at 0x10d012170>, <sqlite3.Row object at 0x10d0121d0>, <sqlite3.Row object at 0x10d012230>, <sqlite3.Row object at 0x10d012290>, <sqlite3.Row object at 0x10d0122f0>, <sqlite3.Row object at 0x10d012350>, <sqlite3.Row object at 0x10d0123b0>, <sqlite3.Row object at 0x10d012410>, <sqlite3.Row object at 0x10d012470>, <sqlite3.Row object at 0x10d0124d0>, <sqlite3.Row object at 0x10d012530>, <sqlite3.Row object at 0x10d012590>, <sqlite3.Row object at 0x10d0125f0>, <sqlite3.Row object at 0x10d012650>, <sqlite3.Row object at 0x10d0126b0>, <sqlite3.Row object at 0x10d012710>, <sqlite3.Row object at 0x10d012770>, <sqlite3.Row object at 0x10d0127d0>, <sqlite3.Row object at 0x10d012830>, <sqlite3.Row object at 0x10d012890>, <sqlite3.Row object at 0x10d0128f0>, <sqlite3.Row object at 0x10d012950>, <sqlite3.Row object at 0x10d0129b0>, <sqlite3.Row object at 0x10d012a10>, <sqlite3.Row object at 0x10d012a70>, <sqlite3.Row object at 0x10d012ad0>, <sqlite3.Row object at 0x10d012b30>]
2025-06-15 15:48:01,305 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 15:48:01,306 - app - INFO - Final Assistant Response (NL): Â¡Hola! Â¿CÃ³mo puedo ayudarte hoy? Dime quÃ© necesitas revisar de tu cuenta y lo investigamos juntos. ðŸ˜Š
2025-06-15 15:48:14,480 - app - INFO - User Query (es): necesito ayuda de ti
2025-06-15 15:48:15,781 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 15:48:15,782 - app - INFO - Generated SQL Query: SELECT date, "Transaction Details", withdrawals, deposits, balance FROM bank_transactions ORDER BY date ASC
2025-06-15 15:48:15,784 - app - INFO - Database connection established.
2025-06-15 15:48:15,791 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d00e270>, <sqlite3.Row object at 0x10d00e250>, <sqlite3.Row object at 0x10d00e390>, <sqlite3.Row object at 0x10d00e370>, <sqlite3.Row object at 0x10d00e2d0>, <sqlite3.Row object at 0x10d00e0f0>, <sqlite3.Row object at 0x10d00e330>, <sqlite3.Row object at 0x10d00e490>, <sqlite3.Row object at 0x10d00e430>, <sqlite3.Row object at 0x10d00e450>, <sqlite3.Row object at 0x10d00e4b0>, <sqlite3.Row object at 0x10d00e3f0>, <sqlite3.Row object at 0x10d00e3d0>, <sqlite3.Row object at 0x10d00e4f0>, <sqlite3.Row object at 0x10d00e510>, <sqlite3.Row object at 0x10d00e550>, <sqlite3.Row object at 0x10d00e570>, <sqlite3.Row object at 0x10d00e5b0>, <sqlite3.Row object at 0x10d00e5d0>, <sqlite3.Row object at 0x10d00e610>, <sqlite3.Row object at 0x10d00e630>, <sqlite3.Row object at 0x10d00e670>, <sqlite3.Row object at 0x10d00e690>, <sqlite3.Row object at 0x10d00e6d0>, <sqlite3.Row object at 0x10d00e6f0>, <sqlite3.Row object at 0x10d00e730>, <sqlite3.Row object at 0x10d00e750>, <sqlite3.Row object at 0x10d00e790>, <sqlite3.Row object at 0x10d00e7b0>, <sqlite3.Row object at 0x10d00e7f0>, <sqlite3.Row object at 0x10d00e810>, <sqlite3.Row object at 0x10d00e850>, <sqlite3.Row object at 0x10d00e870>, <sqlite3.Row object at 0x10d00e8b0>, <sqlite3.Row object at 0x10d00e8d0>, <sqlite3.Row object at 0x10d00e910>, <sqlite3.Row object at 0x10d00e930>, <sqlite3.Row object at 0x10d00e970>, <sqlite3.Row object at 0x10d00e990>, <sqlite3.Row object at 0x10d00e9d0>, <sqlite3.Row object at 0x10d00e050>, <sqlite3.Row object at 0x10d00e0b0>, <sqlite3.Row object at 0x10d00e110>, <sqlite3.Row object at 0x10d00e170>, <sqlite3.Row object at 0x10d00e1d0>, <sqlite3.Row object at 0x10d00e230>, <sqlite3.Row object at 0x10d00e290>, <sqlite3.Row object at 0x10d00e2f0>, <sqlite3.Row object at 0x10d00e350>, <sqlite3.Row object at 0x10d00e3b0>, <sqlite3.Row object at 0x10d00e4d0>, <sqlite3.Row object at 0x10d00e5f0>, <sqlite3.Row object at 0x10d00e710>, <sqlite3.Row object at 0x10d00e830>, <sqlite3.Row object at 0x10d00e950>, <sqlite3.Row object at 0x10d00ea70>, <sqlite3.Row object at 0x10d00eb90>, <sqlite3.Row object at 0x10d00ecb0>, <sqlite3.Row object at 0x10d00edd0>, <sqlite3.Row object at 0x10d00eef0>, <sqlite3.Row object at 0x108e88910>, <sqlite3.Row object at 0x108e88730>, <sqlite3.Row object at 0x108e886b0>, <sqlite3.Row object at 0x108e88ef0>, <sqlite3.Row object at 0x108e88c50>, <sqlite3.Row object at 0x108e88f30>, <sqlite3.Row object at 0x108e88fb0>, <sqlite3.Row object at 0x10d012050>, <sqlite3.Row object at 0x10d012170>, <sqlite3.Row object at 0x10d012290>, <sqlite3.Row object at 0x10d0123b0>, <sqlite3.Row object at 0x10d0124d0>, <sqlite3.Row object at 0x10d0125f0>, <sqlite3.Row object at 0x10d012710>, <sqlite3.Row object at 0x10d012830>, <sqlite3.Row object at 0x10d012950>, <sqlite3.Row object at 0x10d012a70>, <sqlite3.Row object at 0x10d012c30>, <sqlite3.Row object at 0x10d012c50>, <sqlite3.Row object at 0x10d012cb0>, <sqlite3.Row object at 0x10d012d70>, <sqlite3.Row object at 0x10d012db0>, <sqlite3.Row object at 0x10d012eb0>, <sqlite3.Row object at 0x10d012f10>, <sqlite3.Row object at 0x10d012f70>, <sqlite3.Row object at 0x10d012fd0>, <sqlite3.Row object at 0x108f73070>, <sqlite3.Row object at 0x108f730d0>, <sqlite3.Row object at 0x108f73130>, <sqlite3.Row object at 0x108f73190>, <sqlite3.Row object at 0x108f731f0>, <sqlite3.Row object at 0x108f73250>, <sqlite3.Row object at 0x108f732b0>, <sqlite3.Row object at 0x108f73310>, <sqlite3.Row object at 0x108f73370>, <sqlite3.Row object at 0x108f733d0>, <sqlite3.Row object at 0x108f73430>, <sqlite3.Row object at 0x108f73490>, <sqlite3.Row object at 0x108f734f0>, <sqlite3.Row object at 0x108f73550>, <sqlite3.Row object at 0x108f735b0>, <sqlite3.Row object at 0x108f73610>, <sqlite3.Row object at 0x108f73670>, <sqlite3.Row object at 0x108f736d0>, <sqlite3.Row object at 0x108f73730>, <sqlite3.Row object at 0x108f73790>, <sqlite3.Row object at 0x108f737f0>, <sqlite3.Row object at 0x108f73850>, <sqlite3.Row object at 0x108f738b0>, <sqlite3.Row object at 0x108f73910>, <sqlite3.Row object at 0x108f73970>, <sqlite3.Row object at 0x108f739d0>, <sqlite3.Row object at 0x108f73a30>, <sqlite3.Row object at 0x108f73a90>, <sqlite3.Row object at 0x108f73af0>, <sqlite3.Row object at 0x108f73b50>, <sqlite3.Row object at 0x108f73bb0>, <sqlite3.Row object at 0x108f73c10>, <sqlite3.Row object at 0x108f73c70>, <sqlite3.Row object at 0x108f73cd0>, <sqlite3.Row object at 0x108f73d30>, <sqlite3.Row object at 0x108f73d90>, <sqlite3.Row object at 0x108f73df0>, <sqlite3.Row object at 0x108f73e50>, <sqlite3.Row object at 0x108f73eb0>, <sqlite3.Row object at 0x108f73f10>, <sqlite3.Row object at 0x108f73f70>, <sqlite3.Row object at 0x108f73fd0>, <sqlite3.Row object at 0x108f96070>, <sqlite3.Row object at 0x108f960d0>, <sqlite3.Row object at 0x108f96130>, <sqlite3.Row object at 0x108f96190>, <sqlite3.Row object at 0x108f961f0>, <sqlite3.Row object at 0x108f96250>, <sqlite3.Row object at 0x108f962b0>, <sqlite3.Row object at 0x108f96310>, <sqlite3.Row object at 0x108f96370>, <sqlite3.Row object at 0x108f963d0>, <sqlite3.Row object at 0x108f96430>, <sqlite3.Row object at 0x108f96490>, <sqlite3.Row object at 0x108f964f0>, <sqlite3.Row object at 0x108f96550>, <sqlite3.Row object at 0x108f965b0>, <sqlite3.Row object at 0x108f96610>, <sqlite3.Row object at 0x108f96670>, <sqlite3.Row object at 0x108f966d0>, <sqlite3.Row object at 0x108f96730>, <sqlite3.Row object at 0x108f96790>, <sqlite3.Row object at 0x108f967f0>, <sqlite3.Row object at 0x108f96850>, <sqlite3.Row object at 0x108f968b0>, <sqlite3.Row object at 0x108f96910>, <sqlite3.Row object at 0x108f96970>, <sqlite3.Row object at 0x108f969d0>, <sqlite3.Row object at 0x108f96a30>, <sqlite3.Row object at 0x108f96a90>, <sqlite3.Row object at 0x108f96af0>, <sqlite3.Row object at 0x108f96b50>, <sqlite3.Row object at 0x108f96bb0>, <sqlite3.Row object at 0x108f96c10>, <sqlite3.Row object at 0x108f96c70>, <sqlite3.Row object at 0x108f96cd0>, <sqlite3.Row object at 0x108f96d30>, <sqlite3.Row object at 0x108f96d90>, <sqlite3.Row object at 0x108f96df0>, <sqlite3.Row object at 0x108f96e50>, <sqlite3.Row object at 0x108f96eb0>, <sqlite3.Row object at 0x108f96f10>, <sqlite3.Row object at 0x108f96f70>, <sqlite3.Row object at 0x108f96fd0>, <sqlite3.Row object at 0x108f9a070>, <sqlite3.Row object at 0x108f9a0d0>, <sqlite3.Row object at 0x108f9a130>, <sqlite3.Row object at 0x108f9a190>, <sqlite3.Row object at 0x108f9a1f0>, <sqlite3.Row object at 0x108f9a250>, <sqlite3.Row object at 0x108f9a2b0>, <sqlite3.Row object at 0x108f9a310>, <sqlite3.Row object at 0x108f9a370>, <sqlite3.Row object at 0x108f9a3d0>, <sqlite3.Row object at 0x108f9a430>, <sqlite3.Row object at 0x108f9a490>, <sqlite3.Row object at 0x108f9a4f0>, <sqlite3.Row object at 0x108f9a550>, <sqlite3.Row object at 0x108f9a5b0>, <sqlite3.Row object at 0x108f9a610>, <sqlite3.Row object at 0x108f9a670>, <sqlite3.Row object at 0x108f9a6d0>, <sqlite3.Row object at 0x108f9a730>, <sqlite3.Row object at 0x108f9a790>, <sqlite3.Row object at 0x108f9a7f0>, <sqlite3.Row object at 0x108f9a850>, <sqlite3.Row object at 0x108f9a8b0>, <sqlite3.Row object at 0x108f9a910>, <sqlite3.Row object at 0x108f9a970>, <sqlite3.Row object at 0x108f9a9d0>, <sqlite3.Row object at 0x108f9aa30>, <sqlite3.Row object at 0x108f9aa90>, <sqlite3.Row object at 0x108f9aaf0>, <sqlite3.Row object at 0x108f9ab50>, <sqlite3.Row object at 0x108f9abb0>, <sqlite3.Row object at 0x108f9ac10>, <sqlite3.Row object at 0x108f9ac70>, <sqlite3.Row object at 0x108f9acd0>, <sqlite3.Row object at 0x108f9ad30>, <sqlite3.Row object at 0x108f9ad90>, <sqlite3.Row object at 0x108f9adf0>, <sqlite3.Row object at 0x108f9ae50>, <sqlite3.Row object at 0x108f9aeb0>, <sqlite3.Row object at 0x108f9af10>, <sqlite3.Row object at 0x108f9af70>, <sqlite3.Row object at 0x108f9afd0>, <sqlite3.Row object at 0x108f9e070>, <sqlite3.Row object at 0x108f9e0d0>, <sqlite3.Row object at 0x108f9e130>, <sqlite3.Row object at 0x108f9e190>, <sqlite3.Row object at 0x108f9e1f0>, <sqlite3.Row object at 0x108f9e250>, <sqlite3.Row object at 0x108f9e2b0>, <sqlite3.Row object at 0x108f9e310>, <sqlite3.Row object at 0x108f9e370>, <sqlite3.Row object at 0x108f9e3d0>, <sqlite3.Row object at 0x108f9e430>, <sqlite3.Row object at 0x108f9e490>, <sqlite3.Row object at 0x108f9e4f0>, <sqlite3.Row object at 0x108f9e550>, <sqlite3.Row object at 0x108f9e5b0>, <sqlite3.Row object at 0x108f9e610>, <sqlite3.Row object at 0x108f9e670>, <sqlite3.Row object at 0x108f9e6d0>, <sqlite3.Row object at 0x108f9e730>, <sqlite3.Row object at 0x108f9e790>, <sqlite3.Row object at 0x108f9e7f0>, <sqlite3.Row object at 0x108f9e850>, <sqlite3.Row object at 0x108f9e8b0>, <sqlite3.Row object at 0x108f9e910>, <sqlite3.Row object at 0x108f9e970>, <sqlite3.Row object at 0x108f9e9d0>, <sqlite3.Row object at 0x108f9ea30>, <sqlite3.Row object at 0x108f9ea90>, <sqlite3.Row object at 0x108f9eaf0>, <sqlite3.Row object at 0x108f9eb50>, <sqlite3.Row object at 0x108f9ebb0>, <sqlite3.Row object at 0x108f9ec10>, <sqlite3.Row object at 0x108f9ec70>, <sqlite3.Row object at 0x108f9ecd0>, <sqlite3.Row object at 0x108f9ed30>, <sqlite3.Row object at 0x108f9ed90>, <sqlite3.Row object at 0x108f9edf0>, <sqlite3.Row object at 0x108f9ee50>, <sqlite3.Row object at 0x108f9eeb0>, <sqlite3.Row object at 0x108f9ef10>, <sqlite3.Row object at 0x108f9ef70>, <sqlite3.Row object at 0x108f9efd0>, <sqlite3.Row object at 0x108fa3070>, <sqlite3.Row object at 0x108fa30d0>, <sqlite3.Row object at 0x108fa3130>, <sqlite3.Row object at 0x108fa3190>, <sqlite3.Row object at 0x108fa31f0>, <sqlite3.Row object at 0x108fa3250>, <sqlite3.Row object at 0x108fa32b0>, <sqlite3.Row object at 0x108fa3310>, <sqlite3.Row object at 0x108fa3370>, <sqlite3.Row object at 0x108fa33d0>, <sqlite3.Row object at 0x108fa3430>, <sqlite3.Row object at 0x108fa3490>, <sqlite3.Row object at 0x108fa34f0>, <sqlite3.Row object at 0x108fa3550>, <sqlite3.Row object at 0x108fa35b0>, <sqlite3.Row object at 0x108fa3610>, <sqlite3.Row object at 0x108fa3670>, <sqlite3.Row object at 0x108fa36d0>, <sqlite3.Row object at 0x108fa3730>, <sqlite3.Row object at 0x108fa3790>, <sqlite3.Row object at 0x108fa37f0>, <sqlite3.Row object at 0x108fa3850>, <sqlite3.Row object at 0x108fa38b0>, <sqlite3.Row object at 0x108fa3910>, <sqlite3.Row object at 0x108fa3970>, <sqlite3.Row object at 0x108fa39d0>, <sqlite3.Row object at 0x108fa3a30>, <sqlite3.Row object at 0x108fa3a90>, <sqlite3.Row object at 0x108fa3af0>, <sqlite3.Row object at 0x108fa3b50>, <sqlite3.Row object at 0x108fa3bb0>, <sqlite3.Row object at 0x108fa3c10>, <sqlite3.Row object at 0x108fa3c70>, <sqlite3.Row object at 0x108fa3cd0>, <sqlite3.Row object at 0x108fa3d30>, <sqlite3.Row object at 0x108fa3d90>, <sqlite3.Row object at 0x108fa3df0>, <sqlite3.Row object at 0x108fa3e50>, <sqlite3.Row object at 0x108fa3eb0>, <sqlite3.Row object at 0x108fa3f10>, <sqlite3.Row object at 0x108fa3f70>, <sqlite3.Row object at 0x108fa3fd0>, <sqlite3.Row object at 0x108fa5090>, <sqlite3.Row object at 0x108fa5130>, <sqlite3.Row object at 0x108fa51b0>, <sqlite3.Row object at 0x108fa5250>, <sqlite3.Row object at 0x108fa52d0>, <sqlite3.Row object at 0x108fa5370>, <sqlite3.Row object at 0x108fa53f0>, <sqlite3.Row object at 0x108fa5490>, <sqlite3.Row object at 0x108fa5510>, <sqlite3.Row object at 0x108fa55b0>, <sqlite3.Row object at 0x108fa5630>, <sqlite3.Row object at 0x108fa56d0>, <sqlite3.Row object at 0x108fa5750>, <sqlite3.Row object at 0x108fa57f0>, <sqlite3.Row object at 0x108fa5870>, <sqlite3.Row object at 0x108fa5910>, <sqlite3.Row object at 0x108fa5990>, <sqlite3.Row object at 0x108fa5a30>, <sqlite3.Row object at 0x108fa5ab0>, <sqlite3.Row object at 0x108fa5b50>, <sqlite3.Row object at 0x108fa5bd0>, <sqlite3.Row object at 0x108fa5c70>, <sqlite3.Row object at 0x108fa5cf0>, <sqlite3.Row object at 0x108fa5d90>, <sqlite3.Row object at 0x108fa5e10>, <sqlite3.Row object at 0x108fa5eb0>, <sqlite3.Row object at 0x108fa5f30>, <sqlite3.Row object at 0x108fa5fd0>, <sqlite3.Row object at 0x108fa5110>, <sqlite3.Row object at 0x108fa5230>, <sqlite3.Row object at 0x108fa5350>, <sqlite3.Row object at 0x108fa5470>, <sqlite3.Row object at 0x108fa5590>, <sqlite3.Row object at 0x108fa56b0>, <sqlite3.Row object at 0x108fa57d0>, <sqlite3.Row object at 0x108fa58f0>, <sqlite3.Row object at 0x108fa5a10>, <sqlite3.Row object at 0x108fa5b30>, <sqlite3.Row object at 0x108fa5c50>, <sqlite3.Row object at 0x108fa5d70>, <sqlite3.Row object at 0x108fa5e90>, <sqlite3.Row object at 0x108fa5fb0>, <sqlite3.Row object at 0x108fa9090>, <sqlite3.Row object at 0x108fa9130>, <sqlite3.Row object at 0x108fa91b0>, <sqlite3.Row object at 0x108fa9250>, <sqlite3.Row object at 0x108fa92d0>, <sqlite3.Row object at 0x108fa9370>, <sqlite3.Row object at 0x108fa93f0>, <sqlite3.Row object at 0x108fa9490>, <sqlite3.Row object at 0x108fa9510>, <sqlite3.Row object at 0x108fa95b0>, <sqlite3.Row object at 0x108fa9630>, <sqlite3.Row object at 0x108fa96d0>, <sqlite3.Row object at 0x108fa9750>, <sqlite3.Row object at 0x108fa97f0>, <sqlite3.Row object at 0x108fa9870>, <sqlite3.Row object at 0x108fa9910>, <sqlite3.Row object at 0x108fa9990>, <sqlite3.Row object at 0x108fa9a30>, <sqlite3.Row object at 0x108fa9ab0>, <sqlite3.Row object at 0x108fa9b50>, <sqlite3.Row object at 0x108fa9bd0>, <sqlite3.Row object at 0x108fa9c70>, <sqlite3.Row object at 0x108fa9cf0>, <sqlite3.Row object at 0x108fa9d90>, <sqlite3.Row object at 0x108fa9e10>, <sqlite3.Row object at 0x108fa9eb0>, <sqlite3.Row object at 0x108fa9f30>, <sqlite3.Row object at 0x108fa9fd0>, <sqlite3.Row object at 0x108fa9110>, <sqlite3.Row object at 0x108fa9230>, <sqlite3.Row object at 0x108fa9350>, <sqlite3.Row object at 0x108fa9470>, <sqlite3.Row object at 0x108fa9590>, <sqlite3.Row object at 0x108fa96b0>, <sqlite3.Row object at 0x108fa97d0>, <sqlite3.Row object at 0x108fa98f0>, <sqlite3.Row object at 0x108fa9a10>, <sqlite3.Row object at 0x108fa9b30>, <sqlite3.Row object at 0x108fa9c50>, <sqlite3.Row object at 0x108fa9d70>, <sqlite3.Row object at 0x108fa9e90>, <sqlite3.Row object at 0x108fa9fb0>, <sqlite3.Row object at 0x108fad090>, <sqlite3.Row object at 0x108fad130>, <sqlite3.Row object at 0x108fad1b0>, <sqlite3.Row object at 0x108fad250>, <sqlite3.Row object at 0x108fad2d0>, <sqlite3.Row object at 0x108fad370>, <sqlite3.Row object at 0x108fad3f0>, <sqlite3.Row object at 0x108fad490>, <sqlite3.Row object at 0x108fad510>, <sqlite3.Row object at 0x108fad5b0>, <sqlite3.Row object at 0x108fad630>, <sqlite3.Row object at 0x108fad6d0>, <sqlite3.Row object at 0x108fad750>, <sqlite3.Row object at 0x108fad7f0>, <sqlite3.Row object at 0x108fad870>, <sqlite3.Row object at 0x108fad910>, <sqlite3.Row object at 0x108fad990>, <sqlite3.Row object at 0x108fada30>, <sqlite3.Row object at 0x108fadab0>, <sqlite3.Row object at 0x108fadb50>, <sqlite3.Row object at 0x108fadbd0>, <sqlite3.Row object at 0x108fadc70>, <sqlite3.Row object at 0x108fadcf0>, <sqlite3.Row object at 0x108fadd90>, <sqlite3.Row object at 0x108fade10>, <sqlite3.Row object at 0x108fadeb0>, <sqlite3.Row object at 0x108fadf30>, <sqlite3.Row object at 0x108fadfd0>, <sqlite3.Row object at 0x108fad110>, <sqlite3.Row object at 0x108fad230>, <sqlite3.Row object at 0x108fad350>, <sqlite3.Row object at 0x108fad470>, <sqlite3.Row object at 0x108fad590>, <sqlite3.Row object at 0x108fad6b0>, <sqlite3.Row object at 0x108fad7d0>, <sqlite3.Row object at 0x108fad8f0>, <sqlite3.Row object at 0x108fada10>, <sqlite3.Row object at 0x108fadb30>, <sqlite3.Row object at 0x108fadc50>, <sqlite3.Row object at 0x108fadd70>, <sqlite3.Row object at 0x108fade90>, <sqlite3.Row object at 0x108fadfb0>, <sqlite3.Row object at 0x108fb2070>, <sqlite3.Row object at 0x108fb20d0>, <sqlite3.Row object at 0x108fb2130>, <sqlite3.Row object at 0x108fb2190>, <sqlite3.Row object at 0x108fb21f0>, <sqlite3.Row object at 0x108fb2250>, <sqlite3.Row object at 0x108fb22b0>, <sqlite3.Row object at 0x108fb2310>, <sqlite3.Row object at 0x108fb2370>, <sqlite3.Row object at 0x108fb23d0>, <sqlite3.Row object at 0x108fb2430>, <sqlite3.Row object at 0x108fb2490>, <sqlite3.Row object at 0x108fb24f0>, <sqlite3.Row object at 0x108fb2550>, <sqlite3.Row object at 0x108fb25b0>, <sqlite3.Row object at 0x108fb2610>, <sqlite3.Row object at 0x108fb2670>, <sqlite3.Row object at 0x108fb26d0>, <sqlite3.Row object at 0x108fb2730>, <sqlite3.Row object at 0x108fb2790>, <sqlite3.Row object at 0x108fb27f0>, <sqlite3.Row object at 0x108fb2850>, <sqlite3.Row object at 0x108fb28b0>, <sqlite3.Row object at 0x108fb2910>, <sqlite3.Row object at 0x108fb2970>, <sqlite3.Row object at 0x108fb29d0>, <sqlite3.Row object at 0x108fb2a30>, <sqlite3.Row object at 0x108fb2a90>, <sqlite3.Row object at 0x108fb2af0>, <sqlite3.Row object at 0x108fb2b50>, <sqlite3.Row object at 0x108fb2bb0>, <sqlite3.Row object at 0x108fb2c10>, <sqlite3.Row object at 0x108fb2c70>, <sqlite3.Row object at 0x108fb2cd0>, <sqlite3.Row object at 0x108fb2d30>, <sqlite3.Row object at 0x108fb2d90>, <sqlite3.Row object at 0x108fb2df0>, <sqlite3.Row object at 0x108fb2e50>, <sqlite3.Row object at 0x108fb2eb0>, <sqlite3.Row object at 0x108fb2f10>, <sqlite3.Row object at 0x108fb2f70>, <sqlite3.Row object at 0x108fb2fd0>, <sqlite3.Row object at 0x108fb5090>, <sqlite3.Row object at 0x108fb5130>, <sqlite3.Row object at 0x108fb51b0>, <sqlite3.Row object at 0x108fb5250>, <sqlite3.Row object at 0x108fb52d0>, <sqlite3.Row object at 0x108fb5370>, <sqlite3.Row object at 0x108fb53f0>, <sqlite3.Row object at 0x108fb5490>, <sqlite3.Row object at 0x108fb5510>, <sqlite3.Row object at 0x108fb55b0>, <sqlite3.Row object at 0x108fb5630>, <sqlite3.Row object at 0x108fb56d0>, <sqlite3.Row object at 0x108fb5750>, <sqlite3.Row object at 0x108fb57f0>, <sqlite3.Row object at 0x108fb5870>, <sqlite3.Row object at 0x108fb5910>, <sqlite3.Row object at 0x108fb5990>, <sqlite3.Row object at 0x108fb5a30>, <sqlite3.Row object at 0x108fb5ab0>, <sqlite3.Row object at 0x108fb5b50>, <sqlite3.Row object at 0x108fb5bd0>, <sqlite3.Row object at 0x108fb5c70>, <sqlite3.Row object at 0x108fb5cf0>, <sqlite3.Row object at 0x108fb5d90>, <sqlite3.Row object at 0x108fb5e10>, <sqlite3.Row object at 0x108fb5eb0>, <sqlite3.Row object at 0x108fb5f30>, <sqlite3.Row object at 0x108fb5fd0>, <sqlite3.Row object at 0x108fb5110>, <sqlite3.Row object at 0x108fb5230>, <sqlite3.Row object at 0x108fb5350>, <sqlite3.Row object at 0x108fb5470>, <sqlite3.Row object at 0x108fb5590>, <sqlite3.Row object at 0x108fb56b0>, <sqlite3.Row object at 0x108fb57d0>, <sqlite3.Row object at 0x108fb58f0>, <sqlite3.Row object at 0x108fb5a10>, <sqlite3.Row object at 0x108fb5b30>, <sqlite3.Row object at 0x108fb5c50>, <sqlite3.Row object at 0x108fb5d70>, <sqlite3.Row object at 0x108fb5e90>, <sqlite3.Row object at 0x108fb5fb0>, <sqlite3.Row object at 0x108fb9090>, <sqlite3.Row object at 0x108fb9130>, <sqlite3.Row object at 0x108fb9150>, <sqlite3.Row object at 0x108fb91f0>, <sqlite3.Row object at 0x108fb9270>, <sqlite3.Row object at 0x108fb9310>, <sqlite3.Row object at 0x108fb9390>, <sqlite3.Row object at 0x108fb9430>, <sqlite3.Row object at 0x108fb94b0>, <sqlite3.Row object at 0x108fb9550>, <sqlite3.Row object at 0x108fb95d0>, <sqlite3.Row object at 0x108fb9670>, <sqlite3.Row object at 0x108fb96f0>, <sqlite3.Row object at 0x108fb9790>, <sqlite3.Row object at 0x108fb9810>, <sqlite3.Row object at 0x108fb98b0>, <sqlite3.Row object at 0x108fb9930>, <sqlite3.Row object at 0x108fb99d0>, <sqlite3.Row object at 0x108fb9a50>, <sqlite3.Row object at 0x108fb9af0>, <sqlite3.Row object at 0x108fb9b70>, <sqlite3.Row object at 0x108fb9c10>, <sqlite3.Row object at 0x108fb9c90>, <sqlite3.Row object at 0x108fb9d30>, <sqlite3.Row object at 0x108fb9db0>, <sqlite3.Row object at 0x108fb9e50>, <sqlite3.Row object at 0x108fb9ed0>, <sqlite3.Row object at 0x108fb9f70>, <sqlite3.Row object at 0x108fb9050>, <sqlite3.Row object at 0x108fb9170>, <sqlite3.Row object at 0x108fb9290>, <sqlite3.Row object at 0x108fb93b0>, <sqlite3.Row object at 0x108fb94d0>, <sqlite3.Row object at 0x108fb95f0>, <sqlite3.Row object at 0x108fb9710>, <sqlite3.Row object at 0x108fb9830>, <sqlite3.Row object at 0x108fb9950>, <sqlite3.Row object at 0x108fb9a70>, <sqlite3.Row object at 0x108fb9b90>, <sqlite3.Row object at 0x108fb9cb0>, <sqlite3.Row object at 0x108fb9dd0>, <sqlite3.Row object at 0x108fb9ef0>, <sqlite3.Row object at 0x108f6d030>, <sqlite3.Row object at 0x108f6d090>, <sqlite3.Row object at 0x108f6d0f0>, <sqlite3.Row object at 0x108f6d150>, <sqlite3.Row object at 0x108f6d1b0>, <sqlite3.Row object at 0x108f6d210>, <sqlite3.Row object at 0x108f6d270>, <sqlite3.Row object at 0x108f6d2d0>, <sqlite3.Row object at 0x108f6d330>, <sqlite3.Row object at 0x108f6d390>, <sqlite3.Row object at 0x108f6d3f0>, <sqlite3.Row object at 0x108f6d450>, <sqlite3.Row object at 0x108f6d4b0>, <sqlite3.Row object at 0x108f6d510>, <sqlite3.Row object at 0x108f6d570>, <sqlite3.Row object at 0x108f6d5d0>, <sqlite3.Row object at 0x108f6d630>, <sqlite3.Row object at 0x108f6d690>, <sqlite3.Row object at 0x108f6d6f0>, <sqlite3.Row object at 0x108f6d750>, <sqlite3.Row object at 0x108f6d7b0>, <sqlite3.Row object at 0x108f6d810>, <sqlite3.Row object at 0x108f6d870>, <sqlite3.Row object at 0x108f6d8d0>, <sqlite3.Row object at 0x108f6d930>, <sqlite3.Row object at 0x108f6d990>, <sqlite3.Row object at 0x108f6d9f0>, <sqlite3.Row object at 0x108f6da50>, <sqlite3.Row object at 0x108f6dab0>, <sqlite3.Row object at 0x108f6db10>, <sqlite3.Row object at 0x108f6db70>, <sqlite3.Row object at 0x108f6dbd0>, <sqlite3.Row object at 0x108f6dc30>, <sqlite3.Row object at 0x108f6dc90>, <sqlite3.Row object at 0x108f6dcf0>, <sqlite3.Row object at 0x108f6dd50>, <sqlite3.Row object at 0x108f6ddb0>, <sqlite3.Row object at 0x108f6de10>, <sqlite3.Row object at 0x108f6de70>, <sqlite3.Row object at 0x108f6ded0>, <sqlite3.Row object at 0x108f6df30>, <sqlite3.Row object at 0x108f6df90>, <sqlite3.Row object at 0x108fbf030>, <sqlite3.Row object at 0x108fbf090>, <sqlite3.Row object at 0x108fbf0f0>, <sqlite3.Row object at 0x108fbf150>, <sqlite3.Row object at 0x108fbf1b0>, <sqlite3.Row object at 0x108fbf210>, <sqlite3.Row object at 0x108fbf270>, <sqlite3.Row object at 0x108fbf2d0>, <sqlite3.Row object at 0x108fbf330>, <sqlite3.Row object at 0x108fbf390>, <sqlite3.Row object at 0x108fbf3f0>, <sqlite3.Row object at 0x108fbf450>, <sqlite3.Row object at 0x108fbf4b0>, <sqlite3.Row object at 0x108fbf510>, <sqlite3.Row object at 0x108fbf570>, <sqlite3.Row object at 0x108fbf5d0>, <sqlite3.Row object at 0x108fbf630>, <sqlite3.Row object at 0x108fbf690>, <sqlite3.Row object at 0x108fbf6f0>, <sqlite3.Row object at 0x108fbf750>, <sqlite3.Row object at 0x108fbf7b0>, <sqlite3.Row object at 0x108fbf810>, <sqlite3.Row object at 0x108fbf870>, <sqlite3.Row object at 0x108fbf8d0>, <sqlite3.Row object at 0x108fbf930>, <sqlite3.Row object at 0x108fbf990>, <sqlite3.Row object at 0x108fbf9f0>, <sqlite3.Row object at 0x108fbfa50>, <sqlite3.Row object at 0x108fbfab0>, <sqlite3.Row object at 0x108fbfb10>, <sqlite3.Row object at 0x108fbfb70>, <sqlite3.Row object at 0x108fbfbd0>, <sqlite3.Row object at 0x108fbfc30>, <sqlite3.Row object at 0x108fbfc90>, <sqlite3.Row object at 0x108fbfcf0>, <sqlite3.Row object at 0x108fbfd50>, <sqlite3.Row object at 0x108fbfdb0>, <sqlite3.Row object at 0x108fbfe10>, <sqlite3.Row object at 0x108fbfe70>, <sqlite3.Row object at 0x108fbfed0>, <sqlite3.Row object at 0x108fbff30>, <sqlite3.Row object at 0x108fbff90>, <sqlite3.Row object at 0x108fc3030>, <sqlite3.Row object at 0x108fc3090>, <sqlite3.Row object at 0x108fc30f0>, <sqlite3.Row object at 0x108fc3150>, <sqlite3.Row object at 0x108fc31b0>, <sqlite3.Row object at 0x108fc3210>, <sqlite3.Row object at 0x108fc3270>, <sqlite3.Row object at 0x108fc32d0>, <sqlite3.Row object at 0x108fc3330>, <sqlite3.Row object at 0x108fc3390>, <sqlite3.Row object at 0x108fc33f0>, <sqlite3.Row object at 0x108fc3450>, <sqlite3.Row object at 0x108fc34b0>, <sqlite3.Row object at 0x108fc3510>, <sqlite3.Row object at 0x108fc3570>, <sqlite3.Row object at 0x108fc35d0>, <sqlite3.Row object at 0x108fc3630>, <sqlite3.Row object at 0x108fc3690>, <sqlite3.Row object at 0x108fc36f0>, <sqlite3.Row object at 0x108fc3750>, <sqlite3.Row object at 0x108fc37b0>, <sqlite3.Row object at 0x108fc3810>, <sqlite3.Row object at 0x108fc3870>, <sqlite3.Row object at 0x108fc38d0>, <sqlite3.Row object at 0x108fc3930>, <sqlite3.Row object at 0x108fc3990>, <sqlite3.Row object at 0x108fc39f0>, <sqlite3.Row object at 0x108fc3a50>, <sqlite3.Row object at 0x108fc3ab0>, <sqlite3.Row object at 0x108fc3b10>, <sqlite3.Row object at 0x108fc3b70>, <sqlite3.Row object at 0x108fc3bd0>, <sqlite3.Row object at 0x108fc3c30>, <sqlite3.Row object at 0x108fc3c90>, <sqlite3.Row object at 0x108fc3cf0>, <sqlite3.Row object at 0x108fc3d50>, <sqlite3.Row object at 0x108fc3db0>, <sqlite3.Row object at 0x108fc3e10>, <sqlite3.Row object at 0x108fc3e70>, <sqlite3.Row object at 0x108fc3ed0>, <sqlite3.Row object at 0x108fc3f30>, <sqlite3.Row object at 0x108fc3f90>, <sqlite3.Row object at 0x108fc8030>, <sqlite3.Row object at 0x108fc8090>, <sqlite3.Row object at 0x108fc80f0>, <sqlite3.Row object at 0x108fc8150>, <sqlite3.Row object at 0x108fc81b0>, <sqlite3.Row object at 0x108fc8210>, <sqlite3.Row object at 0x108fc8270>, <sqlite3.Row object at 0x108fc82d0>, <sqlite3.Row object at 0x108fc8330>, <sqlite3.Row object at 0x108fc8390>, <sqlite3.Row object at 0x108fc83f0>, <sqlite3.Row object at 0x108fc8450>, <sqlite3.Row object at 0x108fc84b0>, <sqlite3.Row object at 0x108fc8510>, <sqlite3.Row object at 0x108fc8570>, <sqlite3.Row object at 0x108fc85d0>, <sqlite3.Row object at 0x108fc8630>, <sqlite3.Row object at 0x108fc8690>, <sqlite3.Row object at 0x108fc86f0>, <sqlite3.Row object at 0x108fc8750>, <sqlite3.Row object at 0x108fc87b0>, <sqlite3.Row object at 0x108fc8810>, <sqlite3.Row object at 0x108fc8870>, <sqlite3.Row object at 0x108fc88d0>, <sqlite3.Row object at 0x108fc8930>, <sqlite3.Row object at 0x108fc8990>, <sqlite3.Row object at 0x108fc89f0>, <sqlite3.Row object at 0x108fc8a50>, <sqlite3.Row object at 0x108fc8ab0>, <sqlite3.Row object at 0x108fc8b10>, <sqlite3.Row object at 0x108fc8b70>, <sqlite3.Row object at 0x108fc8bd0>, <sqlite3.Row object at 0x108fc8c30>, <sqlite3.Row object at 0x108fc8c90>, <sqlite3.Row object at 0x108fc8cf0>, <sqlite3.Row object at 0x108fc8d50>, <sqlite3.Row object at 0x108fc8db0>, <sqlite3.Row object at 0x108fc8e10>, <sqlite3.Row object at 0x108fc8e70>, <sqlite3.Row object at 0x108fc8ed0>, <sqlite3.Row object at 0x108fc8f30>, <sqlite3.Row object at 0x108fc8f90>, <sqlite3.Row object at 0x108fcd030>, <sqlite3.Row object at 0x108fcd0d0>, <sqlite3.Row object at 0x108fcd150>, <sqlite3.Row object at 0x108fcd1f0>, <sqlite3.Row object at 0x108fcd270>, <sqlite3.Row object at 0x108fcd310>, <sqlite3.Row object at 0x108fcd390>, <sqlite3.Row object at 0x108fcd430>, <sqlite3.Row object at 0x108fcd4b0>, <sqlite3.Row object at 0x108fcd550>, <sqlite3.Row object at 0x108fcd5d0>, <sqlite3.Row object at 0x108fcd670>, <sqlite3.Row object at 0x108fcd6f0>, <sqlite3.Row object at 0x108fcd790>, <sqlite3.Row object at 0x108fcd810>, <sqlite3.Row object at 0x108fcd8b0>, <sqlite3.Row object at 0x108fcd930>, <sqlite3.Row object at 0x108fcd9d0>, <sqlite3.Row object at 0x108fcda50>, <sqlite3.Row object at 0x108fcdaf0>, <sqlite3.Row object at 0x108fcdb70>, <sqlite3.Row object at 0x108fcdc10>, <sqlite3.Row object at 0x108fcdc90>, <sqlite3.Row object at 0x108fcdd30>, <sqlite3.Row object at 0x108fcddb0>, <sqlite3.Row object at 0x108fcde50>, <sqlite3.Row object at 0x108fcded0>, <sqlite3.Row object at 0x108fcdf70>, <sqlite3.Row object at 0x108fcd050>, <sqlite3.Row object at 0x108fcd170>, <sqlite3.Row object at 0x108fcd290>, <sqlite3.Row object at 0x108fcd3b0>, <sqlite3.Row object at 0x108fcd4d0>, <sqlite3.Row object at 0x108fcd5f0>, <sqlite3.Row object at 0x108fcd710>, <sqlite3.Row object at 0x108fcd830>, <sqlite3.Row object at 0x108fcd950>, <sqlite3.Row object at 0x108fcda70>, <sqlite3.Row object at 0x108fcdb90>, <sqlite3.Row object at 0x108fcdcb0>, <sqlite3.Row object at 0x108fcddd0>, <sqlite3.Row object at 0x108fcdef0>, <sqlite3.Row object at 0x108fd1030>, <sqlite3.Row object at 0x108fd10d0>, <sqlite3.Row object at 0x108fd1150>, <sqlite3.Row object at 0x108fd11f0>, <sqlite3.Row object at 0x108fd1270>, <sqlite3.Row object at 0x108fd1310>, <sqlite3.Row object at 0x108fd1390>, <sqlite3.Row object at 0x108fd1430>, <sqlite3.Row object at 0x108fd14b0>, <sqlite3.Row object at 0x108fd1550>, <sqlite3.Row object at 0x108fd15d0>, <sqlite3.Row object at 0x108fd1670>, <sqlite3.Row object at 0x108fd16f0>, <sqlite3.Row object at 0x108fd1790>, <sqlite3.Row object at 0x108fd1810>, <sqlite3.Row object at 0x108fd18b0>, <sqlite3.Row object at 0x108fd1930>, <sqlite3.Row object at 0x108fd19d0>, <sqlite3.Row object at 0x108fd1a50>, <sqlite3.Row object at 0x108fd1af0>, <sqlite3.Row object at 0x108fd1b70>, <sqlite3.Row object at 0x108fd1c10>, <sqlite3.Row object at 0x108fd1c90>, <sqlite3.Row object at 0x108fd1d30>, <sqlite3.Row object at 0x108fd1db0>, <sqlite3.Row object at 0x108fd1e50>, <sqlite3.Row object at 0x108fd1ed0>, <sqlite3.Row object at 0x108fd1f70>, <sqlite3.Row object at 0x108fd1050>, <sqlite3.Row object at 0x108fd1170>, <sqlite3.Row object at 0x108fd1290>, <sqlite3.Row object at 0x108fd13b0>, <sqlite3.Row object at 0x108fd14d0>, <sqlite3.Row object at 0x108fd15f0>, <sqlite3.Row object at 0x108fd1710>, <sqlite3.Row object at 0x108fd1830>, <sqlite3.Row object at 0x108fd1950>, <sqlite3.Row object at 0x108fd1a70>, <sqlite3.Row object at 0x108fd1b90>, <sqlite3.Row object at 0x108fd1cb0>, <sqlite3.Row object at 0x108fd1dd0>, <sqlite3.Row object at 0x108fd1ef0>, <sqlite3.Row object at 0x10d030030>, <sqlite3.Row object at 0x10d030090>, <sqlite3.Row object at 0x10d0300f0>, <sqlite3.Row object at 0x10d030150>, <sqlite3.Row object at 0x10d0301b0>, <sqlite3.Row object at 0x10d030210>, <sqlite3.Row object at 0x10d030270>, <sqlite3.Row object at 0x10d0302d0>, <sqlite3.Row object at 0x10d030330>, <sqlite3.Row object at 0x10d030390>, <sqlite3.Row object at 0x10d0303f0>, <sqlite3.Row object at 0x10d030450>, <sqlite3.Row object at 0x10d0304b0>, <sqlite3.Row object at 0x10d030510>, <sqlite3.Row object at 0x10d030570>, <sqlite3.Row object at 0x10d0305d0>, <sqlite3.Row object at 0x10d030630>, <sqlite3.Row object at 0x10d030690>, <sqlite3.Row object at 0x10d0306f0>, <sqlite3.Row object at 0x10d030750>, <sqlite3.Row object at 0x10d0307b0>, <sqlite3.Row object at 0x10d030810>, <sqlite3.Row object at 0x10d030870>, <sqlite3.Row object at 0x10d0308d0>, <sqlite3.Row object at 0x10d030930>, <sqlite3.Row object at 0x10d030990>, <sqlite3.Row object at 0x10d0309f0>, <sqlite3.Row object at 0x10d030a50>, <sqlite3.Row object at 0x10d030ab0>, <sqlite3.Row object at 0x10d030b10>, <sqlite3.Row object at 0x10d030b70>, <sqlite3.Row object at 0x10d030bd0>, <sqlite3.Row object at 0x10d030c30>, <sqlite3.Row object at 0x10d030c90>, <sqlite3.Row object at 0x10d030cf0>, <sqlite3.Row object at 0x10d030d50>, <sqlite3.Row object at 0x10d030db0>, <sqlite3.Row object at 0x10d030e10>, <sqlite3.Row object at 0x10d030e70>, <sqlite3.Row object at 0x10d030ed0>, <sqlite3.Row object at 0x10d030f30>, <sqlite3.Row object at 0x10d030f90>, <sqlite3.Row object at 0x10d017030>, <sqlite3.Row object at 0x10d017090>, <sqlite3.Row object at 0x10d0170f0>, <sqlite3.Row object at 0x10d017150>, <sqlite3.Row object at 0x10d0171b0>, <sqlite3.Row object at 0x10d017210>, <sqlite3.Row object at 0x10d017270>, <sqlite3.Row object at 0x10d0172d0>, <sqlite3.Row object at 0x10d017330>, <sqlite3.Row object at 0x10d017390>, <sqlite3.Row object at 0x10d0173f0>, <sqlite3.Row object at 0x10d017450>, <sqlite3.Row object at 0x10d0174b0>, <sqlite3.Row object at 0x10d017510>, <sqlite3.Row object at 0x10d017570>, <sqlite3.Row object at 0x10d0175d0>, <sqlite3.Row object at 0x10d017630>, <sqlite3.Row object at 0x10d017690>, <sqlite3.Row object at 0x10d0176f0>, <sqlite3.Row object at 0x10d017750>, <sqlite3.Row object at 0x10d0177b0>, <sqlite3.Row object at 0x10d017810>, <sqlite3.Row object at 0x10d017870>, <sqlite3.Row object at 0x10d0178d0>, <sqlite3.Row object at 0x10d017930>, <sqlite3.Row object at 0x10d017990>, <sqlite3.Row object at 0x10d0179f0>, <sqlite3.Row object at 0x10d017a50>, <sqlite3.Row object at 0x10d017ab0>, <sqlite3.Row object at 0x10d017b10>, <sqlite3.Row object at 0x10d017b70>, <sqlite3.Row object at 0x10d017bd0>, <sqlite3.Row object at 0x10d017c30>, <sqlite3.Row object at 0x10d017c90>, <sqlite3.Row object at 0x10d017cf0>, <sqlite3.Row object at 0x10d017d50>, <sqlite3.Row object at 0x10d017db0>, <sqlite3.Row object at 0x10d017e10>, <sqlite3.Row object at 0x10d017e70>, <sqlite3.Row object at 0x10d017ed0>, <sqlite3.Row object at 0x10d017f30>, <sqlite3.Row object at 0x10d017f90>, <sqlite3.Row object at 0x10d01b030>, <sqlite3.Row object at 0x10d01b090>, <sqlite3.Row object at 0x10d01b0f0>, <sqlite3.Row object at 0x10d01b150>, <sqlite3.Row object at 0x10d01b1b0>, <sqlite3.Row object at 0x10d01b210>, <sqlite3.Row object at 0x10d01b270>, <sqlite3.Row object at 0x10d01b2d0>, <sqlite3.Row object at 0x10d01b330>, <sqlite3.Row object at 0x10d01b390>, <sqlite3.Row object at 0x10d01b3f0>, <sqlite3.Row object at 0x10d01b450>, <sqlite3.Row object at 0x10d01b4b0>, <sqlite3.Row object at 0x10d01b510>, <sqlite3.Row object at 0x10d01b570>, <sqlite3.Row object at 0x10d01b5d0>, <sqlite3.Row object at 0x10d01b630>, <sqlite3.Row object at 0x10d01b690>, <sqlite3.Row object at 0x10d01b6f0>, <sqlite3.Row object at 0x10d01b750>, <sqlite3.Row object at 0x10d01b7b0>, <sqlite3.Row object at 0x10d01b810>, <sqlite3.Row object at 0x10d01b870>, <sqlite3.Row object at 0x10d01b8d0>, <sqlite3.Row object at 0x10d01b930>, <sqlite3.Row object at 0x10d01b990>, <sqlite3.Row object at 0x10d01b9f0>, <sqlite3.Row object at 0x10d01ba50>, <sqlite3.Row object at 0x10d01bab0>, <sqlite3.Row object at 0x10d01bb10>, <sqlite3.Row object at 0x10d01bb70>, <sqlite3.Row object at 0x10d01bbd0>, <sqlite3.Row object at 0x10d01bc30>, <sqlite3.Row object at 0x10d01bc90>, <sqlite3.Row object at 0x10d01bcf0>, <sqlite3.Row object at 0x10d01bd50>, <sqlite3.Row object at 0x10d01bdb0>, <sqlite3.Row object at 0x10d01be10>, <sqlite3.Row object at 0x10d01be70>, <sqlite3.Row object at 0x10d01bed0>, <sqlite3.Row object at 0x10d01bf30>, <sqlite3.Row object at 0x10d01bf90>, <sqlite3.Row object at 0x10d01e030>, <sqlite3.Row object at 0x10d01e090>, <sqlite3.Row object at 0x10d01e0f0>, <sqlite3.Row object at 0x10d01e150>, <sqlite3.Row object at 0x10d01e1b0>, <sqlite3.Row object at 0x10d01e210>, <sqlite3.Row object at 0x10d01e270>, <sqlite3.Row object at 0x10d01e2d0>, <sqlite3.Row object at 0x10d01e330>, <sqlite3.Row object at 0x10d01e390>, <sqlite3.Row object at 0x10d01e3f0>, <sqlite3.Row object at 0x10d01e450>, <sqlite3.Row object at 0x10d01e4b0>, <sqlite3.Row object at 0x10d01e510>, <sqlite3.Row object at 0x10d01e570>, <sqlite3.Row object at 0x10d01e5d0>, <sqlite3.Row object at 0x10d01e630>, <sqlite3.Row object at 0x10d01e690>, <sqlite3.Row object at 0x10d01e6f0>, <sqlite3.Row object at 0x10d01e750>, <sqlite3.Row object at 0x10d01e7b0>, <sqlite3.Row object at 0x10d01e810>, <sqlite3.Row object at 0x10d01e870>, <sqlite3.Row object at 0x10d01e8d0>, <sqlite3.Row object at 0x10d01e930>, <sqlite3.Row object at 0x10d01e990>, <sqlite3.Row object at 0x10d01e9f0>, <sqlite3.Row object at 0x10d01ea50>, <sqlite3.Row object at 0x10d01eab0>, <sqlite3.Row object at 0x10d01eb10>, <sqlite3.Row object at 0x10d01eb70>, <sqlite3.Row object at 0x10d01ebd0>, <sqlite3.Row object at 0x10d01ec30>, <sqlite3.Row object at 0x10d01ec90>, <sqlite3.Row object at 0x10d01ecf0>, <sqlite3.Row object at 0x10d01ed50>, <sqlite3.Row object at 0x10d01edb0>, <sqlite3.Row object at 0x10d01ee10>, <sqlite3.Row object at 0x10d01ee70>, <sqlite3.Row object at 0x10d01eed0>, <sqlite3.Row object at 0x10d01ef30>, <sqlite3.Row object at 0x10d01ef90>, <sqlite3.Row object at 0x10d021030>, <sqlite3.Row object at 0x10d021090>, <sqlite3.Row object at 0x10d0210f0>, <sqlite3.Row object at 0x10d021150>, <sqlite3.Row object at 0x10d0211b0>, <sqlite3.Row object at 0x10d021210>, <sqlite3.Row object at 0x10d021270>, <sqlite3.Row object at 0x10d0212d0>, <sqlite3.Row object at 0x10d021330>, <sqlite3.Row object at 0x10d021390>, <sqlite3.Row object at 0x10d0213f0>, <sqlite3.Row object at 0x10d021450>, <sqlite3.Row object at 0x10d0214b0>, <sqlite3.Row object at 0x10d021510>, <sqlite3.Row object at 0x10d021570>, <sqlite3.Row object at 0x10d0215d0>, <sqlite3.Row object at 0x10d021630>, <sqlite3.Row object at 0x10d021690>, <sqlite3.Row object at 0x10d0216f0>, <sqlite3.Row object at 0x10d021750>, <sqlite3.Row object at 0x10d0217b0>, <sqlite3.Row object at 0x10d021810>, <sqlite3.Row object at 0x10d021870>, <sqlite3.Row object at 0x10d0218d0>, <sqlite3.Row object at 0x10d021930>, <sqlite3.Row object at 0x10d021990>, <sqlite3.Row object at 0x10d0219f0>, <sqlite3.Row object at 0x10d021a50>, <sqlite3.Row object at 0x10d021ab0>, <sqlite3.Row object at 0x10d021b10>, <sqlite3.Row object at 0x10d021b70>, <sqlite3.Row object at 0x10d021bd0>]
2025-06-15 15:48:21,864 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 15:48:21,865 - app - INFO - Final Assistant Response (NL): Â¡Por supuesto! Estoy aquÃ­ para ayudarte. Â¿QuÃ© te gustarÃ­a revisar hoy? Puedo mostrarte tus transacciones, ayudarte a entender tus gastos, o cualquier otra cosa que necesites. ðŸ˜Š
2025-06-15 15:50:12,084 - app - INFO - User Query (es): ok, vale fui en cebu en Enero, antes Sinulog, pero no recuerdo mis gastos despues eso en Enero, puedes digame esas cosas
2025-06-15 15:50:13,546 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 15:50:13,546 - app - INFO - Generated SQL Query: SELECT * FROM bank_transactions WHERE Date BETWEEN '2025-01-02' AND '2025-01-31' AND LOWER("Branch / Source") LIKE '%cebu%' ORDER BY Date ASC;
2025-06-15 15:50:13,549 - app - INFO - Database connection established.
2025-06-15 15:50:13,552 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d01e250>, <sqlite3.Row object at 0x10d01e190>, <sqlite3.Row object at 0x10d01e2f0>, <sqlite3.Row object at 0x10d01e350>, <sqlite3.Row object at 0x10d01e310>, <sqlite3.Row object at 0x10d01e370>, <sqlite3.Row object at 0x10d01e490>, <sqlite3.Row object at 0x10d01e430>, <sqlite3.Row object at 0x10d01e470>, <sqlite3.Row object at 0x10d01e4d0>, <sqlite3.Row object at 0x10d01e410>]
2025-06-15 15:50:16,317 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 15:50:16,318 - app - INFO - Final Assistant Response (NL): Â¡Claro! AquÃ­ estÃ¡n tus transacciones en Cebu durante el mes de Enero de 2025:

*   04 de Enero: Recibiste â‚±16,548.89 y gastaste â‚±1,283.59 en una compra con tarjeta (POS).
*   08 de Enero: Transferencia de fondos por â‚±3,187.71.
*   12 de Enero: DepÃ³sito de cheque por â‚±14,237.75.
*   16 de Enero: Transferencia bancaria mÃ³vil por â‚±8,980.61.
*   17 de Enero: Cargo por servicio de â‚±340.78.
*   20 de Enero: Compra con tarjeta (POS) por â‚±3,634.04.
*   26 de Enero: Pago de facturas por â‚±3,348.41.
*   29 de Enero: Abono de intereses por â‚±16,313.14 y retiro en cajero automÃ¡tico (ATM) por â‚±8,090.37.
*   30 de Enero: Abono de intereses por â‚±19,971.57.

Â¿Hay algo mÃ¡s especÃ­fico que te gustarÃ­a revisar de este perÃ­odo?
2025-06-15 15:50:39,217 - app - INFO - User Query (es): ok, vale fui en cebu en Enero, antes Sinulog, pero no recuerdo mis gastos en ese mes despues Sinulog, puedes digame esas cosas que necesito
2025-06-15 15:50:40,886 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 15:50:40,886 - app - INFO - Generated SQL Query: SELECT * FROM bank_transactions WHERE strftime('%Y', Date) = '2025' AND strftime('%m', Date) = '01' AND Date > '2025-01-29 00:00:00';
2025-06-15 15:50:40,888 - app - INFO - Database connection established.
2025-06-15 15:50:40,890 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d01e470>, <sqlite3.Row object at 0x10d01e050>, <sqlite3.Row object at 0x10d01e410>]
2025-06-15 15:50:42,628 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 15:50:42,628 - app - INFO - Final Assistant Response (NL): Â¡Entendido! AquÃ­ estÃ¡n tus transacciones despuÃ©s del Sinulog en Enero de 2025:

*   30 de Enero: DepÃ³sito de cheque por â‚±7,613.93 en BDO QC, abono de intereses por â‚±19,971.57 en BDO Cebu, y pago de facturas por â‚±8,567.65 en BDO Makati.

Â¿Hay algo mÃ¡s que quieras revisar de este perÃ­odo o algÃºn detalle adicional que necesites saber? ðŸ˜Š
2025-06-15 15:51:19,272 - app - INFO - User Query (es): necesito esos que ocurrio despues Sinulog pero ocurrio en Enero
2025-06-15 15:51:21,025 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 15:51:21,026 - app - INFO - Generated SQL Query: SELECT * FROM bank_transactions WHERE Date > '2025-01-26' AND Date < '2025-02-01' ORDER BY Date ASC;
2025-06-15 15:51:21,028 - app - INFO - Database connection established.
2025-06-15 15:51:21,031 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d01e4f0>, <sqlite3.Row object at 0x10d01e490>, <sqlite3.Row object at 0x10d01e1d0>, <sqlite3.Row object at 0x10d01e430>, <sqlite3.Row object at 0x10d01e550>, <sqlite3.Row object at 0x10d01e530>, <sqlite3.Row object at 0x10d01e3b0>, <sqlite3.Row object at 0x10d01e730>, <sqlite3.Row object at 0x10d01e590>, <sqlite3.Row object at 0x10d01e4d0>, <sqlite3.Row object at 0x10d01e5b0>]
2025-06-15 15:51:23,837 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 15:51:23,838 - app - INFO - Final Assistant Response (NL): Â¡Por supuesto! AquÃ­ tienes un resumen de tus transacciones que ocurrieron despuÃ©s del Sinulog (19 de enero) en enero de 2025:

*   26 de enero: Tuviste una compra con tarjeta (POS) por â‚±8,073.76 en BDO Makati y un pago de facturas por â‚±3,348.41 en BDO Cebu.
*   27 de enero: Recibiste un abono de intereses por â‚±15,490.90 a travÃ©s de BDO Online.
*   28 de enero: Recibiste un depÃ³sito de salario por â‚±12,938.78 a travÃ©s de BDO Online y realizaste una transferencia de fondos por â‚±5,078.35.
*   29 de enero: Realizaste una transferencia de fondos por â‚±9,800.00 a travÃ©s de BDO Davao, recibiste un abono de intereses por â‚±16,313.14 en BDO Cebu, y retiraste â‚±8,090.37 en un cajero automÃ¡tico (ATM) en BDO Cebu.
*   30 de enero: Depositaste un cheque por â‚±7,613.93 en BDO QC, recibiste un abono de intereses por â‚±19,971.57 en BDO Cebu, y realizaste un pago de facturas por â‚±8,567.65 en BDO Makati.

Â¿Hay algo mÃ¡s que te gustarÃ­a revisar o algÃºn detalle adicional que necesites saber? ðŸ˜Š
2025-06-15 15:51:51,135 - app - INFO - User Query (es): y tambien, necesito solamente esos que ocurrio en cebu pero criteria parejas
2025-06-15 15:51:52,562 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 15:51:52,563 - app - INFO - Generated SQL Query: SELECT * FROM bank_transactions WHERE strftime('%Y-%m', Date) = '2025-01' AND LOWER("Branch / Source") LIKE '%cebu%' AND "Transaction Details" LIKE '%pareja%';
2025-06-15 15:51:52,566 - app - INFO - Database connection established.
2025-06-15 15:51:52,572 - app - INFO - SQL Query Executed Successfully. Results: []
2025-06-15 15:51:53,854 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 15:51:53,854 - app - INFO - Final Assistant Response (NL): Â¡Entendido! AquÃ­ tienes todas las transacciones que ocurrieron en Cebu, ordenadas por fecha:

Â¿Te gustarÃ­a que filtre aÃºn mÃ¡s esta lista o te proporcione mÃ¡s detalles sobre alguna transacciÃ³n en particular? ðŸ˜Š
2025-06-15 15:52:06,838 - app - INFO - User Query (es): necesito esos que ocurrio en Cebu despues Sinulog pero ocurrio en Enero
2025-06-15 15:52:08,846 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 15:52:08,847 - app - INFO - Generated SQL Query: SELECT * FROM bank_transactions WHERE strftime('%Y', Date) = '2025' AND strftime('%m', Date) = '01' AND Date > '2025-01-19 00:00:00' AND LOWER("Branch / Source") LIKE '%cebu%' ORDER BY Date ASC;
2025-06-15 15:52:08,850 - app - INFO - Database connection established.
2025-06-15 15:52:08,854 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d01e050>, <sqlite3.Row object at 0x10d01e4f0>, <sqlite3.Row object at 0x10d01e3d0>, <sqlite3.Row object at 0x10d01e610>, <sqlite3.Row object at 0x10d01e6b0>]
2025-06-15 15:52:11,099 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 15:52:11,100 - app - INFO - Final Assistant Response (NL): Â¡Por supuesto! AquÃ­ tienes un resumen de tus transacciones que ocurrieron en Cebu despuÃ©s del Sinulog (19 de enero) en enero de 2025:

*   20 de enero: Tuviste una compra con tarjeta (POS) por â‚±3,634.04 en BDO Cebu.
*   26 de enero: Realizaste un pago de facturas por â‚±3,348.41 en BDO Cebu.
*   29 de enero: Recibiste un abono de intereses por â‚±16,313.14 en BDO Cebu y retiraste â‚±8,090.37 en un cajero automÃ¡tico (ATM) en BDO Cebu.
*   30 de enero: Recibiste un abono de intereses por â‚±19,971.57 en BDO Cebu.

Â¿Hay algo mÃ¡s que te gustarÃ­a revisar o algÃºn detalle adicional que necesites saber? ðŸ˜Š
2025-06-15 15:52:50,467 - app - INFO - User Query (es): que es abono de interes? explicame en terminas generales, como eres chismosa
2025-06-15 15:52:52,066 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 15:52:52,066 - app - INFO - Generated SQL Query: SELECT DISTINCT "Transaction Details" FROM bank_transactions WHERE LOWER("Transaction Details") LIKE '%abono de interes%';
2025-06-15 15:52:52,069 - app - INFO - Database connection established.
2025-06-15 15:52:52,073 - app - INFO - SQL Query Executed Successfully. Results: []
2025-06-15 15:52:53,597 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 15:52:53,598 - app - INFO - Final Assistant Response (NL): Â¡Jaja, como soy chismosa, te lo cuento todo! Un 'abono de intereses' es cuando el banco te paga por tener tu dinero guardado con ellos. Es como una pequeÃ±a recompensa por confiar en el banco. Â¿Quieres saber mÃ¡s chismecitos sobre tus finanzas?
2025-06-15 15:53:23,747 - app - INFO - User Query (en): what is 'abono de intereses'? can you explain it to me in layman's term, like if you're a chismosa
2025-06-15 15:53:25,036 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 15:53:25,037 - app - INFO - Generated SQL Query: SELECT 'Abono de intereses is interest earned on your deposit balance.';
2025-06-15 15:53:25,039 - app - INFO - Database connection established.
2025-06-15 15:53:25,040 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d01e670>]
2025-06-15 15:53:26,411 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 15:53:26,412 - app - INFO - Final Assistant Response (NL): Ay, as a chismosa, let me tell you! 'Abono de intereses' is simply the interest the bank pays you for keeping your money with them. Think of it as a thank-you from the bank for trusting them with your hard-earned cash. ðŸ˜‰ Is there anything else you need the chismis on?
2025-06-15 15:53:41,084 - app - INFO - User Query (en): hahaha how about pago de facturas
2025-06-15 15:53:42,649 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 15:53:42,649 - app - INFO - Generated SQL Query: SELECT DISTINCT "Transaction Details" FROM bank_transactions WHERE LOWER("Transaction Details") LIKE '%pago de facturas%';
2025-06-15 15:53:42,653 - app - INFO - Database connection established.
2025-06-15 15:53:42,656 - app - INFO - SQL Query Executed Successfully. Results: []
2025-06-15 15:53:43,939 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 15:53:43,939 - app - INFO - Final Assistant Response (NL): Okay, *pago de facturas* literally translates to 'bill payment'. It's when you use your account to pay your billsâ€”utilities, credit cards, anything like that! ðŸ˜‰ Anything else you're curious about, kapitbahay?
2025-06-15 15:54:17,300 - app - INFO - User Query (es): muy bien, volvemos a pronto.
2025-06-15 15:54:18,280 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 15:54:18,280 - app - INFO - Generated SQL Query: SELECT 1
2025-06-15 15:54:18,282 - app - INFO - Database connection established.
2025-06-15 15:54:18,283 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d01e5f0>]
2025-06-15 15:54:19,614 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 15:54:19,614 - app - INFO - Final Assistant Response (NL): Â¡QuÃ© bueno! Regresaremos pronto. Actualmente tengo datos de un sucursal diferente. Â¡Espero poder ayudarte con cualquier otra cosa que necesites en el futuro!
2025-06-15 15:54:39,143 - app - INFO - User Query (es): vale gracias
2025-06-15 15:54:39,144 - app - INFO - Chat ended with exit phrase. Assistant Response: Â¡Gracias por chatear! Â¡Que tengas un gran dÃ­a!
2025-06-15 15:55:52,061 - app - INFO - User Query (en): hi
2025-06-15 15:55:53,310 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 15:55:53,311 - app - INFO - Generated SQL Query: SELECT strftime('%Y-%m-%d', Date) AS Date, "Transaction Details", "Branch / Source", Withdrawals, Deposits, Balance FROM bank_transactions ORDER BY Date ASC;
2025-06-15 15:55:53,314 - app - INFO - Database connection established.
2025-06-15 15:55:53,320 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d01e0f0>, <sqlite3.Row object at 0x10d01e090>, <sqlite3.Row object at 0x10d01e270>, <sqlite3.Row object at 0x10d01e210>, <sqlite3.Row object at 0x10d01e150>, <sqlite3.Row object at 0x10d01e950>, <sqlite3.Row object at 0x10d01e1b0>, <sqlite3.Row object at 0x10d01ea70>, <sqlite3.Row object at 0x10d01e7f0>, <sqlite3.Row object at 0x10d01e670>, <sqlite3.Row object at 0x10d01e650>, <sqlite3.Row object at 0x10d01e4d0>, <sqlite3.Row object at 0x10d01e350>, <sqlite3.Row object at 0x10d01e2d0>, <sqlite3.Row object at 0x10d01e330>, <sqlite3.Row object at 0x10d01e390>, <sqlite3.Row object at 0x10d01e3f0>, <sqlite3.Row object at 0x10d01e450>, <sqlite3.Row object at 0x10d01e4b0>, <sqlite3.Row object at 0x10d01e510>, <sqlite3.Row object at 0x10d01e570>, <sqlite3.Row object at 0x10d01e5d0>, <sqlite3.Row object at 0x10d01e630>, <sqlite3.Row object at 0x10d01e690>, <sqlite3.Row object at 0x10d01e6f0>, <sqlite3.Row object at 0x10d01e750>, <sqlite3.Row object at 0x10d01e7b0>, <sqlite3.Row object at 0x10d01e810>, <sqlite3.Row object at 0x10d01e870>, <sqlite3.Row object at 0x10d01e8d0>, <sqlite3.Row object at 0x10d01e930>, <sqlite3.Row object at 0x10d01e990>, <sqlite3.Row object at 0x10d01e9f0>, <sqlite3.Row object at 0x10d01ea50>, <sqlite3.Row object at 0x10d01eab0>, <sqlite3.Row object at 0x10d01eb10>, <sqlite3.Row object at 0x10d01eb70>, <sqlite3.Row object at 0x10d01ebd0>, <sqlite3.Row object at 0x10d01ec30>, <sqlite3.Row object at 0x10d01ec90>, <sqlite3.Row object at 0x10d01ecf0>, <sqlite3.Row object at 0x10d01ed50>, <sqlite3.Row object at 0x10d01edb0>, <sqlite3.Row object at 0x10d01ee10>, <sqlite3.Row object at 0x10d01ee70>, <sqlite3.Row object at 0x10d01eed0>, <sqlite3.Row object at 0x10d01ef30>, <sqlite3.Row object at 0x10d01ef90>, <sqlite3.Row object at 0x10d00e150>, <sqlite3.Row object at 0x10d00e090>, <sqlite3.Row object at 0x10d00e9f0>, <sqlite3.Row object at 0x10d00ea90>, <sqlite3.Row object at 0x10d00eaf0>, <sqlite3.Row object at 0x10d00eb10>, <sqlite3.Row object at 0x10d00ec30>, <sqlite3.Row object at 0x10d00ecd0>, <sqlite3.Row object at 0x10d00ed50>, <sqlite3.Row object at 0x10d00edf0>, <sqlite3.Row object at 0x10d00ee70>, <sqlite3.Row object at 0x10d00ef10>, <sqlite3.Row object at 0x10d00ef90>, <sqlite3.Row object at 0x10d00e470>, <sqlite3.Row object at 0x10d00e650>, <sqlite3.Row object at 0x10d00e7d0>, <sqlite3.Row object at 0x10d00e9b0>, <sqlite3.Row object at 0x10d00eb30>, <sqlite3.Row object at 0x10d00ed10>, <sqlite3.Row object at 0x10d00ee90>, <sqlite3.Row object at 0x10d00e270>, <sqlite3.Row object at 0x10d00e370>, <sqlite3.Row object at 0x10d00e330>, <sqlite3.Row object at 0x10d00e450>, <sqlite3.Row object at 0x10d00e3d0>, <sqlite3.Row object at 0x10d00e550>, <sqlite3.Row object at 0x10d00e5d0>, <sqlite3.Row object at 0x10d00e670>, <sqlite3.Row object at 0x10d00e6f0>, <sqlite3.Row object at 0x10d00e790>, <sqlite3.Row object at 0x10d00e810>, <sqlite3.Row object at 0x10d00e8b0>, <sqlite3.Row object at 0x10d00e930>, <sqlite3.Row object at 0x10d00e9d0>, <sqlite3.Row object at 0x10d00e110>, <sqlite3.Row object at 0x10d00e230>, <sqlite3.Row object at 0x10d00e350>, <sqlite3.Row object at 0x10d00e5f0>, <sqlite3.Row object at 0x10d00e950>, <sqlite3.Row object at 0x10d00ecb0>, <sqlite3.Row object at 0x10d00e1f0>, <sqlite3.Row object at 0x108e88530>, <sqlite3.Row object at 0x108e887b0>, <sqlite3.Row object at 0x108e88370>, <sqlite3.Row object at 0x108e88fd0>, <sqlite3.Row object at 0x108e88850>, <sqlite3.Row object at 0x108e886b0>, <sqlite3.Row object at 0x108e88f30>, <sqlite3.Row object at 0x108e88210>, <sqlite3.Row object at 0x10d021030>, <sqlite3.Row object at 0x10d021150>, <sqlite3.Row object at 0x10d021270>, <sqlite3.Row object at 0x10d021390>, <sqlite3.Row object at 0x10d0214b0>, <sqlite3.Row object at 0x10d0215d0>, <sqlite3.Row object at 0x10d0216f0>, <sqlite3.Row object at 0x10d021810>, <sqlite3.Row object at 0x10d021930>, <sqlite3.Row object at 0x10d021a50>, <sqlite3.Row object at 0x10d021b70>, <sqlite3.Row object at 0x10d021cb0>, <sqlite3.Row object at 0x10d021d30>, <sqlite3.Row object at 0x10d021d90>, <sqlite3.Row object at 0x10d021e70>, <sqlite3.Row object at 0x10d021ed0>, <sqlite3.Row object at 0x10d021f30>, <sqlite3.Row object at 0x10d021f90>, <sqlite3.Row object at 0x10d003030>, <sqlite3.Row object at 0x10d003090>, <sqlite3.Row object at 0x10d0030f0>, <sqlite3.Row object at 0x10d003150>, <sqlite3.Row object at 0x10d0031b0>, <sqlite3.Row object at 0x10d003210>, <sqlite3.Row object at 0x10d003270>, <sqlite3.Row object at 0x10d0032d0>, <sqlite3.Row object at 0x10d003330>, <sqlite3.Row object at 0x10d003390>, <sqlite3.Row object at 0x10d0033f0>, <sqlite3.Row object at 0x10d003450>, <sqlite3.Row object at 0x10d0034b0>, <sqlite3.Row object at 0x10d003510>, <sqlite3.Row object at 0x10d003570>, <sqlite3.Row object at 0x10d0035d0>, <sqlite3.Row object at 0x10d003630>, <sqlite3.Row object at 0x10d003690>, <sqlite3.Row object at 0x10d0036f0>, <sqlite3.Row object at 0x10d003750>, <sqlite3.Row object at 0x10d0037b0>, <sqlite3.Row object at 0x10d003810>, <sqlite3.Row object at 0x10d003870>, <sqlite3.Row object at 0x10d0038d0>, <sqlite3.Row object at 0x10d003930>, <sqlite3.Row object at 0x10d003990>, <sqlite3.Row object at 0x10d0039f0>, <sqlite3.Row object at 0x10d003a50>, <sqlite3.Row object at 0x10d003ab0>, <sqlite3.Row object at 0x10d003b10>, <sqlite3.Row object at 0x10d003b70>, <sqlite3.Row object at 0x10d003bd0>, <sqlite3.Row object at 0x10d003c30>, <sqlite3.Row object at 0x10d003c90>, <sqlite3.Row object at 0x10d003cf0>, <sqlite3.Row object at 0x10d003d50>, <sqlite3.Row object at 0x10d003db0>, <sqlite3.Row object at 0x10d003e10>, <sqlite3.Row object at 0x10d003e70>, <sqlite3.Row object at 0x10d003ed0>, <sqlite3.Row object at 0x10d003f30>, <sqlite3.Row object at 0x10d003f90>, <sqlite3.Row object at 0x10d02c030>, <sqlite3.Row object at 0x10d02c090>, <sqlite3.Row object at 0x10d02c0f0>, <sqlite3.Row object at 0x10d02c150>, <sqlite3.Row object at 0x10d02c1b0>, <sqlite3.Row object at 0x10d02c210>, <sqlite3.Row object at 0x10d02c270>, <sqlite3.Row object at 0x10d02c2d0>, <sqlite3.Row object at 0x10d02c330>, <sqlite3.Row object at 0x10d02c390>, <sqlite3.Row object at 0x10d02c3f0>, <sqlite3.Row object at 0x10d02c450>, <sqlite3.Row object at 0x10d02c4b0>, <sqlite3.Row object at 0x10d02c510>, <sqlite3.Row object at 0x10d02c570>, <sqlite3.Row object at 0x10d02c5d0>, <sqlite3.Row object at 0x10d02c630>, <sqlite3.Row object at 0x10d02c690>, <sqlite3.Row object at 0x10d02c6f0>, <sqlite3.Row object at 0x10d02c750>, <sqlite3.Row object at 0x10d02c7b0>, <sqlite3.Row object at 0x10d02c810>, <sqlite3.Row object at 0x10d02c870>, <sqlite3.Row object at 0x10d02c8d0>, <sqlite3.Row object at 0x10d02c930>, <sqlite3.Row object at 0x10d02c990>, <sqlite3.Row object at 0x10d02c9f0>, <sqlite3.Row object at 0x10d02ca50>, <sqlite3.Row object at 0x10d02cab0>, <sqlite3.Row object at 0x10d02cb10>, <sqlite3.Row object at 0x10d02cb70>, <sqlite3.Row object at 0x10d02cbd0>, <sqlite3.Row object at 0x10d02cc30>, <sqlite3.Row object at 0x10d02cc90>, <sqlite3.Row object at 0x10d02ccf0>, <sqlite3.Row object at 0x10d02cd50>, <sqlite3.Row object at 0x10d02cdb0>, <sqlite3.Row object at 0x10d02ce10>, <sqlite3.Row object at 0x10d02ce70>, <sqlite3.Row object at 0x10d02ced0>, <sqlite3.Row object at 0x10d02cf30>, <sqlite3.Row object at 0x10d02cf90>, <sqlite3.Row object at 0x10d02d030>, <sqlite3.Row object at 0x10d02d090>, <sqlite3.Row object at 0x10d02d0f0>, <sqlite3.Row object at 0x10d02d150>, <sqlite3.Row object at 0x10d02d1b0>, <sqlite3.Row object at 0x10d02d210>, <sqlite3.Row object at 0x10d02d270>, <sqlite3.Row object at 0x10d02d2d0>, <sqlite3.Row object at 0x10d02d330>, <sqlite3.Row object at 0x10d02d390>, <sqlite3.Row object at 0x10d02d3f0>, <sqlite3.Row object at 0x10d02d450>, <sqlite3.Row object at 0x10d02d4b0>, <sqlite3.Row object at 0x10d02d510>, <sqlite3.Row object at 0x10d02d570>, <sqlite3.Row object at 0x10d02d5d0>, <sqlite3.Row object at 0x10d02d630>, <sqlite3.Row object at 0x10d02d690>, <sqlite3.Row object at 0x10d02d6f0>, <sqlite3.Row object at 0x10d02d750>, <sqlite3.Row object at 0x10d02d7b0>, <sqlite3.Row object at 0x10d02d810>, <sqlite3.Row object at 0x10d02d870>, <sqlite3.Row object at 0x10d02d8d0>, <sqlite3.Row object at 0x10d02d930>, <sqlite3.Row object at 0x10d02d990>, <sqlite3.Row object at 0x10d02d9f0>, <sqlite3.Row object at 0x10d02da50>, <sqlite3.Row object at 0x10d02dab0>, <sqlite3.Row object at 0x10d02db10>, <sqlite3.Row object at 0x10d02db70>, <sqlite3.Row object at 0x10d02dbd0>, <sqlite3.Row object at 0x10d02dc30>, <sqlite3.Row object at 0x10d02dc90>, <sqlite3.Row object at 0x10d02dcf0>, <sqlite3.Row object at 0x10d02dd50>, <sqlite3.Row object at 0x10d02ddb0>, <sqlite3.Row object at 0x10d02de10>, <sqlite3.Row object at 0x10d02de70>, <sqlite3.Row object at 0x10d02ded0>, <sqlite3.Row object at 0x10d02df30>, <sqlite3.Row object at 0x10d02df90>, <sqlite3.Row object at 0x10d00b030>, <sqlite3.Row object at 0x10d00b090>, <sqlite3.Row object at 0x10d00b0f0>, <sqlite3.Row object at 0x10d00b150>, <sqlite3.Row object at 0x10d00b1b0>, <sqlite3.Row object at 0x10d00b210>, <sqlite3.Row object at 0x10d00b270>, <sqlite3.Row object at 0x10d00b2d0>, <sqlite3.Row object at 0x10d00b330>, <sqlite3.Row object at 0x10d00b390>, <sqlite3.Row object at 0x10d00b3f0>, <sqlite3.Row object at 0x10d00b450>, <sqlite3.Row object at 0x10d00b4b0>, <sqlite3.Row object at 0x10d00b510>, <sqlite3.Row object at 0x10d00b570>, <sqlite3.Row object at 0x10d00b5d0>, <sqlite3.Row object at 0x10d00b630>, <sqlite3.Row object at 0x10d00b690>, <sqlite3.Row object at 0x10d00b6f0>, <sqlite3.Row object at 0x10d00b750>, <sqlite3.Row object at 0x10d00b7b0>, <sqlite3.Row object at 0x10d00b810>, <sqlite3.Row object at 0x10d00b870>, <sqlite3.Row object at 0x10d00b8d0>, <sqlite3.Row object at 0x10d00b930>, <sqlite3.Row object at 0x10d00b990>, <sqlite3.Row object at 0x10d00b9f0>, <sqlite3.Row object at 0x10d00ba50>, <sqlite3.Row object at 0x10d00bab0>, <sqlite3.Row object at 0x10d00bb10>, <sqlite3.Row object at 0x10d00bb70>, <sqlite3.Row object at 0x10d00bbd0>, <sqlite3.Row object at 0x10d00bc30>, <sqlite3.Row object at 0x10d00bc90>, <sqlite3.Row object at 0x10d00bcf0>, <sqlite3.Row object at 0x10d00bd50>, <sqlite3.Row object at 0x10d00bdb0>, <sqlite3.Row object at 0x10d00be10>, <sqlite3.Row object at 0x10d00be70>, <sqlite3.Row object at 0x10d00bed0>, <sqlite3.Row object at 0x10d00bf30>, <sqlite3.Row object at 0x10d00bf90>, <sqlite3.Row object at 0x10d037030>, <sqlite3.Row object at 0x10d037090>, <sqlite3.Row object at 0x10d0370f0>, <sqlite3.Row object at 0x10d037150>, <sqlite3.Row object at 0x10d0371b0>, <sqlite3.Row object at 0x10d037210>, <sqlite3.Row object at 0x10d037270>, <sqlite3.Row object at 0x10d0372d0>, <sqlite3.Row object at 0x10d037330>, <sqlite3.Row object at 0x10d037390>, <sqlite3.Row object at 0x10d0373f0>, <sqlite3.Row object at 0x10d037450>, <sqlite3.Row object at 0x10d0374b0>, <sqlite3.Row object at 0x10d037510>, <sqlite3.Row object at 0x10d037570>, <sqlite3.Row object at 0x10d0375d0>, <sqlite3.Row object at 0x10d037630>, <sqlite3.Row object at 0x10d037690>, <sqlite3.Row object at 0x10d0376f0>, <sqlite3.Row object at 0x10d037750>, <sqlite3.Row object at 0x10d0377b0>, <sqlite3.Row object at 0x10d037810>, <sqlite3.Row object at 0x10d037870>, <sqlite3.Row object at 0x10d0378d0>, <sqlite3.Row object at 0x10d037930>, <sqlite3.Row object at 0x10d037990>, <sqlite3.Row object at 0x10d0379f0>, <sqlite3.Row object at 0x10d037a50>, <sqlite3.Row object at 0x10d037ab0>, <sqlite3.Row object at 0x10d037b10>, <sqlite3.Row object at 0x10d037b70>, <sqlite3.Row object at 0x10d037bd0>, <sqlite3.Row object at 0x10d037c30>, <sqlite3.Row object at 0x10d037c90>, <sqlite3.Row object at 0x10d037cf0>, <sqlite3.Row object at 0x10d037d50>, <sqlite3.Row object at 0x10d037db0>, <sqlite3.Row object at 0x10d037e10>, <sqlite3.Row object at 0x10d037e70>, <sqlite3.Row object at 0x10d037ed0>, <sqlite3.Row object at 0x10d037f30>, <sqlite3.Row object at 0x10d037f90>, <sqlite3.Row object at 0x10d017050>, <sqlite3.Row object at 0x10d0170d0>, <sqlite3.Row object at 0x10d017170>, <sqlite3.Row object at 0x10d0171f0>, <sqlite3.Row object at 0x10d017290>, <sqlite3.Row object at 0x10d017310>, <sqlite3.Row object at 0x10d0173b0>, <sqlite3.Row object at 0x10d017430>, <sqlite3.Row object at 0x10d0174d0>, <sqlite3.Row object at 0x10d017550>, <sqlite3.Row object at 0x10d0175f0>, <sqlite3.Row object at 0x10d017670>, <sqlite3.Row object at 0x10d017710>, <sqlite3.Row object at 0x10d017790>, <sqlite3.Row object at 0x10d017830>, <sqlite3.Row object at 0x10d0178b0>, <sqlite3.Row object at 0x10d017950>, <sqlite3.Row object at 0x10d0179d0>, <sqlite3.Row object at 0x10d017a70>, <sqlite3.Row object at 0x10d017af0>, <sqlite3.Row object at 0x10d017b90>, <sqlite3.Row object at 0x10d017c10>, <sqlite3.Row object at 0x10d017cb0>, <sqlite3.Row object at 0x10d017d30>, <sqlite3.Row object at 0x10d017dd0>, <sqlite3.Row object at 0x10d017e50>, <sqlite3.Row object at 0x10d017ef0>, <sqlite3.Row object at 0x10d017f70>, <sqlite3.Row object at 0x10d017030>, <sqlite3.Row object at 0x10d017150>, <sqlite3.Row object at 0x10d017270>, <sqlite3.Row object at 0x10d017390>, <sqlite3.Row object at 0x10d0174b0>, <sqlite3.Row object at 0x10d0175d0>, <sqlite3.Row object at 0x10d0176f0>, <sqlite3.Row object at 0x10d017810>, <sqlite3.Row object at 0x10d017930>, <sqlite3.Row object at 0x10d017a50>, <sqlite3.Row object at 0x10d017b70>, <sqlite3.Row object at 0x10d017c90>, <sqlite3.Row object at 0x10d017db0>, <sqlite3.Row object at 0x10d017ed0>, <sqlite3.Row object at 0x10d01b050>, <sqlite3.Row object at 0x10d01b0d0>, <sqlite3.Row object at 0x10d01b170>, <sqlite3.Row object at 0x10d01b1f0>, <sqlite3.Row object at 0x10d01b290>, <sqlite3.Row object at 0x10d01b310>, <sqlite3.Row object at 0x10d01b3b0>, <sqlite3.Row object at 0x10d01b430>, <sqlite3.Row object at 0x10d01b4d0>, <sqlite3.Row object at 0x10d01b550>, <sqlite3.Row object at 0x10d01b5f0>, <sqlite3.Row object at 0x10d01b670>, <sqlite3.Row object at 0x10d01b710>, <sqlite3.Row object at 0x10d01b790>, <sqlite3.Row object at 0x10d01b830>, <sqlite3.Row object at 0x10d01b8b0>, <sqlite3.Row object at 0x10d01b950>, <sqlite3.Row object at 0x10d01b9d0>, <sqlite3.Row object at 0x10d01ba70>, <sqlite3.Row object at 0x10d01baf0>, <sqlite3.Row object at 0x10d01bb90>, <sqlite3.Row object at 0x10d01bc10>, <sqlite3.Row object at 0x10d01bcb0>, <sqlite3.Row object at 0x10d01bd30>, <sqlite3.Row object at 0x10d01bdd0>, <sqlite3.Row object at 0x10d01be50>, <sqlite3.Row object at 0x10d01bef0>, <sqlite3.Row object at 0x10d01bf70>, <sqlite3.Row object at 0x10d01b030>, <sqlite3.Row object at 0x10d01b150>, <sqlite3.Row object at 0x10d01b270>, <sqlite3.Row object at 0x10d01b390>, <sqlite3.Row object at 0x10d01b4b0>, <sqlite3.Row object at 0x10d01b5d0>, <sqlite3.Row object at 0x10d01b6f0>, <sqlite3.Row object at 0x10d01b810>, <sqlite3.Row object at 0x10d01b930>, <sqlite3.Row object at 0x10d01ba50>, <sqlite3.Row object at 0x10d01bb70>, <sqlite3.Row object at 0x10d01bc90>, <sqlite3.Row object at 0x10d01bdb0>, <sqlite3.Row object at 0x10d01bed0>, <sqlite3.Row object at 0x10d03c030>, <sqlite3.Row object at 0x10d03c090>, <sqlite3.Row object at 0x10d03c0f0>, <sqlite3.Row object at 0x10d03c150>, <sqlite3.Row object at 0x10d03c1b0>, <sqlite3.Row object at 0x10d03c210>, <sqlite3.Row object at 0x10d03c270>, <sqlite3.Row object at 0x10d03c2d0>, <sqlite3.Row object at 0x10d03c330>, <sqlite3.Row object at 0x10d03c390>, <sqlite3.Row object at 0x10d03c3f0>, <sqlite3.Row object at 0x10d03c450>, <sqlite3.Row object at 0x10d03c4b0>, <sqlite3.Row object at 0x10d03c510>, <sqlite3.Row object at 0x10d03c570>, <sqlite3.Row object at 0x10d03c5d0>, <sqlite3.Row object at 0x10d03c630>, <sqlite3.Row object at 0x10d03c690>, <sqlite3.Row object at 0x10d03c6f0>, <sqlite3.Row object at 0x10d03c750>, <sqlite3.Row object at 0x10d03c7b0>, <sqlite3.Row object at 0x10d03c810>, <sqlite3.Row object at 0x10d03c870>, <sqlite3.Row object at 0x10d03c8d0>, <sqlite3.Row object at 0x10d03c930>, <sqlite3.Row object at 0x10d03c990>, <sqlite3.Row object at 0x10d03c9f0>, <sqlite3.Row object at 0x10d03ca50>, <sqlite3.Row object at 0x10d03cab0>, <sqlite3.Row object at 0x10d03cb10>, <sqlite3.Row object at 0x10d03cb70>, <sqlite3.Row object at 0x10d03cbd0>, <sqlite3.Row object at 0x10d03cc30>, <sqlite3.Row object at 0x10d03cc90>, <sqlite3.Row object at 0x10d03ccf0>, <sqlite3.Row object at 0x10d03cd50>, <sqlite3.Row object at 0x10d03cdb0>, <sqlite3.Row object at 0x10d03ce10>, <sqlite3.Row object at 0x10d03ce70>, <sqlite3.Row object at 0x10d03ced0>, <sqlite3.Row object at 0x10d03cf30>, <sqlite3.Row object at 0x10d03cf90>, <sqlite3.Row object at 0x10d03f030>, <sqlite3.Row object at 0x10d03f090>, <sqlite3.Row object at 0x10d03f0f0>, <sqlite3.Row object at 0x10d03f150>, <sqlite3.Row object at 0x10d03f1b0>, <sqlite3.Row object at 0x10d03f210>, <sqlite3.Row object at 0x10d03f270>, <sqlite3.Row object at 0x10d03f2d0>, <sqlite3.Row object at 0x10d03f330>, <sqlite3.Row object at 0x10d03f390>, <sqlite3.Row object at 0x10d03f3f0>, <sqlite3.Row object at 0x10d03f450>, <sqlite3.Row object at 0x10d03f4b0>, <sqlite3.Row object at 0x10d03f510>, <sqlite3.Row object at 0x10d03f570>, <sqlite3.Row object at 0x10d03f5d0>, <sqlite3.Row object at 0x10d03f630>, <sqlite3.Row object at 0x10d03f690>, <sqlite3.Row object at 0x10d03f6f0>, <sqlite3.Row object at 0x10d03f750>, <sqlite3.Row object at 0x10d03f7b0>, <sqlite3.Row object at 0x10d03f810>, <sqlite3.Row object at 0x10d03f870>, <sqlite3.Row object at 0x10d03f8d0>, <sqlite3.Row object at 0x10d03f930>, <sqlite3.Row object at 0x10d03f990>, <sqlite3.Row object at 0x10d03f9f0>, <sqlite3.Row object at 0x10d03fa50>, <sqlite3.Row object at 0x10d03fab0>, <sqlite3.Row object at 0x10d03fb10>, <sqlite3.Row object at 0x10d03fb70>, <sqlite3.Row object at 0x10d03fbd0>, <sqlite3.Row object at 0x10d03fc30>, <sqlite3.Row object at 0x10d03fc90>, <sqlite3.Row object at 0x10d03fcf0>, <sqlite3.Row object at 0x10d03fd50>, <sqlite3.Row object at 0x10d03fdb0>, <sqlite3.Row object at 0x10d03fe10>, <sqlite3.Row object at 0x10d03fe70>, <sqlite3.Row object at 0x10d03fed0>, <sqlite3.Row object at 0x10d03ff30>, <sqlite3.Row object at 0x10d03ff90>, <sqlite3.Row object at 0x10d100030>, <sqlite3.Row object at 0x10d100090>, <sqlite3.Row object at 0x10d1000f0>, <sqlite3.Row object at 0x10d100150>, <sqlite3.Row object at 0x10d1001b0>, <sqlite3.Row object at 0x10d100210>, <sqlite3.Row object at 0x10d100270>, <sqlite3.Row object at 0x10d1002d0>, <sqlite3.Row object at 0x10d100330>, <sqlite3.Row object at 0x10d100390>, <sqlite3.Row object at 0x10d1003f0>, <sqlite3.Row object at 0x10d100450>, <sqlite3.Row object at 0x10d1004b0>, <sqlite3.Row object at 0x10d100510>, <sqlite3.Row object at 0x10d100570>, <sqlite3.Row object at 0x10d1005d0>, <sqlite3.Row object at 0x10d100630>, <sqlite3.Row object at 0x10d100690>, <sqlite3.Row object at 0x10d1006f0>, <sqlite3.Row object at 0x10d100750>, <sqlite3.Row object at 0x10d1007b0>, <sqlite3.Row object at 0x10d100810>, <sqlite3.Row object at 0x10d100870>, <sqlite3.Row object at 0x10d1008d0>, <sqlite3.Row object at 0x10d100930>, <sqlite3.Row object at 0x10d100990>, <sqlite3.Row object at 0x10d1009f0>, <sqlite3.Row object at 0x10d100a50>, <sqlite3.Row object at 0x10d100ab0>, <sqlite3.Row object at 0x10d100b10>, <sqlite3.Row object at 0x10d100b70>, <sqlite3.Row object at 0x10d100bd0>, <sqlite3.Row object at 0x10d100c30>, <sqlite3.Row object at 0x10d100c90>, <sqlite3.Row object at 0x10d100cf0>, <sqlite3.Row object at 0x10d100d50>, <sqlite3.Row object at 0x10d100db0>, <sqlite3.Row object at 0x10d100e10>, <sqlite3.Row object at 0x10d100e70>, <sqlite3.Row object at 0x10d100ed0>, <sqlite3.Row object at 0x10d100f30>, <sqlite3.Row object at 0x10d100f90>, <sqlite3.Row object at 0x10d103030>, <sqlite3.Row object at 0x10d103090>, <sqlite3.Row object at 0x10d1030f0>, <sqlite3.Row object at 0x10d103150>, <sqlite3.Row object at 0x10d1031b0>, <sqlite3.Row object at 0x10d103210>, <sqlite3.Row object at 0x10d103270>, <sqlite3.Row object at 0x10d1032d0>, <sqlite3.Row object at 0x10d103330>, <sqlite3.Row object at 0x10d103390>, <sqlite3.Row object at 0x10d1033f0>, <sqlite3.Row object at 0x10d103450>, <sqlite3.Row object at 0x10d1034b0>, <sqlite3.Row object at 0x10d103510>, <sqlite3.Row object at 0x10d103570>, <sqlite3.Row object at 0x10d1035d0>, <sqlite3.Row object at 0x10d103630>, <sqlite3.Row object at 0x10d103690>, <sqlite3.Row object at 0x10d1036f0>, <sqlite3.Row object at 0x10d103750>, <sqlite3.Row object at 0x10d1037b0>, <sqlite3.Row object at 0x10d103810>, <sqlite3.Row object at 0x10d103870>, <sqlite3.Row object at 0x10d1038d0>, <sqlite3.Row object at 0x10d103930>, <sqlite3.Row object at 0x10d103990>, <sqlite3.Row object at 0x10d1039f0>, <sqlite3.Row object at 0x10d103a50>, <sqlite3.Row object at 0x10d103ab0>, <sqlite3.Row object at 0x10d103b10>, <sqlite3.Row object at 0x10d103b70>, <sqlite3.Row object at 0x10d103bd0>, <sqlite3.Row object at 0x10d103c30>, <sqlite3.Row object at 0x10d103c90>, <sqlite3.Row object at 0x10d103cf0>, <sqlite3.Row object at 0x10d103d50>, <sqlite3.Row object at 0x10d103db0>, <sqlite3.Row object at 0x10d103e10>, <sqlite3.Row object at 0x10d103e70>, <sqlite3.Row object at 0x10d103ed0>, <sqlite3.Row object at 0x10d103f30>, <sqlite3.Row object at 0x10d103f90>, <sqlite3.Row object at 0x10d10e030>, <sqlite3.Row object at 0x10d10e090>, <sqlite3.Row object at 0x10d10e0f0>, <sqlite3.Row object at 0x10d10e150>, <sqlite3.Row object at 0x10d10e1b0>, <sqlite3.Row object at 0x10d10e210>, <sqlite3.Row object at 0x10d10e270>, <sqlite3.Row object at 0x10d10e2d0>, <sqlite3.Row object at 0x10d10e330>, <sqlite3.Row object at 0x10d10e390>, <sqlite3.Row object at 0x10d10e3f0>, <sqlite3.Row object at 0x10d10e450>, <sqlite3.Row object at 0x10d10e4b0>, <sqlite3.Row object at 0x10d10e510>, <sqlite3.Row object at 0x10d10e570>, <sqlite3.Row object at 0x10d10e5d0>, <sqlite3.Row object at 0x10d10e630>, <sqlite3.Row object at 0x10d10e690>, <sqlite3.Row object at 0x10d10e6f0>, <sqlite3.Row object at 0x10d10e750>, <sqlite3.Row object at 0x10d10e7b0>, <sqlite3.Row object at 0x10d10e810>, <sqlite3.Row object at 0x10d10e870>, <sqlite3.Row object at 0x10d10e8d0>, <sqlite3.Row object at 0x10d10e930>, <sqlite3.Row object at 0x10d10e990>, <sqlite3.Row object at 0x10d10e9f0>, <sqlite3.Row object at 0x10d10ea50>, <sqlite3.Row object at 0x10d10eab0>, <sqlite3.Row object at 0x10d10eb10>, <sqlite3.Row object at 0x10d10eb70>, <sqlite3.Row object at 0x10d10ebd0>, <sqlite3.Row object at 0x10d10ec30>, <sqlite3.Row object at 0x10d10ec90>, <sqlite3.Row object at 0x10d10ecf0>, <sqlite3.Row object at 0x10d10ed50>, <sqlite3.Row object at 0x10d10edb0>, <sqlite3.Row object at 0x10d10ee10>, <sqlite3.Row object at 0x10d10ee70>, <sqlite3.Row object at 0x10d10eed0>, <sqlite3.Row object at 0x10d10ef30>, <sqlite3.Row object at 0x10d10ef90>, <sqlite3.Row object at 0x10d111030>, <sqlite3.Row object at 0x10d111090>, <sqlite3.Row object at 0x10d1110f0>, <sqlite3.Row object at 0x10d111150>, <sqlite3.Row object at 0x10d1111b0>, <sqlite3.Row object at 0x10d111210>, <sqlite3.Row object at 0x10d111270>, <sqlite3.Row object at 0x10d1112d0>, <sqlite3.Row object at 0x10d111330>, <sqlite3.Row object at 0x10d111390>, <sqlite3.Row object at 0x10d1113f0>, <sqlite3.Row object at 0x10d111450>, <sqlite3.Row object at 0x10d1114b0>, <sqlite3.Row object at 0x10d111510>, <sqlite3.Row object at 0x10d111570>, <sqlite3.Row object at 0x10d1115d0>, <sqlite3.Row object at 0x10d111630>, <sqlite3.Row object at 0x10d111690>, <sqlite3.Row object at 0x10d1116f0>, <sqlite3.Row object at 0x10d111750>, <sqlite3.Row object at 0x10d1117b0>, <sqlite3.Row object at 0x10d111810>, <sqlite3.Row object at 0x10d111870>, <sqlite3.Row object at 0x10d1118d0>, <sqlite3.Row object at 0x10d111930>, <sqlite3.Row object at 0x10d111990>, <sqlite3.Row object at 0x10d1119f0>, <sqlite3.Row object at 0x10d111a50>, <sqlite3.Row object at 0x10d111ab0>, <sqlite3.Row object at 0x10d111b10>, <sqlite3.Row object at 0x10d111b70>, <sqlite3.Row object at 0x10d111bd0>, <sqlite3.Row object at 0x10d111c30>, <sqlite3.Row object at 0x10d111c90>, <sqlite3.Row object at 0x10d111cf0>, <sqlite3.Row object at 0x10d111d50>, <sqlite3.Row object at 0x10d111db0>, <sqlite3.Row object at 0x10d111e10>, <sqlite3.Row object at 0x10d111e70>, <sqlite3.Row object at 0x10d111ed0>, <sqlite3.Row object at 0x10d111f30>, <sqlite3.Row object at 0x10d111f90>, <sqlite3.Row object at 0x10d114030>, <sqlite3.Row object at 0x10d114090>, <sqlite3.Row object at 0x10d1140f0>, <sqlite3.Row object at 0x10d114150>, <sqlite3.Row object at 0x10d1141b0>, <sqlite3.Row object at 0x10d114210>, <sqlite3.Row object at 0x10d114270>, <sqlite3.Row object at 0x10d1142d0>, <sqlite3.Row object at 0x10d114330>, <sqlite3.Row object at 0x10d114390>, <sqlite3.Row object at 0x10d1143f0>, <sqlite3.Row object at 0x10d114450>, <sqlite3.Row object at 0x10d1144b0>, <sqlite3.Row object at 0x10d114510>, <sqlite3.Row object at 0x10d114570>, <sqlite3.Row object at 0x10d1145d0>, <sqlite3.Row object at 0x10d114630>, <sqlite3.Row object at 0x10d114690>, <sqlite3.Row object at 0x10d1146f0>, <sqlite3.Row object at 0x10d114750>, <sqlite3.Row object at 0x10d1147b0>, <sqlite3.Row object at 0x10d114810>, <sqlite3.Row object at 0x10d114870>, <sqlite3.Row object at 0x10d1148d0>, <sqlite3.Row object at 0x10d114930>, <sqlite3.Row object at 0x10d114990>, <sqlite3.Row object at 0x10d1149f0>, <sqlite3.Row object at 0x10d114a50>, <sqlite3.Row object at 0x10d114ab0>, <sqlite3.Row object at 0x10d114b10>, <sqlite3.Row object at 0x10d114b70>, <sqlite3.Row object at 0x10d114bd0>, <sqlite3.Row object at 0x10d114c30>, <sqlite3.Row object at 0x10d114c90>, <sqlite3.Row object at 0x10d114cf0>, <sqlite3.Row object at 0x10d114d50>, <sqlite3.Row object at 0x10d114db0>, <sqlite3.Row object at 0x10d114e10>, <sqlite3.Row object at 0x10d114e70>, <sqlite3.Row object at 0x10d114ed0>, <sqlite3.Row object at 0x10d114f30>, <sqlite3.Row object at 0x10d114f90>, <sqlite3.Row object at 0x10d117030>, <sqlite3.Row object at 0x10d117090>, <sqlite3.Row object at 0x10d1170f0>, <sqlite3.Row object at 0x10d117150>, <sqlite3.Row object at 0x10d1171b0>, <sqlite3.Row object at 0x10d117210>, <sqlite3.Row object at 0x10d117270>, <sqlite3.Row object at 0x10d1172d0>, <sqlite3.Row object at 0x10d117330>, <sqlite3.Row object at 0x10d117390>, <sqlite3.Row object at 0x10d1173f0>, <sqlite3.Row object at 0x10d117450>, <sqlite3.Row object at 0x10d1174b0>, <sqlite3.Row object at 0x10d117510>, <sqlite3.Row object at 0x10d117570>, <sqlite3.Row object at 0x10d1175d0>, <sqlite3.Row object at 0x10d117630>, <sqlite3.Row object at 0x10d117690>, <sqlite3.Row object at 0x10d1176f0>, <sqlite3.Row object at 0x10d117750>, <sqlite3.Row object at 0x10d1177b0>, <sqlite3.Row object at 0x10d117810>, <sqlite3.Row object at 0x10d117870>, <sqlite3.Row object at 0x10d1178d0>, <sqlite3.Row object at 0x10d117930>, <sqlite3.Row object at 0x10d117990>, <sqlite3.Row object at 0x10d1179f0>, <sqlite3.Row object at 0x10d117a50>, <sqlite3.Row object at 0x10d117ab0>, <sqlite3.Row object at 0x10d117b10>, <sqlite3.Row object at 0x10d117b70>, <sqlite3.Row object at 0x10d117bd0>, <sqlite3.Row object at 0x10d117c30>, <sqlite3.Row object at 0x10d117c90>, <sqlite3.Row object at 0x10d117cf0>, <sqlite3.Row object at 0x10d117d50>, <sqlite3.Row object at 0x10d117db0>, <sqlite3.Row object at 0x10d117e10>, <sqlite3.Row object at 0x10d117e70>, <sqlite3.Row object at 0x10d117ed0>, <sqlite3.Row object at 0x10d117f30>, <sqlite3.Row object at 0x10d117f90>, <sqlite3.Row object at 0x10d11a030>, <sqlite3.Row object at 0x10d11a090>, <sqlite3.Row object at 0x10d11a0f0>, <sqlite3.Row object at 0x10d11a150>, <sqlite3.Row object at 0x10d11a1b0>, <sqlite3.Row object at 0x10d11a210>, <sqlite3.Row object at 0x10d11a270>, <sqlite3.Row object at 0x10d11a2d0>, <sqlite3.Row object at 0x10d11a330>, <sqlite3.Row object at 0x10d11a390>, <sqlite3.Row object at 0x10d11a3f0>, <sqlite3.Row object at 0x10d11a450>, <sqlite3.Row object at 0x10d11a4b0>, <sqlite3.Row object at 0x10d11a510>, <sqlite3.Row object at 0x10d11a570>, <sqlite3.Row object at 0x10d11a5d0>, <sqlite3.Row object at 0x10d11a630>, <sqlite3.Row object at 0x10d11a690>, <sqlite3.Row object at 0x10d11a6f0>, <sqlite3.Row object at 0x10d11a750>, <sqlite3.Row object at 0x10d11a7b0>, <sqlite3.Row object at 0x10d11a810>, <sqlite3.Row object at 0x10d11a870>, <sqlite3.Row object at 0x10d11a8d0>, <sqlite3.Row object at 0x10d11a930>, <sqlite3.Row object at 0x10d11a990>, <sqlite3.Row object at 0x10d11a9f0>, <sqlite3.Row object at 0x10d11aa50>, <sqlite3.Row object at 0x10d11aab0>, <sqlite3.Row object at 0x10d11ab10>, <sqlite3.Row object at 0x10d11ab70>, <sqlite3.Row object at 0x10d11abd0>, <sqlite3.Row object at 0x10d11ac30>, <sqlite3.Row object at 0x10d11ac90>, <sqlite3.Row object at 0x10d11acf0>, <sqlite3.Row object at 0x10d11ad50>, <sqlite3.Row object at 0x10d11adb0>, <sqlite3.Row object at 0x10d11ae10>, <sqlite3.Row object at 0x10d11ae70>, <sqlite3.Row object at 0x10d11aed0>, <sqlite3.Row object at 0x10d11af30>, <sqlite3.Row object at 0x10d11af90>, <sqlite3.Row object at 0x10d11d030>, <sqlite3.Row object at 0x10d11d090>, <sqlite3.Row object at 0x10d11d0f0>, <sqlite3.Row object at 0x10d11d150>, <sqlite3.Row object at 0x10d11d1b0>, <sqlite3.Row object at 0x10d11d210>, <sqlite3.Row object at 0x10d11d270>, <sqlite3.Row object at 0x10d11d2d0>, <sqlite3.Row object at 0x10d11d330>, <sqlite3.Row object at 0x10d11d390>, <sqlite3.Row object at 0x10d11d3f0>, <sqlite3.Row object at 0x10d11d450>, <sqlite3.Row object at 0x10d11d4b0>, <sqlite3.Row object at 0x10d11d510>, <sqlite3.Row object at 0x10d11d570>, <sqlite3.Row object at 0x10d11d5d0>, <sqlite3.Row object at 0x10d11d630>, <sqlite3.Row object at 0x10d11d690>, <sqlite3.Row object at 0x10d11d6f0>, <sqlite3.Row object at 0x10d11d750>, <sqlite3.Row object at 0x10d11d7b0>, <sqlite3.Row object at 0x10d11d810>, <sqlite3.Row object at 0x10d11d870>, <sqlite3.Row object at 0x10d11d8d0>, <sqlite3.Row object at 0x10d11d930>, <sqlite3.Row object at 0x10d11d990>, <sqlite3.Row object at 0x10d11d9f0>, <sqlite3.Row object at 0x10d11da50>, <sqlite3.Row object at 0x10d11dab0>, <sqlite3.Row object at 0x10d11db10>, <sqlite3.Row object at 0x10d11db70>, <sqlite3.Row object at 0x10d11dbd0>, <sqlite3.Row object at 0x10d11dc30>, <sqlite3.Row object at 0x10d11dc90>, <sqlite3.Row object at 0x10d11dcf0>, <sqlite3.Row object at 0x10d11dd50>, <sqlite3.Row object at 0x10d11ddb0>, <sqlite3.Row object at 0x10d11de10>, <sqlite3.Row object at 0x10d11de70>, <sqlite3.Row object at 0x10d11ded0>, <sqlite3.Row object at 0x10d11df30>, <sqlite3.Row object at 0x10d11df90>, <sqlite3.Row object at 0x10d11f030>, <sqlite3.Row object at 0x10d11f090>, <sqlite3.Row object at 0x10d11f0f0>, <sqlite3.Row object at 0x10d11f150>, <sqlite3.Row object at 0x10d11f1b0>, <sqlite3.Row object at 0x10d11f210>, <sqlite3.Row object at 0x10d11f270>, <sqlite3.Row object at 0x10d11f2d0>, <sqlite3.Row object at 0x10d11f330>, <sqlite3.Row object at 0x10d11f390>, <sqlite3.Row object at 0x10d11f3f0>, <sqlite3.Row object at 0x10d11f450>, <sqlite3.Row object at 0x10d11f4b0>, <sqlite3.Row object at 0x10d11f510>, <sqlite3.Row object at 0x10d11f570>, <sqlite3.Row object at 0x10d11f5d0>, <sqlite3.Row object at 0x10d11f630>, <sqlite3.Row object at 0x10d11f690>, <sqlite3.Row object at 0x10d11f6f0>, <sqlite3.Row object at 0x10d11f750>, <sqlite3.Row object at 0x10d11f7b0>, <sqlite3.Row object at 0x10d11f810>, <sqlite3.Row object at 0x10d11f870>, <sqlite3.Row object at 0x10d11f8d0>, <sqlite3.Row object at 0x10d11f930>, <sqlite3.Row object at 0x10d11f990>, <sqlite3.Row object at 0x10d11f9f0>, <sqlite3.Row object at 0x10d11fa50>, <sqlite3.Row object at 0x10d11fab0>, <sqlite3.Row object at 0x10d11fb10>, <sqlite3.Row object at 0x10d11fb70>, <sqlite3.Row object at 0x10d11fbd0>, <sqlite3.Row object at 0x10d11fc30>, <sqlite3.Row object at 0x10d11fc90>, <sqlite3.Row object at 0x10d11fcf0>, <sqlite3.Row object at 0x10d11fd50>, <sqlite3.Row object at 0x10d11fdb0>, <sqlite3.Row object at 0x10d11fe10>, <sqlite3.Row object at 0x10d11fe70>, <sqlite3.Row object at 0x10d11fed0>, <sqlite3.Row object at 0x10d11ff30>, <sqlite3.Row object at 0x10d11ff90>, <sqlite3.Row object at 0x10d122030>, <sqlite3.Row object at 0x10d122090>, <sqlite3.Row object at 0x10d1220f0>, <sqlite3.Row object at 0x10d122150>, <sqlite3.Row object at 0x10d1221b0>, <sqlite3.Row object at 0x10d122210>, <sqlite3.Row object at 0x10d122270>, <sqlite3.Row object at 0x10d1222d0>, <sqlite3.Row object at 0x10d122330>, <sqlite3.Row object at 0x10d122390>, <sqlite3.Row object at 0x10d1223f0>, <sqlite3.Row object at 0x10d122450>, <sqlite3.Row object at 0x10d1224b0>, <sqlite3.Row object at 0x10d122510>, <sqlite3.Row object at 0x10d122570>, <sqlite3.Row object at 0x10d1225d0>, <sqlite3.Row object at 0x10d122630>, <sqlite3.Row object at 0x10d122690>, <sqlite3.Row object at 0x10d1226f0>, <sqlite3.Row object at 0x10d122750>, <sqlite3.Row object at 0x10d1227b0>, <sqlite3.Row object at 0x10d122810>, <sqlite3.Row object at 0x10d122870>, <sqlite3.Row object at 0x10d1228d0>, <sqlite3.Row object at 0x10d122930>, <sqlite3.Row object at 0x10d122990>, <sqlite3.Row object at 0x10d1229f0>, <sqlite3.Row object at 0x10d122a50>, <sqlite3.Row object at 0x10d122ab0>, <sqlite3.Row object at 0x10d122b10>, <sqlite3.Row object at 0x10d122b70>, <sqlite3.Row object at 0x10d122bd0>, <sqlite3.Row object at 0x10d122c30>, <sqlite3.Row object at 0x10d122c90>, <sqlite3.Row object at 0x10d122cf0>, <sqlite3.Row object at 0x10d122d50>, <sqlite3.Row object at 0x10d122db0>, <sqlite3.Row object at 0x10d122e10>, <sqlite3.Row object at 0x10d122e70>, <sqlite3.Row object at 0x10d122ed0>, <sqlite3.Row object at 0x10d122f30>, <sqlite3.Row object at 0x10d122f90>, <sqlite3.Row object at 0x10d125030>, <sqlite3.Row object at 0x10d125090>, <sqlite3.Row object at 0x10d1250f0>, <sqlite3.Row object at 0x10d125150>, <sqlite3.Row object at 0x10d1251b0>, <sqlite3.Row object at 0x10d125210>, <sqlite3.Row object at 0x10d125270>, <sqlite3.Row object at 0x10d1252d0>, <sqlite3.Row object at 0x10d125330>, <sqlite3.Row object at 0x10d125390>, <sqlite3.Row object at 0x10d1253f0>, <sqlite3.Row object at 0x10d125450>, <sqlite3.Row object at 0x10d1254b0>, <sqlite3.Row object at 0x10d125510>, <sqlite3.Row object at 0x10d125570>, <sqlite3.Row object at 0x10d1255d0>, <sqlite3.Row object at 0x10d125630>, <sqlite3.Row object at 0x10d125690>, <sqlite3.Row object at 0x10d1256f0>, <sqlite3.Row object at 0x10d125750>, <sqlite3.Row object at 0x10d1257b0>, <sqlite3.Row object at 0x10d125810>, <sqlite3.Row object at 0x10d125870>, <sqlite3.Row object at 0x10d1258d0>, <sqlite3.Row object at 0x10d125930>, <sqlite3.Row object at 0x10d125990>, <sqlite3.Row object at 0x10d1259f0>, <sqlite3.Row object at 0x10d125a50>, <sqlite3.Row object at 0x10d125ab0>, <sqlite3.Row object at 0x10d125b10>, <sqlite3.Row object at 0x10d125b70>, <sqlite3.Row object at 0x10d125bd0>, <sqlite3.Row object at 0x10d125c30>, <sqlite3.Row object at 0x10d125c90>, <sqlite3.Row object at 0x10d125cf0>, <sqlite3.Row object at 0x10d125d50>, <sqlite3.Row object at 0x10d125db0>, <sqlite3.Row object at 0x10d125e10>, <sqlite3.Row object at 0x10d125e70>, <sqlite3.Row object at 0x10d125ed0>, <sqlite3.Row object at 0x10d125f30>, <sqlite3.Row object at 0x10d125f90>, <sqlite3.Row object at 0x10d129030>, <sqlite3.Row object at 0x10d129090>, <sqlite3.Row object at 0x10d1290f0>, <sqlite3.Row object at 0x10d129150>, <sqlite3.Row object at 0x10d1291b0>, <sqlite3.Row object at 0x10d129210>, <sqlite3.Row object at 0x10d129270>, <sqlite3.Row object at 0x10d1292d0>, <sqlite3.Row object at 0x10d129330>, <sqlite3.Row object at 0x10d129390>, <sqlite3.Row object at 0x10d1293f0>, <sqlite3.Row object at 0x10d129450>, <sqlite3.Row object at 0x10d1294b0>, <sqlite3.Row object at 0x10d129510>, <sqlite3.Row object at 0x10d129570>, <sqlite3.Row object at 0x10d1295d0>, <sqlite3.Row object at 0x10d129630>, <sqlite3.Row object at 0x10d129690>, <sqlite3.Row object at 0x10d1296f0>, <sqlite3.Row object at 0x10d129750>, <sqlite3.Row object at 0x10d1297b0>, <sqlite3.Row object at 0x10d129810>, <sqlite3.Row object at 0x10d129870>, <sqlite3.Row object at 0x10d1298d0>, <sqlite3.Row object at 0x10d129930>, <sqlite3.Row object at 0x10d129990>, <sqlite3.Row object at 0x10d1299f0>, <sqlite3.Row object at 0x10d129a50>, <sqlite3.Row object at 0x10d129ab0>, <sqlite3.Row object at 0x10d129b10>, <sqlite3.Row object at 0x10d129b70>, <sqlite3.Row object at 0x10d129bd0>, <sqlite3.Row object at 0x10d129c30>, <sqlite3.Row object at 0x10d129c90>, <sqlite3.Row object at 0x10d129cf0>, <sqlite3.Row object at 0x10d129d50>, <sqlite3.Row object at 0x10d129db0>, <sqlite3.Row object at 0x10d129e10>, <sqlite3.Row object at 0x10d129e70>, <sqlite3.Row object at 0x10d129ed0>, <sqlite3.Row object at 0x10d129f30>, <sqlite3.Row object at 0x10d129f90>, <sqlite3.Row object at 0x10d12c030>, <sqlite3.Row object at 0x10d12c090>, <sqlite3.Row object at 0x10d12c0f0>]
2025-06-15 15:55:57,816 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 15:55:57,816 - app - INFO - Final Assistant Response (NL): Hi! Ready to check your account? Let me know what you'd like to review. ðŸ˜‰
2025-06-15 15:56:59,283 - app - INFO - User Query (en): i went to cebu last January for sinulog, but i can't remember my spendings there after, can you help me pick those up?
2025-06-15 15:57:01,469 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 15:57:01,470 - app - INFO - Generated SQL Query: SELECT * FROM bank_transactions WHERE Date >= '2025-01-20' AND Date <= '2025-01-31' AND LOWER("Branch / Source") LIKE '%cebu%' ORDER BY Date ASC;
2025-06-15 15:57:01,474 - app - INFO - Database connection established.
2025-06-15 15:57:01,478 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d00ecf0>, <sqlite3.Row object at 0x10d00ec10>, <sqlite3.Row object at 0x10d00edb0>, <sqlite3.Row object at 0x10d00ee10>, <sqlite3.Row object at 0x10d00ea50>]
2025-06-15 15:57:03,481 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 15:57:03,482 - app - INFO - Final Assistant Response (NL): Hey! Okay, here's a list of your transactions in Cebu after Sinulog in January:

*   January 20: You had a POS purchase of â‚±3,634.04.
*   January 26: You made a bills payment of â‚±3,348.41.
*   January 29: You received an interest credit of â‚±16,313.14 and had an ATM withdrawal of â‚±8,090.37.
*   January 30: You received an interest credit of â‚±19,971.57.

Does that help jog your memory? Let me know if you need any other details!
2025-06-15 15:58:27,195 - app - INFO - User Query (es): hola
2025-06-15 15:58:28,533 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 15:58:28,534 - app - INFO - Generated SQL Query: SELECT STRFTIME('%Y-%m-%d %H:%M:%S', Date) AS Date, "Transaction Details", "Branch / Source", Withdrawals, Deposits, Balance FROM bank_transactions ORDER BY Date ASC;
2025-06-15 15:58:28,538 - app - INFO - Database connection established.
2025-06-15 15:58:28,544 - app - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d00e430>, <sqlite3.Row object at 0x10d00e250>, <sqlite3.Row object at 0x10d00ebf0>, <sqlite3.Row object at 0x10d00ec50>, <sqlite3.Row object at 0x10d00efd0>, <sqlite3.Row object at 0x10d00e890>, <sqlite3.Row object at 0x10d00e0f0>, <sqlite3.Row object at 0x10d00ef50>, <sqlite3.Row object at 0x10d00ebb0>, <sqlite3.Row object at 0x10d00ee30>, <sqlite3.Row object at 0x10d00ead0>, <sqlite3.Row object at 0x10d00e770>, <sqlite3.Row object at 0x10d00ed70>, <sqlite3.Row object at 0x10d00e390>, <sqlite3.Row object at 0x10d00e2d0>, <sqlite3.Row object at 0x10d00ec10>, <sqlite3.Row object at 0x10d00ed30>, <sqlite3.Row object at 0x10d00edb0>, <sqlite3.Row object at 0x10d00e3f0>, <sqlite3.Row object at 0x10d00e590>, <sqlite3.Row object at 0x10d00ef30>, <sqlite3.Row object at 0x10d00e4f0>, <sqlite3.Row object at 0x10d00e510>, <sqlite3.Row object at 0x10d00e570>, <sqlite3.Row object at 0x10d00e5b0>, <sqlite3.Row object at 0x10d00e610>, <sqlite3.Row object at 0x10d00e630>, <sqlite3.Row object at 0x10d00e690>, <sqlite3.Row object at 0x10d00e6d0>, <sqlite3.Row object at 0x10d00e730>, <sqlite3.Row object at 0x10d00e750>, <sqlite3.Row object at 0x10d00e7b0>, <sqlite3.Row object at 0x10d00e7f0>, <sqlite3.Row object at 0x10d00e850>, <sqlite3.Row object at 0x10d00e870>, <sqlite3.Row object at 0x10d00e8d0>, <sqlite3.Row object at 0x10d00e910>, <sqlite3.Row object at 0x10d00e970>, <sqlite3.Row object at 0x10d00e990>, <sqlite3.Row object at 0x10d00e050>, <sqlite3.Row object at 0x10d00e0b0>, <sqlite3.Row object at 0x10d00e170>, <sqlite3.Row object at 0x10d00e1d0>, <sqlite3.Row object at 0x10d00e290>, <sqlite3.Row object at 0x10d00e2f0>, <sqlite3.Row object at 0x10d00e3b0>, <sqlite3.Row object at 0x10d00e4d0>, <sqlite3.Row object at 0x10d00e710>, <sqlite3.Row object at 0x10d00e830>, <sqlite3.Row object at 0x10d00eb90>, <sqlite3.Row object at 0x10d00e2b0>, <sqlite3.Row object at 0x10d00e9f0>, <sqlite3.Row object at 0x10d00eb10>, <sqlite3.Row object at 0x10d00ed50>, <sqlite3.Row object at 0x10d00ef10>, <sqlite3.Row object at 0x10d00e650>, <sqlite3.Row object at 0x10d00eb30>, <sqlite3.Row object at 0x10d00e270>, <sqlite3.Row object at 0x10d00e450>, <sqlite3.Row object at 0x10d00e5d0>, <sqlite3.Row object at 0x10d00e790>, <sqlite3.Row object at 0x10d00e930>, <sqlite3.Row object at 0x10d00e230>, <sqlite3.Row object at 0x10d00e950>, <sqlite3.Row object at 0x108e886f0>, <sqlite3.Row object at 0x108e88710>, <sqlite3.Row object at 0x108e88f10>, <sqlite3.Row object at 0x108e88ed0>, <sqlite3.Row object at 0x108e88ef0>, <sqlite3.Row object at 0x108e88890>, <sqlite3.Row object at 0x108e88370>, <sqlite3.Row object at 0x108e886b0>, <sqlite3.Row object at 0x10d125050>, <sqlite3.Row object at 0x10d1250d0>, <sqlite3.Row object at 0x10d125170>, <sqlite3.Row object at 0x10d1251f0>, <sqlite3.Row object at 0x10d125290>, <sqlite3.Row object at 0x10d125310>, <sqlite3.Row object at 0x10d1253b0>, <sqlite3.Row object at 0x10d125430>, <sqlite3.Row object at 0x10d1254d0>, <sqlite3.Row object at 0x10d125550>, <sqlite3.Row object at 0x10d1255f0>, <sqlite3.Row object at 0x10d125670>, <sqlite3.Row object at 0x10d125710>, <sqlite3.Row object at 0x10d125790>, <sqlite3.Row object at 0x10d125830>, <sqlite3.Row object at 0x10d1258b0>, <sqlite3.Row object at 0x10d125950>, <sqlite3.Row object at 0x10d1259d0>, <sqlite3.Row object at 0x10d125a70>, <sqlite3.Row object at 0x10d125af0>, <sqlite3.Row object at 0x10d125b90>, <sqlite3.Row object at 0x10d125c10>, <sqlite3.Row object at 0x10d125cb0>, <sqlite3.Row object at 0x10d125d30>, <sqlite3.Row object at 0x10d125dd0>, <sqlite3.Row object at 0x10d125e50>, <sqlite3.Row object at 0x10d125ef0>, <sqlite3.Row object at 0x10d125030>, <sqlite3.Row object at 0x10d125150>, <sqlite3.Row object at 0x10d125270>, <sqlite3.Row object at 0x10d125390>, <sqlite3.Row object at 0x10d1254b0>, <sqlite3.Row object at 0x10d1255d0>, <sqlite3.Row object at 0x10d1256f0>, <sqlite3.Row object at 0x10d125810>, <sqlite3.Row object at 0x10d125930>, <sqlite3.Row object at 0x10d125a50>, <sqlite3.Row object at 0x10d125b70>, <sqlite3.Row object at 0x10d125c90>, <sqlite3.Row object at 0x10d125db0>, <sqlite3.Row object at 0x10d125ed0>, <sqlite3.Row object at 0x10d1291d0>, <sqlite3.Row object at 0x10d129090>, <sqlite3.Row object at 0x10d1291b0>, <sqlite3.Row object at 0x10d1292d0>, <sqlite3.Row object at 0x10d1293f0>, <sqlite3.Row object at 0x10d129510>, <sqlite3.Row object at 0x10d129630>, <sqlite3.Row object at 0x10d129750>, <sqlite3.Row object at 0x10d129870>, <sqlite3.Row object at 0x10d129990>, <sqlite3.Row object at 0x10d129ab0>, <sqlite3.Row object at 0x10d129bd0>, <sqlite3.Row object at 0x10d129cf0>, <sqlite3.Row object at 0x10d129e10>, <sqlite3.Row object at 0x10d129f30>, <sqlite3.Row object at 0x10d01e710>, <sqlite3.Row object at 0x10d01e8f0>, <sqlite3.Row object at 0x10d01ea90>, <sqlite3.Row object at 0x10d01eb90>, <sqlite3.Row object at 0x10d01ed70>, <sqlite3.Row object at 0x10d01eb50>, <sqlite3.Row object at 0x10d01ed90>, <sqlite3.Row object at 0x10d01ee90>, <sqlite3.Row object at 0x10d01ef10>, <sqlite3.Row object at 0x10d01ef70>, <sqlite3.Row object at 0x10d01ebb0>, <sqlite3.Row object at 0x10d01e0f0>, <sqlite3.Row object at 0x10d01e210>, <sqlite3.Row object at 0x10d01e1b0>, <sqlite3.Row object at 0x10d01e670>, <sqlite3.Row object at 0x10d01e350>, <sqlite3.Row object at 0x10d01e390>, <sqlite3.Row object at 0x10d01e4b0>, <sqlite3.Row object at 0x10d01e5d0>, <sqlite3.Row object at 0x10d01e6f0>, <sqlite3.Row object at 0x10d01e810>, <sqlite3.Row object at 0x10d01e930>, <sqlite3.Row object at 0x10d01ea50>, <sqlite3.Row object at 0x10d01eb70>, <sqlite3.Row object at 0x10d01ec90>, <sqlite3.Row object at 0x10d01edb0>, <sqlite3.Row object at 0x10d01eed0>, <sqlite3.Row object at 0x10d01e2f0>, <sqlite3.Row object at 0x10d01e8b0>, <sqlite3.Row object at 0x10d01e3b0>, <sqlite3.Row object at 0x10d01e830>, <sqlite3.Row object at 0x10d01e6d0>, <sqlite3.Row object at 0x10d12c090>, <sqlite3.Row object at 0x10d12c1b0>, <sqlite3.Row object at 0x10d12c210>, <sqlite3.Row object at 0x10d12c270>, <sqlite3.Row object at 0x10d12c2d0>, <sqlite3.Row object at 0x10d12c330>, <sqlite3.Row object at 0x10d12c390>, <sqlite3.Row object at 0x10d12c3f0>, <sqlite3.Row object at 0x10d12c450>, <sqlite3.Row object at 0x10d12c4b0>, <sqlite3.Row object at 0x10d12c510>, <sqlite3.Row object at 0x10d12c570>, <sqlite3.Row object at 0x10d12c5d0>, <sqlite3.Row object at 0x10d12c630>, <sqlite3.Row object at 0x10d12c690>, <sqlite3.Row object at 0x10d12c6f0>, <sqlite3.Row object at 0x10d12c750>, <sqlite3.Row object at 0x10d12c7b0>, <sqlite3.Row object at 0x10d12c810>, <sqlite3.Row object at 0x10d12c870>, <sqlite3.Row object at 0x10d12c8d0>, <sqlite3.Row object at 0x10d12c930>, <sqlite3.Row object at 0x10d12c990>, <sqlite3.Row object at 0x10d12c9f0>, <sqlite3.Row object at 0x10d12ca50>, <sqlite3.Row object at 0x10d12cab0>, <sqlite3.Row object at 0x10d12cb10>, <sqlite3.Row object at 0x10d12cb70>, <sqlite3.Row object at 0x10d12cbd0>, <sqlite3.Row object at 0x10d12cc30>, <sqlite3.Row object at 0x10d12cc90>, <sqlite3.Row object at 0x10d12ccf0>, <sqlite3.Row object at 0x10d12cd50>, <sqlite3.Row object at 0x10d12cdb0>, <sqlite3.Row object at 0x10d12ce10>, <sqlite3.Row object at 0x10d12ce70>, <sqlite3.Row object at 0x10d12ced0>, <sqlite3.Row object at 0x10d12cf30>, <sqlite3.Row object at 0x10d12cf90>, <sqlite3.Row object at 0x10d038030>, <sqlite3.Row object at 0x10d038090>, <sqlite3.Row object at 0x10d0380f0>, <sqlite3.Row object at 0x10d038150>, <sqlite3.Row object at 0x10d0381b0>, <sqlite3.Row object at 0x10d038210>, <sqlite3.Row object at 0x10d038270>, <sqlite3.Row object at 0x10d0382d0>, <sqlite3.Row object at 0x10d038330>, <sqlite3.Row object at 0x10d038390>, <sqlite3.Row object at 0x10d0383f0>, <sqlite3.Row object at 0x10d038450>, <sqlite3.Row object at 0x10d0384b0>, <sqlite3.Row object at 0x10d038510>, <sqlite3.Row object at 0x10d038570>, <sqlite3.Row object at 0x10d0385d0>, <sqlite3.Row object at 0x10d038630>, <sqlite3.Row object at 0x10d038690>, <sqlite3.Row object at 0x10d0386f0>, <sqlite3.Row object at 0x10d038750>, <sqlite3.Row object at 0x10d0387b0>, <sqlite3.Row object at 0x10d038810>, <sqlite3.Row object at 0x10d038870>, <sqlite3.Row object at 0x10d0388d0>, <sqlite3.Row object at 0x10d038930>, <sqlite3.Row object at 0x10d038990>, <sqlite3.Row object at 0x10d0389f0>, <sqlite3.Row object at 0x10d038a50>, <sqlite3.Row object at 0x10d038ab0>, <sqlite3.Row object at 0x10d038b10>, <sqlite3.Row object at 0x10d038b70>, <sqlite3.Row object at 0x10d038bd0>, <sqlite3.Row object at 0x10d038c30>, <sqlite3.Row object at 0x10d038c90>, <sqlite3.Row object at 0x10d038cf0>, <sqlite3.Row object at 0x10d038d50>, <sqlite3.Row object at 0x10d038db0>, <sqlite3.Row object at 0x10d038e10>, <sqlite3.Row object at 0x10d038e70>, <sqlite3.Row object at 0x10d038ed0>, <sqlite3.Row object at 0x10d038f30>, <sqlite3.Row object at 0x10d038f90>, <sqlite3.Row object at 0x10d007030>, <sqlite3.Row object at 0x10d007090>, <sqlite3.Row object at 0x10d0070f0>, <sqlite3.Row object at 0x10d007150>, <sqlite3.Row object at 0x10d0071b0>, <sqlite3.Row object at 0x10d007210>, <sqlite3.Row object at 0x10d007270>, <sqlite3.Row object at 0x10d0072d0>, <sqlite3.Row object at 0x10d007330>, <sqlite3.Row object at 0x10d007390>, <sqlite3.Row object at 0x10d0073f0>, <sqlite3.Row object at 0x10d007450>, <sqlite3.Row object at 0x10d0074b0>, <sqlite3.Row object at 0x10d007510>, <sqlite3.Row object at 0x10d007570>, <sqlite3.Row object at 0x10d0075d0>, <sqlite3.Row object at 0x10d007630>, <sqlite3.Row object at 0x10d007690>, <sqlite3.Row object at 0x10d0076f0>, <sqlite3.Row object at 0x10d007750>, <sqlite3.Row object at 0x10d0077b0>, <sqlite3.Row object at 0x10d007810>, <sqlite3.Row object at 0x10d007870>, <sqlite3.Row object at 0x10d0078d0>, <sqlite3.Row object at 0x10d007930>, <sqlite3.Row object at 0x10d007990>, <sqlite3.Row object at 0x10d0079f0>, <sqlite3.Row object at 0x10d007a50>, <sqlite3.Row object at 0x10d007ab0>, <sqlite3.Row object at 0x10d007b10>, <sqlite3.Row object at 0x10d007b70>, <sqlite3.Row object at 0x10d007bd0>, <sqlite3.Row object at 0x10d007c30>, <sqlite3.Row object at 0x10d007c90>, <sqlite3.Row object at 0x10d007cf0>, <sqlite3.Row object at 0x10d007d50>, <sqlite3.Row object at 0x10d007db0>, <sqlite3.Row object at 0x10d007e10>, <sqlite3.Row object at 0x10d007e70>, <sqlite3.Row object at 0x10d007ed0>, <sqlite3.Row object at 0x10d007f30>, <sqlite3.Row object at 0x10d007f90>, <sqlite3.Row object at 0x10d02c030>, <sqlite3.Row object at 0x10d02c090>, <sqlite3.Row object at 0x10d02c0f0>, <sqlite3.Row object at 0x10d02c150>, <sqlite3.Row object at 0x10d02c1b0>, <sqlite3.Row object at 0x10d02c210>, <sqlite3.Row object at 0x10d02c270>, <sqlite3.Row object at 0x10d02c2d0>, <sqlite3.Row object at 0x10d02c330>, <sqlite3.Row object at 0x10d02c390>, <sqlite3.Row object at 0x10d02c3f0>, <sqlite3.Row object at 0x10d02c450>, <sqlite3.Row object at 0x10d02c4b0>, <sqlite3.Row object at 0x10d02c510>, <sqlite3.Row object at 0x10d02c570>, <sqlite3.Row object at 0x10d02c5d0>, <sqlite3.Row object at 0x10d02c630>, <sqlite3.Row object at 0x10d02c690>, <sqlite3.Row object at 0x10d02c6f0>, <sqlite3.Row object at 0x10d02c750>, <sqlite3.Row object at 0x10d02c7b0>, <sqlite3.Row object at 0x10d02c810>, <sqlite3.Row object at 0x10d02c870>, <sqlite3.Row object at 0x10d02c8d0>, <sqlite3.Row object at 0x10d02c930>, <sqlite3.Row object at 0x10d02c990>, <sqlite3.Row object at 0x10d02c9f0>, <sqlite3.Row object at 0x10d02ca50>, <sqlite3.Row object at 0x10d02cab0>, <sqlite3.Row object at 0x10d02cb10>, <sqlite3.Row object at 0x10d02cb70>, <sqlite3.Row object at 0x10d02cbd0>, <sqlite3.Row object at 0x10d02cc30>, <sqlite3.Row object at 0x10d02cc90>, <sqlite3.Row object at 0x10d02ccf0>, <sqlite3.Row object at 0x10d02cd50>, <sqlite3.Row object at 0x10d02cdb0>, <sqlite3.Row object at 0x10d02ce10>, <sqlite3.Row object at 0x10d02ce70>, <sqlite3.Row object at 0x10d02ced0>, <sqlite3.Row object at 0x10d02cf30>, <sqlite3.Row object at 0x10d02cf90>, <sqlite3.Row object at 0x10d002030>, <sqlite3.Row object at 0x10d002090>, <sqlite3.Row object at 0x10d0020f0>, <sqlite3.Row object at 0x10d002150>, <sqlite3.Row object at 0x10d0021b0>, <sqlite3.Row object at 0x10d002210>, <sqlite3.Row object at 0x10d002270>, <sqlite3.Row object at 0x10d0022d0>, <sqlite3.Row object at 0x10d002330>, <sqlite3.Row object at 0x10d002390>, <sqlite3.Row object at 0x10d0023f0>, <sqlite3.Row object at 0x10d002450>, <sqlite3.Row object at 0x10d0024b0>, <sqlite3.Row object at 0x10d002510>, <sqlite3.Row object at 0x10d002570>, <sqlite3.Row object at 0x10d0025d0>, <sqlite3.Row object at 0x10d002630>, <sqlite3.Row object at 0x10d002690>, <sqlite3.Row object at 0x10d0026f0>, <sqlite3.Row object at 0x10d002750>, <sqlite3.Row object at 0x10d0027b0>, <sqlite3.Row object at 0x10d002810>, <sqlite3.Row object at 0x10d002870>, <sqlite3.Row object at 0x10d0028d0>, <sqlite3.Row object at 0x10d002930>, <sqlite3.Row object at 0x10d002990>, <sqlite3.Row object at 0x10d0029f0>, <sqlite3.Row object at 0x10d002a50>, <sqlite3.Row object at 0x10d002ab0>, <sqlite3.Row object at 0x10d002b10>, <sqlite3.Row object at 0x10d002b70>, <sqlite3.Row object at 0x10d002bd0>, <sqlite3.Row object at 0x10d002c30>, <sqlite3.Row object at 0x10d002c90>, <sqlite3.Row object at 0x10d002cf0>, <sqlite3.Row object at 0x10d002d50>, <sqlite3.Row object at 0x10d002db0>, <sqlite3.Row object at 0x10d002e10>, <sqlite3.Row object at 0x10d002e70>, <sqlite3.Row object at 0x10d002ed0>, <sqlite3.Row object at 0x10d002f30>, <sqlite3.Row object at 0x10d002f90>, <sqlite3.Row object at 0x10d028030>, <sqlite3.Row object at 0x10d028090>, <sqlite3.Row object at 0x10d0280f0>, <sqlite3.Row object at 0x10d028150>, <sqlite3.Row object at 0x10d0281b0>, <sqlite3.Row object at 0x10d028210>, <sqlite3.Row object at 0x10d028270>, <sqlite3.Row object at 0x10d0282d0>, <sqlite3.Row object at 0x10d028330>, <sqlite3.Row object at 0x10d028390>, <sqlite3.Row object at 0x10d0283f0>, <sqlite3.Row object at 0x10d028450>, <sqlite3.Row object at 0x10d0284b0>, <sqlite3.Row object at 0x10d028510>, <sqlite3.Row object at 0x10d028570>, <sqlite3.Row object at 0x10d0285d0>, <sqlite3.Row object at 0x10d028630>, <sqlite3.Row object at 0x10d028690>, <sqlite3.Row object at 0x10d0286f0>, <sqlite3.Row object at 0x10d028750>, <sqlite3.Row object at 0x10d0287b0>, <sqlite3.Row object at 0x10d028810>, <sqlite3.Row object at 0x10d028870>, <sqlite3.Row object at 0x10d0288d0>, <sqlite3.Row object at 0x10d028930>, <sqlite3.Row object at 0x10d028990>, <sqlite3.Row object at 0x10d0289f0>, <sqlite3.Row object at 0x10d028a50>, <sqlite3.Row object at 0x10d028ab0>, <sqlite3.Row object at 0x10d028b10>, <sqlite3.Row object at 0x10d028b70>, <sqlite3.Row object at 0x10d028bd0>, <sqlite3.Row object at 0x10d028c30>, <sqlite3.Row object at 0x10d028c90>, <sqlite3.Row object at 0x10d028cf0>, <sqlite3.Row object at 0x10d028d50>, <sqlite3.Row object at 0x10d028db0>, <sqlite3.Row object at 0x10d028e10>, <sqlite3.Row object at 0x10d028e70>, <sqlite3.Row object at 0x10d028ed0>, <sqlite3.Row object at 0x10d028f30>, <sqlite3.Row object at 0x10d028f90>, <sqlite3.Row object at 0x10d021030>, <sqlite3.Row object at 0x10d021090>, <sqlite3.Row object at 0x10d0210f0>, <sqlite3.Row object at 0x10d021150>, <sqlite3.Row object at 0x10d0211b0>, <sqlite3.Row object at 0x10d021210>, <sqlite3.Row object at 0x10d021270>, <sqlite3.Row object at 0x10d0212d0>, <sqlite3.Row object at 0x10d021330>, <sqlite3.Row object at 0x10d021390>, <sqlite3.Row object at 0x10d0213f0>, <sqlite3.Row object at 0x10d021450>, <sqlite3.Row object at 0x10d0214b0>, <sqlite3.Row object at 0x10d021510>, <sqlite3.Row object at 0x10d021570>, <sqlite3.Row object at 0x10d0215d0>, <sqlite3.Row object at 0x10d021630>, <sqlite3.Row object at 0x10d021690>, <sqlite3.Row object at 0x10d0216f0>, <sqlite3.Row object at 0x10d021750>, <sqlite3.Row object at 0x10d0217b0>, <sqlite3.Row object at 0x10d021810>, <sqlite3.Row object at 0x10d021870>, <sqlite3.Row object at 0x10d0218d0>, <sqlite3.Row object at 0x10d021930>, <sqlite3.Row object at 0x10d021990>, <sqlite3.Row object at 0x10d0219f0>, <sqlite3.Row object at 0x10d021a50>, <sqlite3.Row object at 0x10d021ab0>, <sqlite3.Row object at 0x10d021b10>, <sqlite3.Row object at 0x10d021b70>, <sqlite3.Row object at 0x10d021bd0>, <sqlite3.Row object at 0x10d021c30>, <sqlite3.Row object at 0x10d021c90>, <sqlite3.Row object at 0x10d021cf0>, <sqlite3.Row object at 0x10d021d50>, <sqlite3.Row object at 0x10d021db0>, <sqlite3.Row object at 0x10d021e10>, <sqlite3.Row object at 0x10d021e70>, <sqlite3.Row object at 0x10d021ed0>, <sqlite3.Row object at 0x10d021f30>, <sqlite3.Row object at 0x10d021f90>, <sqlite3.Row object at 0x10d030030>, <sqlite3.Row object at 0x10d030090>, <sqlite3.Row object at 0x10d0300f0>, <sqlite3.Row object at 0x10d030150>, <sqlite3.Row object at 0x10d0301b0>, <sqlite3.Row object at 0x10d030210>, <sqlite3.Row object at 0x10d030270>, <sqlite3.Row object at 0x10d0302d0>, <sqlite3.Row object at 0x10d030330>, <sqlite3.Row object at 0x10d030390>, <sqlite3.Row object at 0x10d0303f0>, <sqlite3.Row object at 0x10d030450>, <sqlite3.Row object at 0x10d0304b0>, <sqlite3.Row object at 0x10d030510>, <sqlite3.Row object at 0x10d030570>, <sqlite3.Row object at 0x10d0305d0>, <sqlite3.Row object at 0x10d030630>, <sqlite3.Row object at 0x10d030690>, <sqlite3.Row object at 0x10d0306f0>, <sqlite3.Row object at 0x10d030750>, <sqlite3.Row object at 0x10d0307b0>, <sqlite3.Row object at 0x10d030810>, <sqlite3.Row object at 0x10d030870>, <sqlite3.Row object at 0x10d0308d0>, <sqlite3.Row object at 0x10d030930>, <sqlite3.Row object at 0x10d030990>, <sqlite3.Row object at 0x10d0309f0>, <sqlite3.Row object at 0x10d030a50>, <sqlite3.Row object at 0x10d030ab0>, <sqlite3.Row object at 0x10d030b10>, <sqlite3.Row object at 0x10d030b70>, <sqlite3.Row object at 0x10d030bd0>, <sqlite3.Row object at 0x10d030c30>, <sqlite3.Row object at 0x10d030c90>, <sqlite3.Row object at 0x10d030cf0>, <sqlite3.Row object at 0x10d030d50>, <sqlite3.Row object at 0x10d030db0>, <sqlite3.Row object at 0x10d030e10>, <sqlite3.Row object at 0x10d030e70>, <sqlite3.Row object at 0x10d030ed0>, <sqlite3.Row object at 0x10d030f30>, <sqlite3.Row object at 0x10d030f90>, <sqlite3.Row object at 0x10d017070>, <sqlite3.Row object at 0x10d017130>, <sqlite3.Row object at 0x10d017230>, <sqlite3.Row object at 0x10d0172f0>, <sqlite3.Row object at 0x10d0173d0>, <sqlite3.Row object at 0x10d017490>, <sqlite3.Row object at 0x10d017590>, <sqlite3.Row object at 0x10d017650>, <sqlite3.Row object at 0x10d017730>, <sqlite3.Row object at 0x10d0177f0>, <sqlite3.Row object at 0x10d0178f0>, <sqlite3.Row object at 0x10d0179b0>, <sqlite3.Row object at 0x10d017a90>, <sqlite3.Row object at 0x10d017b50>, <sqlite3.Row object at 0x10d017c50>, <sqlite3.Row object at 0x10d017d10>, <sqlite3.Row object at 0x10d017df0>, <sqlite3.Row object at 0x10d017eb0>, <sqlite3.Row object at 0x10d017fb0>, <sqlite3.Row object at 0x10d0170f0>, <sqlite3.Row object at 0x10d0172d0>, <sqlite3.Row object at 0x10d017450>, <sqlite3.Row object at 0x10d017630>, <sqlite3.Row object at 0x10d0177b0>, <sqlite3.Row object at 0x10d017990>, <sqlite3.Row object at 0x10d017b10>, <sqlite3.Row object at 0x10d017cf0>, <sqlite3.Row object at 0x10d017e70>, <sqlite3.Row object at 0x10d017050>, <sqlite3.Row object at 0x10d0171f0>, <sqlite3.Row object at 0x10d0173b0>, <sqlite3.Row object at 0x10d017550>, <sqlite3.Row object at 0x10d017710>, <sqlite3.Row object at 0x10d0178b0>, <sqlite3.Row object at 0x10d017a70>, <sqlite3.Row object at 0x10d017c10>, <sqlite3.Row object at 0x10d017dd0>, <sqlite3.Row object at 0x10d017f70>, <sqlite3.Row object at 0x10d017270>, <sqlite3.Row object at 0x10d0175d0>, <sqlite3.Row object at 0x10d017930>, <sqlite3.Row object at 0x10d017c90>, <sqlite3.Row object at 0x10d01b070>, <sqlite3.Row object at 0x10d01b130>, <sqlite3.Row object at 0x10d01b230>, <sqlite3.Row object at 0x10d01b2f0>, <sqlite3.Row object at 0x10d01b3d0>, <sqlite3.Row object at 0x10d01b490>, <sqlite3.Row object at 0x10d01b590>, <sqlite3.Row object at 0x10d01b650>, <sqlite3.Row object at 0x10d01b730>, <sqlite3.Row object at 0x10d01b7f0>, <sqlite3.Row object at 0x10d01b8f0>, <sqlite3.Row object at 0x10d01b9b0>, <sqlite3.Row object at 0x10d01ba90>, <sqlite3.Row object at 0x10d01bb50>, <sqlite3.Row object at 0x10d01bc50>, <sqlite3.Row object at 0x10d01bd10>, <sqlite3.Row object at 0x10d01bdf0>, <sqlite3.Row object at 0x10d01beb0>, <sqlite3.Row object at 0x10d01bfb0>, <sqlite3.Row object at 0x10d01b0f0>, <sqlite3.Row object at 0x10d01b2d0>, <sqlite3.Row object at 0x10d01b450>, <sqlite3.Row object at 0x10d01b630>, <sqlite3.Row object at 0x10d01b7b0>, <sqlite3.Row object at 0x10d01b990>, <sqlite3.Row object at 0x10d01bb10>, <sqlite3.Row object at 0x10d01bcf0>, <sqlite3.Row object at 0x10d01be70>, <sqlite3.Row object at 0x10d01b050>, <sqlite3.Row object at 0x10d01b1f0>, <sqlite3.Row object at 0x10d01b3b0>, <sqlite3.Row object at 0x10d01b550>, <sqlite3.Row object at 0x10d01b710>, <sqlite3.Row object at 0x10d01b8b0>, <sqlite3.Row object at 0x10d01ba70>, <sqlite3.Row object at 0x10d01bc10>, <sqlite3.Row object at 0x10d01bdd0>, <sqlite3.Row object at 0x10d01bf70>, <sqlite3.Row object at 0x10d01b270>, <sqlite3.Row object at 0x10d01b5d0>, <sqlite3.Row object at 0x10d01b930>, <sqlite3.Row object at 0x10d01bc90>, <sqlite3.Row object at 0x10d03a030>, <sqlite3.Row object at 0x10d03a090>, <sqlite3.Row object at 0x10d03a0f0>, <sqlite3.Row object at 0x10d03a150>, <sqlite3.Row object at 0x10d03a1b0>, <sqlite3.Row object at 0x10d03a210>, <sqlite3.Row object at 0x10d03a270>, <sqlite3.Row object at 0x10d03a2d0>, <sqlite3.Row object at 0x10d03a330>, <sqlite3.Row object at 0x10d03a390>, <sqlite3.Row object at 0x10d03a3f0>, <sqlite3.Row object at 0x10d03a450>, <sqlite3.Row object at 0x10d03a4b0>, <sqlite3.Row object at 0x10d03a510>, <sqlite3.Row object at 0x10d03a570>, <sqlite3.Row object at 0x10d03a5d0>, <sqlite3.Row object at 0x10d03a630>, <sqlite3.Row object at 0x10d03a690>, <sqlite3.Row object at 0x10d03a6f0>, <sqlite3.Row object at 0x10d03a750>, <sqlite3.Row object at 0x10d03a7b0>, <sqlite3.Row object at 0x10d03a810>, <sqlite3.Row object at 0x10d03a870>, <sqlite3.Row object at 0x10d03a8d0>, <sqlite3.Row object at 0x10d03a930>, <sqlite3.Row object at 0x10d03a990>, <sqlite3.Row object at 0x10d03a9f0>, <sqlite3.Row object at 0x10d03aa50>, <sqlite3.Row object at 0x10d03aab0>, <sqlite3.Row object at 0x10d03ab10>, <sqlite3.Row object at 0x10d03ab70>, <sqlite3.Row object at 0x10d03abd0>, <sqlite3.Row object at 0x10d03ac30>, <sqlite3.Row object at 0x10d03ac90>, <sqlite3.Row object at 0x10d03acf0>, <sqlite3.Row object at 0x10d03ad50>, <sqlite3.Row object at 0x10d03adb0>, <sqlite3.Row object at 0x10d03ae10>, <sqlite3.Row object at 0x10d03ae70>, <sqlite3.Row object at 0x10d03aed0>, <sqlite3.Row object at 0x10d03af30>, <sqlite3.Row object at 0x10d03af90>, <sqlite3.Row object at 0x10d03d030>, <sqlite3.Row object at 0x10d03d090>, <sqlite3.Row object at 0x10d03d0f0>, <sqlite3.Row object at 0x10d03d150>, <sqlite3.Row object at 0x10d03d1b0>, <sqlite3.Row object at 0x10d03d210>, <sqlite3.Row object at 0x10d03d270>, <sqlite3.Row object at 0x10d03d2d0>, <sqlite3.Row object at 0x10d03d330>, <sqlite3.Row object at 0x10d03d390>, <sqlite3.Row object at 0x10d03d3f0>, <sqlite3.Row object at 0x10d03d450>, <sqlite3.Row object at 0x10d03d4b0>, <sqlite3.Row object at 0x10d03d510>, <sqlite3.Row object at 0x10d03d570>, <sqlite3.Row object at 0x10d03d5d0>, <sqlite3.Row object at 0x10d03d630>, <sqlite3.Row object at 0x10d03d690>, <sqlite3.Row object at 0x10d03d6f0>, <sqlite3.Row object at 0x10d03d750>, <sqlite3.Row object at 0x10d03d7b0>, <sqlite3.Row object at 0x10d03d810>, <sqlite3.Row object at 0x10d03d870>, <sqlite3.Row object at 0x10d03d8d0>, <sqlite3.Row object at 0x10d03d930>, <sqlite3.Row object at 0x10d03d990>, <sqlite3.Row object at 0x10d03d9f0>, <sqlite3.Row object at 0x10d03da50>, <sqlite3.Row object at 0x10d03dab0>, <sqlite3.Row object at 0x10d03db10>, <sqlite3.Row object at 0x10d03db70>, <sqlite3.Row object at 0x10d03dbd0>, <sqlite3.Row object at 0x10d03dc30>, <sqlite3.Row object at 0x10d03dc90>, <sqlite3.Row object at 0x10d03dcf0>, <sqlite3.Row object at 0x10d03dd50>, <sqlite3.Row object at 0x10d03ddb0>, <sqlite3.Row object at 0x10d03de10>, <sqlite3.Row object at 0x10d03de70>, <sqlite3.Row object at 0x10d03ded0>, <sqlite3.Row object at 0x10d03df30>, <sqlite3.Row object at 0x10d03df90>, <sqlite3.Row object at 0x10d03f050>, <sqlite3.Row object at 0x10d03f0d0>, <sqlite3.Row object at 0x10d03f170>, <sqlite3.Row object at 0x10d03f1f0>, <sqlite3.Row object at 0x10d03f290>, <sqlite3.Row object at 0x10d03f310>, <sqlite3.Row object at 0x10d03f3b0>, <sqlite3.Row object at 0x10d03f430>, <sqlite3.Row object at 0x10d03f4d0>, <sqlite3.Row object at 0x10d03f550>, <sqlite3.Row object at 0x10d03f5f0>, <sqlite3.Row object at 0x10d03f670>, <sqlite3.Row object at 0x10d03f710>, <sqlite3.Row object at 0x10d03f790>, <sqlite3.Row object at 0x10d03f830>, <sqlite3.Row object at 0x10d03f8b0>, <sqlite3.Row object at 0x10d03f950>, <sqlite3.Row object at 0x10d03f9d0>, <sqlite3.Row object at 0x10d03fa70>, <sqlite3.Row object at 0x10d03faf0>, <sqlite3.Row object at 0x10d03fb90>, <sqlite3.Row object at 0x10d03fc10>, <sqlite3.Row object at 0x10d03fcb0>, <sqlite3.Row object at 0x10d03fd30>, <sqlite3.Row object at 0x10d03fdd0>, <sqlite3.Row object at 0x10d03fe50>, <sqlite3.Row object at 0x10d03fef0>, <sqlite3.Row object at 0x10d03ff70>, <sqlite3.Row object at 0x10d03f030>, <sqlite3.Row object at 0x10d03f150>, <sqlite3.Row object at 0x10d03f270>, <sqlite3.Row object at 0x10d03f390>, <sqlite3.Row object at 0x10d03f4b0>, <sqlite3.Row object at 0x10d03f5d0>, <sqlite3.Row object at 0x10d03f6f0>, <sqlite3.Row object at 0x10d03f810>, <sqlite3.Row object at 0x10d03f930>, <sqlite3.Row object at 0x10d03fa50>, <sqlite3.Row object at 0x10d03fb70>, <sqlite3.Row object at 0x10d03fc90>, <sqlite3.Row object at 0x10d03fdb0>, <sqlite3.Row object at 0x10d03fed0>, <sqlite3.Row object at 0x10d12b030>, <sqlite3.Row object at 0x10d12b090>, <sqlite3.Row object at 0x10d12b0f0>, <sqlite3.Row object at 0x10d12b150>, <sqlite3.Row object at 0x10d12b1b0>, <sqlite3.Row object at 0x10d12b210>, <sqlite3.Row object at 0x10d12b270>, <sqlite3.Row object at 0x10d12b2d0>, <sqlite3.Row object at 0x10d12b330>, <sqlite3.Row object at 0x10d12b390>, <sqlite3.Row object at 0x10d12b3f0>, <sqlite3.Row object at 0x10d12b450>, <sqlite3.Row object at 0x10d12b4b0>, <sqlite3.Row object at 0x10d12b510>, <sqlite3.Row object at 0x10d12b570>, <sqlite3.Row object at 0x10d12b5d0>, <sqlite3.Row object at 0x10d12b630>, <sqlite3.Row object at 0x10d12b690>, <sqlite3.Row object at 0x10d12b6f0>, <sqlite3.Row object at 0x10d12b750>, <sqlite3.Row object at 0x10d12b7b0>, <sqlite3.Row object at 0x10d12b810>, <sqlite3.Row object at 0x10d12b870>, <sqlite3.Row object at 0x10d12b8d0>, <sqlite3.Row object at 0x10d12b930>, <sqlite3.Row object at 0x10d12b990>, <sqlite3.Row object at 0x10d12b9f0>, <sqlite3.Row object at 0x10d12ba50>, <sqlite3.Row object at 0x10d12bab0>, <sqlite3.Row object at 0x10d12bb10>, <sqlite3.Row object at 0x10d12bb70>, <sqlite3.Row object at 0x10d12bbd0>, <sqlite3.Row object at 0x10d12bc30>, <sqlite3.Row object at 0x10d12bc90>, <sqlite3.Row object at 0x10d12bcf0>, <sqlite3.Row object at 0x10d12bd50>, <sqlite3.Row object at 0x10d12bdb0>, <sqlite3.Row object at 0x10d12be10>, <sqlite3.Row object at 0x10d12be70>, <sqlite3.Row object at 0x10d12bed0>, <sqlite3.Row object at 0x10d12bf30>, <sqlite3.Row object at 0x10d12bf90>, <sqlite3.Row object at 0x10d12f030>, <sqlite3.Row object at 0x10d12f090>, <sqlite3.Row object at 0x10d12f0f0>, <sqlite3.Row object at 0x10d12f150>, <sqlite3.Row object at 0x10d12f1b0>, <sqlite3.Row object at 0x10d12f210>, <sqlite3.Row object at 0x10d12f270>, <sqlite3.Row object at 0x10d12f2d0>, <sqlite3.Row object at 0x10d12f330>, <sqlite3.Row object at 0x10d12f390>, <sqlite3.Row object at 0x10d12f3f0>, <sqlite3.Row object at 0x10d12f450>, <sqlite3.Row object at 0x10d12f4b0>, <sqlite3.Row object at 0x10d12f510>, <sqlite3.Row object at 0x10d12f570>, <sqlite3.Row object at 0x10d12f5d0>, <sqlite3.Row object at 0x10d12f630>, <sqlite3.Row object at 0x10d12f690>, <sqlite3.Row object at 0x10d12f6f0>, <sqlite3.Row object at 0x10d12f750>, <sqlite3.Row object at 0x10d12f7b0>, <sqlite3.Row object at 0x10d12f810>, <sqlite3.Row object at 0x10d12f870>, <sqlite3.Row object at 0x10d12f8d0>, <sqlite3.Row object at 0x10d12f930>, <sqlite3.Row object at 0x10d12f990>, <sqlite3.Row object at 0x10d12f9f0>, <sqlite3.Row object at 0x10d12fa50>, <sqlite3.Row object at 0x10d12fab0>, <sqlite3.Row object at 0x10d12fb10>, <sqlite3.Row object at 0x10d12fb70>, <sqlite3.Row object at 0x10d12fbd0>, <sqlite3.Row object at 0x10d12fc30>, <sqlite3.Row object at 0x10d12fc90>, <sqlite3.Row object at 0x10d12fcf0>, <sqlite3.Row object at 0x10d12fd50>, <sqlite3.Row object at 0x10d12fdb0>, <sqlite3.Row object at 0x10d12fe10>, <sqlite3.Row object at 0x10d12fe70>, <sqlite3.Row object at 0x10d12fed0>, <sqlite3.Row object at 0x10d12ff30>, <sqlite3.Row object at 0x10d12ff90>, <sqlite3.Row object at 0x10d131030>, <sqlite3.Row object at 0x10d131090>, <sqlite3.Row object at 0x10d1310f0>, <sqlite3.Row object at 0x10d131150>, <sqlite3.Row object at 0x10d1311b0>, <sqlite3.Row object at 0x10d131210>, <sqlite3.Row object at 0x10d131270>, <sqlite3.Row object at 0x10d1312d0>, <sqlite3.Row object at 0x10d131330>, <sqlite3.Row object at 0x10d131390>, <sqlite3.Row object at 0x10d1313f0>, <sqlite3.Row object at 0x10d131450>, <sqlite3.Row object at 0x10d1314b0>, <sqlite3.Row object at 0x10d131510>, <sqlite3.Row object at 0x10d131570>, <sqlite3.Row object at 0x10d1315d0>, <sqlite3.Row object at 0x10d131630>, <sqlite3.Row object at 0x10d131690>, <sqlite3.Row object at 0x10d1316f0>, <sqlite3.Row object at 0x10d131750>, <sqlite3.Row object at 0x10d1317b0>, <sqlite3.Row object at 0x10d131810>, <sqlite3.Row object at 0x10d131870>, <sqlite3.Row object at 0x10d1318d0>, <sqlite3.Row object at 0x10d131930>, <sqlite3.Row object at 0x10d131990>, <sqlite3.Row object at 0x10d1319f0>, <sqlite3.Row object at 0x10d131a50>, <sqlite3.Row object at 0x10d131ab0>, <sqlite3.Row object at 0x10d131b10>, <sqlite3.Row object at 0x10d131b70>, <sqlite3.Row object at 0x10d131bd0>, <sqlite3.Row object at 0x10d131c30>, <sqlite3.Row object at 0x10d131c90>, <sqlite3.Row object at 0x10d131cf0>, <sqlite3.Row object at 0x10d131d50>, <sqlite3.Row object at 0x10d131db0>, <sqlite3.Row object at 0x10d131e10>, <sqlite3.Row object at 0x10d131e70>, <sqlite3.Row object at 0x10d131ed0>, <sqlite3.Row object at 0x10d131f30>, <sqlite3.Row object at 0x10d131f90>, <sqlite3.Row object at 0x10d100050>, <sqlite3.Row object at 0x10d1000d0>, <sqlite3.Row object at 0x10d100170>, <sqlite3.Row object at 0x10d1001f0>, <sqlite3.Row object at 0x10d100290>, <sqlite3.Row object at 0x10d100310>, <sqlite3.Row object at 0x10d1003b0>, <sqlite3.Row object at 0x10d100430>, <sqlite3.Row object at 0x10d1004d0>, <sqlite3.Row object at 0x10d100550>, <sqlite3.Row object at 0x10d1005f0>, <sqlite3.Row object at 0x10d100670>, <sqlite3.Row object at 0x10d100710>, <sqlite3.Row object at 0x10d100790>, <sqlite3.Row object at 0x10d100830>, <sqlite3.Row object at 0x10d1008b0>, <sqlite3.Row object at 0x10d100950>, <sqlite3.Row object at 0x10d1009d0>, <sqlite3.Row object at 0x10d100a70>, <sqlite3.Row object at 0x10d100af0>, <sqlite3.Row object at 0x10d100b90>, <sqlite3.Row object at 0x10d100c10>, <sqlite3.Row object at 0x10d100cb0>, <sqlite3.Row object at 0x10d100d30>, <sqlite3.Row object at 0x10d100dd0>, <sqlite3.Row object at 0x10d100e50>, <sqlite3.Row object at 0x10d100ef0>, <sqlite3.Row object at 0x10d100f70>, <sqlite3.Row object at 0x10d100030>, <sqlite3.Row object at 0x10d100150>, <sqlite3.Row object at 0x10d100270>, <sqlite3.Row object at 0x10d100390>, <sqlite3.Row object at 0x10d1004b0>, <sqlite3.Row object at 0x10d1005d0>, <sqlite3.Row object at 0x10d1006f0>, <sqlite3.Row object at 0x10d100810>, <sqlite3.Row object at 0x10d100930>, <sqlite3.Row object at 0x10d100a50>, <sqlite3.Row object at 0x10d100b70>, <sqlite3.Row object at 0x10d100c90>, <sqlite3.Row object at 0x10d100db0>, <sqlite3.Row object at 0x10d100ed0>, <sqlite3.Row object at 0x10d103050>, <sqlite3.Row object at 0x10d1030d0>, <sqlite3.Row object at 0x10d103170>, <sqlite3.Row object at 0x10d1031f0>, <sqlite3.Row object at 0x10d103290>, <sqlite3.Row object at 0x10d103310>, <sqlite3.Row object at 0x10d1033b0>, <sqlite3.Row object at 0x10d103430>, <sqlite3.Row object at 0x10d1034d0>, <sqlite3.Row object at 0x10d103550>, <sqlite3.Row object at 0x10d1035f0>, <sqlite3.Row object at 0x10d103670>, <sqlite3.Row object at 0x10d103710>, <sqlite3.Row object at 0x10d103790>, <sqlite3.Row object at 0x10d103830>, <sqlite3.Row object at 0x10d1038b0>, <sqlite3.Row object at 0x10d103950>, <sqlite3.Row object at 0x10d1039d0>, <sqlite3.Row object at 0x10d103a70>, <sqlite3.Row object at 0x10d103af0>, <sqlite3.Row object at 0x10d103b90>, <sqlite3.Row object at 0x10d103c10>, <sqlite3.Row object at 0x10d103cb0>, <sqlite3.Row object at 0x10d103d30>, <sqlite3.Row object at 0x10d103dd0>, <sqlite3.Row object at 0x10d103e50>, <sqlite3.Row object at 0x10d103ef0>, <sqlite3.Row object at 0x10d103f70>, <sqlite3.Row object at 0x10d103030>, <sqlite3.Row object at 0x10d103150>, <sqlite3.Row object at 0x10d103270>, <sqlite3.Row object at 0x10d103390>, <sqlite3.Row object at 0x10d1034b0>, <sqlite3.Row object at 0x10d1035d0>, <sqlite3.Row object at 0x10d1036f0>, <sqlite3.Row object at 0x10d103810>, <sqlite3.Row object at 0x10d103930>, <sqlite3.Row object at 0x10d103a50>, <sqlite3.Row object at 0x10d103b70>, <sqlite3.Row object at 0x10d103c90>, <sqlite3.Row object at 0x10d103db0>, <sqlite3.Row object at 0x10d103ed0>, <sqlite3.Row object at 0x10d104030>, <sqlite3.Row object at 0x10d104090>, <sqlite3.Row object at 0x10d1040f0>, <sqlite3.Row object at 0x10d104150>, <sqlite3.Row object at 0x10d1041b0>, <sqlite3.Row object at 0x10d104210>, <sqlite3.Row object at 0x10d104270>, <sqlite3.Row object at 0x10d1042d0>, <sqlite3.Row object at 0x10d104330>, <sqlite3.Row object at 0x10d104390>, <sqlite3.Row object at 0x10d1043f0>, <sqlite3.Row object at 0x10d104450>, <sqlite3.Row object at 0x10d1044b0>, <sqlite3.Row object at 0x10d104510>, <sqlite3.Row object at 0x10d104570>, <sqlite3.Row object at 0x10d1045d0>, <sqlite3.Row object at 0x10d104630>, <sqlite3.Row object at 0x10d104690>, <sqlite3.Row object at 0x10d1046f0>, <sqlite3.Row object at 0x10d104750>, <sqlite3.Row object at 0x10d1047b0>, <sqlite3.Row object at 0x10d104810>, <sqlite3.Row object at 0x10d104870>, <sqlite3.Row object at 0x10d1048d0>, <sqlite3.Row object at 0x10d104930>, <sqlite3.Row object at 0x10d104990>, <sqlite3.Row object at 0x10d1049f0>, <sqlite3.Row object at 0x10d104a50>, <sqlite3.Row object at 0x10d104ab0>, <sqlite3.Row object at 0x10d104b10>, <sqlite3.Row object at 0x10d104b70>, <sqlite3.Row object at 0x10d104bd0>, <sqlite3.Row object at 0x10d104c30>, <sqlite3.Row object at 0x10d104c90>, <sqlite3.Row object at 0x10d104cf0>, <sqlite3.Row object at 0x10d104d50>, <sqlite3.Row object at 0x10d104db0>, <sqlite3.Row object at 0x10d104e10>, <sqlite3.Row object at 0x10d104e70>, <sqlite3.Row object at 0x10d104ed0>, <sqlite3.Row object at 0x10d104f30>, <sqlite3.Row object at 0x10d104f90>, <sqlite3.Row object at 0x10d133030>, <sqlite3.Row object at 0x10d133090>, <sqlite3.Row object at 0x10d1330f0>, <sqlite3.Row object at 0x10d133150>, <sqlite3.Row object at 0x10d1331b0>, <sqlite3.Row object at 0x10d133210>, <sqlite3.Row object at 0x10d133270>, <sqlite3.Row object at 0x10d1332d0>, <sqlite3.Row object at 0x10d133330>, <sqlite3.Row object at 0x10d133390>, <sqlite3.Row object at 0x10d1333f0>, <sqlite3.Row object at 0x10d133450>, <sqlite3.Row object at 0x10d1334b0>, <sqlite3.Row object at 0x10d133510>, <sqlite3.Row object at 0x10d133570>, <sqlite3.Row object at 0x10d1335d0>, <sqlite3.Row object at 0x10d133630>, <sqlite3.Row object at 0x10d133690>, <sqlite3.Row object at 0x10d1336f0>, <sqlite3.Row object at 0x10d133750>, <sqlite3.Row object at 0x10d1337b0>, <sqlite3.Row object at 0x10d133810>, <sqlite3.Row object at 0x10d133870>, <sqlite3.Row object at 0x10d1338d0>, <sqlite3.Row object at 0x10d133930>, <sqlite3.Row object at 0x10d133990>, <sqlite3.Row object at 0x10d1339f0>, <sqlite3.Row object at 0x10d133a50>, <sqlite3.Row object at 0x10d133ab0>, <sqlite3.Row object at 0x10d133b10>, <sqlite3.Row object at 0x10d133b70>, <sqlite3.Row object at 0x10d133bd0>, <sqlite3.Row object at 0x10d133c30>, <sqlite3.Row object at 0x10d133c90>, <sqlite3.Row object at 0x10d133cf0>, <sqlite3.Row object at 0x10d133d50>, <sqlite3.Row object at 0x10d133db0>, <sqlite3.Row object at 0x10d133e10>, <sqlite3.Row object at 0x10d133e70>, <sqlite3.Row object at 0x10d133ed0>, <sqlite3.Row object at 0x10d133f30>, <sqlite3.Row object at 0x10d133f90>, <sqlite3.Row object at 0x10d134030>, <sqlite3.Row object at 0x10d134090>, <sqlite3.Row object at 0x10d1340f0>]
2025-06-15 15:58:33,654 - app - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 15:58:33,654 - app - INFO - Final Assistant Response (NL): Â¡Hola! Â¿CÃ³mo puedo ayudarte hoy? Dime quÃ© necesitas revisar de tu cuenta y lo investigamos juntos. ðŸ˜Š
2025-06-15 17:00:37,835 - __main__ - INFO - Flask Application started.
2025-06-15 17:00:37,850 - __main__ - INFO - Database connection established.
2025-06-15 17:00:37,850 - __main__ - INFO - Database schema retrieved and cached.
2025-06-15 17:00:37,854 - __main__ - INFO - Database connection established.
2025-06-15 17:00:37,858 - __main__ - INFO - CSV loaded into table 'bank_transactions' with 2100 rows.
2025-06-15 17:00:37,902 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-15 17:00:38,435 - __main__ - INFO - Flask Application started.
2025-06-15 17:00:38,449 - __main__ - INFO - Database connection established.
2025-06-15 17:00:38,450 - __main__ - INFO - Database schema retrieved and cached.
2025-06-15 17:00:38,452 - __main__ - INFO - Database connection established.
2025-06-15 17:00:38,456 - __main__ - INFO - CSV loaded into table 'bank_transactions' with 2100 rows.
2025-06-15 17:00:38,486 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-15 17:01:56,951 - __main__ - INFO - Flask Application started.
2025-06-15 17:01:56,965 - __main__ - INFO - Attempting to preload 'anonymized_transactions.csv'...
2025-06-15 17:01:56,976 - __main__ - INFO - Schema cache invalidated.
2025-06-15 17:01:56,976 - __main__ - INFO - CSV data loaded into table 'bank_transactions' with 2100 rows.
2025-06-15 17:01:56,976 - __main__ - INFO - Database schema retrieved and cached (newly).
2025-06-15 17:01:57,086 - __main__ - INFO - Philippine holidays fetched and cached (newly).
2025-06-15 17:02:07,996 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-15 17:02:11,342 - __main__ - INFO - User Query (es): hola
2025-06-15 17:02:15,780 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:02:15,780 - __main__ - INFO - Generated SQL Query: None
2025-06-15 17:02:15,781 - __main__ - CRITICAL - An unexpected critical error occurred: argument 1 must be str, not None
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_nonml.py", line 398, in chat
    cursor.execute(sql_query)
TypeError: argument 1 must be str, not None
2025-06-15 17:02:19,572 - __main__ - INFO - User Query (es): hola
2025-06-15 17:02:20,570 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:02:20,571 - __main__ - INFO - Generated SQL Query: None
2025-06-15 17:02:20,572 - __main__ - CRITICAL - An unexpected critical error occurred: argument 1 must be str, not None
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_nonml.py", line 398, in chat
    cursor.execute(sql_query)
TypeError: argument 1 must be str, not None
2025-06-15 17:02:26,095 - __main__ - INFO - User Query (en): hi
2025-06-15 17:02:27,085 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:02:27,085 - __main__ - INFO - Generated SQL Query: SELECT 1
2025-06-15 17:02:27,087 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1
2025-06-15 17:02:28,320 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:02:28,321 - __main__ - INFO - Final Assistant Response (NL): Hi there! I'm here to help with your banking needs. Just let me know what you'd like to know about your transactions and I'll do my best to assist you! :)
2025-06-15 17:02:41,187 - __main__ - INFO - User Query (en): date range of transactions
2025-06-15 17:02:42,624 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:02:42,624 - __main__ - INFO - Generated SQL Query: SELECT MIN("Book date") AS Start_Date, MAX("Book date") AS End_Date FROM bank_transactions;
2025-06-15 17:02:42,632 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1
2025-06-15 17:02:44,146 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:02:44,147 - __main__ - INFO - Final Assistant Response (NL): Okay, the earliest transaction I see is from June 2, 2025, and the most recent is from May 31, 2025. Did you mean May 31, 2025 is the earliest and June 2, 2025 is the most recent? Let me know if you need a more specific timeframe!
2025-06-15 17:03:27,606 - __main__ - INFO - Flask Application started.
2025-06-15 17:03:27,619 - __main__ - INFO - Attempting to preload 'anonymized_transactions.csv'...
2025-06-15 17:03:27,627 - __main__ - INFO - Schema cache invalidated.
2025-06-15 17:03:27,627 - __main__ - INFO - CSV data loaded into table 'bank_transactions' with 2100 rows.
2025-06-15 17:03:27,627 - __main__ - INFO - Database schema retrieved and cached (newly).
2025-06-15 17:03:27,672 - __main__ - INFO - Philippine holidays fetched and cached (newly).
2025-06-15 17:03:30,689 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-15 17:03:33,218 - __main__ - INFO - User Query (en): hi
2025-06-15 17:03:35,592 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:03:35,592 - __main__ - INFO - Generated SQL Query: None
2025-06-15 17:03:35,593 - __main__ - CRITICAL - An unexpected critical error occurred: argument 1 must be str, not None
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_nonml.py", line 398, in chat
    cursor.execute(sql_query)
TypeError: argument 1 must be str, not None
2025-06-15 17:03:37,453 - __main__ - INFO - User Query (en): hi
2025-06-15 17:03:38,699 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:03:38,699 - __main__ - INFO - Generated SQL Query: None
2025-06-15 17:03:38,700 - __main__ - CRITICAL - An unexpected critical error occurred: argument 1 must be str, not None
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_nonml.py", line 398, in chat
    cursor.execute(sql_query)
TypeError: argument 1 must be str, not None
2025-06-15 17:03:42,001 - __main__ - INFO - User Query (en): i need ur help
2025-06-15 17:03:43,038 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:03:43,039 - __main__ - INFO - Generated SQL Query: SELECT 'How can I help you today?' AS greeting;
2025-06-15 17:03:43,040 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1
2025-06-15 17:03:44,063 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:03:44,063 - __main__ - INFO - Final Assistant Response (NL): Hi there! How can I help you today?
2025-06-15 17:03:55,303 - __main__ - INFO - User Query (en): what is the transaction date range here
2025-06-15 17:03:56,716 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:03:56,717 - __main__ - INFO - Generated SQL Query: SELECT MIN("Book date"), MAX("Book date") FROM bank_transactions;
2025-06-15 17:03:56,721 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1
2025-06-15 17:03:58,126 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:03:58,127 - __main__ - INFO - Final Assistant Response (NL): Okay, the transactions I have here are dated between May 31, 2025, and June 2, 2025. Is there anything specific you'd like to look at within that range?
2025-06-15 17:04:52,919 - __main__ - INFO - Flask Application started.
2025-06-15 17:04:52,932 - __main__ - INFO - Attempting to preload 'anonymized_transactions.csv'...
2025-06-15 17:04:52,940 - __main__ - INFO - Schema cache invalidated.
2025-06-15 17:04:52,940 - __main__ - INFO - CSV data loaded into table 'bank_transactions' with 2100 rows.
2025-06-15 17:04:52,940 - __main__ - INFO - Database schema retrieved and cached (newly).
2025-06-15 17:04:52,985 - __main__ - INFO - Philippine holidays fetched and cached (newly).
2025-06-15 17:05:05,777 - __main__ - INFO - Flask Application started.
2025-06-15 17:05:05,790 - __main__ - INFO - Attempting to preload 'anonymized_transactions.csv'...
2025-06-15 17:05:05,796 - __main__ - INFO - Schema cache invalidated.
2025-06-15 17:05:05,796 - __main__ - INFO - CSV data loaded into table 'bank_transactions' with 2100 rows.
2025-06-15 17:05:05,796 - __main__ - INFO - Database schema retrieved and cached (newly).
2025-06-15 17:05:05,839 - __main__ - INFO - Philippine holidays fetched and cached (newly).
2025-06-15 17:05:06,319 - __main__ - INFO - Flask Application started.
2025-06-15 17:05:06,329 - __main__ - INFO - Attempting to preload 'anonymized_transactions.csv'...
2025-06-15 17:05:06,335 - __main__ - INFO - Schema cache invalidated.
2025-06-15 17:05:06,335 - __main__ - INFO - CSV data loaded into table 'bank_transactions' with 2100 rows.
2025-06-15 17:05:06,335 - __main__ - INFO - Database schema retrieved and cached (newly).
2025-06-15 17:05:06,365 - __main__ - INFO - Philippine holidays fetched and cached (newly).
2025-06-15 17:05:09,371 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-15 17:05:13,554 - __main__ - INFO - User Query (en): hi
2025-06-15 17:05:15,719 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:05:15,719 - __main__ - INFO - Generated SQL Query: None
2025-06-15 17:05:15,721 - __main__ - CRITICAL - An unexpected critical error occurred: argument 1 must be str, not None
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_nonml.py", line 398, in chat
    cursor.execute(sql_query)
TypeError: argument 1 must be str, not None
2025-06-15 17:05:18,151 - __main__ - INFO - User Query (en): hello
2025-06-15 17:05:19,091 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:05:19,092 - __main__ - INFO - Generated SQL Query: SELECT strftime('%Y-%m-%d %H:%M:%S', 'now', 'localtime');
2025-06-15 17:05:19,093 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1
2025-06-15 17:05:20,528 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:05:20,528 - __main__ - INFO - Final Assistant Response (NL): Hi there! Happy to help you manage your finances. What can I help you with today?
2025-06-15 17:05:31,932 - __main__ - INFO - User Query (en): transactions date range
2025-06-15 17:05:33,324 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:05:33,325 - __main__ - INFO - Generated SQL Query: SELECT DISTINCT "Book date" FROM bank_transactions ORDER BY "Book date" ASC
2025-06-15 17:05:33,330 - __main__ - INFO - SQL Query Executed Successfully. Results count: 16
2025-06-15 17:05:35,578 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:05:35,578 - __main__ - INFO - Final Assistant Response (NL): Okay, here are the dates for which I have transaction records:

*   May 20, 2025
*   May 23, 2025
*   May 26, 2025
*   May 27, 2025
*   May 28, 2025
*   May 29, 2025
*   May 30, 2025
*   May 31, 2025
*   June 02, 2025
*   June 03, 2025
*   June 04, 2025
*   June 05, 2025
*   June 09, 2025
*   June 10, 2025
*   June 11, 2025
*   June 13, 2025

Anything specific you'd like to investigate within these dates?
2025-06-15 17:07:35,054 - __main__ - INFO - Flask Application started.
2025-06-15 17:07:35,066 - __main__ - INFO - Attempting to preload 'anonymized_transactions(1).csv'...
2025-06-15 17:07:35,079 - __main__ - INFO - Schema cache invalidated.
2025-06-15 17:07:35,079 - __main__ - INFO - CSV data loaded into table 'bank_transactions' with 2100 rows.
2025-06-15 17:07:35,079 - __main__ - INFO - Database schema retrieved and cached (newly).
2025-06-15 17:07:35,123 - __main__ - INFO - Philippine holidays fetched and cached (newly).
2025-06-15 17:07:36,769 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-15 17:07:40,220 - __main__ - INFO - User Query (en): i need help
2025-06-15 17:07:42,929 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:07:42,930 - __main__ - INFO - Generated SQL Query: SELECT 1
2025-06-15 17:07:42,931 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1
2025-06-15 17:07:43,912 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:07:43,913 - __main__ - INFO - Final Assistant Response (NL): Hi there! I'm happy to help. What can I assist you with today?
2025-06-15 17:07:53,457 - __main__ - INFO - User Query (en): i want date ranges of my transactions
2025-06-15 17:07:55,054 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:07:55,054 - __main__ - INFO - Generated SQL Query: SELECT DISTINCT "Book date" FROM bank_transactions ORDER BY "Book date" ASC;
2025-06-15 17:07:55,058 - __main__ - INFO - SQL Query Executed Successfully. Results count: 16
2025-06-15 17:07:57,230 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:07:57,231 - __main__ - INFO - Final Assistant Response (NL): Okay, I've listed the dates of your transactions in order:

*   May 20, 2025
*   May 23, 2025
*   May 26, 2025
*   May 27, 2025
*   May 28, 2025
*   May 29, 2025
*   May 30, 2025
*   May 31, 2025
*   June 02, 2025
*   June 03, 2025
*   June 04, 2025
*   June 05, 2025
*   June 09, 2025
*   June 10, 2025
*   June 11, 2025
*   June 13, 2025

Do you want to check the transactions of a particular date or date range? Just let me know!
2025-06-15 17:08:58,966 - __main__ - INFO - User Query (en): what's the date where i spent the most, where, and how much
2025-06-15 17:09:00,586 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:09:00,587 - __main__ - INFO - Generated SQL Query: SELECT "Book date", "Counter party name", "Amount" FROM bank_transactions WHERE "Credit/debit indicator" = 'Debit' ORDER BY "Amount" DESC LIMIT 1;
2025-06-15 17:09:00,593 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1
2025-06-15 17:09:02,219 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:09:02,219 - __main__ - INFO - Final Assistant Response (NL): Looks like you spent the most on May 30, 2025. It was a debit of â‚±5,896.82 to BDOPAY BN P2MQR-PAY2-71358162- P2MI. Want help reviewing this!
2025-06-15 17:09:10,211 - __main__ - INFO - User Query (en): what does this mean?
2025-06-15 17:09:11,691 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:09:11,692 - __main__ - INFO - Generated SQL Query: SELECT "Counter party name" FROM bank_transactions WHERE "Book date" = 'May 30, 2025' AND "Amount" = 5896.82;
2025-06-15 17:09:11,695 - __main__ - INFO - SQL Query Executed Successfully. Results count: 0
2025-06-15 17:09:13,074 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:09:13,074 - __main__ - INFO - Final Assistant Response (NL): It appears to be a transaction made via BDOPAY, which is a common online payment gateway here in the Philippines. It's likely for an online purchase or fund transfer you made. Is there anything else I can help clarify about this transaction?
2025-06-15 17:09:20,307 - __main__ - INFO - User Query (en): oh, okay
2025-06-15 17:09:21,778 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:09:21,778 - __main__ - INFO - Generated SQL Query: SELECT DISTINCT "Counter party name" FROM bank_transactions;
2025-06-15 17:09:21,781 - __main__ - INFO - SQL Query Executed Successfully. Results count: 321
2025-06-15 17:09:23,725 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:09:23,725 - __main__ - INFO - Final Assistant Response (NL): Alright! Here's a list of the parties involved in your transactions. This might give you a clearer picture of where your funds have been going and coming from. 

Would you like me to show you a summary of transactions with any of these parties?
2025-06-15 17:09:34,605 - __main__ - INFO - User Query (en): summary of my transactions
2025-06-15 17:09:36,144 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:09:36,144 - __main__ - INFO - Generated SQL Query: SELECT "Counter party name", SUM(CASE WHEN "Credit/debit indicator" = 'Credit' THEN Amount ELSE 0 END) AS TotalCredit, SUM(CASE WHEN "Credit/debit indicator" = 'Debit' THEN Amount ELSE 0 END) AS TotalDebit FROM bank_transactions GROUP BY "Counter party name";
2025-06-15 17:09:36,149 - __main__ - INFO - SQL Query Executed Successfully. Results count: 321
2025-06-15 17:09:38,401 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:09:38,401 - __main__ - INFO - Final Assistant Response (NL): Okay, here's a summary of your transactions, showing the total credits and debits for each counterparty. This should give you a good overview of where your money is going and coming from. Let me know if you need a closer look at any specific party!
2025-06-15 17:11:58,937 - __main__ - INFO - Flask Application started.
2025-06-15 17:11:58,950 - __main__ - INFO - Attempting to preload 'anonymized_transactions.csv'...
2025-06-15 17:11:58,958 - __main__ - INFO - Schema cache invalidated.
2025-06-15 17:11:58,958 - __main__ - INFO - CSV data loaded into table 'bank_transactions' with 2100 rows.
2025-06-15 17:11:58,958 - __main__ - INFO - Database schema retrieved and cached (newly).
2025-06-15 17:11:59,006 - __main__ - INFO - Philippine holidays fetched and cached (newly).
2025-06-15 17:12:01,422 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-15 17:12:06,959 - __main__ - INFO - User Query (en): summary of my transactions
2025-06-15 17:12:11,936 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:12:11,937 - __main__ - INFO - Generated SQL Query: SELECT * FROM bank_transactions
2025-06-15 17:12:11,943 - __main__ - INFO - SQL Query Executed Successfully. Results count: 2100
2025-06-15 17:12:36,073 - __main__ - ERROR - Error decoding JSON from Gemini: Invalid \escape: line 3 column 233 (char 431). Raw content: ```json
{
  "sql": "SELECT\n  \"Book date\",\n  \"Counter party name\",\n  \"Credit/debit indicator\",\n  \"Amount\",\n  \"Currency\",\n  \"Source\"\nFROM bank_transactions\nORDER BY\n  \"Book date\" ASC;",
  "natural_language_response": "Okay, I've got a detailed summary of your transactions sorted by date for you. Here's a snippet of what I found for May 20, 2025:\n\n*   Debit of â‚±79.06 to POS W/D SV MOVE IT MAKATI ATP from synthetic\_2\n*   Credit of â‚±1,425.91 from Received from Other Bank from synthetic\_3\n*   Debit of â‚±1,810.77 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_2\n*   Credit of â‚±1,500.00 from Received from Other Bank from original\n*   Credit of â‚±59.93 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_3\n*   Credit of â‚±1,092.71 from Received from Other Bank from synthetic\_2\n*   Debit of â‚±1,098.48 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_3\n*   Credit of â‚±75.46 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_3\n*   Credit of â‚±59.11 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_2\n*   Credit of â‚±51.00 from POS W/D SV MOVE IT MAKATI ATP from original\n*   Credit of â‚±955.63 from Received from Other Bank from synthetic\_3\n*   Debit of â‚±47.79 to POS W/D SV MOVE IT MAKATI ATP from synthetic\_2\n*   Credit of â‚±1,691.47 from Received from Other Bank from synthetic\_2\n*   Credit of â‚±909.69 from Received from Other Bank from synthetic\_4\n*   Debit of â‚±29.55 to POS W/D SV MOVE IT MAKATI ATP from synthetic\_1\n*   Debit of â‚±2,152.20 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_2\n*   Credit of â‚±44.06 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_4\n*   Debit of â‚±1,257.15 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_4\n*   Debit of â‚±1,514.15 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_2\n*   Credit of â‚±786.43 from Received from Other Bank from synthetic\_1\n*   Debit of â‚±1,500.00 to W/D FR SAV BDO/005542 54SM STAMESA BDO from original\n*   Credit of â‚±1,098.02 from Received from Other Bank from synthetic\_2\n*   Debit of â‚±1,194.28 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_2\n*   Debit of â‚±2,127.69 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_5\n*   Debit of â‚±34.87 to POS W/D SV MOVE IT MAKATI ATP from synthetic\_5\n*   Debit of â‚±1,812.21 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_5\n*   Debit of â‚±1,789.82 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_2\n*   Credit of â‚±51.00 from POS W/D SV MOVE IT MAKATI ATP from original\n*   Debit of â‚±61.78 to POS W/D SV MOVE IT MAKATI ATP from synthetic\_5\n*   Debit of â‚±2,204.22 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_3\n*   Credit of â‚±1,500.00 from Received from Other Bank from original\n*   Debit of â‚±1,814.31 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_2\n*   Debit of â‚±2,124.99 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_3\n*   Debit of â‚±1,691.95 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_3\n*   Credit of â‚±54.33 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_3\n*   Debit of â‚±912.85 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_3\n*   Debit of â‚±1,195.21 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_5\n*   Debit of â‚±2,061.60 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_5\n*   Credit of â‚±54.53 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_2\n*   Credit of â‚±1,260.06 from Received from Other Bank from synthetic\_5\n*   Credit of â‚±54.89 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_1\n*   Credit of â‚±2,247.10 from Received from Other Bank from synthetic\_5\n*   Credit of â‚±1,406.16 from Received from Other Bank from synthetic\_3\n*   Credit of â‚±51.00 from POS W/D SV MOVE IT MAKATI ATP from original\n*   Credit of â‚±2,001.60 from Received from Other Bank from synthetic\_2\n*   Credit of â‚±1,786.71 from Received from Other Bank from synthetic\_4\n*   Credit of â‚±1,500.00 from Received from Other Bank from original\n*   Credit of â‚±49.07 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_4\n*   Debit of â‚±1,500.00 to W/D FR SAV BDO/005542 54SM STAMESA BDO from original\n*   Credit of â‚±1,950.82 from Received from Other Bank from synthetic\_4\n*   Debit of â‚±65.31 to POS W/D SV MOVE IT MAKATI ATP from synthetic\_4\n*   Debit of â‚±42.97 to POS W/D SV MOVE IT MAKATI ATP from synthetic\_1\n*   Debit of â‚±71.05 to POS W/D SV MOVE IT MAKATI ATP from synthetic\_4\n*   Debit of â‚±1,034.25 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_2\n*   Credit of â‚±55.88 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_4\n*   Debit of â‚±1,730.14 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_4\n*   Debit of â‚±2,179.34 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_1\n*   Debit of â‚±40.05 to POS W/D SV MOVE IT MAKATI ATP from synthetic\_4\n*   Debit of â‚±1,376.10 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_4\n*   Debit of â‚±59.11 to POS W/D SV MOVE IT MAKATI ATP from synthetic\_1\n*   Credit of â‚±66.27 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_4\n*   Credit of â‚±51.00 from POS W/D SV MOVE IT MAKATI ATP from original\n*   Debit of â‚±69.39 to POS W/D SV MOVE IT MAKATI ATP from synthetic\_4\n*   Credit of â‚±1,351.56 from Received from Other Bank from synthetic\_4\n*   Credit of â‚±51.32 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_4\n*   Debit of â‚±986.84 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_4\n*   Debit of â‚±1,934.21 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_4\n*   Credit of â‚±1,500.00 from Received from Other Bank from original\n*   Credit of â‚±51.00 from POS W/D SV MOVE IT MAKATI ATP from original\n*   Credit of â‚±44.28 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_2\n*   Credit of â‚±1,454.82 from Received from Other Bank from synthetic\_2\n*   Credit of â‚±1,046.36 from Received from Other Bank from synthetic\_4\n*   Credit of â‚±2,234.63 from Received from Other Bank from synthetic\_4\n*   Debit of â‚±1,500.00 to W/D FR SAV BDO/005542 54SM STAMESA BDO from original\n*   Debit of â‚±34.73 to POS W/D SV MOVE IT MAKATI ATP from synthetic\_2\n*   Debit of â‚±49.40 to POS W/D SV MOVE IT MAKATI ATP from synthetic\_2\n*   Debit of â‚±1,500.00 to W/D FR SAV BDO/005542 54SM STAMESA BDO from original\n*   Debit of â‚±1,689.36 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_4\n*   Debit of â‚±884.56 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_2\n*   Credit of â‚±60.75 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_4\n*   Debit of â‚±1,883.64 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_4\n*   Debit of â‚±1,663.84 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_4\n*   Credit of â‚±2,168.39 from Received from Other Bank from synthetic\_4\n*   Debit of â‚±53.00 to POS W/D SV MOVE IT MAKATI ATP from original\n*   Debit of â‚±1,198.87 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_4\n*   Debit of â‚±1,924.57 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_1\n*   Debit of â‚±58.71 to POS W/D SV MOVE IT MAKATI ATP from synthetic\_5\n*   Credit of â‚±1,938.28 from Received from Other Bank from synthetic\_3\n*   Credit of â‚±1,701.51 from Received from Other Bank from synthetic\_1\n*   Credit of â‚±40.02 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_1\n*   Credit of â‚±858.56 from Received from Other Bank from synthetic\_1\n*   Credit of â‚±1,584.41 from Received from Other Bank from synthetic\_5\n*   Debit of â‚±990.05 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_1\n*   Debit of â‚±1,982.94 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_3\n*   Debit of â‚±51.92 to POS W/D SV MOVE IT MAKATI ATP from synthetic\_3\n*   Debit of â‚±1,319.98 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_5\n*   Debit of â‚±2,029.52 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_3\n*   Credit of â‚±41.47 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_5\n*   Debit of â‚±1,982.79 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_5\n*   Debit of â‚±754.38 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_5\n*   Credit of â‚±59.93 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_3\n*   Debit of â‚±758.20 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_5\n*   Credit of â‚±1,500.00 from Received from Other Bank from original\n*   Credit of â‚±2,154.14 from Received from Other Bank from synthetic\_1\n*   Debit of â‚±76.21 to POS W/D SV MOVE IT MAKATI ATP from synthetic\_3\n*   Debit of â‚±2,185.94 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_2\n*   Credit of â‚±64.74 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_2\n*   Credit of â‚±62.03 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_5\n*   Credit of â‚±53.28 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_1\n*   Debit of â‚±2,217.26 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_1\n*   Debit of â‚±74.61 to POS W/D SV MOVE IT MAKATI ATP from synthetic\_1\n*   Credit of â‚±1,704.32 from Received from Other Bank from synthetic\_3\n*   Credit of â‚±49.95 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_1\n*   Credit of â‚±1,443.11 from Received from Other Bank from synthetic\_1\n*   Debit of â‚±1,433.64 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_3\n*   Debit of â‚±923.94 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_3\n*   Credit of â‚±1,426.36 from Received from Other Bank from synthetic\_2\n*   Credit of â‚±2,150.55 from Received from Other Bank from synthetic\_3\n*   Credit of â‚±1,576.82 from Received from Other Bank from synthetic\_5\n*   Credit of â‚±1,500.00 from Received from Other Bank from original\n*   Credit of â‚±1,640.91 from Received from Other Bank from synthetic\_5\n*   Debit of â‚±1,500.00 to W/D FR SAV BDO/005542 54SM STAMESA BDO from original\n*   Credit of â‚±750.94 from Received from Other Bank from synthetic\_1\n*   Debit of â‚±1,500.00 to W/D FR SAV BDO/005542 54SM STAMESA BDO from original\n*   Credit of â‚±54.23 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_5\n*   Debit of â‚±1,249.83 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_5\n*   Debit of â‚±1,841.06 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_1\n*   Debit of â‚±30.14 to POS W/D SV MOVE IT MAKATI ATP from synthetic\_3\n*   Debit of â‚±1,959.53 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_1\n*   Debit of â‚±53.00 to POS W/D SV MOVE IT MAKATI ATP from original\n*   Credit of â‚±817.35 from Received from Other Bank from synthetic\_5\n*   Debit of â‚±53.00 to POS W/D SV MOVE IT MAKATI ATP from original\n*   Credit of â‚±69.41 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_2\n*   Credit of â‚±1,944.60 from Received from Other Bank from synthetic\_3\n*   Credit of â‚±31.72 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_5\n*   Credit of â‚±821.27 from Received from Other Bank from synthetic\_5\n*   Debit of â‚±969.50 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_1\n*   Credit of â‚±52.76 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_1\n*   Debit of â‚±1,500.00 to W/D FR SAV BDO/005542 54SM STAMESA BDO from original\n*   Credit of â‚±60.50 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_3\n*   Debit of â‚±53.00 to POS W/D SV MOVE IT MAKATI ATP from original\n*   Debit of â‚±1,414.29 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_1\n*   Credit of â‚±51.00 from POS W/D SV MOVE IT MAKATI ATP from original\n*   Credit of â‚±51.73 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_5\n*   Debit of â‚±1,500.00 to W/D FR SAV BDO/005542 54SM STAMESA BDO from original\n*   Debit of â‚±31.90 to POS W/D SV MOVE IT MAKATI ATP from synthetic\_3\n*   Credit of â‚±1,106.48 from Received from Other Bank from synthetic\_2\n*   Credit of â‚±1,500.00 from Received from Other Bank from original\n*   Debit of â‚±33.78 to POS W/D SV MOVE IT MAKATI ATP from synthetic\_5\n*   Credit of â‚±34.27 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_2\n*   Credit of â‚±30.56 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_3\n*   Debit of â‚±1,500.00 to W/D FR SAV BDO/005542 54SM STAMESA BDO from original\n*   Credit of â‚±58.77 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_5\n*   Credit of â‚±1,247.94 from Received from Other Bank from synthetic\_1\n*   Credit of â‚±51.62 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_1\n*   Debit of â‚±752.08 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_1\n
Do you need any further breakdown or clarification on these transactions?
"
}
```
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_nonml.py", line 325, in get_gemini_response
    response_dict = json.loads(json_str)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 353, in raw_decode
    obj, end = self.scan_once(s, idx)
json.decoder.JSONDecodeError: Invalid \escape: line 3 column 233 (char 431)
2025-06-15 17:12:36,080 - __main__ - ERROR - Gemini failed at NL generation step after query execution. Error: Error decoding JSON from Gemini: Invalid \escape: line 3 column 233 (char 431). Raw: ```json
{
  "sql": "SELECT\n  \"Book date\",\n  \"Counter party name\",\n  \"Credit/debit indicator\",\n  \"Amount\",\n  \"Currency\",\n  \"Source\"\nFROM bank_transactions\nORDER BY\n  \"Book date\" ASC;",
  "natural_language_response": "Okay, I've got a detailed summary of your transactions sorted by date for you. Here's a snippet of what I found for May 20, 2025:\n\n*   Debit of â‚±79.06 to POS W/D SV MOVE IT MAKATI ATP from synthetic\_2\n*   Credit of â‚±1,425.91 from Received from Other Bank from synthetic\_3\n*   Debit of â‚±1,810.77 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_2\n*   Credit of â‚±1,500.00 from Received from Other Bank from original\n*   Credit of â‚±59.93 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_3\n*   Credit of â‚±1,092.71 from Received from Other Bank from synthetic\_2\n*   Debit of â‚±1,098.48 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_3\n*   Credit of â‚±75.46 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_3\n*   Credit of â‚±59.11 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_2\n*   Credit of â‚±51.00 from POS W/D SV MOVE IT MAKATI ATP from original\n*   Credit of â‚±955.63 from Received from Other Bank from synthetic\_3\n*   Debit of â‚±47.79 to POS W/D SV MOVE IT MAKATI ATP from synthetic\_2\n*   Credit of â‚±1,691.47 from Received from Other Bank from synthetic\_2\n*   Credit of â‚±909.69 from Received from Other Bank from synthetic\_4\n*   Debit of â‚±29.55 to POS W/D SV MOVE IT MAKATI ATP from synthetic\_1\n*   Debit of â‚±2,152.20 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_2\n*   Credit of â‚±44.06 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_4\n*   Debit of â‚±1,257.15 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_4\n*   Debit of â‚±1,514.15 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_2\n*   Credit of â‚±786.43 from Received from Other Bank from synthetic\_1\n*   Debit of â‚±1,500.00 to W/D FR SAV BDO/005542 54SM STAMESA BDO from original\n*   Credit of â‚±1,098.02 from Received from Other Bank from synthetic\_2\n*   Debit of â‚±1,194.28 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_2\n*   Debit of â‚±2,127.69 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_5\n*   Debit of â‚±34.87 to POS W/D SV MOVE IT MAKATI ATP from synthetic\_5\n*   Debit of â‚±1,812.21 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_5\n*   Debit of â‚±1,789.82 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_2\n*   Credit of â‚±51.00 from POS W/D SV MOVE IT MAKATI ATP from original\n*   Debit of â‚±61.78 to POS W/D SV MOVE IT MAKATI ATP from synthetic\_5\n*   Debit of â‚±2,204.22 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_3\n*   Credit of â‚±1,500.00 from Received from Other Bank from original\n*   Debit of â‚±1,814.31 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_2\n*   Debit of â‚±2,124.99 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_3\n*   Debit of â‚±1,691.95 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_3\n*   Credit of â‚±54.33 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_3\n*   Debit of â‚±912.85 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_3\n*   Debit of â‚±1,195.21 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_5\n*   Debit of â‚±2,061.60 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_5\n*   Credit of â‚±54.53 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_2\n*   Credit of â‚±1,260.06 from Received from Other Bank from synthetic\_5\n*   Credit of â‚±54.89 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_1\n*   Credit of â‚±2,247.10 from Received from Other Bank from synthetic\_5\n*   Credit of â‚±1,406.16 from Received from Other Bank from synthetic\_3\n*   Credit of â‚±51.00 from POS W/D SV MOVE IT MAKATI ATP from original\n*   Credit of â‚±2,001.60 from Received from Other Bank from synthetic\_2\n*   Credit of â‚±1,786.71 from Received from Other Bank from synthetic\_4\n*   Credit of â‚±1,500.00 from Received from Other Bank from original\n*   Credit of â‚±49.07 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_4\n*   Debit of â‚±1,500.00 to W/D FR SAV BDO/005542 54SM STAMESA BDO from original\n*   Credit of â‚±1,950.82 from Received from Other Bank from synthetic\_4\n*   Debit of â‚±65.31 to POS W/D SV MOVE IT MAKATI ATP from synthetic\_4\n*   Debit of â‚±42.97 to POS W/D SV MOVE IT MAKATI ATP from synthetic\_1\n*   Debit of â‚±71.05 to POS W/D SV MOVE IT MAKATI ATP from synthetic\_4\n*   Debit of â‚±1,034.25 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_2\n*   Credit of â‚±55.88 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_4\n*   Debit of â‚±1,730.14 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_4\n*   Debit of â‚±2,179.34 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_1\n*   Debit of â‚±40.05 to POS W/D SV MOVE IT MAKATI ATP from synthetic\_4\n*   Debit of â‚±1,376.10 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_4\n*   Debit of â‚±59.11 to POS W/D SV MOVE IT MAKATI ATP from synthetic\_1\n*   Credit of â‚±66.27 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_4\n*   Credit of â‚±51.00 from POS W/D SV MOVE IT MAKATI ATP from original\n*   Debit of â‚±69.39 to POS W/D SV MOVE IT MAKATI ATP from synthetic\_4\n*   Credit of â‚±1,351.56 from Received from Other Bank from synthetic\_4\n*   Credit of â‚±51.32 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_4\n*   Debit of â‚±986.84 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_4\n*   Debit of â‚±1,934.21 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_4\n*   Credit of â‚±1,500.00 from Received from Other Bank from original\n*   Credit of â‚±51.00 from POS W/D SV MOVE IT MAKATI ATP from original\n*   Credit of â‚±44.28 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_2\n*   Credit of â‚±1,454.82 from Received from Other Bank from synthetic\_2\n*   Credit of â‚±1,046.36 from Received from Other Bank from synthetic\_4\n*   Credit of â‚±2,234.63 from Received from Other Bank from synthetic\_4\n*   Debit of â‚±1,500.00 to W/D FR SAV BDO/005542 54SM STAMESA BDO from original\n*   Debit of â‚±34.73 to POS W/D SV MOVE IT MAKATI ATP from synthetic\_2\n*   Debit of â‚±49.40 to POS W/D SV MOVE IT MAKATI ATP from synthetic\_2\n*   Debit of â‚±1,500.00 to W/D FR SAV BDO/005542 54SM STAMESA BDO from original\n*   Debit of â‚±1,689.36 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_4\n*   Debit of â‚±884.56 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_2\n*   Credit of â‚±60.75 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_4\n*   Debit of â‚±1,883.64 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_4\n*   Debit of â‚±1,663.84 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_4\n*   Credit of â‚±2,168.39 from Received from Other Bank from synthetic\_4\n*   Debit of â‚±53.00 to POS W/D SV MOVE IT MAKATI ATP from original\n*   Debit of â‚±1,198.87 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_4\n*   Debit of â‚±1,924.57 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_1\n*   Debit of â‚±58.71 to POS W/D SV MOVE IT MAKATI ATP from synthetic\_5\n*   Credit of â‚±1,938.28 from Received from Other Bank from synthetic\_3\n*   Credit of â‚±1,701.51 from Received from Other Bank from synthetic\_1\n*   Credit of â‚±40.02 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_1\n*   Credit of â‚±858.56 from Received from Other Bank from synthetic\_1\n*   Credit of â‚±1,584.41 from Received from Other Bank from synthetic\_5\n*   Debit of â‚±990.05 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_1\n*   Debit of â‚±1,982.94 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_3\n*   Debit of â‚±51.92 to POS W/D SV MOVE IT MAKATI ATP from synthetic\_3\n*   Debit of â‚±1,319.98 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_5\n*   Debit of â‚±2,029.52 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_3\n*   Credit of â‚±41.47 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_5\n*   Debit of â‚±1,982.79 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_5\n*   Debit of â‚±754.38 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_5\n*   Credit of â‚±59.93 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_3\n*   Debit of â‚±758.20 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_5\n*   Credit of â‚±1,500.00 from Received from Other Bank from original\n*   Credit of â‚±2,154.14 from Received from Other Bank from synthetic\_1\n*   Debit of â‚±76.21 to POS W/D SV MOVE IT MAKATI ATP from synthetic\_3\n*   Debit of â‚±2,185.94 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_2\n*   Credit of â‚±64.74 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_2\n*   Credit of â‚±62.03 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_5\n*   Credit of â‚±53.28 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_1\n*   Debit of â‚±2,217.26 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_1\n*   Debit of â‚±74.61 to POS W/D SV MOVE IT MAKATI ATP from synthetic\_1\n*   Credit of â‚±1,704.32 from Received from Other Bank from synthetic\_3\n*   Credit of â‚±49.95 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_1\n*   Credit of â‚±1,443.11 from Received from Other Bank from synthetic\_1\n*   Debit of â‚±1,433.64 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_3\n*   Debit of â‚±923.94 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_3\n*   Credit of â‚±1,426.36 from Received from Other Bank from synthetic\_2\n*   Credit of â‚±2,150.55 from Received from Other Bank from synthetic\_3\n*   Credit of â‚±1,576.82 from Received from Other Bank from synthetic\_5\n*   Credit of â‚±1,500.00 from Received from Other Bank from original\n*   Credit of â‚±1,640.91 from Received from Other Bank from synthetic\_5\n*   Debit of â‚±1,500.00 to W/D FR SAV BDO/005542 54SM STAMESA BDO from original\n*   Credit of â‚±750.94 from Received from Other Bank from synthetic\_1\n*   Debit of â‚±1,500.00 to W/D FR SAV BDO/005542 54SM STAMESA BDO from original\n*   Credit of â‚±54.23 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_5\n*   Debit of â‚±1,249.83 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_5\n*   Debit of â‚±1,841.06 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_1\n*   Debit of â‚±30.14 to POS W/D SV MOVE IT MAKATI ATP from synthetic\_3\n*   Debit of â‚±1,959.53 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_1\n*   Debit of â‚±53.00 to POS W/D SV MOVE IT MAKATI ATP from original\n*   Credit of â‚±817.35 from Received from Other Bank from synthetic\_5\n*   Debit of â‚±53.00 to POS W/D SV MOVE IT MAKATI ATP from original\n*   Credit of â‚±69.41 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_2\n*   Credit of â‚±1,944.60 from Received from Other Bank from synthetic\_3\n*   Credit of â‚±31.72 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_5\n*   Credit of â‚±821.27 from Received from Other Bank from synthetic\_5\n*   Debit of â‚±969.50 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_1\n*   Credit of â‚±52.76 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_1\n*   Debit of â‚±1,500.00 to W/D FR SAV BDO/005542 54SM STAMESA BDO from original\n*   Credit of â‚±60.50 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_3\n*   Debit of â‚±53.00 to POS W/D SV MOVE IT MAKATI ATP from original\n*   Debit of â‚±1,414.29 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_1\n*   Credit of â‚±51.00 from POS W/D SV MOVE IT MAKATI ATP from original\n*   Credit of â‚±51.73 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_5\n*   Debit of â‚±1,500.00 to W/D FR SAV BDO/005542 54SM STAMESA BDO from original\n*   Debit of â‚±31.90 to POS W/D SV MOVE IT MAKATI ATP from synthetic\_3\n*   Credit of â‚±1,106.48 from Received from Other Bank from synthetic\_2\n*   Credit of â‚±1,500.00 from Received from Other Bank from original\n*   Debit of â‚±33.78 to POS W/D SV MOVE IT MAKATI ATP from synthetic\_5\n*   Credit of â‚±34.27 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_2\n*   Credit of â‚±30.56 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_3\n*   Debit of â‚±1,500.00 to W/D FR SAV BDO/005542 54SM STAMESA BDO from original\n*   Credit of â‚±58.77 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_5\n*   Credit of â‚±1,247.94 from Received from Other Bank from synthetic\_1\n*   Credit of â‚±51.62 from POS W/D SV MOVE IT MAKATI ATP from synthetic\_1\n*   Debit of â‚±752.08 to W/D FR SAV BDO/005542 54SM STAMESA BDO from synthetic\_1\n
Do you need any further breakdown or clarification on these transactions?
"
}
```
2025-06-15 17:12:50,773 - __main__ - INFO - User Query (en): average spending on some transactions
2025-06-15 17:12:52,056 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:12:52,057 - __main__ - INFO - Generated SQL Query: SELECT AVG(Amount) AS AverageSpending FROM bank_transactions WHERE "Credit/debit indicator" = 'Debit';
2025-06-15 17:12:52,063 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1
2025-06-15 17:12:53,526 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:12:53,526 - __main__ - INFO - Final Assistant Response (NL): Your average spending per transaction is â‚±400.47. Anything else you'd like to know about your spending habits?
2025-06-15 17:13:07,978 - __main__ - INFO - User Query (en): total amount i spent in transpo
2025-06-15 17:13:09,367 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:13:09,368 - __main__ - INFO - Generated SQL Query: SELECT SUM("Amount") FROM bank_transactions WHERE LOWER("Counter party name") LIKE '%transpo%' AND "Credit/debit indicator" = 'Debit';
2025-06-15 17:13:09,372 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1
2025-06-15 17:13:10,787 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:13:10,787 - __main__ - INFO - Final Assistant Response (NL): I checked for transactions related to 'transpo,' but I couldn't find any matching records in your transaction history.  Could you perhaps provide a more specific name or category for these transactions?  That would help me find the right information!
2025-06-15 17:13:23,735 - __main__ - INFO - User Query (en): total amount i spent in transpo rides, like moveit or angkas
2025-06-15 17:13:25,198 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:13:25,199 - __main__ - INFO - Generated SQL Query: SELECT SUM(COALESCE(Amount, 0)) FROM bank_transactions WHERE LOWER("Counter party name") LIKE '%moveit%' OR LOWER("Counter party name") LIKE '%angkas%' AND "Credit/debit indicator" = 'Debit';
2025-06-15 17:13:25,203 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1
2025-06-15 17:13:26,908 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:13:26,908 - __main__ - INFO - Final Assistant Response (NL): Okay, I checked and it looks like you've spent a total of â‚±9,412.84 on MoveIt and Angkas rides. Let me know if that looks right, or if you want me to check anything else!
2025-06-15 17:15:48,472 - __main__ - INFO - Flask Application started.
2025-06-15 17:15:48,485 - __main__ - INFO - Attempting to preload 'anonymized_transactions.csv'...
2025-06-15 17:15:48,496 - __main__ - INFO - Schema cache invalidated.
2025-06-15 17:15:48,496 - __main__ - INFO - CSV data loaded into table 'bank_transactions' with 2100 rows.
2025-06-15 17:15:48,496 - __main__ - INFO - Database schema retrieved and cached (newly).
2025-06-15 17:15:48,539 - __main__ - INFO - Philippine holidays fetched and cached (newly).
2025-06-15 17:15:49,599 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-15 17:16:01,487 - __main__ - INFO - User Query (es): cuanto gaste en moveit
2025-06-15 17:16:04,298 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:16:04,298 - __main__ - INFO - Generated SQL Query: SELECT SUM("Amount") FROM bank_transactions WHERE LOWER("Counter party name") LIKE '%moveit%' AND "Credit/debit indicator" = 'Debit';
2025-06-15 17:16:04,304 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1
2025-06-15 17:16:05,525 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:16:05,526 - __main__ - INFO - Final Assistant Response (NL): Â¡Hola! Parece que no tienes ningÃºn gasto registrado con 'MoveIt' en tus transacciones. Â¿Hay algo mÃ¡s en lo que te pueda ayudar?
2025-06-15 17:16:18,396 - __main__ - INFO - User Query (es): cuanto gaste en move it
2025-06-15 17:16:19,642 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:16:19,642 - __main__ - INFO - Generated SQL Query: SELECT SUM(COALESCE(Amount, 0)) FROM bank_transactions WHERE LOWER("Counter party name") LIKE '%move it%' AND "Credit/debit indicator" = 'Debit';
2025-06-15 17:16:19,650 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1
2025-06-15 17:16:21,194 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:16:21,195 - __main__ - INFO - Final Assistant Response (NL): Â¡Hola! He revisado tus transacciones y encontrÃ© que gastaste un total de â‚±30,208.54 en Move It. Â¿Quieres que desglose estos gastos por fecha o tienes alguna otra pregunta?
2025-06-15 17:16:34,237 - __main__ - INFO - User Query (es): cuanto en angkas
2025-06-15 17:16:35,744 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:16:35,744 - __main__ - INFO - Generated SQL Query: SELECT SUM("Amount") FROM bank_transactions WHERE LOWER("Counter party name") LIKE '%angkas%' AND "Credit/debit indicator" = 'Debit';
2025-06-15 17:16:35,748 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1
2025-06-15 17:16:37,087 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:16:37,087 - __main__ - INFO - Final Assistant Response (NL): Â¡Hola! RevisÃ© tus transacciones y encontrÃ© que gastaste un total de â‚±9,412.84 en Angkas. Â¿Hay algo mÃ¡s en lo que te pueda ayudar?
2025-06-15 17:17:08,460 - __main__ - INFO - User Query (es): que son transacciones donde aumentos sumos son mas altas
2025-06-15 17:17:10,119 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:17:10,119 - __main__ - INFO - Generated SQL Query: SELECT "Counter party name", SUM(Amount) AS Total_Amount FROM bank_transactions WHERE "Credit/debit indicator" = 'Credit' GROUP BY "Counter party name" ORDER BY Total_Amount DESC LIMIT 5;
2025-06-15 17:17:10,126 - __main__ - INFO - SQL Query Executed Successfully. Results count: 5
2025-06-15 17:17:12,394 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:17:12,395 - __main__ - INFO - Final Assistant Response (NL): Â¡Hola! AquÃ­ estÃ¡n las 5 principales transacciones donde tus aumentos suman mÃ¡s, ordenadas de mayor a menor:

*   Received from Other Bank: â‚±442,793.69
*   Received from BDO Account: â‚±47,479.27
*   POS W/D SV ANGKAS MANILA ATP: â‚±10,395.82
*   POS W/D SV MOVE IT MAKATI ATP: â‚±6,423.16
*   POS W/D SV GRAB MAKATI ATP: â‚±2,813.53

Â¿Te gustarÃ­a revisar alguna de estas transacciones en detalle o ver un perÃ­odo de tiempo especÃ­fico?
2025-06-15 17:17:32,260 - __main__ - INFO - User Query (es): explicame detalles con esos
2025-06-15 17:17:34,602 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:17:34,602 - __main__ - INFO - Generated SQL Query: SELECT "Book date", "Counter party name", "Amount", "Credit/debit indicator" FROM bank_transactions WHERE "Counter party name" IN ('Received from Other Bank', 'Received from BDO Account', 'POS W/D SV ANGKAS MANILA ATP', 'POS W/D SV MOVE IT MAKATI ATP', 'POS W/D SV GRAB MAKATI ATP') ORDER BY "Amount" DESC
2025-06-15 17:17:34,608 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1026
2025-06-15 17:18:02,674 - __main__ - ERROR - Error decoding JSON from Gemini: Unterminated string starting at: line 3 column 32 (char 366). Raw content: ```json
{
  "sql": "SELECT \"Book date\", \"Counter party name\", \"Amount\", \"Credit/debit indicator\" FROM bank_transactions WHERE \"Counter party name\" IN ('Received from Other Bank', 'Received from BDO Account', 'POS W/D SV ANGKAS MANILA ATP', 'POS W/D SV MOVE IT MAKATI ATP', 'POS W/D SV GRAB MAKATI ATP') ORDER BY \"Book date\" ASC;",
  "natural_language_response": "Â¡Claro! AquÃ­ tienes un desglose de las transacciones con las contrapartes mencionadas:\n\n*   **May 20, 2025**\n    *   POS W/D SV MOVE IT MAKATI ATP:  â‚±79.06 (Debit),  â‚±76.21 (Debit),  â‚±75.46 (Credit),  â‚±74.61 (Debit),  â‚±71.05 (Debit),  â‚±69.41 (Credit),  â‚±69.39 (Debit),  â‚±66.27 (Credit),  â‚±65.31 (Debit),  â‚±64.74 (Credit),  â‚±62.03 (Credit),  â‚±61.78 (Debit),  â‚±60.75 (Credit),  â‚±59.93 (Credit),  â‚±59.93 (Credit),  â‚±59.11 (Credit),  â‚±59.11 (Debit),  â‚±58.77 (Credit),  â‚±58.71 (Debit),  â‚±55.88 (Credit),  â‚±54.89 (Credit),  â‚±54.53 (Credit),  â‚±54.33 (Credit),  â‚±54.23 (Credit),  â‚±53.28 (Credit),  â‚±53.00 (Debit),  â‚±53.00 (Debit),  â‚±53.00 (Debit),  â‚±53.00 (Debit),  â‚±52.76 (Credit),  â‚±51.73 (Credit),  â‚±51.62 (Credit),  â‚±51.32 (Credit),  â‚±51.00 (Credit),  â‚±51.00 (Credit),  â‚±51.00 (Credit),  â‚±51.00 (Credit),  â‚±51.00 (Credit),  â‚±51.00 (Credit),  â‚±49.95 (Credit),  â‚±49.40 (Debit),  â‚±49.07 (Credit),  â‚±47.79 (Debit),  â‚±44.28 (Credit),  â‚±44.06 (Credit),  â‚±42.97 (Debit),  â‚±41.47 (Credit),  â‚±40.05 (Debit),  â‚±40.02 (Credit),  â‚±34.87 (Debit),  â‚±34.73 (Debit),  â‚±34.27 (Credit),  â‚±33.78 (Debit),  â‚±31.90 (Debit),  â‚±31.72 (Credit),  â‚±30.56 (Credit),  â‚±30.14 (Debit)\n    *   POS W/D SV ANGKAS MANILA ATP:  â‚±n/a\n\n*   **May 23, 2025**\n    *   POS W/D SV MOVE IT MAKATI ATP: â‚±74.17 (Debit), â‚±73.74 (Debit), â‚±73.43 (Debit), â‚±71.76 (Debit), â‚±70.75 (Debit), â‚±69.99 (Debit), â‚±69.76 (Debit), â‚±68.72 (Debit), â‚±68.40 (Debit), â‚±66.58 (Debit), â‚±66.07 (Debit), â‚±63.24 (Debit), â‚±62.59 (Debit), â‚±62.01 (Debit), â‚±52.33 (Debit), â‚±51.00 (Debit), â‚±51.00 (Debit), â‚±51.00 (Debit), â‚±51.00 (Debit), â‚±51.00 (Debit), â‚±50.90 (Debit), â‚±46.21 (Debit), â‚±36.37 (Debit), â‚±33.60 (Debit), â‚±30.40 (Debit), â‚±29.39 (Debit), â‚±28.91 (Debit), â‚±26.58 (Debit), â‚±26.23 (Debit)\n    *   Received from Other Bank: â‚±1,612.66 (Credit), â‚±1,534.34 (Credit), â‚±1,515.28 (Credit), â‚±1,236.66 (Credit), â‚±1,176.56 (Credit), â‚±1,100.00 (Credit), â‚±1,100.00 (Credit), â‚±813.35 (Credit), â‚±807.31 (Credit), â‚±771.23 (Credit), â‚±703.08 (Credit), â‚±674.97 (Credit)\n    *   POS W/D SV ANGKAS MANILA ATP:  â‚±n/a\n\n*   **May 26, 2025**\n    *   Received from Other Bank: â‚±5,009.34 (Credit), â‚±4,000.00 (Credit), â‚±3,818.38 (Credit), â‚±3,790.67 (Credit), â‚±3,289.09 (Credit), â‚±2,395.71 (Credit), â‚±1,217.16 (Credit), â‚±1,007.44 (Credit), â‚±824.84 (Credit), â‚±820.00 (Credit), â‚±731.57 (Credit), â‚±643.21 (Credit)\n    *   POS W/D SV MOVE IT MAKATI ATP: â‚±74.14 (Debit), â‚±73.95 (Debit), â‚±71.95 (Debit), â‚±71.88 (Debit), â‚±71.63 (Debit), â‚±71.22 (Debit), â‚±70.59 (Debit), â‚±69.74 (Debit), â‚±68.29 (Debit), â‚±67.97 (Debit), â‚±67.87 (Debit), â‚±66.90 (Debit), â‚±66.81 (Debit), â‚±66.08 (Debit), â‚±65.24 (Debit), â‚±65.23 (Debit), â‚±63.98 (Debit), â‚±63.77 (Debit), â‚±63.11 (Debit), â‚±62.49 (Debit), â‚±61.97 (Debit), â‚±61.71 (Debit), â‚±60.85 (Debit), â‚±59.85 (Debit), â‚±59.73 (Debit), â‚±58.22 (Debit), â‚±57.32 (Debit), â‚±55.54 (Debit), â‚±55.13 (Debit), â‚±54.67 (Debit), â‚±53.89 (Debit), â‚±52.00 (Debit), â‚±52.00 (Debit), â‚±52.00 (Debit), â‚±52.00 (Debit), â‚±50.00 (Debit), â‚±50.00 (Debit), â‚±50.00 (Debit), â‚±50.00 (Debit), â‚±50.00 (Debit), â‚±50.00 (Debit), â‚±50.00 (Debit), â‚±50.00 (Debit), â‚±50.00 (Debit), â‚±49.70 (Debit), â‚±49.30 (Debit), â‚±48.62 (Debit), â‚±48.21 (Debit), â‚±47.61 (Debit), â‚±46.78 (Debit), â‚±46.44 (Debit), â‚±45.70 (Debit), â‚±40.64 (Debit), â‚±40.10 (Debit), â‚±38.61 (Debit), â‚±37.54 (Debit), â‚±37.35 (Debit), â‚±33.81 (Debit), â‚±33.56 (Debit), â‚±32.65 (Debit), â‚±31.23 (Debit), â‚±31.23 (Debit), â‚±30.10 (Debit), â‚±28.66 (Debit), â‚±26.72 (Debit)\n    *   POS W/D SV ANGKAS MANILA ATP:  â‚±77.71 (Credit),  â‚±77.53 (Debit),  â‚±77.02 (Debit),  â‚±76.74 (Credit),  â‚±76.64 (Debit),  â‚±76.45 (Credit),  â‚±76.39 (Debit),  â‚±76.36 (Debit),  â‚±74.78 (Credit),  â‚±74.51 (Debit),  â‚±74.49 (Debit),  â‚±73.90 (Debit),  â‚±73.64 (Credit),  â‚±73.04 (Credit),  â‚±73.01 (Debit),  â‚±73.00 (Debit),  â‚±72.76 (Debit),  â‚±72.67 (Credit),  â‚±72.13 (Credit),  â‚±72.11 (Debit),  â‚±71.49 (Debit),  â‚±71.44 (Credit),  â‚±71.14 (Debit),  â‚±70.40 (Debit),  â‚±69.54 (Debit),  â‚±69.44 (Credit),  â‚±68.94 (Credit),  â‚±67.89 (Credit),  â‚±67.22 (Debit),  â‚±66.98 (Credit),  â‚±65.54 (Credit),  â‚±65.48 (Credit),  â‚±64.64 (Debit),  â‚±64.45 (Credit),  â‚±64.35 (Debit),  â‚±63.40 (Credit),  â‚±63.27 (Credit),  â‚±63.13 (Credit),  â‚±62.86 (Credit),  â‚±62.71 (Debit),  â‚±58.54 (Credit),  â‚±58.44 (Credit),  â‚±57.76 (Debit),  â‚±57.61 (Debit),  â‚±57.27 (Credit),  â‚±56.40 (Credit),  â‚±56.03 (Debit),  â‚±55.64 (Debit),  â‚±55.32 (Debit),  â‚±54.58 (Debit),  â‚±54.29 (Debit),  â‚±53.18 (Credit),  â‚±52.93 (Credit),  â‚±52.36 (Credit),  â‚±52.00 (Debit),  â‚±52.00 (Credit),  â‚±52.00 (Debit),  â‚±52.00 (Credit),  â‚±52.00 (Credit),  â‚±52.00 (Credit),  â‚±52.00 (Debit),  â‚±52.00 (Debit),  â‚±52.00 (Debit),  â‚±52.00 (Debit),  â‚±52.00 (Credit),  â‚±52.00 (Credit),  â‚±52.00 (Credit),  â‚±52.00 (Debit),  â‚±52.00 (Debit),  â‚±52.00 (Credit),  â‚±52.00 (Credit),  â‚±52.00 (Credit),  â‚±52.00 (Debit),  â‚±52.00 (Debit),  â‚±52.00 (Credit),  â‚±52.00 (Credit),  â‚±52.00 (Debit),  â‚±51.83 (Debit),  â‚±51.76 (Debit),  â‚±51.61 (Debit),  â‚±51.19 (Credit),  â‚±51.00 (Credit),  â‚±51.00 (Credit),  â‚±51.00 (Credit),  â‚±51.00 (Credit),  â‚±51.00 (Credit),  â‚±51.00 (Credit),  â‚±50.22 (Credit),  â‚±50.21 (Debit),  â‚±49.75 (Credit),  â‚±48.81 (Debit),  â‚±48.15 (Debit),  â‚±47.72 (Debit),  â‚±47.68 (Credit),  â‚±47.41 (Debit),  â‚±46.11 (Credit),  â‚±45.47 (Credit),  â‚±45.44 (Debit),  â‚±44.85 (Debit),  â‚±44.81 (Credit),  â‚±44.49 (Debit),  â‚±44.45 (Credit),  â‚±44.13 (Debit),  â‚±43.00 (Credit),  â‚±42.85 (Debit),  â‚±42.52 (Credit),  â‚±42.33 (Debit),  â‚±42.25 (Credit),  â‚±41.62 (Debit),  â‚±40.74 (Debit),  â‚±39.24 (Debit),  â‚±39.05 (Credit),  â‚±38.57 (Credit),  â‚±38.53 (Credit),  â‚±37.36 (Debit),  â‚±37.28 (Debit),  â‚±37.12 (Credit),  â‚±36.82 (Debit),  â‚±36.68 (Credit),  â‚±36.11 (Debit),  â‚±35.89 (Debit),  â‚±35.67 (Credit),  â‚±35.32 (Credit),  â‚±34.98 (Credit),  â‚±34.92 (Credit),  â‚±34.25 (Credit),  â‚±34.02 (Credit),  â‚±31.88 (Debit),  â‚±31.74 (Debit),  â‚±31.60 (Credit),  â‚±31.56 (Credit),  â‚±31.50 (Debit),  â‚±31.42 (Credit),  â‚±31.39 (Debit),  â‚±31.17 (Credit),  â‚±31.10 (Credit),  â‚±30.10 (Credit),  â‚±29.51 (Credit),  â‚±28.45 (Credit),  â‚±28.44 (Credit),  â‚±28.20 (Debit),  â‚±27.58 (Credit),  â‚±27.12 (Credit),  â‚±26.84 (Credit),  â‚±26.41 (Credit)\n\n*   **May 27, 2025**\n    *   Received from BDO Account: â‚±3,074.53 (Credit), â‚±2,975.73 (Credit), â‚±2,840.76 (Credit), â‚±2,636.29 (Credit), â‚±2,624.02 (Credit), â‚±2,467.06 (Credit), â‚±2,461.84 (Credit), â‚±2,453.13 (Credit), â‚±2,430.79 (Credit), â‚±2,374.28 (Credit), â‚±2,238.16 (Credit), â‚±2,150.00 (Credit), â‚±2,150.00 (Credit), â‚±2,150.00 (Credit), â‚±2,096.00 (Credit), â‚±1,858.27 (Credit), â‚±1,577.94 (Credit), â‚±1,321.90 (Credit)\n    *   POS W/D SV GRAB MAKATI ATP: â‚±295.82 (Debit), â‚±291.46 (Debit), â‚±269.03 (Debit), â‚±255.64 (Debit), â‚±255.43 (Debit), â‚±222.74 (Debit), â‚±221.36 (Debit), â‚±220.34 (Debit), â‚±219.75 (Debit), â‚±211.14 (Debit), â‚±205.00 (Debit), â‚±205.00 (Debit), â‚±205.00 (Debit), â‚±205.00 (Debit), â‚±205.00 (Debit), â‚±198.13 (Debit), â‚±181.20 (Debit), â‚±177.35 (Debit), â‚±170.70 (Debit), â‚±166.23 (Debit), â‚±161.94 (Debit), â‚±159.64 (Debit), â‚±148.53 (Debit), â‚±142.48 (Debit), â‚±127.06 (Debit), â‚±120.22 (Debit), â‚±119.73 (Debit), â‚±119.63 (Debit), â‚±112.33 (Debit), â‚±104.77 (Debit)\n    *   POS W/D SV ANGKAS MANILA ATP:  â‚±n/a\n\n*   **May 28, 2025**\n    *   Received from Other Bank: â‚±5,408.41 (Credit), â‚±5,265.35 (Credit), â‚±5,156.71 (Credit), â‚±5,009.66 (Credit), â‚±4,947.13 (Credit), â‚±4,642.19 (Credit), â‚±4,381.11 (Credit), â‚±4,333.49 (Credit), â‚±4,208.99 (Credit), â‚±4,022.10 (Credit), â‚±4,000.00 (Credit), â‚±4,000.00 (Credit), â‚±4,000.00 (Credit), â‚±4,000.00 (Credit), â‚±4,000.00 (Credit), â‚±3,615.67 (Credit), â‚±3,574.13 (Credit), â‚±3,442.46 (Credit), â‚±3,361.58 (Credit), â‚±3,239.20 (Credit), â‚±3,172.50 (Credit), â‚±3,055.40 (Credit), â‚±3,034.91 (Credit), â‚±2,626.31 (Credit), â‚±2,614.38 (Credit), â‚±2,528.94 (Credit), â‚±2,347.42 (Credit), â‚±2,231.11 (Credit), â‚±2,114.14 (Credit), â‚±2,039.45 (Credit)\n    *   POS W/D SV MOVE IT MAKATI ATP: â‚±77.01 (Debit), â‚±73.96 (Debit), â‚±73.80 (Debit), â‚±73.05 (Debit), â‚±67.15 (Debit), â‚±66.36 (Debit), â‚±66.22 (Debit), â‚±66.17 (Debit), â‚±63.84 (Debit), â‚±63.54 (Debit), â‚±62.16 (Debit), â‚±61.20 (Debit), â‚±60.86 (Debit), â‚±60.86 (Debit), â‚±59.61 (Debit), â‚±58.87 (Debit), â‚±57.88 (Debit), â‚±53.11 (Debit), â‚±53.05 (Debit), â‚±53.00 (Debit), â‚±53.00 (Debit), â‚±53.00 (Debit), â‚±53.00 (Debit), â‚±52.04 (Debit), â‚±52.00 (Debit), â‚±52.00 (Debit), â‚±52.00 (Debit), â‚±51.80 (Debit), â‚±48.79 (Debit), â‚±48.78 (Debit), â‚±48.77 (Debit), â‚±48.24 (Debit), â‚±47.63 (Debit), â‚±43.70 (Debit), â‚±43.08 (Debit), â‚±39.82 (Debit), â‚±37.24 (Debit), â‚±36.58 (Debit), â‚±35.12 (Debit), â‚±27.41 (Debit)\n    *   POS W/D SV ANGKAS MANILA ATP:  â‚±n/a\n\n*   **May 29, 2025**\n    *   Received from Other Bank: â‚±4,377.40 (Credit), â‚±4,370.89 (Credit), â‚±4,304.88 (Credit), â‚±4,101.03 (Credit), â‚±4,009.94 (Credit), â‚±3,879.82 (Credit), â‚±3,642.52 (Credit), â‚±3,558.36 (Credit), â‚±3,545.17 (Credit), â‚±3,471.45 (Credit), â‚±3,365.45 (Credit), â‚±3,329.56 (Credit), â‚±3,304.66 (Credit), â‚±3,295.38 (Credit), â‚±3,276.15 (Credit), â‚±3,195.12 (Credit), â‚±3,122.91 (Credit), â‚±3,095.88 (Credit), â‚±3,000.00 (Credit), â‚±3,000.00 (Credit), â‚±3,000.00 (Credit), â‚±3,000.00 (Credit), â‚±2,926.96 (Credit), â‚±2,833.07 (Credit)\n    *   POS W/D SV MOVE IT MAKATI ATP: â‚±136.03 (Credit), â‚±135.35 (Credit), â‚±132.89 (Credit), â‚±127.60 (Credit), â‚±127.35 (Credit), â‚±124.26 (Credit), â‚±123.76 (Credit), â‚±121.48 (Debit), â‚±118.60 (Credit), â‚±117.47 (Credit), â‚±116.10 (Credit), â‚±115.26 (Credit), â‚±112.64 (Debit), â‚±107.33 (Credit), â‚±106.04 (Credit), â‚±98.09 (Credit), â‚±97.56 (Credit), â‚±95.52 (Credit), â‚±95.00 (Credit), â‚±95.00 (Credit), â‚±95.00 (Credit), â‚±95.00 (Credit), â‚±95.00 (Credit), â‚±95.00 (Debit), â‚±95.00 (Credit), â‚±92.18 (Debit), â‚±87.68 (Credit), â‚±80.90 (Credit), â‚±79.27 (Debit), â‚±70.65 (Credit), â‚±73.05 (Credit), â‚±69.07 (Credit), â‚±68.97 (Credit), â‚±65.11 (Credit), â‚±63.48 (Credit), â‚±62.79 (Credit), â‚±60.62 (Credit), â‚±55.13 (Credit), â‚±52.61 (Credit), â‚±51.62 (Credit), â‚±49.26 (Credit), â‚±48.16 (Credit)\n    *   POS W/D SV ANGKAS MANILA ATP: â‚±137.39 (Debit), â‚±128.16 (Debit), â‚±122.85 (Credit), â‚±119.83 (Debit), â‚±114.38 (Credit), â‚±103.44 (Debit), â‚±103.09 (Credit), â‚±99.21 (Debit), â‚±98.00 (Credit), â‚±98.00 (Debit), â‚±98.00 (Debit), â‚±98.00 (Credit), â‚±96.22 (Credit), â‚±95.93 (Credit), â‚±93.94 (Debit), â‚±91.96 (Credit), â‚±88.45 (Credit), â‚±87.70 (Debit), â‚±79.58 (Credit), â‚±76.41 (Debit), â‚±59.19 (Credit), â‚±53.71 (Debit), â‚±51.44 (Credit)\n\n*   **June 02, 2025**\n    *   Received from Other Bank: â‚±2,866.71 (Credit), â‚±2,621.10 (Credit), â‚±2,570.64 (Credit), â‚±2,441.39 (Credit), â‚±2,168.23 (Credit), â‚±2,000.00 (Credit), â‚±2,000.00 (Credit), â‚±1,621.61 (Credit), â‚±1,290.71 (Credit), â‚±1,252.77 (Credit), â‚±1,206.55 (Credit), â‚±1,376.37 (Credit)\n    *   POS W/D SV GRAB MAKATI ATP: â‚±129.87 (Debit), â‚±121.85 (Debit), â‚±111.36 (Debit), â‚±107.18 (Debit), â‚±103.79 (Debit), â‚±102.72 (Debit), â‚±96.22 (Debit), â‚±88.00 (Debit), â‚±88.00 (Debit), â‚±77.41 (Debit), â‚±71.63 (Debit), â‚±50.29 (Debit)\n    *   POS W/D SV ANGKAS MANILA ATP:  â‚±n/a\n\n*   **June 03, 2025**\n    *   POS W/D SV ANGKAS MANILA ATP: â‚±165.22 (Credit), â‚±161.83 (Credit), â‚±160.75 (Debit), â‚±156.66 (Debit), â‚±156.26 (Credit), â‚±154.94 (Debit), â‚±154.52 (Debit), â‚±152.18 (Debit), â‚±152.12 (Credit), â‚±151.77 (Debit), â‚±148.92 (Debit), â‚±147.63 (Credit), â‚±145.42 (Debit), â‚±143.97 (Credit), â‚±143.83 (Credit), â‚±143.22 (Debit), â‚±142.48 (Credit), â‚±141.85 (Debit), â‚±141.37 (Debit), â‚±141.13 (Debit), â‚±140.31 (Debit), â‚±139.32 (Credit), â‚±137.98 (Credit), â‚±136.64 (Credit), â‚±135.20 (Credit), â‚±134.58 (Debit), â‚±133.01 (Debit), â‚±130.20 (Debit), â‚±128.66 (Credit), â‚±127.78 (Credit), â‚±127.65 (Credit), â‚±127.27 (Credit), â‚±124.59 (Credit), â‚±124.09 (Credit), â‚±122.87 (Credit), â‚±120.34 (Debit), â‚±118.37 (Credit), â‚±117.55 (Debit), â‚±115.31 (Credit), â‚±115.16 (Debit), â‚±113.90 (Debit), â‚±113.79 (Debit), â‚±112.30 (Debit), â‚±111.59 (Debit), â‚±111.01 (Credit), â‚±111.00 (Debit), â‚±111.00 (Debit), â‚±111.00 (Credit), â‚±111.00 (Credit), â‚±111.00 (Debit), â‚±111.00 (Debit), â‚±111.00 (Credit), â‚±111.00 (Credit), â‚±111.00 (Credit), â‚±111.00 (Credit), â‚±111.00 (Debit), â‚±111.00 (Credit), â‚±111.00 (Credit), â‚±111.00 (Debit), â‚±111.00 (Debit), â‚±110.48 (Credit), â‚±109.79 (Credit), â‚±109.51 (Credit), â‚±108.36 (Debit), â‚±107.77 (Debit), â‚±107.05 (Credit), â‚±106.65 (Debit), â‚±105.72 (Credit), â‚±105.00 (Credit), â‚±105.00 (Debit), â‚±105.00 (Debit), â‚±105.00 (Debit), â‚±105.00 (Debit), â‚±105.00 (Debit), â‚±105.00 (Debit), â‚±105.00 (Debit), â‚±105.00 (Debit), â‚±105.00 (Debit), â‚±105.00 (Debit), â‚±105.00 (Debit), â‚±104.04 (Debit), â‚±100.27 (Credit), â‚±100.20 (Credit), â‚±99.85 (Debit), â‚±98.37 (Credit), â‚±95.90 (Credit), â‚±95.48 (Debit), â‚±92.11 (Credit), â‚±90.76 (Debit), â‚±88.78 (Credit), â‚±88.41 (Credit), â‚±87.79 (Credit), â‚±87.13 (Credit), â‚±85.07 (Debit), â‚±84.12 (Debit), â‚±80.26 (Credit), â‚±78.72 (Debit), â‚±78.47 (Credit), â‚±71.32 (Credit), â‚±70.95 (Debit), â‚±69.81 (Credit), â‚±69.46 (Credit), â‚±67.59 (Debit), â‚±66.50 (Debit), â‚±66.44 (Debit), â‚±65.23 (Debit), â‚±64.88 (Credit), â‚±63.68 (Credit), â‚±59.40 (Debit), â‚±59.16 (Debit), â‚±58.09 (Debit), â‚±58.07 (Debit), â‚±58.00 (Debit), â‚±57.61 (Debit), â‚±56.78 (Debit), â‚±56.50 (Debit), â‚±54.81 (Debit), â‚±53.34 (Credit), â‚±53.29 (Debit)\n    *   POS W/D SV MOVE IT MAKATI ATP: â‚±157.35 (Debit), â‚±155.09 (Debit), â‚±155.04 (Debit), â‚±152.10 (Debit), â‚±151.77 (Debit), â‚±148.93 (Debit), â‚±148.48 (Debit), â‚±146.64 (Debit), â‚±144.85 (Debit), â‚±143.22 (Debit), â‚±141.37 (Debit), â‚±138.20 (Debit), â‚±137.90 (Debit), â‚±135.40 (Debit), â‚±133.04 (Debit), â‚±132.70 (Debit), â‚±131.58 (Debit), â‚±131.08 (Debit), â‚±130.60 (Debit), â‚±129.86 (Credit), â‚±128.27 (Debit), â‚±127.65 (Credit), â‚±127.35 (Credit), â‚±126.49 (Debit), â‚±126.45 (Credit), â‚±126.31 (Debit), â‚±125.72 (Debit), â‚±123.27 (Debit), â‚±122.36 (Debit), â‚±121.07 (Debit), â‚±117.43 (Debit), â‚±116.09 (Debit), â‚±116.08 (Debit), â‚±115.54 (Debit), â‚±112.63 (Debit), â‚±109.79 (Credit), â‚±107.77 (Debit), â‚±107.08 (Debit), â‚±105.00 (Debit), â‚±105.00 (
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_nonml.py", line 325, in get_gemini_response
    response_dict = json.loads(json_str)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 353, in raw_decode
    obj, end = self.scan_once(s, idx)
json.decoder.JSONDecodeError: Unterminated string starting at: line 3 column 32 (char 366)
2025-06-15 17:18:02,682 - __main__ - ERROR - Gemini failed at NL generation step after query execution. Error: Error decoding JSON from Gemini: Unterminated string starting at: line 3 column 32 (char 366). Raw: ```json
{
  "sql": "SELECT \"Book date\", \"Counter party name\", \"Amount\", \"Credit/debit indicator\" FROM bank_transactions WHERE \"Counter party name\" IN ('Received from Other Bank', 'Received from BDO Account', 'POS W/D SV ANGKAS MANILA ATP', 'POS W/D SV MOVE IT MAKATI ATP', 'POS W/D SV GRAB MAKATI ATP') ORDER BY \"Book date\" ASC;",
  "natural_language_response": "Â¡Claro! AquÃ­ tienes un desglose de las transacciones con las contrapartes mencionadas:\n\n*   **May 20, 2025**\n    *   POS W/D SV MOVE IT MAKATI ATP:  â‚±79.06 (Debit),  â‚±76.21 (Debit),  â‚±75.46 (Credit),  â‚±74.61 (Debit),  â‚±71.05 (Debit),  â‚±69.41 (Credit),  â‚±69.39 (Debit),  â‚±66.27 (Credit),  â‚±65.31 (Debit),  â‚±64.74 (Credit),  â‚±62.03 (Credit),  â‚±61.78 (Debit),  â‚±60.75 (Credit),  â‚±59.93 (Credit),  â‚±59.93 (Credit),  â‚±59.11 (Credit),  â‚±59.11 (Debit),  â‚±58.77 (Credit),  â‚±58.71 (Debit),  â‚±55.88 (Credit),  â‚±54.89 (Credit),  â‚±54.53 (Credit),  â‚±54.33 (Credit),  â‚±54.23 (Credit),  â‚±53.28 (Credit),  â‚±53.00 (Debit),  â‚±53.00 (Debit),  â‚±53.00 (Debit),  â‚±53.00 (Debit),  â‚±52.76 (Credit),  â‚±51.73 (Credit),  â‚±51.62 (Credit),  â‚±51.32 (Credit),  â‚±51.00 (Credit),  â‚±51.00 (Credit),  â‚±51.00 (Credit),  â‚±51.00 (Credit),  â‚±51.00 (Credit),  â‚±51.00 (Credit),  â‚±49.95 (Credit),  â‚±49.40 (Debit),  â‚±49.07 (Credit),  â‚±47.79 (Debit),  â‚±44.28 (Credit),  â‚±44.06 (Credit),  â‚±42.97 (Debit),  â‚±41.47 (Credit),  â‚±40.05 (Debit),  â‚±40.02 (Credit),  â‚±34.87 (Debit),  â‚±34.73 (Debit),  â‚±34.27 (Credit),  â‚±33.78 (Debit),  â‚±31.90 (Debit),  â‚±31.72 (Credit),  â‚±30.56 (Credit),  â‚±30.14 (Debit)\n    *   POS W/D SV ANGKAS MANILA ATP:  â‚±n/a\n\n*   **May 23, 2025**\n    *   POS W/D SV MOVE IT MAKATI ATP: â‚±74.17 (Debit), â‚±73.74 (Debit), â‚±73.43 (Debit), â‚±71.76 (Debit), â‚±70.75 (Debit), â‚±69.99 (Debit), â‚±69.76 (Debit), â‚±68.72 (Debit), â‚±68.40 (Debit), â‚±66.58 (Debit), â‚±66.07 (Debit), â‚±63.24 (Debit), â‚±62.59 (Debit), â‚±62.01 (Debit), â‚±52.33 (Debit), â‚±51.00 (Debit), â‚±51.00 (Debit), â‚±51.00 (Debit), â‚±51.00 (Debit), â‚±51.00 (Debit), â‚±50.90 (Debit), â‚±46.21 (Debit), â‚±36.37 (Debit), â‚±33.60 (Debit), â‚±30.40 (Debit), â‚±29.39 (Debit), â‚±28.91 (Debit), â‚±26.58 (Debit), â‚±26.23 (Debit)\n    *   Received from Other Bank: â‚±1,612.66 (Credit), â‚±1,534.34 (Credit), â‚±1,515.28 (Credit), â‚±1,236.66 (Credit), â‚±1,176.56 (Credit), â‚±1,100.00 (Credit), â‚±1,100.00 (Credit), â‚±813.35 (Credit), â‚±807.31 (Credit), â‚±771.23 (Credit), â‚±703.08 (Credit), â‚±674.97 (Credit)\n    *   POS W/D SV ANGKAS MANILA ATP:  â‚±n/a\n\n*   **May 26, 2025**\n    *   Received from Other Bank: â‚±5,009.34 (Credit), â‚±4,000.00 (Credit), â‚±3,818.38 (Credit), â‚±3,790.67 (Credit), â‚±3,289.09 (Credit), â‚±2,395.71 (Credit), â‚±1,217.16 (Credit), â‚±1,007.44 (Credit), â‚±824.84 (Credit), â‚±820.00 (Credit), â‚±731.57 (Credit), â‚±643.21 (Credit)\n    *   POS W/D SV MOVE IT MAKATI ATP: â‚±74.14 (Debit), â‚±73.95 (Debit), â‚±71.95 (Debit), â‚±71.88 (Debit), â‚±71.63 (Debit), â‚±71.22 (Debit), â‚±70.59 (Debit), â‚±69.74 (Debit), â‚±68.29 (Debit), â‚±67.97 (Debit), â‚±67.87 (Debit), â‚±66.90 (Debit), â‚±66.81 (Debit), â‚±66.08 (Debit), â‚±65.24 (Debit), â‚±65.23 (Debit), â‚±63.98 (Debit), â‚±63.77 (Debit), â‚±63.11 (Debit), â‚±62.49 (Debit), â‚±61.97 (Debit), â‚±61.71 (Debit), â‚±60.85 (Debit), â‚±59.85 (Debit), â‚±59.73 (Debit), â‚±58.22 (Debit), â‚±57.32 (Debit), â‚±55.54 (Debit), â‚±55.13 (Debit), â‚±54.67 (Debit), â‚±53.89 (Debit), â‚±52.00 (Debit), â‚±52.00 (Debit), â‚±52.00 (Debit), â‚±52.00 (Debit), â‚±50.00 (Debit), â‚±50.00 (Debit), â‚±50.00 (Debit), â‚±50.00 (Debit), â‚±50.00 (Debit), â‚±50.00 (Debit), â‚±50.00 (Debit), â‚±50.00 (Debit), â‚±50.00 (Debit), â‚±49.70 (Debit), â‚±49.30 (Debit), â‚±48.62 (Debit), â‚±48.21 (Debit), â‚±47.61 (Debit), â‚±46.78 (Debit), â‚±46.44 (Debit), â‚±45.70 (Debit), â‚±40.64 (Debit), â‚±40.10 (Debit), â‚±38.61 (Debit), â‚±37.54 (Debit), â‚±37.35 (Debit), â‚±33.81 (Debit), â‚±33.56 (Debit), â‚±32.65 (Debit), â‚±31.23 (Debit), â‚±31.23 (Debit), â‚±30.10 (Debit), â‚±28.66 (Debit), â‚±26.72 (Debit)\n    *   POS W/D SV ANGKAS MANILA ATP:  â‚±77.71 (Credit),  â‚±77.53 (Debit),  â‚±77.02 (Debit),  â‚±76.74 (Credit),  â‚±76.64 (Debit),  â‚±76.45 (Credit),  â‚±76.39 (Debit),  â‚±76.36 (Debit),  â‚±74.78 (Credit),  â‚±74.51 (Debit),  â‚±74.49 (Debit),  â‚±73.90 (Debit),  â‚±73.64 (Credit),  â‚±73.04 (Credit),  â‚±73.01 (Debit),  â‚±73.00 (Debit),  â‚±72.76 (Debit),  â‚±72.67 (Credit),  â‚±72.13 (Credit),  â‚±72.11 (Debit),  â‚±71.49 (Debit),  â‚±71.44 (Credit),  â‚±71.14 (Debit),  â‚±70.40 (Debit),  â‚±69.54 (Debit),  â‚±69.44 (Credit),  â‚±68.94 (Credit),  â‚±67.89 (Credit),  â‚±67.22 (Debit),  â‚±66.98 (Credit),  â‚±65.54 (Credit),  â‚±65.48 (Credit),  â‚±64.64 (Debit),  â‚±64.45 (Credit),  â‚±64.35 (Debit),  â‚±63.40 (Credit),  â‚±63.27 (Credit),  â‚±63.13 (Credit),  â‚±62.86 (Credit),  â‚±62.71 (Debit),  â‚±58.54 (Credit),  â‚±58.44 (Credit),  â‚±57.76 (Debit),  â‚±57.61 (Debit),  â‚±57.27 (Credit),  â‚±56.40 (Credit),  â‚±56.03 (Debit),  â‚±55.64 (Debit),  â‚±55.32 (Debit),  â‚±54.58 (Debit),  â‚±54.29 (Debit),  â‚±53.18 (Credit),  â‚±52.93 (Credit),  â‚±52.36 (Credit),  â‚±52.00 (Debit),  â‚±52.00 (Credit),  â‚±52.00 (Debit),  â‚±52.00 (Credit),  â‚±52.00 (Credit),  â‚±52.00 (Credit),  â‚±52.00 (Debit),  â‚±52.00 (Debit),  â‚±52.00 (Debit),  â‚±52.00 (Debit),  â‚±52.00 (Credit),  â‚±52.00 (Credit),  â‚±52.00 (Credit),  â‚±52.00 (Debit),  â‚±52.00 (Debit),  â‚±52.00 (Credit),  â‚±52.00 (Credit),  â‚±52.00 (Credit),  â‚±52.00 (Debit),  â‚±52.00 (Debit),  â‚±52.00 (Credit),  â‚±52.00 (Credit),  â‚±52.00 (Debit),  â‚±51.83 (Debit),  â‚±51.76 (Debit),  â‚±51.61 (Debit),  â‚±51.19 (Credit),  â‚±51.00 (Credit),  â‚±51.00 (Credit),  â‚±51.00 (Credit),  â‚±51.00 (Credit),  â‚±51.00 (Credit),  â‚±51.00 (Credit),  â‚±50.22 (Credit),  â‚±50.21 (Debit),  â‚±49.75 (Credit),  â‚±48.81 (Debit),  â‚±48.15 (Debit),  â‚±47.72 (Debit),  â‚±47.68 (Credit),  â‚±47.41 (Debit),  â‚±46.11 (Credit),  â‚±45.47 (Credit),  â‚±45.44 (Debit),  â‚±44.85 (Debit),  â‚±44.81 (Credit),  â‚±44.49 (Debit),  â‚±44.45 (Credit),  â‚±44.13 (Debit),  â‚±43.00 (Credit),  â‚±42.85 (Debit),  â‚±42.52 (Credit),  â‚±42.33 (Debit),  â‚±42.25 (Credit),  â‚±41.62 (Debit),  â‚±40.74 (Debit),  â‚±39.24 (Debit),  â‚±39.05 (Credit),  â‚±38.57 (Credit),  â‚±38.53 (Credit),  â‚±37.36 (Debit),  â‚±37.28 (Debit),  â‚±37.12 (Credit),  â‚±36.82 (Debit),  â‚±36.68 (Credit),  â‚±36.11 (Debit),  â‚±35.89 (Debit),  â‚±35.67 (Credit),  â‚±35.32 (Credit),  â‚±34.98 (Credit),  â‚±34.92 (Credit),  â‚±34.25 (Credit),  â‚±34.02 (Credit),  â‚±31.88 (Debit),  â‚±31.74 (Debit),  â‚±31.60 (Credit),  â‚±31.56 (Credit),  â‚±31.50 (Debit),  â‚±31.42 (Credit),  â‚±31.39 (Debit),  â‚±31.17 (Credit),  â‚±31.10 (Credit),  â‚±30.10 (Credit),  â‚±29.51 (Credit),  â‚±28.45 (Credit),  â‚±28.44 (Credit),  â‚±28.20 (Debit),  â‚±27.58 (Credit),  â‚±27.12 (Credit),  â‚±26.84 (Credit),  â‚±26.41 (Credit)\n\n*   **May 27, 2025**\n    *   Received from BDO Account: â‚±3,074.53 (Credit), â‚±2,975.73 (Credit), â‚±2,840.76 (Credit), â‚±2,636.29 (Credit), â‚±2,624.02 (Credit), â‚±2,467.06 (Credit), â‚±2,461.84 (Credit), â‚±2,453.13 (Credit), â‚±2,430.79 (Credit), â‚±2,374.28 (Credit), â‚±2,238.16 (Credit), â‚±2,150.00 (Credit), â‚±2,150.00 (Credit), â‚±2,150.00 (Credit), â‚±2,096.00 (Credit), â‚±1,858.27 (Credit), â‚±1,577.94 (Credit), â‚±1,321.90 (Credit)\n    *   POS W/D SV GRAB MAKATI ATP: â‚±295.82 (Debit), â‚±291.46 (Debit), â‚±269.03 (Debit), â‚±255.64 (Debit), â‚±255.43 (Debit), â‚±222.74 (Debit), â‚±221.36 (Debit), â‚±220.34 (Debit), â‚±219.75 (Debit), â‚±211.14 (Debit), â‚±205.00 (Debit), â‚±205.00 (Debit), â‚±205.00 (Debit), â‚±205.00 (Debit), â‚±205.00 (Debit), â‚±198.13 (Debit), â‚±181.20 (Debit), â‚±177.35 (Debit), â‚±170.70 (Debit), â‚±166.23 (Debit), â‚±161.94 (Debit), â‚±159.64 (Debit), â‚±148.53 (Debit), â‚±142.48 (Debit), â‚±127.06 (Debit), â‚±120.22 (Debit), â‚±119.73 (Debit), â‚±119.63 (Debit), â‚±112.33 (Debit), â‚±104.77 (Debit)\n    *   POS W/D SV ANGKAS MANILA ATP:  â‚±n/a\n\n*   **May 28, 2025**\n    *   Received from Other Bank: â‚±5,408.41 (Credit), â‚±5,265.35 (Credit), â‚±5,156.71 (Credit), â‚±5,009.66 (Credit), â‚±4,947.13 (Credit), â‚±4,642.19 (Credit), â‚±4,381.11 (Credit), â‚±4,333.49 (Credit), â‚±4,208.99 (Credit), â‚±4,022.10 (Credit), â‚±4,000.00 (Credit), â‚±4,000.00 (Credit), â‚±4,000.00 (Credit), â‚±4,000.00 (Credit), â‚±4,000.00 (Credit), â‚±3,615.67 (Credit), â‚±3,574.13 (Credit), â‚±3,442.46 (Credit), â‚±3,361.58 (Credit), â‚±3,239.20 (Credit), â‚±3,172.50 (Credit), â‚±3,055.40 (Credit), â‚±3,034.91 (Credit), â‚±2,626.31 (Credit), â‚±2,614.38 (Credit), â‚±2,528.94 (Credit), â‚±2,347.42 (Credit), â‚±2,231.11 (Credit), â‚±2,114.14 (Credit), â‚±2,039.45 (Credit)\n    *   POS W/D SV MOVE IT MAKATI ATP: â‚±77.01 (Debit), â‚±73.96 (Debit), â‚±73.80 (Debit), â‚±73.05 (Debit), â‚±67.15 (Debit), â‚±66.36 (Debit), â‚±66.22 (Debit), â‚±66.17 (Debit), â‚±63.84 (Debit), â‚±63.54 (Debit), â‚±62.16 (Debit), â‚±61.20 (Debit), â‚±60.86 (Debit), â‚±60.86 (Debit), â‚±59.61 (Debit), â‚±58.87 (Debit), â‚±57.88 (Debit), â‚±53.11 (Debit), â‚±53.05 (Debit), â‚±53.00 (Debit), â‚±53.00 (Debit), â‚±53.00 (Debit), â‚±53.00 (Debit), â‚±52.04 (Debit), â‚±52.00 (Debit), â‚±52.00 (Debit), â‚±52.00 (Debit), â‚±51.80 (Debit), â‚±48.79 (Debit), â‚±48.78 (Debit), â‚±48.77 (Debit), â‚±48.24 (Debit), â‚±47.63 (Debit), â‚±43.70 (Debit), â‚±43.08 (Debit), â‚±39.82 (Debit), â‚±37.24 (Debit), â‚±36.58 (Debit), â‚±35.12 (Debit), â‚±27.41 (Debit)\n    *   POS W/D SV ANGKAS MANILA ATP:  â‚±n/a\n\n*   **May 29, 2025**\n    *   Received from Other Bank: â‚±4,377.40 (Credit), â‚±4,370.89 (Credit), â‚±4,304.88 (Credit), â‚±4,101.03 (Credit), â‚±4,009.94 (Credit), â‚±3,879.82 (Credit), â‚±3,642.52 (Credit), â‚±3,558.36 (Credit), â‚±3,545.17 (Credit), â‚±3,471.45 (Credit), â‚±3,365.45 (Credit), â‚±3,329.56 (Credit), â‚±3,304.66 (Credit), â‚±3,295.38 (Credit), â‚±3,276.15 (Credit), â‚±3,195.12 (Credit), â‚±3,122.91 (Credit), â‚±3,095.88 (Credit), â‚±3,000.00 (Credit), â‚±3,000.00 (Credit), â‚±3,000.00 (Credit), â‚±3,000.00 (Credit), â‚±2,926.96 (Credit), â‚±2,833.07 (Credit)\n    *   POS W/D SV MOVE IT MAKATI ATP: â‚±136.03 (Credit), â‚±135.35 (Credit), â‚±132.89 (Credit), â‚±127.60 (Credit), â‚±127.35 (Credit), â‚±124.26 (Credit), â‚±123.76 (Credit), â‚±121.48 (Debit), â‚±118.60 (Credit), â‚±117.47 (Credit), â‚±116.10 (Credit), â‚±115.26 (Credit), â‚±112.64 (Debit), â‚±107.33 (Credit), â‚±106.04 (Credit), â‚±98.09 (Credit), â‚±97.56 (Credit), â‚±95.52 (Credit), â‚±95.00 (Credit), â‚±95.00 (Credit), â‚±95.00 (Credit), â‚±95.00 (Credit), â‚±95.00 (Credit), â‚±95.00 (Debit), â‚±95.00 (Credit), â‚±92.18 (Debit), â‚±87.68 (Credit), â‚±80.90 (Credit), â‚±79.27 (Debit), â‚±70.65 (Credit), â‚±73.05 (Credit), â‚±69.07 (Credit), â‚±68.97 (Credit), â‚±65.11 (Credit), â‚±63.48 (Credit), â‚±62.79 (Credit), â‚±60.62 (Credit), â‚±55.13 (Credit), â‚±52.61 (Credit), â‚±51.62 (Credit), â‚±49.26 (Credit), â‚±48.16 (Credit)\n    *   POS W/D SV ANGKAS MANILA ATP: â‚±137.39 (Debit), â‚±128.16 (Debit), â‚±122.85 (Credit), â‚±119.83 (Debit), â‚±114.38 (Credit), â‚±103.44 (Debit), â‚±103.09 (Credit), â‚±99.21 (Debit), â‚±98.00 (Credit), â‚±98.00 (Debit), â‚±98.00 (Debit), â‚±98.00 (Credit), â‚±96.22 (Credit), â‚±95.93 (Credit), â‚±93.94 (Debit), â‚±91.96 (Credit), â‚±88.45 (Credit), â‚±87.70 (Debit), â‚±79.58 (Credit), â‚±76.41 (Debit), â‚±59.19 (Credit), â‚±53.71 (Debit), â‚±51.44 (Credit)\n\n*   **June 02, 2025**\n    *   Received from Other Bank: â‚±2,866.71 (Credit), â‚±2,621.10 (Credit), â‚±2,570.64 (Credit), â‚±2,441.39 (Credit), â‚±2,168.23 (Credit), â‚±2,000.00 (Credit), â‚±2,000.00 (Credit), â‚±1,621.61 (Credit), â‚±1,290.71 (Credit), â‚±1,252.77 (Credit), â‚±1,206.55 (Credit), â‚±1,376.37 (Credit)\n    *   POS W/D SV GRAB MAKATI ATP: â‚±129.87 (Debit), â‚±121.85 (Debit), â‚±111.36 (Debit), â‚±107.18 (Debit), â‚±103.79 (Debit), â‚±102.72 (Debit), â‚±96.22 (Debit), â‚±88.00 (Debit), â‚±88.00 (Debit), â‚±77.41 (Debit), â‚±71.63 (Debit), â‚±50.29 (Debit)\n    *   POS W/D SV ANGKAS MANILA ATP:  â‚±n/a\n\n*   **June 03, 2025**\n    *   POS W/D SV ANGKAS MANILA ATP: â‚±165.22 (Credit), â‚±161.83 (Credit), â‚±160.75 (Debit), â‚±156.66 (Debit), â‚±156.26 (Credit), â‚±154.94 (Debit), â‚±154.52 (Debit), â‚±152.18 (Debit), â‚±152.12 (Credit), â‚±151.77 (Debit), â‚±148.92 (Debit), â‚±147.63 (Credit), â‚±145.42 (Debit), â‚±143.97 (Credit), â‚±143.83 (Credit), â‚±143.22 (Debit), â‚±142.48 (Credit), â‚±141.85 (Debit), â‚±141.37 (Debit), â‚±141.13 (Debit), â‚±140.31 (Debit), â‚±139.32 (Credit), â‚±137.98 (Credit), â‚±136.64 (Credit), â‚±135.20 (Credit), â‚±134.58 (Debit), â‚±133.01 (Debit), â‚±130.20 (Debit), â‚±128.66 (Credit), â‚±127.78 (Credit), â‚±127.65 (Credit), â‚±127.27 (Credit), â‚±124.59 (Credit), â‚±124.09 (Credit), â‚±122.87 (Credit), â‚±120.34 (Debit), â‚±118.37 (Credit), â‚±117.55 (Debit), â‚±115.31 (Credit), â‚±115.16 (Debit), â‚±113.90 (Debit), â‚±113.79 (Debit), â‚±112.30 (Debit), â‚±111.59 (Debit), â‚±111.01 (Credit), â‚±111.00 (Debit), â‚±111.00 (Debit), â‚±111.00 (Credit), â‚±111.00 (Credit), â‚±111.00 (Debit), â‚±111.00 (Debit), â‚±111.00 (Credit), â‚±111.00 (Credit), â‚±111.00 (Credit), â‚±111.00 (Credit), â‚±111.00 (Debit), â‚±111.00 (Credit), â‚±111.00 (Credit), â‚±111.00 (Debit), â‚±111.00 (Debit), â‚±110.48 (Credit), â‚±109.79 (Credit), â‚±109.51 (Credit), â‚±108.36 (Debit), â‚±107.77 (Debit), â‚±107.05 (Credit), â‚±106.65 (Debit), â‚±105.72 (Credit), â‚±105.00 (Credit), â‚±105.00 (Debit), â‚±105.00 (Debit), â‚±105.00 (Debit), â‚±105.00 (Debit), â‚±105.00 (Debit), â‚±105.00 (Debit), â‚±105.00 (Debit), â‚±105.00 (Debit), â‚±105.00 (Debit), â‚±105.00 (Debit), â‚±105.00 (Debit), â‚±104.04 (Debit), â‚±100.27 (Credit), â‚±100.20 (Credit), â‚±99.85 (Debit), â‚±98.37 (Credit), â‚±95.90 (Credit), â‚±95.48 (Debit), â‚±92.11 (Credit), â‚±90.76 (Debit), â‚±88.78 (Credit), â‚±88.41 (Credit), â‚±87.79 (Credit), â‚±87.13 (Credit), â‚±85.07 (Debit), â‚±84.12 (Debit), â‚±80.26 (Credit), â‚±78.72 (Debit), â‚±78.47 (Credit), â‚±71.32 (Credit), â‚±70.95 (Debit), â‚±69.81 (Credit), â‚±69.46 (Credit), â‚±67.59 (Debit), â‚±66.50 (Debit), â‚±66.44 (Debit), â‚±65.23 (Debit), â‚±64.88 (Credit), â‚±63.68 (Credit), â‚±59.40 (Debit), â‚±59.16 (Debit), â‚±58.09 (Debit), â‚±58.07 (Debit), â‚±58.00 (Debit), â‚±57.61 (Debit), â‚±56.78 (Debit), â‚±56.50 (Debit), â‚±54.81 (Debit), â‚±53.34 (Credit), â‚±53.29 (Debit)\n    *   POS W/D SV MOVE IT MAKATI ATP: â‚±157.35 (Debit), â‚±155.09 (Debit), â‚±155.04 (Debit), â‚±152.10 (Debit), â‚±151.77 (Debit), â‚±148.93 (Debit), â‚±148.48 (Debit), â‚±146.64 (Debit), â‚±144.85 (Debit), â‚±143.22 (Debit), â‚±141.37 (Debit), â‚±138.20 (Debit), â‚±137.90 (Debit), â‚±135.40 (Debit), â‚±133.04 (Debit), â‚±132.70 (Debit), â‚±131.58 (Debit), â‚±131.08 (Debit), â‚±130.60 (Debit), â‚±129.86 (Credit), â‚±128.27 (Debit), â‚±127.65 (Credit), â‚±127.35 (Credit), â‚±126.49 (Debit), â‚±126.45 (Credit), â‚±126.31 (Debit), â‚±125.72 (Debit), â‚±123.27 (Debit), â‚±122.36 (Debit), â‚±121.07 (Debit), â‚±117.43 (Debit), â‚±116.09 (Debit), â‚±116.08 (Debit), â‚±115.54 (Debit), â‚±112.63 (Debit), â‚±109.79 (Credit), â‚±107.77 (Debit), â‚±107.08 (Debit), â‚±105.00 (Debit), â‚±105.00 (
2025-06-15 17:18:32,613 - __main__ - INFO - Flask Application started.
2025-06-15 17:18:32,631 - __main__ - INFO - Database connection established.
2025-06-15 17:18:32,631 - __main__ - INFO - Database schema retrieved and cached.
2025-06-15 17:18:32,693 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-15 17:20:29,996 - __main__ - INFO - Flask Application started.
2025-06-15 17:20:30,012 - __main__ - INFO - Database connection established.
2025-06-15 17:20:30,013 - __main__ - INFO - Database schema retrieved and cached.
2025-06-15 17:20:30,060 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-15 17:20:31,157 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-15 17:20:34,655 - __main__ - INFO - User Query (es): hola
2025-06-15 17:20:39,721 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:20:39,722 - __main__ - INFO - Generated SQL Query: None
2025-06-15 17:20:39,723 - __main__ - INFO - Database connection established.
2025-06-15 17:20:39,724 - __main__ - CRITICAL - An unexpected critical error occurred: argument 1 must be str, not None
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_nonml.py", line 318, in chat
    cursor.execute(sql_query)
TypeError: argument 1 must be str, not None
2025-06-15 17:20:56,055 - __main__ - INFO - User Query (es): hola necesito ayuda con mi tarjeta
2025-06-15 17:20:57,130 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:20:57,131 - __main__ - INFO - Generated SQL Query: SELECT 'Â¡Hola! Â¿En quÃ© puedo ayudarte hoy con tu tarjeta? Â¿Hay algo especÃ­fico que te preocupa o que te gustarÃ­a revisar?' AS saludo;
2025-06-15 17:20:57,132 - __main__ - INFO - Database connection established.
2025-06-15 17:20:57,132 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x108dc84b0>]
2025-06-15 17:20:58,285 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:20:58,286 - __main__ - INFO - Final Assistant Response (NL): Â¡Hola! Â¿En quÃ© puedo ayudarte hoy con tu tarjeta? Â¿Hay algo especÃ­fico que te preocupa o que te gustarÃ­a revisar?
2025-06-15 17:21:27,996 - __main__ - INFO - User Query (es): si, digame las fechas en las transacciones (rangos specificamente)
2025-06-15 17:21:29,519 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:21:29,520 - __main__ - INFO - Generated SQL Query: SELECT DISTINCT "Book date" FROM transactions ORDER BY "Book date" ASC;
2025-06-15 17:21:29,522 - __main__ - INFO - Database connection established.
2025-06-15 17:21:29,525 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x108dc8bd0>, <sqlite3.Row object at 0x108ead270>, <sqlite3.Row object at 0x108ead170>, <sqlite3.Row object at 0x108ead130>, <sqlite3.Row object at 0x108ead030>, <sqlite3.Row object at 0x108dc8530>, <sqlite3.Row object at 0x108ead110>, <sqlite3.Row object at 0x108ead0b0>, <sqlite3.Row object at 0x108ead0f0>, <sqlite3.Row object at 0x108ead250>, <sqlite3.Row object at 0x108ead0d0>, <sqlite3.Row object at 0x108ead290>, <sqlite3.Row object at 0x108ead2d0>, <sqlite3.Row object at 0x108ead050>, <sqlite3.Row object at 0x108ead070>, <sqlite3.Row object at 0x108ead150>]
2025-06-15 17:21:31,779 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:21:31,779 - __main__ - INFO - Final Assistant Response (NL): Â¡Claro! AquÃ­ estÃ¡n las fechas en las que se registraron transacciones en tu cuenta, ordenadas cronolÃ³gicamente:

*   20 de mayo de 2025
*   23 de mayo de 2025
*   26 de mayo de 2025
*   27 de mayo de 2025
*   28 de mayo de 2025
*   29 de mayo de 2025
*   30 de mayo de 2025
*   31 de mayo de 2025
*   2 de junio de 2025
*   3 de junio de 2025
*   4 de junio de 2025
*   5 de junio de 2025
*   9 de junio de 2025
*   10 de junio de 2025
*   11 de junio de 2025
*   13 de junio de 2025

Â¿Hay algÃºn rango de fechas especÃ­fico que te interese revisar con mÃ¡s detalle? Puedo ayudarte a desglosar las transacciones de esos dÃ­as.
2025-06-15 17:21:52,253 - __main__ - INFO - User Query (es): ok. que tienen gastos mas altas en total
2025-06-15 17:21:53,486 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:21:53,487 - __main__ - INFO - Generated SQL Query: SELECT "Book date" FROM transactions WHERE "Credit/debit indicator" = 'Debit' GROUP BY "Book date" ORDER BY SUM(Amount) DESC LIMIT 1;
2025-06-15 17:21:53,489 - __main__ - INFO - Database connection established.
2025-06-15 17:21:53,492 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x108ead030>]
2025-06-15 17:21:54,609 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:21:54,609 - __main__ - INFO - Final Assistant Response (NL): El dÃ­a con los gastos mÃ¡s altos en total fue el 27 de mayo de 2025. Â¿Quieres que veamos los detalles de ese dÃ­a?
2025-06-15 17:22:06,114 - __main__ - INFO - User Query (es): si, digame/explicame
2025-06-15 17:22:07,816 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:22:07,817 - __main__ - INFO - Generated SQL Query: SELECT * FROM transactions WHERE "Book date" = '2025-05-27';
2025-06-15 17:22:07,819 - __main__ - INFO - Database connection established.
2025-06-15 17:22:07,821 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x108ead0d0>, <sqlite3.Row object at 0x108ead270>, <sqlite3.Row object at 0x108ead250>, <sqlite3.Row object at 0x108ead0b0>, <sqlite3.Row object at 0x108ead4d0>, <sqlite3.Row object at 0x108ead130>, <sqlite3.Row object at 0x108ead330>, <sqlite3.Row object at 0x108ead210>, <sqlite3.Row object at 0x108ead350>, <sqlite3.Row object at 0x108ead430>, <sqlite3.Row object at 0x108ead290>, <sqlite3.Row object at 0x108ead3f0>, <sqlite3.Row object at 0x108ead390>, <sqlite3.Row object at 0x108ead410>, <sqlite3.Row object at 0x108ead450>, <sqlite3.Row object at 0x108ead490>, <sqlite3.Row object at 0x108ead4f0>, <sqlite3.Row object at 0x108ead530>, <sqlite3.Row object at 0x108ead570>, <sqlite3.Row object at 0x108ead5b0>, <sqlite3.Row object at 0x108ead5f0>, <sqlite3.Row object at 0x108ead630>, <sqlite3.Row object at 0x108ead670>, <sqlite3.Row object at 0x108ead6b0>, <sqlite3.Row object at 0x108ead6f0>, <sqlite3.Row object at 0x108ead730>, <sqlite3.Row object at 0x108ead770>, <sqlite3.Row object at 0x108ead7b0>, <sqlite3.Row object at 0x108ead7f0>, <sqlite3.Row object at 0x108ead830>, <sqlite3.Row object at 0x108ead870>, <sqlite3.Row object at 0x108ead8b0>, <sqlite3.Row object at 0x108ead8f0>, <sqlite3.Row object at 0x108ead930>, <sqlite3.Row object at 0x108ead970>, <sqlite3.Row object at 0x108ead9b0>, <sqlite3.Row object at 0x108ead9f0>, <sqlite3.Row object at 0x108eada30>, <sqlite3.Row object at 0x108eada70>, <sqlite3.Row object at 0x108eadab0>, <sqlite3.Row object at 0x108eadaf0>, <sqlite3.Row object at 0x108eadb30>, <sqlite3.Row object at 0x108eadb70>, <sqlite3.Row object at 0x108eadbb0>, <sqlite3.Row object at 0x108eadbf0>, <sqlite3.Row object at 0x108eadc30>, <sqlite3.Row object at 0x108eadc70>, <sqlite3.Row object at 0x108eadcb0>, <sqlite3.Row object at 0x108eadcf0>, <sqlite3.Row object at 0x108eadd30>, <sqlite3.Row object at 0x108eadd70>, <sqlite3.Row object at 0x108eaddb0>, <sqlite3.Row object at 0x108eaddf0>, <sqlite3.Row object at 0x108eade30>, <sqlite3.Row object at 0x108eade70>, <sqlite3.Row object at 0x108eadeb0>, <sqlite3.Row object at 0x108eadef0>, <sqlite3.Row object at 0x108eadf30>, <sqlite3.Row object at 0x108eadf70>, <sqlite3.Row object at 0x108eadfb0>, <sqlite3.Row object at 0x108ed8030>, <sqlite3.Row object at 0x108ed8070>, <sqlite3.Row object at 0x108ed80b0>, <sqlite3.Row object at 0x108ed80f0>, <sqlite3.Row object at 0x108ed8130>, <sqlite3.Row object at 0x108ed8170>, <sqlite3.Row object at 0x108ed81b0>, <sqlite3.Row object at 0x108ed81f0>, <sqlite3.Row object at 0x108ed8230>, <sqlite3.Row object at 0x108ed8270>, <sqlite3.Row object at 0x108ed82b0>, <sqlite3.Row object at 0x108ed82f0>, <sqlite3.Row object at 0x108ed8330>, <sqlite3.Row object at 0x108ed8370>, <sqlite3.Row object at 0x108ed83b0>, <sqlite3.Row object at 0x108ed83f0>, <sqlite3.Row object at 0x108ed8430>, <sqlite3.Row object at 0x108ed8470>, <sqlite3.Row object at 0x108ed84b0>, <sqlite3.Row object at 0x108ed84f0>, <sqlite3.Row object at 0x108ed8530>, <sqlite3.Row object at 0x108ed8570>, <sqlite3.Row object at 0x108ed85b0>, <sqlite3.Row object at 0x108ed85f0>]
2025-06-15 17:22:10,483 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:22:10,483 - __main__ - INFO - Final Assistant Response (NL): El 27 de mayo de 2025, tuviste varios gastos, incluyendo retiros de efectivo de BDO, pagos con BDOPAY en varios establecimientos P2MI, recargas de saldo para diferentes nÃºmeros de telÃ©fono, y compras en CHOOKS SM QUEZON y GRAB MAKATI.  Â¿Te gustarÃ­a que agrupe estos gastos por tipo o por establecimiento para que sea mÃ¡s fÃ¡cil revisarlos?
2025-06-15 17:22:28,263 - __main__ - INFO - User Query (es): que significa con esos
2025-06-15 17:22:30,745 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:22:30,745 - __main__ - INFO - Generated SQL Query: SELECT DISTINCT "Counter party name", "Counter party account number" FROM transactions WHERE "Book date" = '2025-05-27';
2025-06-15 17:22:30,746 - __main__ - INFO - Database connection established.
2025-06-15 17:22:30,748 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x108ead290>, <sqlite3.Row object at 0x108ead210>, <sqlite3.Row object at 0x108ead390>, <sqlite3.Row object at 0x108ead490>, <sqlite3.Row object at 0x108ead410>, <sqlite3.Row object at 0x108ead430>, <sqlite3.Row object at 0x108ead3f0>, <sqlite3.Row object at 0x108ead450>, <sqlite3.Row object at 0x108ead4f0>, <sqlite3.Row object at 0x108ead5b0>, <sqlite3.Row object at 0x108ead570>, <sqlite3.Row object at 0x108ead170>, <sqlite3.Row object at 0x108ead5f0>, <sqlite3.Row object at 0x108ead630>, <sqlite3.Row object at 0x108ead670>, <sqlite3.Row object at 0x108ead6b0>, <sqlite3.Row object at 0x108ead6f0>, <sqlite3.Row object at 0x108ead730>, <sqlite3.Row object at 0x108ead770>, <sqlite3.Row object at 0x108ead7b0>, <sqlite3.Row object at 0x108ead7f0>, <sqlite3.Row object at 0x108ead830>, <sqlite3.Row object at 0x108ead870>, <sqlite3.Row object at 0x108ead8b0>, <sqlite3.Row object at 0x108ead8f0>, <sqlite3.Row object at 0x108ead930>, <sqlite3.Row object at 0x108ead970>, <sqlite3.Row object at 0x108ead9b0>, <sqlite3.Row object at 0x108ead9f0>, <sqlite3.Row object at 0x108eada30>, <sqlite3.Row object at 0x108eada70>, <sqlite3.Row object at 0x108eadab0>, <sqlite3.Row object at 0x108eadaf0>, <sqlite3.Row object at 0x108eadb30>, <sqlite3.Row object at 0x108eadb70>, <sqlite3.Row object at 0x108eadbb0>]
2025-06-15 17:22:36,287 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:22:36,287 - __main__ - INFO - Final Assistant Response (NL): El 27 de mayo de 2025, estas transacciones se registraron en tu cuenta: 'W/D FR SAV BDO/002013 01MAYON-N R BDO', 'POS W/D SV CHOOKS SM QUEZON ATP', 'POS W/D SV GRAB MAKATI ATP', 'Prepaid Reload to ****ZNST', 'BDOPAY BN P2MQR-PAY2-17483459- P2MI', 'Prepaid Reload to ****QC00', 'Prepaid Reload to ****8695', 'Prepaid Reload to ****6IA1', 'BDOPAY BN P2MQR-PAY2-33256727- P2MI', 'BDOPAY BN P2MQR-PAY2-47314744- P2MI', 'BDOPAY BN P2MQR-PAY2-92027653- P2MI', 'Prepaid Reload to ****6U8C', 'POS W/D SV SMART APP MAKATI ATP', 'BDOPAY BN P2MQR-PAY2-16995017- P2MI', 'BDOPAY BN P2MQR-PAY2-38336163- P2MI', 'BDOPAY BN P2MQR-PAY2-84271008- P2MI', 'Prepaid Reload to ****4VKS', 'Prepaid Reload to ****X6SM', 'Prepaid Reload to ****G6SW', 'BDOPAY BN P2MQR-PAY2-05396154- P2MI', 'BDOPAY BN P2MQR-PAY2-52841860- P2MI', 'BDOPAY BN P2MQR-PAY2-05214021- P2MI', 'BDOPAY BN P2MQR-PAY2-57662202- P2MI', 'BDOPAY BN P2MQR-PAY2-37643500- P2MI', 'Prepaid Reload to ****D2Y2', 'BDOPAY BN P2MQR-PAY2-00361956- P2MI', 'BDOPAY BN P2MQR-PAY2-86985239- P2MI', 'BDOPAY BN P2MQR-PAY2-40567289- P2MI', 'BDOPAY BN P2MQR-PAY2-15910745- P2MI', 'BDOPAY BN P2MQR-PAY2-99855748- P2MI', 'BDOPAY BN P2MQR-PAY2-00732660- P2MI', 'BDOPAY BN P2MQR-PAY2-75428180- P2MI', 'BDOPAY BN P2MQR-PAY2-34064037- P2MI', 'Prepaid Reload to ****B1KP', 'Prepaid Reload to ****53T7', 'BDOPAY BN P2MQR-PAY2-12016460- P2MI'.

Analicemos esto:

*   **W/D FR SAV BDO**: Significa un retiro de tu cuenta de ahorros en un cajero automÃ¡tico (ATM) de BDO.
*   **POS W/D SV [Nombre del Comercio] ATP**: Significa un retiro en el punto de venta (POS) en [Nombre del Comercio] usando tu tarjeta en un ATM.
*   **Prepaid Reload**:  Se refiere a una recarga de saldo para un nÃºmero de telÃ©fono prepago.
*   **BDOPAY BN P2MQR-PAY2-[CÃ³digo] P2MI**: Es un pago realizado a travÃ©s de la aplicaciÃ³n BDOPay usando un cÃ³digo QR a travÃ©s de la red P2MI (Philippine Payments Management, Inc.).

Â¿Te gustarÃ­a que desglosemos alguna transacciÃ³n en particular?
2025-06-15 17:23:47,752 - __main__ - INFO - User Query (es): woah, explicaste bien caraaaa!! no expecto
2025-06-15 17:23:49,092 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:23:49,092 - __main__ - INFO - Generated SQL Query: SELECT 'Â¡Gracias! Me alegra poder ayudarte. Â¿Hay algo mÃ¡s en lo que pueda asistirte hoy?' AS respuesta;
2025-06-15 17:23:49,095 - __main__ - INFO - Database connection established.
2025-06-15 17:23:49,095 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x108eadc70>]
2025-06-15 17:23:50,218 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:23:50,219 - __main__ - INFO - Final Assistant Response (NL): Â¡Gracias! Me alegra poder ayudarte. Â¿Hay algo mÃ¡s en lo que pueda asistirte hoy?
2025-06-15 17:24:18,800 - __main__ - INFO - User Query (es): que significa los pagos BDOPAY?
2025-06-15 17:24:20,471 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:24:20,471 - __main__ - INFO - Generated SQL Query: SELECT DISTINCT `Counter party name` FROM transactions WHERE `Counter party name` LIKE 'BDOPAY%';
2025-06-15 17:24:20,474 - __main__ - INFO - Database connection established.
2025-06-15 17:24:20,475 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x108ead0d0>, <sqlite3.Row object at 0x108ead490>, <sqlite3.Row object at 0x108ead130>, <sqlite3.Row object at 0x108ead3f0>, <sqlite3.Row object at 0x108ead430>, <sqlite3.Row object at 0x108ead4f0>, <sqlite3.Row object at 0x108ead210>, <sqlite3.Row object at 0x108eadc70>, <sqlite3.Row object at 0x108ead670>, <sqlite3.Row object at 0x108ead5f0>, <sqlite3.Row object at 0x108ead730>, <sqlite3.Row object at 0x108ead6b0>, <sqlite3.Row object at 0x108ead630>, <sqlite3.Row object at 0x108ead770>, <sqlite3.Row object at 0x108ead7b0>, <sqlite3.Row object at 0x108ead7f0>, <sqlite3.Row object at 0x108ead830>, <sqlite3.Row object at 0x108ead870>, <sqlite3.Row object at 0x108ead8b0>, <sqlite3.Row object at 0x108ead8f0>, <sqlite3.Row object at 0x108ead930>, <sqlite3.Row object at 0x108ead970>, <sqlite3.Row object at 0x108ead9b0>, <sqlite3.Row object at 0x108ead9f0>, <sqlite3.Row object at 0x108eada30>, <sqlite3.Row object at 0x108eada70>, <sqlite3.Row object at 0x108eadab0>, <sqlite3.Row object at 0x108eadaf0>, <sqlite3.Row object at 0x108eadb30>, <sqlite3.Row object at 0x108eadb70>, <sqlite3.Row object at 0x108eadbb0>, <sqlite3.Row object at 0x108ead330>, <sqlite3.Row object at 0x108ead530>, <sqlite3.Row object at 0x108eadcf0>, <sqlite3.Row object at 0x108eadd70>, <sqlite3.Row object at 0x108eadc30>, <sqlite3.Row object at 0x108eadbf0>, <sqlite3.Row object at 0x108eadd30>, <sqlite3.Row object at 0x108eaddb0>, <sqlite3.Row object at 0x108eaddf0>, <sqlite3.Row object at 0x108eade30>, <sqlite3.Row object at 0x108eade70>, <sqlite3.Row object at 0x108eadeb0>, <sqlite3.Row object at 0x108eadef0>, <sqlite3.Row object at 0x108eadf30>, <sqlite3.Row object at 0x108eadf70>, <sqlite3.Row object at 0x108eadfb0>, <sqlite3.Row object at 0x108ead050>, <sqlite3.Row object at 0x108ead0f0>, <sqlite3.Row object at 0x108dc8090>, <sqlite3.Row object at 0x108dc8550>, <sqlite3.Row object at 0x108dc8e50>, <sqlite3.Row object at 0x108dc8bd0>, <sqlite3.Row object at 0x108dc8570>, <sqlite3.Row object at 0x108dc84b0>, <sqlite3.Row object at 0x108ed8330>, <sqlite3.Row object at 0x108ed8030>, <sqlite3.Row object at 0x108ed8070>, <sqlite3.Row object at 0x108ed80b0>, <sqlite3.Row object at 0x108ed80f0>, <sqlite3.Row object at 0x108ed8130>, <sqlite3.Row object at 0x108ed8170>, <sqlite3.Row object at 0x108ed81b0>, <sqlite3.Row object at 0x108ed81f0>, <sqlite3.Row object at 0x108ed8230>, <sqlite3.Row object at 0x108ed8270>, <sqlite3.Row object at 0x108ed82b0>, <sqlite3.Row object at 0x108ed82f0>, <sqlite3.Row object at 0x108ed8370>, <sqlite3.Row object at 0x108ed83b0>, <sqlite3.Row object at 0x108ed83f0>, <sqlite3.Row object at 0x108ed8430>, <sqlite3.Row object at 0x108ed8470>, <sqlite3.Row object at 0x108ed84b0>, <sqlite3.Row object at 0x108ed84f0>, <sqlite3.Row object at 0x108ed8530>, <sqlite3.Row object at 0x108ed8570>, <sqlite3.Row object at 0x108ed85b0>, <sqlite3.Row object at 0x108ed85f0>, <sqlite3.Row object at 0x108ed8610>, <sqlite3.Row object at 0x108ed86f0>, <sqlite3.Row object at 0x108ed86d0>, <sqlite3.Row object at 0x108ed8710>, <sqlite3.Row object at 0x108ed8730>]
2025-06-15 17:24:22,574 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:24:22,575 - __main__ - INFO - Final Assistant Response (NL): Â¡Buena pregunta! Los pagos BDOPAY son pagos realizados a travÃ©s de la aplicaciÃ³n BDOPay.  EspecÃ­ficamente, 'BDOPAY BN P2MQR-PAY2-[CÃ³digo] P2MI' indica un pago que hiciste utilizando un cÃ³digo QR a travÃ©s de la red P2MI (Philippine Payments Management, Inc.).

Â¿Te gustarÃ­a saber mÃ¡s sobre cÃ³mo funciona BDOPay o la red P2MI?
2025-06-15 17:25:22,638 - __main__ - INFO - User Query (es): y como los pagamentos con  pos wd sv
2025-06-15 17:25:24,700 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:25:24,701 - __main__ - INFO - Generated SQL Query: SELECT DISTINCT "Counter party name" FROM transactions WHERE "Book date" = '2025-05-27' AND "Source" LIKE 'POS W/D SV%'
2025-06-15 17:25:24,703 - __main__ - INFO - Database connection established.
2025-06-15 17:25:24,704 - __main__ - INFO - SQL Query Executed Successfully. Results: []
2025-06-15 17:25:26,603 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:25:26,603 - __main__ - INFO - Final Assistant Response (NL): Los pagos 'POS W/D SV' son retiros de tu cuenta realizados en el punto de venta (POS) al usar tu tarjeta en un cajero automÃ¡tico (ATM) asociado a un comercio. Los comercios donde realizaste estos retiros son: CHOOKS SM QUEZON, GRAB MAKATI y SMART APP MAKATI.  Â¿Te gustarÃ­a saber el monto de cada uno de estos retiros?
2025-06-15 17:26:04,403 - __main__ - INFO - User Query (es): no recuerdo comprando en Chooks, sabes el ubicacion exacto de eso?
2025-06-15 17:26:06,612 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:26:06,613 - __main__ - INFO - Generated SQL Query: SELECT * FROM transactions WHERE `Counter party name` LIKE '%CHOOKS SM QUEZON%';
2025-06-15 17:26:06,616 - __main__ - INFO - Database connection established.
2025-06-15 17:26:06,618 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x108ead410>, <sqlite3.Row object at 0x108eadc70>, <sqlite3.Row object at 0x108ead3f0>, <sqlite3.Row object at 0x108ead210>, <sqlite3.Row object at 0x108ead0d0>, <sqlite3.Row object at 0x108ead130>, <sqlite3.Row object at 0x108ead490>, <sqlite3.Row object at 0x108ead4f0>, <sqlite3.Row object at 0x108ead730>, <sqlite3.Row object at 0x108ead6b0>, <sqlite3.Row object at 0x108ead310>, <sqlite3.Row object at 0x108ead670>]
2025-06-15 17:26:08,659 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:26:08,659 - __main__ - INFO - Final Assistant Response (NL): Veo varias transacciones el 27 de mayo de 2025 etiquetadas como 'POS W/D SV CHOOKS SM QUEZON ATP'.  Parece que todas fueron en 'CHOOKS SM QUEZON'.  Es probable que se refiera a una sucursal de Chooks-to-Go ubicada dentro de SM City Quezon City.  Â¿Te gustarÃ­a que te muestre los montos exactos de cada una de esas transacciones para ayudarte a recordar?
2025-06-15 17:26:43,998 - __main__ - INFO - User Query (es): ooh, si, si, comimos en chooks to go en ese tiempo, es SM Sta Mesa, si calro.
2025-06-15 17:26:45,939 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:26:45,941 - __main__ - INFO - Generated SQL Query: SELECT Amount, "Book date" FROM transactions WHERE "Counter party name" LIKE '%CHOOKS%' AND "Book date" = '2025-05-27';
2025-06-15 17:26:45,944 - __main__ - INFO - Database connection established.
2025-06-15 17:26:45,946 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x108dc8570>, <sqlite3.Row object at 0x108ead4f0>, <sqlite3.Row object at 0x108ead490>, <sqlite3.Row object at 0x108ead410>, <sqlite3.Row object at 0x108ead570>, <sqlite3.Row object at 0x108ead230>, <sqlite3.Row object at 0x108ead6b0>, <sqlite3.Row object at 0x108eadc70>, <sqlite3.Row object at 0x108ead450>, <sqlite3.Row object at 0x108ead730>, <sqlite3.Row object at 0x108ead3f0>, <sqlite3.Row object at 0x108ead170>]
2025-06-15 17:26:48,344 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:26:48,345 - __main__ - INFO - Final Assistant Response (NL): Â¡Ah, SM Sta. Mesa! Â¡QuÃ© bien que lo recordaste! Los montos de las transacciones en CHOOKS SM QUEZON el 27 de mayo de 2025 fueron los siguientes:

*   â‚±927.77
*   â‚±1,020.00
*   â‚±1,364.62
*   â‚±635.49
*   â‚±1,402.83
*   â‚±1,020.00
*   â‚±1,447.35
*   â‚±1,321.53
*   â‚±748.06
*   â‚±1,367.93
*   â‚±1,523.48
*   â‚±634.81

Â¿Te gustarÃ­a revisar alguna otra transacciÃ³n o detalle de ese dÃ­a?
2025-06-15 17:27:21,442 - __main__ - INFO - User Query (es): como son Grab Makati y Smart App Makati, no compro esos en Makati aunque
2025-06-15 17:27:23,727 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:27:23,728 - __main__ - INFO - Generated SQL Query: SELECT Amount, "Counter party name", Source FROM transactions WHERE "Book date" = '2025-05-27' AND ("Counter party name" LIKE '%GRAB MAKATI%' OR "Counter party name" LIKE '%SMART APP MAKATI%');
2025-06-15 17:27:23,731 - __main__ - INFO - Database connection established.
2025-06-15 17:27:23,733 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x108ead570>, <sqlite3.Row object at 0x108ead490>, <sqlite3.Row object at 0x108ead730>, <sqlite3.Row object at 0x108ead430>, <sqlite3.Row object at 0x108ead8b0>, <sqlite3.Row object at 0x108ead410>, <sqlite3.Row object at 0x108ead170>, <sqlite3.Row object at 0x108ead9f0>, <sqlite3.Row object at 0x108ead6b0>, <sqlite3.Row object at 0x108ead450>, <sqlite3.Row object at 0x108eadc70>, <sqlite3.Row object at 0x108ead210>, <sqlite3.Row object at 0x108ead3f0>, <sqlite3.Row object at 0x108ead310>, <sqlite3.Row object at 0x108ead970>, <sqlite3.Row object at 0x108ead7f0>, <sqlite3.Row object at 0x108ead930>, <sqlite3.Row object at 0x108ead9b0>]
2025-06-15 17:27:26,394 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:27:26,394 - __main__ - INFO - Final Assistant Response (NL): Entiendo tu preocupaciÃ³n. AquÃ­ estÃ¡n los detalles de las transacciones de 'POS W/D SV GRAB MAKATI ATP' y 'POS W/D SV SMART APP MAKATI ATP' que se registraron el 27 de mayo de 2025:

*   **GRAB MAKATI:** Los montos varÃ­an entre â‚±107.02 y â‚±286.26.
*   **SMART APP MAKATI:** Los montos varÃ­an entre â‚±17.76 y â‚±44.84.

Es posible que estos cargos se deban a transacciones realizadas a travÃ©s de la aplicaciÃ³n Grab o Smart, aunque no te encuentres fÃ­sicamente en Makati. Â¿Te gustarÃ­a que investigue mÃ¡s a fondo estas transacciones o que te proporcione informaciÃ³n sobre cÃ³mo contactar a Grab o Smart para aclarar estos cargos?
2025-06-15 17:28:19,104 - __main__ - INFO - User Query (es): si si, estas correcto. muy bien explicando muchas cosas.
2025-06-15 17:28:20,533 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:28:20,533 - __main__ - INFO - Generated SQL Query: None
2025-06-15 17:28:20,535 - __main__ - INFO - Database connection established.
2025-06-15 17:28:20,535 - __main__ - CRITICAL - An unexpected critical error occurred: argument 1 must be str, not None
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_nonml.py", line 318, in chat
    cursor.execute(sql_query)
TypeError: argument 1 must be str, not None
2025-06-15 17:28:26,126 - __main__ - INFO - User Query (es): si si, estas correcto.
2025-06-15 17:28:27,721 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:28:27,722 - __main__ - INFO - Generated SQL Query: None
2025-06-15 17:28:27,724 - __main__ - INFO - Database connection established.
2025-06-15 17:28:27,724 - __main__ - CRITICAL - An unexpected critical error occurred: argument 1 must be str, not None
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_nonml.py", line 318, in chat
    cursor.execute(sql_query)
TypeError: argument 1 must be str, not None
2025-06-15 17:28:45,929 - __main__ - INFO - User Query (es): ok, que son transacciones (todos aui)
2025-06-15 17:28:48,917 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:28:48,917 - __main__ - INFO - Generated SQL Query: SELECT DISTINCT Source FROM transactions;
2025-06-15 17:28:48,919 - __main__ - INFO - Database connection established.
2025-06-15 17:28:48,920 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x108ead0d0>, <sqlite3.Row object at 0x108eadaf0>, <sqlite3.Row object at 0x108eadb30>, <sqlite3.Row object at 0x108ead570>, <sqlite3.Row object at 0x108ead730>, <sqlite3.Row object at 0x108eadcf0>]
2025-06-15 17:28:50,455 - __main__ - ERROR - Error decoding JSON from Gemini: Invalid \escape: line 3 column 132 (char 187). Raw content: ```json
{
  "sql": "SELECT DISTINCT Source FROM transactions;",
  "natural_language_response": "Â¡Claro! AquÃ­ tienes los tipos de transacciones que se han registrado en tu cuenta:\n\n*   synthetic\_3\n*   synthetic\_4\n*   synthetic\_2\n*   original\n*   synthetic\_1\n*   synthetic\_5\n\nÂ¿Te gustarÃ­a que te explique quÃ© significa cada uno de estos tipos de transacciones?"
}
```
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_nonml.py", line 245, in get_gemini_response
    response_dict = json.loads(json_str)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 353, in raw_decode
    obj, end = self.scan_once(s, idx)
json.decoder.JSONDecodeError: Invalid \escape: line 3 column 132 (char 187)
2025-06-15 17:28:50,463 - __main__ - ERROR - Gemini failed to generate final NL response after query execution. Assistant response: EjecutÃ© la consulta, pero tuve problemas para formar una respuesta clara. Por favor, intÃ©ntalo de nuevo.
2025-06-15 17:28:59,474 - __main__ - INFO - User Query (es): ok, que son mis transacciones (todos aqui)
2025-06-15 17:29:01,939 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:29:01,939 - __main__ - INFO - Generated SQL Query: SELECT DISTINCT Source FROM transactions;
2025-06-15 17:29:01,941 - __main__ - INFO - Database connection established.
2025-06-15 17:29:01,944 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x108eadcf0>, <sqlite3.Row object at 0x108ead530>, <sqlite3.Row object at 0x108ead830>, <sqlite3.Row object at 0x108eadbf0>, <sqlite3.Row object at 0x108ead6b0>, <sqlite3.Row object at 0x108ead330>]
2025-06-15 17:29:03,588 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:29:03,588 - __main__ - INFO - Final Assistant Response (NL): AnalicÃ© las fuentes de tus transacciones registradas. Las fuentes principales son: synthetic_3, synthetic_4, synthetic_2, original, synthetic_1, synthetic_5. Â¿Te gustarÃ­a que desglose cada uno de estos tipos de transacciones para darte mÃ¡s detalles?
2025-06-15 17:29:40,836 - __main__ - INFO - User Query (es): no, no 'Source', los mercados que reciben esos transacciones
2025-06-15 17:29:42,473 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:29:42,474 - __main__ - INFO - Generated SQL Query: SELECT DISTINCT "Counter party name" FROM transactions;
2025-06-15 17:29:42,477 - __main__ - INFO - Database connection established.
2025-06-15 17:29:42,481 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x108ead670>, <sqlite3.Row object at 0x108eadbf0>, <sqlite3.Row object at 0x108eada70>, <sqlite3.Row object at 0x108eadab0>, <sqlite3.Row object at 0x108ead430>, <sqlite3.Row object at 0x108ead330>, <sqlite3.Row object at 0x108ead8b0>, <sqlite3.Row object at 0x108ead490>, <sqlite3.Row object at 0x108ead350>, <sqlite3.Row object at 0x108ead410>, <sqlite3.Row object at 0x108ead570>, <sqlite3.Row object at 0x108eadc70>, <sqlite3.Row object at 0x108ead770>, <sqlite3.Row object at 0x108ead0d0>, <sqlite3.Row object at 0x108ead870>, <sqlite3.Row object at 0x108eadbb0>, <sqlite3.Row object at 0x108ead930>, <sqlite3.Row object at 0x108ead7f0>, <sqlite3.Row object at 0x108ead970>, <sqlite3.Row object at 0x108ead5f0>, <sqlite3.Row object at 0x108ead310>, <sqlite3.Row object at 0x108ead3f0>, <sqlite3.Row object at 0x108ead210>, <sqlite3.Row object at 0x108ead9f0>, <sqlite3.Row object at 0x108ead9b0>, <sqlite3.Row object at 0x108ead4f0>, <sqlite3.Row object at 0x108ead230>, <sqlite3.Row object at 0x108eade30>, <sqlite3.Row object at 0x108ead0f0>, <sqlite3.Row object at 0x108eadd30>, <sqlite3.Row object at 0x108eaddb0>, <sqlite3.Row object at 0x108eade70>, <sqlite3.Row object at 0x108eadfb0>, <sqlite3.Row object at 0x108eadf30>, <sqlite3.Row object at 0x108eadef0>, <sqlite3.Row object at 0x108eadf70>, <sqlite3.Row object at 0x108ead050>, <sqlite3.Row object at 0x108ead6f0>, <sqlite3.Row object at 0x108eadcb0>, <sqlite3.Row object at 0x108eadeb0>, <sqlite3.Row object at 0x108ed8030>, <sqlite3.Row object at 0x108ed87b0>, <sqlite3.Row object at 0x108ed8790>, <sqlite3.Row object at 0x108ed8330>, <sqlite3.Row object at 0x108ed8070>, <sqlite3.Row object at 0x108ed80b0>, <sqlite3.Row object at 0x108ed80f0>, <sqlite3.Row object at 0x108ed8130>, <sqlite3.Row object at 0x108ed8170>, <sqlite3.Row object at 0x108ed81b0>, <sqlite3.Row object at 0x108ed81f0>, <sqlite3.Row object at 0x108ed8230>, <sqlite3.Row object at 0x108ed8270>, <sqlite3.Row object at 0x108ed82b0>, <sqlite3.Row object at 0x108ed82f0>, <sqlite3.Row object at 0x108ed8370>, <sqlite3.Row object at 0x108ed83b0>, <sqlite3.Row object at 0x108ed83f0>, <sqlite3.Row object at 0x108ed8430>, <sqlite3.Row object at 0x108ed8470>, <sqlite3.Row object at 0x108ed84b0>, <sqlite3.Row object at 0x108ed84f0>, <sqlite3.Row object at 0x108ed8530>, <sqlite3.Row object at 0x108ed8570>, <sqlite3.Row object at 0x108ed85b0>, <sqlite3.Row object at 0x108ed85f0>, <sqlite3.Row object at 0x108ed8610>, <sqlite3.Row object at 0x108ed86f0>, <sqlite3.Row object at 0x108ed86d0>, <sqlite3.Row object at 0x108ed8710>, <sqlite3.Row object at 0x108ed8730>, <sqlite3.Row object at 0x108ed8770>, <sqlite3.Row object at 0x108ed88f0>, <sqlite3.Row object at 0x108ed8750>, <sqlite3.Row object at 0x108ed87f0>, <sqlite3.Row object at 0x108ed8810>, <sqlite3.Row object at 0x108ed88b0>, <sqlite3.Row object at 0x108ed8870>, <sqlite3.Row object at 0x108ed8850>, <sqlite3.Row object at 0x108ed8890>, <sqlite3.Row object at 0x108ed88d0>, <sqlite3.Row object at 0x108ed8930>, <sqlite3.Row object at 0x108ed8910>, <sqlite3.Row object at 0x108ed8830>, <sqlite3.Row object at 0x108ed8950>, <sqlite3.Row object at 0x108ed8970>, <sqlite3.Row object at 0x108ed8990>, <sqlite3.Row object at 0x108ed89b0>, <sqlite3.Row object at 0x108ed89d0>, <sqlite3.Row object at 0x108ed89f0>, <sqlite3.Row object at 0x108ed8a10>, <sqlite3.Row object at 0x108ed8a30>, <sqlite3.Row object at 0x108ed8a50>, <sqlite3.Row object at 0x108ed8a70>, <sqlite3.Row object at 0x108ed8a90>, <sqlite3.Row object at 0x108ed8ab0>, <sqlite3.Row object at 0x108ed8ad0>, <sqlite3.Row object at 0x108ed8af0>, <sqlite3.Row object at 0x108ed8b10>, <sqlite3.Row object at 0x108ed8b30>, <sqlite3.Row object at 0x108ed8b50>, <sqlite3.Row object at 0x108ed8b70>, <sqlite3.Row object at 0x108ed8b90>, <sqlite3.Row object at 0x108ed8bb0>, <sqlite3.Row object at 0x108ed8bd0>, <sqlite3.Row object at 0x108ed8bf0>, <sqlite3.Row object at 0x108ed8c10>, <sqlite3.Row object at 0x108ed8c30>, <sqlite3.Row object at 0x108ed8c50>, <sqlite3.Row object at 0x108ed8c70>, <sqlite3.Row object at 0x108ed8c90>, <sqlite3.Row object at 0x108ed8cb0>, <sqlite3.Row object at 0x108ed8cd0>, <sqlite3.Row object at 0x108ed8cf0>, <sqlite3.Row object at 0x108ed8d10>, <sqlite3.Row object at 0x108ed8d30>, <sqlite3.Row object at 0x108ed8d50>, <sqlite3.Row object at 0x108ed8d70>, <sqlite3.Row object at 0x108ed8d90>, <sqlite3.Row object at 0x108ed8db0>, <sqlite3.Row object at 0x108ed8dd0>, <sqlite3.Row object at 0x108ed8df0>, <sqlite3.Row object at 0x108ed8e10>, <sqlite3.Row object at 0x108ed8e30>, <sqlite3.Row object at 0x108ed8e50>, <sqlite3.Row object at 0x108ed8e70>, <sqlite3.Row object at 0x108ed8e90>, <sqlite3.Row object at 0x108ed8eb0>, <sqlite3.Row object at 0x108ed8ed0>, <sqlite3.Row object at 0x108ed8ef0>, <sqlite3.Row object at 0x108ed8f10>, <sqlite3.Row object at 0x108ed8f30>, <sqlite3.Row object at 0x108ed8f50>, <sqlite3.Row object at 0x108ed8f70>, <sqlite3.Row object at 0x108ed8f90>, <sqlite3.Row object at 0x108ed8fb0>, <sqlite3.Row object at 0x108ed8fd0>, <sqlite3.Row object at 0x108f07030>, <sqlite3.Row object at 0x108f07050>, <sqlite3.Row object at 0x108f07070>, <sqlite3.Row object at 0x108f07090>, <sqlite3.Row object at 0x108f070b0>, <sqlite3.Row object at 0x108f070d0>, <sqlite3.Row object at 0x108f070f0>, <sqlite3.Row object at 0x108f07110>, <sqlite3.Row object at 0x108f07130>, <sqlite3.Row object at 0x108f07150>, <sqlite3.Row object at 0x108f07170>, <sqlite3.Row object at 0x108f07190>, <sqlite3.Row object at 0x108f071b0>, <sqlite3.Row object at 0x108f071d0>, <sqlite3.Row object at 0x108f071f0>, <sqlite3.Row object at 0x108f07210>, <sqlite3.Row object at 0x108f07230>, <sqlite3.Row object at 0x108f07250>, <sqlite3.Row object at 0x108f07270>, <sqlite3.Row object at 0x108f07290>, <sqlite3.Row object at 0x108f072b0>, <sqlite3.Row object at 0x108f072d0>, <sqlite3.Row object at 0x108f072f0>, <sqlite3.Row object at 0x108f07310>, <sqlite3.Row object at 0x108f07330>, <sqlite3.Row object at 0x108f07350>, <sqlite3.Row object at 0x108f07370>, <sqlite3.Row object at 0x108f07390>, <sqlite3.Row object at 0x108f073b0>, <sqlite3.Row object at 0x108f073d0>, <sqlite3.Row object at 0x108f073f0>, <sqlite3.Row object at 0x108f07410>, <sqlite3.Row object at 0x108f07430>, <sqlite3.Row object at 0x108f07450>, <sqlite3.Row object at 0x108f07470>, <sqlite3.Row object at 0x108f07490>, <sqlite3.Row object at 0x108f074b0>, <sqlite3.Row object at 0x108f074d0>, <sqlite3.Row object at 0x108f074f0>, <sqlite3.Row object at 0x108f07510>, <sqlite3.Row object at 0x108f07530>, <sqlite3.Row object at 0x108f07550>, <sqlite3.Row object at 0x108f07570>]
2025-06-15 17:29:44,626 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:29:44,627 - __main__ - INFO - Final Assistant Response (NL): AquÃ­ estÃ¡n los nombres de los establecimientos y servicios con los que has realizado transacciones.  Incluyen desde cines SM en varias ubicaciones, comercios como MINISO en SM Sta Mesa Quezon City, restaurantes como Jollibee en Manila, hasta servicios como Google, Apple, Grab y recargas de saldo.  TambiÃ©n hay transferencias de y hacia otros bancos. Â¿Te gustarÃ­a que te muestre las transacciones de algÃºn establecimiento en particular?
2025-06-15 17:30:03,574 - __main__ - INFO - User Query (es): cuanto le gaste en suscripciones
2025-06-15 17:30:05,277 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:30:05,278 - __main__ - INFO - Generated SQL Query: SELECT SUM(CASE WHEN "Credit/debit indicator" = 'Debit' THEN Amount ELSE 0 END) AS total_gastado_suscripciones FROM transactions WHERE LOWER("Counter party name") LIKE '%google%' OR LOWER("Counter party name") LIKE '%apple%' OR LOWER("Counter party name") LIKE '%netflix%' OR LOWER("Counter party name") LIKE '%spotify%';
2025-06-15 17:30:05,280 - __main__ - INFO - Database connection established.
2025-06-15 17:30:05,283 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x108ed82b0>]
2025-06-15 17:30:06,740 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:30:06,740 - __main__ - INFO - Final Assistant Response (NL): Has gastado un total de â‚±5,924.23 en suscripciones. Â¿Hay algo mÃ¡s que te gustarÃ­a revisar?
2025-06-15 17:30:11,945 - __main__ - INFO - User Query (es): si, puedes?
2025-06-15 17:30:17,666 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:30:17,667 - __main__ - INFO - Generated SQL Query: SELECT DISTINCT `Counter party name` FROM transactions;
2025-06-15 17:30:17,668 - __main__ - INFO - Database connection established.
2025-06-15 17:30:17,670 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x108ed83f0>, <sqlite3.Row object at 0x108ed8570>, <sqlite3.Row object at 0x108ed8470>, <sqlite3.Row object at 0x108ed8270>, <sqlite3.Row object at 0x108ed8610>, <sqlite3.Row object at 0x108ed82b0>, <sqlite3.Row object at 0x108ed8330>, <sqlite3.Row object at 0x108ed86d0>, <sqlite3.Row object at 0x108ed8710>, <sqlite3.Row object at 0x108ed84b0>, <sqlite3.Row object at 0x108ed82f0>, <sqlite3.Row object at 0x108ed85f0>, <sqlite3.Row object at 0x108ed86f0>, <sqlite3.Row object at 0x108ed8370>, <sqlite3.Row object at 0x108ed8730>, <sqlite3.Row object at 0x108ed8770>, <sqlite3.Row object at 0x108ed88f0>, <sqlite3.Row object at 0x108ed8750>, <sqlite3.Row object at 0x108ed87f0>, <sqlite3.Row object at 0x108ed8810>, <sqlite3.Row object at 0x108ed88b0>, <sqlite3.Row object at 0x108ed8870>, <sqlite3.Row object at 0x108ed8850>, <sqlite3.Row object at 0x108ed8890>, <sqlite3.Row object at 0x108ed88d0>, <sqlite3.Row object at 0x108ed8930>, <sqlite3.Row object at 0x108ed8910>, <sqlite3.Row object at 0x108ed8830>, <sqlite3.Row object at 0x108ed8950>, <sqlite3.Row object at 0x108ed8970>, <sqlite3.Row object at 0x108ed8990>, <sqlite3.Row object at 0x108ed89b0>, <sqlite3.Row object at 0x108ed89d0>, <sqlite3.Row object at 0x108ed89f0>, <sqlite3.Row object at 0x108ed8a10>, <sqlite3.Row object at 0x108ed8a30>, <sqlite3.Row object at 0x108ed8a50>, <sqlite3.Row object at 0x108ed8a70>, <sqlite3.Row object at 0x108ed8a90>, <sqlite3.Row object at 0x108ed8ab0>, <sqlite3.Row object at 0x108ed8ad0>, <sqlite3.Row object at 0x108ed8af0>, <sqlite3.Row object at 0x108ed8b10>, <sqlite3.Row object at 0x108ed8b30>, <sqlite3.Row object at 0x108ed8b50>, <sqlite3.Row object at 0x108ed8b70>, <sqlite3.Row object at 0x108ed8b90>, <sqlite3.Row object at 0x108ed8bb0>, <sqlite3.Row object at 0x108ed8bd0>, <sqlite3.Row object at 0x108ed8bf0>, <sqlite3.Row object at 0x108ed8c10>, <sqlite3.Row object at 0x108ed8c30>, <sqlite3.Row object at 0x108ed8c50>, <sqlite3.Row object at 0x108ed8c70>, <sqlite3.Row object at 0x108ed8c90>, <sqlite3.Row object at 0x108ed8cb0>, <sqlite3.Row object at 0x108ed8cd0>, <sqlite3.Row object at 0x108ed8cf0>, <sqlite3.Row object at 0x108ed8d10>, <sqlite3.Row object at 0x108ed8d30>, <sqlite3.Row object at 0x108ed8d50>, <sqlite3.Row object at 0x108ed8d70>, <sqlite3.Row object at 0x108ed8d90>, <sqlite3.Row object at 0x108ed8db0>, <sqlite3.Row object at 0x108ed8dd0>, <sqlite3.Row object at 0x108ed8df0>, <sqlite3.Row object at 0x108ed8e10>, <sqlite3.Row object at 0x108ed8e30>, <sqlite3.Row object at 0x108ed8e50>, <sqlite3.Row object at 0x108ed8e70>, <sqlite3.Row object at 0x108ed8e90>, <sqlite3.Row object at 0x108ed8eb0>, <sqlite3.Row object at 0x108ed8ed0>, <sqlite3.Row object at 0x108ed8ef0>, <sqlite3.Row object at 0x108ed8f10>, <sqlite3.Row object at 0x108ed8f30>, <sqlite3.Row object at 0x108ed8f50>, <sqlite3.Row object at 0x108ed8f70>, <sqlite3.Row object at 0x108ed8f90>, <sqlite3.Row object at 0x108ed8fb0>, <sqlite3.Row object at 0x108ed8fd0>, <sqlite3.Row object at 0x108ead170>, <sqlite3.Row object at 0x108ead7b0>, <sqlite3.Row object at 0x108eadaf0>, <sqlite3.Row object at 0x108ead830>, <sqlite3.Row object at 0x108ead670>, <sqlite3.Row object at 0x108eadbf0>, <sqlite3.Row object at 0x108eada70>, <sqlite3.Row object at 0x108eadab0>, <sqlite3.Row object at 0x108ead430>, <sqlite3.Row object at 0x108ead330>, <sqlite3.Row object at 0x108ead8b0>, <sqlite3.Row object at 0x108ead490>, <sqlite3.Row object at 0x108ead350>, <sqlite3.Row object at 0x108ead410>, <sqlite3.Row object at 0x108ead570>, <sqlite3.Row object at 0x108eadc70>, <sqlite3.Row object at 0x108ead770>, <sqlite3.Row object at 0x108ead0d0>, <sqlite3.Row object at 0x108ead870>, <sqlite3.Row object at 0x108eadbb0>, <sqlite3.Row object at 0x108ead930>, <sqlite3.Row object at 0x108ead7f0>, <sqlite3.Row object at 0x108ead970>, <sqlite3.Row object at 0x108ead5f0>, <sqlite3.Row object at 0x108ead310>, <sqlite3.Row object at 0x108ead3f0>, <sqlite3.Row object at 0x108ead210>, <sqlite3.Row object at 0x108ead9f0>, <sqlite3.Row object at 0x108ead9b0>, <sqlite3.Row object at 0x108ead4f0>, <sqlite3.Row object at 0x108ead230>, <sqlite3.Row object at 0x108eade30>, <sqlite3.Row object at 0x108ead0f0>, <sqlite3.Row object at 0x108eadd30>, <sqlite3.Row object at 0x108eaddb0>, <sqlite3.Row object at 0x108eade70>, <sqlite3.Row object at 0x108eadfb0>, <sqlite3.Row object at 0x108eadf30>, <sqlite3.Row object at 0x108eadef0>, <sqlite3.Row object at 0x108eadf70>, <sqlite3.Row object at 0x108ead050>, <sqlite3.Row object at 0x108ead6f0>, <sqlite3.Row object at 0x108eadcb0>, <sqlite3.Row object at 0x108eadeb0>, <sqlite3.Row object at 0x108eadcf0>, <sqlite3.Row object at 0x108ead390>, <sqlite3.Row object at 0x108eadd70>, <sqlite3.Row object at 0x108eadb70>, <sqlite3.Row object at 0x108eadb30>, <sqlite3.Row object at 0x108ead8f0>, <sqlite3.Row object at 0x108eada30>, <sqlite3.Row object at 0x108eaddf0>, <sqlite3.Row object at 0x108ead130>, <sqlite3.Row object at 0x108ead630>, <sqlite3.Row object at 0x108ead5b0>, <sqlite3.Row object at 0x108ead290>, <sqlite3.Row object at 0x108ead250>, <sqlite3.Row object at 0x108ead4d0>, <sqlite3.Row object at 0x108ead270>, <sqlite3.Row object at 0x108ead110>, <sqlite3.Row object at 0x108ead030>, <sqlite3.Row object at 0x108ead1b0>, <sqlite3.Row object at 0x108ead190>, <sqlite3.Row object at 0x108dc8bd0>, <sqlite3.Row object at 0x108dc8550>, <sqlite3.Row object at 0x108dc84b0>, <sqlite3.Row object at 0x108dc8090>, <sqlite3.Row object at 0x108dc8e50>, <sqlite3.Row object at 0x108dc8470>, <sqlite3.Row object at 0x108dc8530>, <sqlite3.Row object at 0x108dc8fd0>, <sqlite3.Row object at 0x108dc88b0>, <sqlite3.Row object at 0x108dc8590>, <sqlite3.Row object at 0x108dc8670>, <sqlite3.Row object at 0x108dc8650>, <sqlite3.Row object at 0x108dc83b0>, <sqlite3.Row object at 0x108dc87f0>, <sqlite3.Row object at 0x108dc8630>, <sqlite3.Row object at 0x108f0d030>, <sqlite3.Row object at 0x108f0d050>, <sqlite3.Row object at 0x108f0d070>, <sqlite3.Row object at 0x108f0d090>, <sqlite3.Row object at 0x108f0d0b0>, <sqlite3.Row object at 0x108f0d0d0>, <sqlite3.Row object at 0x108f0d0f0>, <sqlite3.Row object at 0x108f0d110>, <sqlite3.Row object at 0x108f0d130>, <sqlite3.Row object at 0x108f0d150>, <sqlite3.Row object at 0x108f0d170>, <sqlite3.Row object at 0x108f0d190>, <sqlite3.Row object at 0x108f0d1b0>, <sqlite3.Row object at 0x108f0d1d0>, <sqlite3.Row object at 0x108f0d1f0>, <sqlite3.Row object at 0x108f0d210>, <sqlite3.Row object at 0x108f0d230>, <sqlite3.Row object at 0x108f0d250>, <sqlite3.Row object at 0x108f0d270>, <sqlite3.Row object at 0x108f0d290>, <sqlite3.Row object at 0x108f0d2b0>]
2025-06-15 17:30:21,386 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:30:21,386 - __main__ - INFO - Final Assistant Response (NL): Â¡Claro que sÃ­! AquÃ­ tienes una lista de los establecimientos y servicios con los que has realizado transacciones:

*   Transferencias recibidas desde otros bancos
*   Retiros de cajeros automÃ¡ticos BDO en SM Sta. Mesa.
*   Pagos en MOVE IT (Makati)
*   Pagos en SMART APP (Makati)
*   Pagos en cines SM
*   Pagos en ANGKAS (Manila)
*   Pagos a GOOGLE
*   Pagos en CHOOKS SM QUEZON
*   Pagos en GRAB (Makati)
*   Recargas de saldo
*   Pagos con BDOPay (P2MI)
*   MINISO (SM Sta. Mesa Quezon City)
*   Retiros de cajeros automÃ¡ticos en Sampaloc, Manila.
*   Transferencias enviadas vÃ­a InstaPay
*   Intereses pagados
*   Pagos en JOLLIBEE (Manila)
*   Pagos en APPLE.COM/ITUNES.COM
*   Pagos en SALARYMAN (Taguig)
*   Pagos en THE COFFEE POS
*   Pagos en HEALTHY OP POS
*   Pagos en CARGOFISH (Taguig City)
*   Pagos en Google You (Londres)
*   Pagos en NATIONAL B POS
*   Transferencias recibidas desde cuentas BDO

Â¿Te gustarÃ­a que te muestre las transacciones de algÃºn establecimiento en particular?
2025-06-15 17:30:47,722 - __main__ - INFO - User Query (es): ooh, salaryman? cargofish? explicame, que son esos
2025-06-15 17:30:52,000 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:30:52,001 - __main__ - INFO - Generated SQL Query: SELECT DISTINCT "Counter party name" FROM transactions WHERE LOWER("Counter party name") LIKE '%salaryman%' OR LOWER("Counter party name") LIKE '%cargofish%';
2025-06-15 17:30:52,002 - __main__ - INFO - Database connection established.
2025-06-15 17:30:52,004 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x108ead410>, <sqlite3.Row object at 0x108ead8b0>]
2025-06-15 17:30:53,893 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:30:53,893 - __main__ - INFO - Final Assistant Response (NL): Â¡Claro! 'SALARYMAN TAGUIG MLIC' y 'CARGOFISH TAGUIG CITY ATP' son nombres de comercios donde realizaste pagos con tu tarjeta. Ambos estÃ¡n ubicados en Taguig. Parece que hiciste compras o consumiste algÃºn servicio en esos lugares. Â¿Te gustarÃ­a que te muestre los montos exactos y las fechas de esas transacciones para ayudarte a recordar quÃ© compraste allÃ­?
2025-06-15 17:31:26,288 - __main__ - INFO - User Query (es): explicame cosas/detalles sobre salaryman, quiero conocerle
2025-06-15 17:31:28,251 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:31:28,251 - __main__ - INFO - Generated SQL Query: SELECT DISTINCT `Counter party name` FROM transactions WHERE LOWER(`Counter party name`) LIKE '%salaryman%';
2025-06-15 17:31:28,253 - __main__ - INFO - Database connection established.
2025-06-15 17:31:28,256 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x108ead930>]
2025-06-15 17:31:30,097 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:31:30,097 - __main__ - INFO - Final Assistant Response (NL): SegÃºn mis registros, la Ãºnica transacciÃ³n que involucra a 'SALARYMAN' es 'POS W/D SV SALARYMAN TAGUIG MLIC'. Esto parece indicar un retiro en el punto de venta (POS) en 'SALARYMAN' ubicado en Taguig, especÃ­ficamente en el Ã¡rea de MLIC (Market Lane Improvement Corporation). Â¿Te gustarÃ­a saber el monto de este retiro o la fecha en que se realizÃ³?
2025-06-15 17:31:53,755 - __main__ - INFO - User Query (es): salaryman es el restaurante japones?
2025-06-15 17:31:55,168 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:31:55,169 - __main__ - INFO - Generated SQL Query: SELECT DISTINCT "Counter party name" FROM transactions WHERE LOWER("Counter party name") LIKE '%salaryman%';
2025-06-15 17:31:55,170 - __main__ - INFO - Database connection established.
2025-06-15 17:31:55,172 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x108ead310>]
2025-06-15 17:31:56,657 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:31:56,658 - __main__ - INFO - Final Assistant Response (NL): SÃ­, 'SALARYMAN' es el nombre de un restaurante. La transacciÃ³n especÃ­fica que veo es 'POS W/D SV SALARYMAN TAGUIG MLIC'. Parece que es un pago con tarjeta en su local de Taguig. Â¿Quieres saber mÃ¡s sobre esta transacciÃ³n?
2025-06-15 17:32:24,605 - __main__ - INFO - User Query (es): si, que es cargofish, explicame sobre eso
2025-06-15 17:32:26,313 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:32:26,314 - __main__ - INFO - Generated SQL Query: SELECT "Counter party name" FROM transactions WHERE LOWER("Counter party name") LIKE '%cargofish%';
2025-06-15 17:32:26,316 - __main__ - INFO - Database connection established.
2025-06-15 17:32:26,318 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x108ead8b0>, <sqlite3.Row object at 0x108ead9b0>, <sqlite3.Row object at 0x108ead230>, <sqlite3.Row object at 0x108eadbb0>, <sqlite3.Row object at 0x108ead170>, <sqlite3.Row object at 0x108ead210>, <sqlite3.Row object at 0x108eada70>, <sqlite3.Row object at 0x108ead410>, <sqlite3.Row object at 0x108ead3f0>, <sqlite3.Row object at 0x108ead870>, <sqlite3.Row object at 0x108ead5f0>, <sqlite3.Row object at 0x108eade30>]
2025-06-15 17:32:28,665 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:32:28,665 - __main__ - INFO - Final Assistant Response (NL): Veo varias transacciones con 'CARGOFISH TAGUIG CITY'. 'CARGOFISH' es un servicio de paqueterÃ­a y envÃ­os. El hecho de que aparezca como 'POS W/D SV CARGOFISH' indica que utilizaste tu tarjeta en el punto de venta (POS) para pagar por sus servicios en Taguig City.  Â¿Te gustarÃ­a revisar los montos y fechas de estas transacciones con CargoFish para confirmar que las reconoces?
2025-06-15 17:36:59,612 - __main__ - INFO - User Query (en): hi
2025-06-15 17:37:50,655 - __main__ - INFO - User Query (en): hi
2025-06-15 17:38:36,429 - __main__ - INFO - User Query (en): hi
2025-06-15 17:39:03,234 - __main__ - INFO - Flask Application started.
2025-06-15 17:39:03,249 - __main__ - INFO - Database connection established.
2025-06-15 17:39:03,249 - __main__ - INFO - Database schema retrieved and cached.
2025-06-15 17:39:03,299 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-15 17:39:05,264 - __main__ - INFO - User Query (en): hi
2025-06-15 17:39:09,793 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:39:09,794 - __main__ - INFO - Generated SQL Query: SELECT date('now');
2025-06-15 17:39:09,795 - __main__ - INFO - Database connection established.
2025-06-15 17:39:09,796 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x109a2f370>]
2025-06-15 17:39:10,788 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:39:10,789 - __main__ - INFO - Final Assistant Response (NL): Hi there! Glad to help you today. What can I help you with regarding your account?
2025-06-15 17:39:31,608 - __main__ - INFO - User Query (en): tell me more about my highest spending, where are they
2025-06-15 17:39:33,218 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:39:33,219 - __main__ - INFO - Generated SQL Query: SELECT "Counter party name", SUM(Amount) AS TotalSpending FROM transactions WHERE "Credit/debit indicator" = 'Debit' GROUP BY "Counter party name" ORDER BY TotalSpending DESC LIMIT 5;
2025-06-15 17:39:33,221 - __main__ - INFO - Database connection established.
2025-06-15 17:39:33,224 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x109a2fcd0>, <sqlite3.Row object at 0x109a2fa90>, <sqlite3.Row object at 0x109a2fc10>, <sqlite3.Row object at 0x109a2fc30>, <sqlite3.Row object at 0x109a2fad0>]
2025-06-15 17:39:35,182 - __main__ - ERROR - Error decoding JSON from Gemini: Invalid \escape: line 3 column 138 (char 341). Raw content: ```json
{
  "sql": "SELECT \"Counter party name\", SUM(Amount) AS TotalSpending FROM transactions WHERE \"Credit/debit indicator\" = 'Debit' GROUP BY \"Counter party name\" ORDER BY TotalSpending DESC LIMIT 5;",
  "natural_language_response": "Okay, I've analyzed your top spending locations. It seems you've spent the most at:\n\n*   W/D FR SAV MNL\_GTZON SAMPALOC, M ML: â‚±45,504.97\n*   W/D FR SAV BDO/005542 54SM STAMESA BDO: â‚±36,550.37\n*   W/D FR SAV BDO/002013 01MAYON-N R BDO: â‚±34,885.71\n*   POS W/D SV SALARYMAN TAGUIG MLIC: â‚±25,980.86\n*   POS W/D SV HEALTHY OP POS: â‚±16,545.71\n\nDo you want to explore any of these further? Perhaps see transactions from a specific location?"
}
```
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_nonml.py", line 245, in get_gemini_response
    response_dict = json.loads(json_str)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 353, in raw_decode
    obj, end = self.scan_once(s, idx)
json.decoder.JSONDecodeError: Invalid \escape: line 3 column 138 (char 341)
2025-06-15 17:39:35,189 - __main__ - ERROR - Gemini failed to generate final NL response after query execution. Assistant response: I executed the query, but I had trouble forming a clear response. Please try again.
2025-06-15 17:39:41,721 - __main__ - INFO - User Query (en): tell me more about my highest spendings
2025-06-15 17:39:43,462 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:39:43,463 - __main__ - INFO - Generated SQL Query: SELECT "Counter party name", SUM(Amount) AS TotalSpending FROM transactions WHERE "Credit/debit indicator" = 'Debit' GROUP BY "Counter party name" ORDER BY TotalSpending DESC LIMIT 5;
2025-06-15 17:39:43,463 - __main__ - INFO - Database connection established.
2025-06-15 17:39:43,465 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x109a2fc10>, <sqlite3.Row object at 0x109a2fc30>, <sqlite3.Row object at 0x109a2fcb0>, <sqlite3.Row object at 0x109a2f190>, <sqlite3.Row object at 0x109a2f350>]
2025-06-15 17:39:45,717 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:39:45,717 - __main__ - INFO - Final Assistant Response (NL): Okay, here's a breakdown of your top 5 highest spendings:

*   **W/D FR SAV MNL_GTZON SAMPALOC, M ML:** â‚±45,504.97
*   **W/D FR SAV BDO/005542 54SM STAMESA BDO:** â‚±36,550.37
*   **W/D FR SAV BDO/002013 01MAYON-N R BDO:** â‚±34,885.71
*   **POS W/D SV SALARYMAN TAGUIG MLIC:** â‚±25,980.86
*   **POS W/D SV HEALTHY OP POS:** â‚±16,545.71

These are your highest spending transactions. Let me know if you'd like a more detailed look at any of these!
2025-06-15 17:39:59,094 - __main__ - INFO - User Query (en): what do they mean
2025-06-15 17:40:02,813 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:40:02,814 - __main__ - INFO - Generated SQL Query: SELECT DISTINCT `Counter party name` FROM transactions WHERE `Counter party name` IN ('W/D FR SAV MNL_GTZON SAMPALOC, M ML', 'W/D FR SAV BDO/005542 54SM STAMESA BDO', 'W/D FR SAV BDO/002013 01MAYON-N R BDO', 'POS W/D SV SALARYMAN TAGUIG MLIC', 'POS W/D SV HEALTHY OP POS');
2025-06-15 17:40:02,815 - __main__ - INFO - Database connection established.
2025-06-15 17:40:02,818 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x109a2faf0>, <sqlite3.Row object at 0x109a2fa90>, <sqlite3.Row object at 0x109a2fcd0>, <sqlite3.Row object at 0x109a2ffd0>, <sqlite3.Row object at 0x109a2fd70>]
2025-06-15 17:40:05,280 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:40:05,280 - __main__ - INFO - Final Assistant Response (NL): Okay, it looks like you're asking me what these counter party names mean. Unfortunately, without more context about your specific transactions, it's hard for me to say exactly what each one represents. 

However, I can make some educated guesses:

*   **W/D FR SAV BDO**: This likely refers to a withdrawal from your savings account, potentially at a BDO branch. The numbers/names after the 'BDO/' might indicate the specific branch location. For example, '54SM STAMESA' could be a branch at SM Sta. Mesa in Manila.
*   **POS W/D SV**: This probably means a Point of Sale withdrawal using your savings account. 'SALARYMAN TAGUIG MLIC' and 'HEALTHY OP POS' are likely the names of the merchants where you made these withdrawals. 'TAGUIG MLIC' could refer to a location in Taguig City, possibly near the MERALCO building.

To get a clearer picture, you might want to check your receipts or online banking statements for more details on each transaction. Is there anything else I can help you with today?
2025-06-15 17:45:08,741 - __main__ - INFO - Flask Application started.
2025-06-15 17:45:08,756 - __main__ - INFO - Attempting to preload 'anonymized_transactions.csv'...
2025-06-15 17:45:08,765 - __main__ - INFO - Schema cache invalidated.
2025-06-15 17:45:08,765 - __main__ - INFO - CSV data loaded into table 'bank_transactions' with 2100 rows.
2025-06-15 17:45:08,766 - __main__ - INFO - Database schema retrieved and cached (newly).
2025-06-15 17:45:08,809 - __main__ - INFO - Philippine holidays fetched and cached (newly).
2025-06-15 17:52:29,210 - __main__ - INFO - Flask Application started.
2025-06-15 17:52:29,227 - __main__ - INFO - Database schema retrieved and cached (newly).
2025-06-15 17:52:29,272 - __main__ - INFO - Philippine holidays fetched and cached (newly).
2025-06-15 17:52:38,566 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-15 17:52:42,380 - __main__ - INFO - User Query (en): hello
2025-06-15 17:52:46,705 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:52:46,705 - __main__ - INFO - Generated SQL Query: SELECT 'Hello, how can I help you with your bank transactions today?'
2025-06-15 17:52:46,707 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1
2025-06-15 17:52:47,670 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:52:47,670 - __main__ - INFO - Final Assistant Response (NL): Hello! How can I help you with your bank transactions today? I'm ready to assist with any questions or requests you might have. Let me know what's on your mind!
2025-06-15 17:53:04,752 - __main__ - INFO - User Query (en): what are the transactions i mostly spent with?
2025-06-15 17:53:09,541 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:53:09,542 - __main__ - INFO - Generated SQL Query: SELECT
  CASE
    WHEN LOWER("Source") LIKE '%angkas%' OR LOWER("Source") LIKE '%moveit%' OR LOWER("Source") LIKE '%grab%' OR LOWER("Source") LIKE '%taxi%' OR LOWER("Source") LIKE '%jeepney%' OR LOWER("Source") LIKE '%bus%' OR LOWER("Source") LIKE '%mrt%' OR LOWER("Source") LIKE '%lrt%' OR LOWER("Source") LIKE '%fare%' OR LOWER("Source") LIKE '%transport%' THEN 'Transportation'
    WHEN LOWER("Source") LIKE '%jollibee%' OR LOWER("Source") LIKE '%mcdo%' OR LOWER("Source") LIKE '%mcdonalds%' OR LOWER("Source") LIKE '%mang inasal%' OR LOWER("Source") LIKE '%chowking%' OR LOWER("Source") LIKE '%goldilocks%' OR LOWER("Source") LIKE '%red ribbon%' OR LOWER("Source") LIKE '%foodpanda%' OR LOWER("Source") LIKE '%grabfood%' OR LOWER("Source") LIKE '%restaurant%' OR LOWER("Source") LIKE '%cafe%' OR LOWER("Source") LIKE '%dining%' OR LOWER("Source") LIKE '%food%' OR LOWER("Source") LIKE '%meal%' THEN 'Food/Dining'
    WHEN LOWER("Source") LIKE '%meralco%' OR LOWER("Source") LIKE '%maynilad%' OR LOWER("Source") LIKE '%manila water%' OR LOWER("Source") LIKE '%converge%' OR LOWER("Source") LIKE '%pldt%' OR LOWER("Source") LIKE '%globe%' OR LOWER("Source") LIKE '%sky cable%' OR LOWER("Source") LIKE '%internet%' OR LOWER("Source") LIKE '%electricity%' OR LOWER("Source") LIKE '%water bill%' OR LOWER("Source") LIKE '%utility%' THEN 'Utilities/Bills'
    WHEN LOWER("Source") LIKE '%sm store%' OR LOWER("Source") LIKE '%sm supermarket%' OR LOWER("Source") LIKE '%ayala malls%' OR LOWER("Source") LIKE '%robinsons%' OR LOWER("Source") LIKE '%puregold%' OR LOWER("Source") LIKE '%waltermart%' OR LOWER("Source") LIKE '%rustans%' OR LOWER("Source") LIKE '%lazada%' OR LOWER("Source") LIKE '%shopee%' OR LOWER("Source") LIKE '%shopping%' OR LOWER("Source") LIKE '%grocery%' OR LOWER("Source") LIKE '%supermarket%' OR LOWER("Source") LIKE '%mall%' THEN 'Shopping/Groceries'
    WHEN LOWER("Source") LIKE '%palawan express%' OR LOWER("Source") LIKE '%lbc%' OR LOWER("Source") LIKE '%gcash%' OR LOWER("Source") LIKE '%paymaya%' OR LOWER("Source") LIKE '%instapay%' OR LOWER("Source") LIKE '%pesonet%' OR LOWER("Source") LIKE '%money transfer%' OR LOWER("Source") LIKE '%remittance%' OR LOWER("Source") LIKE '%send money%' THEN 'Remittances/Transfers'
    WHEN LOWER("Source") LIKE '%atm%' OR LOWER("Source") LIKE '%cash withdrawal%' OR LOWER("Source") LIKE '%cashout%' THEN 'Cash Withdrawals'
    WHEN LOWER("Source") LIKE '%loan payment%' OR LOWER("Source") LIKE '%loan amortization%' OR LOWER("Source") LIKE '%interest payment%' THEN 'Loan Payments'
    WHEN LOWER("Source") LIKE '%service charge%' OR LOWER("Source") LIKE '%bank fee%' OR LOWER("Source") LIKE '%monthly fee%' OR LOWER("Source") LIKE '%atm fee%' THEN 'Service Charges/Bank Fees'
    ELSE 'Other'
  END AS transaction_type,
  SUM("Amount") AS total_amount
FROM bank_transactions
WHERE "Credit/debit indicator" = 'Debit'
GROUP BY
  transaction_type
ORDER BY
  total_amount DESC;

2025-06-15 17:53:09,566 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1
2025-06-15 17:53:11,792 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:53:11,793 - __main__ - INFO - Final Assistant Response (NL): Okay, I've looked into your spending habits. It seems like a large portion, approximately â‚±629,533.03, falls under 'Other' transaction types. Unfortunately, I don't have more specific details about what these 'Other' transactions were for. Want help reviewing this to see if we can categorize them better or spot anything unusual? Let me know!
2025-06-15 17:53:31,942 - __main__ - INFO - User Query (en): what is the highest spending i had
2025-06-15 17:53:32,907 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:53:32,908 - __main__ - INFO - Generated SQL Query: SELECT "Counter party name", "Amount", "Book date" FROM bank_transactions ORDER BY "Amount" DESC LIMIT 1
2025-06-15 17:53:32,915 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1
2025-06-15 17:53:34,288 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:53:34,288 - __main__ - INFO - Final Assistant Response (NL): Alright, I've checked your transactions! It looks like your single highest spending was â‚±5,857.86 on May 30, 2025, with BDOPAY BN P2MQR-PAY2-09693834- P2MI. BDOPAY often handles payments via QR code, so this might be for a purchase you made by scanning a QR code, likely through the P2MI (Philippine Payments Management, Inc.) network. Does that sound right? Want me to investigate this transaction further or check where else you might have used BDOPAY?
2025-06-15 17:54:05,468 - __main__ - INFO - User Query (en): oh, give me top 5 highest spending and receivables
2025-06-15 17:54:06,575 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:54:06,576 - __main__ - INFO - Generated SQL Query: SELECT "Counter party name", "Amount", "Credit/debit indicator", "Book date" FROM bank_transactions ORDER BY "Amount" DESC LIMIT 5
2025-06-15 17:54:06,578 - __main__ - INFO - SQL Query Executed Successfully. Results count: 5
2025-06-15 17:54:09,342 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:54:09,342 - __main__ - INFO - Final Assistant Response (NL): Okay, here are your top 5 highest spending transactions! It looks like the following:

*   **â‚±5,857.86** on May 30, 2025, with BDOPAY BN P2MQR-PAY2-09693834- P2MI (Debit). As we discussed before, this is likely a QR code payment, possibly through the P2MI network.
*   **â‚±5,603.53** on May 29, 2025, from W/D FR SAV MNL_GTZON SAMPALOC, M ML (Debit). This looks like a withdrawal from your savings account at an ATM in the GTZON Sampaloc area of Manila. 
*   **â‚±5,563.81** on May 29, 2025, from W/D FR SAV MNL_GTZON SAMPALOC, M ML (Debit). Another withdrawal from the same ATM as above. 
*   **â‚±5,528.66** on May 30, 2025, with BDOPAY BN P2MQR-PAY2-98256727- P2MI (Debit). Another QR code payment via BDOPAY. 
*   **â‚±5,517.82** on May 29, 2025, from W/D FR SAV MNL_GTZON SAMPALOC, M ML (Debit). Yet another withdrawal from the GTZON Sampaloc ATM. It looks like you withdrew a substantial amount of cash on May 29th from the same ATM. Did you perhaps need cash for a specific purpose around that time? Let me know if that looks off!
2025-06-15 17:54:32,889 - __main__ - INFO - User Query (en): tell me more about my withdrawals, where did it take place?
2025-06-15 17:54:34,128 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:54:34,129 - __main__ - INFO - Generated SQL Query: SELECT "Book date", "Counter party name", "Amount" FROM bank_transactions WHERE LOWER("Credit/debit indicator") = 'debit' AND LOWER("Transaction Details") LIKE '%w/d%' OR LOWER("Transaction Details") LIKE '%withdrawal%' ORDER BY "Book date"
2025-06-15 17:54:34,134 - __main__ - INFO - SQL Query Executed Successfully. Results count: 0
2025-06-15 17:54:35,556 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:54:35,556 - __main__ - INFO - Final Assistant Response (NL): Okay, I can tell you about your withdrawals. Based on the information I have, it seems like I don't have specific details regarding where your withdrawals took place in this particular transaction record, other than what we already discussed. However, I can double check if there are any specific branch details available for each transaction if you like. Want me to do that?
2025-06-15 17:54:43,000 - __main__ - INFO - User Query (en): tell me more about the mentioned withdrawals, where did it take place?
2025-06-15 17:54:44,568 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:54:44,569 - __main__ - INFO - Generated SQL Query: SELECT "Book date", "Counter party name", "Amount", "Credit/debit indicator", "Source" FROM bank_transactions WHERE "Counter party name" LIKE '%W/D FR SAV MNL_GTZON SAMPALOC, M ML%' AND "Credit/debit indicator" = 'Debit' ORDER BY "Book date"
2025-06-15 17:54:44,572 - __main__ - INFO - SQL Query Executed Successfully. Results count: 18
2025-06-15 17:54:46,513 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:54:46,513 - __main__ - INFO - Final Assistant Response (NL): Okay, let's dig deeper into those withdrawals! It seems like all the withdrawals you're asking about happened on May 29, 2025, and they were all from the same source: 'W/D FR SAV MNL_GTZON SAMPALOC, M ML'. This indicates you withdrew cash from your savings account at an ATM located in the GTZON area of Sampaloc, Manila. Does that ring a bell? 

To be more specific, 'GTZON' likely refers to the GTZON Place mall in Sampaloc. So, these withdrawals would have been made from an ATM around that area. Was there something specific you needed cash for around that time? Let me know if anything seems amiss!
2025-06-15 17:55:02,725 - __main__ - INFO - User Query (en): ahh, yes , it's a street though. so yeah
2025-06-15 17:55:04,536 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:55:04,537 - __main__ - INFO - Generated SQL Query: SELECT "Counter party name", "Book date", "Amount" FROM bank_transactions WHERE "Counter party name" LIKE '%W/D FR SAV MNL_GTZON SAMPALOC, M ML%' AND "Book date" LIKE '%May 29, 2025%'
2025-06-15 17:55:04,542 - __main__ - INFO - SQL Query Executed Successfully. Results count: 0
2025-06-15 17:55:06,069 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:55:06,069 - __main__ - INFO - Final Assistant Response (NL): Ah, I see! So the ATM wasn't necessarily *inside* GTZON Place, but somewhere along the street in that Sampaloc area. Thanks for clarifying! Is there anything else I can help you with regarding those withdrawals or any other transactions? Just let me know!
2025-06-15 17:56:09,074 - __main__ - INFO - Flask Application started.
2025-06-15 17:56:09,089 - __main__ - INFO - Database schema retrieved and cached (newly).
2025-06-15 17:56:09,131 - __main__ - INFO - Philippine holidays fetched and cached (newly).
2025-06-15 17:56:09,171 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-15 17:56:27,022 - __main__ - INFO - User Query (es): puedes ayudarme en los gastos mas altas
2025-06-15 17:56:29,105 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:56:29,106 - __main__ - INFO - Generated SQL Query: SELECT * FROM bank_transactions ORDER BY "Amount" DESC LIMIT 10;
2025-06-15 17:56:29,108 - __main__ - INFO - SQL Query Executed Successfully. Results count: 10
2025-06-15 17:56:33,152 - __main__ - ERROR - Error decoding JSON from Gemini: Invalid \escape: line 2 column 428 (char 429). Raw content: ```python
{
  "natural_language_response": "Â¡Hola! Claro que sÃ­, te puedo ayudar con tus gastos mÃ¡s altos. AquÃ­ tienes un resumen de las transacciones mÃ¡s grandes que veo en tu cuenta:\n\n*   **BDOPAY BN P2MQR-PAY2-09693834- P2MI (30 de mayo de 2025):** â‚±5,857.86 - Este parece ser un pago realizado a travÃ©s de BDOPAY, probablemente usando un cÃ³digo QR. Es posible que sea un pago a un comercio o persona individual.\n*   **W/D FR SAV MNL\_GTZON SAMPALOC, M ML (29 de mayo de 2025):** â‚±5,603.53 - Esto parece ser un retiro de efectivo de un cajero automÃ¡tico ubicado en la sucursal de GTZON Sampaloc en Manila.\n*   **W/D FR SAV MNL\_GTZON SAMPALOC, M ML (29 de mayo de 2025):** â‚±5,563.81 - TambiÃ©n es un retiro de efectivo de la sucursal de GTZON Sampaloc en Manila.\n*   **BDOPAY BN P2MQR-PAY2-98256727- P2MI (30 de mayo de 2025):** â‚±5,528.66 - Otro pago con BDOPAY usando un cÃ³digo QR.\n*   **W/D FR SAV MNL\_GTZON SAMPALOC, M ML (29 de mayo de 2025):** â‚±5,517.82 - Otro retiro de efectivo de la sucursal de GTZON Sampaloc en Manila.\n*   **W/D FR SAV MNL\_GTZON SAMPALOC, M ML (29 de mayo de 2025):** â‚±5,416.53 - Otro retiro de efectivo de la sucursal de GTZON Sampaloc en Manila.\n*   **Received from Other Bank (28 de mayo de 2025):** â‚±5,408.41 - Esto es un crÃ©dito en tu cuenta, recibido desde otro banco.\n*   **Received from Other Bank (28 de mayo de 2025):** â‚±5,265.35 - Esto es un crÃ©dito en tu cuenta, recibido desde otro banco.\n*   **W/D FR SAV MNL\_GTZON SAMPALOC, M ML (29 de mayo de 2025):** â‚±5,194.56 - Otro retiro de efectivo de la sucursal de GTZON Sampaloc en Manila.\n*   **Received from Other Bank (28 de mayo de 2025):** â‚±5,156.71 - Esto es un crÃ©dito en tu cuenta, recibido desde otro banco.\n\nVeo que tienes varios retiros de efectivo del mismo lugar.  Â¿Hay algo en particular que te gustarÃ­a revisar de esta lista? Â¿O quieres que investigue mÃ¡s a fondo alguno de estos gastos?"
}
```
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_nonml.py", line 334, in get_gemini_json_response
    response_dict = json.loads(json_str)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 353, in raw_decode
    obj, end = self.scan_once(s, idx)
json.decoder.JSONDecodeError: Invalid \escape: line 2 column 428 (char 429)
2025-06-15 17:56:33,156 - __main__ - ERROR - Gemini failed at NL generation step after query execution. Error: Error decoding JSON from Gemini: Invalid \escape: line 2 column 428 (char 429). Raw: ```python
{
  "natural_language_response": "Â¡Hola! Claro que sÃ­, te puedo ayudar con tus gastos mÃ¡s altos. AquÃ­ tienes un resumen de las transacciones mÃ¡s grandes que veo en tu cuenta:\n\n*   **BDOPAY BN P2MQR-PAY2-09693834- P2MI (30 de mayo de 2025):** â‚±5,857.86 - Este parece ser un pago realizado a travÃ©s de BDOPAY, probablemente usando un cÃ³digo QR. Es posible que sea un pago a un comercio o persona individual.\n*   **W/D FR SAV MNL\_GTZON SAMPALOC, M ML (29 de mayo de 2025):** â‚±5,603.53 - Esto parece ser un retiro de efectivo de un cajero automÃ¡tico ubicado en la sucursal de GTZON Sampaloc en Manila.\n*   **W/D FR SAV MNL\_GTZON SAMPALOC, M ML (29 de mayo de 2025):** â‚±5,563.81 - TambiÃ©n es un retiro de efectivo de la sucursal de GTZON Sampaloc en Manila.\n*   **BDOPAY BN P2MQR-PAY2-98256727- P2MI (30 de mayo de 2025):** â‚±5,528.66 - Otro pago con BDOPAY usando un cÃ³digo QR.\n*   **W/D FR SAV MNL\_GTZON SAMPALOC, M ML (29 de mayo de 2025):** â‚±5,517.82 - Otro retiro de efectivo de la sucursal de GTZON Sampaloc en Manila.\n*   **W/D FR SAV MNL\_GTZON SAMPALOC, M ML (29 de mayo de 2025):** â‚±5,416.53 - Otro retiro de efectivo de la sucursal de GTZON Sampaloc en Manila.\n*   **Received from Other Bank (28 de mayo de 2025):** â‚±5,408.41 - Esto es un crÃ©dito en tu cuenta, recibido desde otro banco.\n*   **Received from Other Bank (28 de mayo de 2025):** â‚±5,265.35 - Esto es un crÃ©dito en tu cuenta, recibido desde otro banco.\n*   **W/D FR SAV MNL\_GTZON SAMPALOC, M ML (29 de mayo de 2025):** â‚±5,194.56 - Otro retiro de efectivo de la sucursal de GTZON Sampaloc en Manila.\n*   **Received from Other Bank (28 de mayo de 2025):** â‚±5,156.71 - Esto es un crÃ©dito en tu cuenta, recibido desde otro banco.\n\nVeo que tienes varios retiros de efectivo del mismo lugar.  Â¿Hay algo en particular que te gustarÃ­a revisar de esta lista? Â¿O quieres que investigue mÃ¡s a fondo alguno de estos gastos?"
}
```
2025-06-15 17:56:37,623 - __main__ - INFO - User Query (es): puedes ayudarme en los gastos mas altas?
2025-06-15 17:56:38,761 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:56:38,762 - __main__ - INFO - Generated SQL Query: SELECT "Counter party name", SUM("Amount") AS TotalGastos
FROM bank_transactions
WHERE "Credit/debit indicator" = 'Debit'
GROUP BY "Counter party name"
ORDER BY TotalGastos DESC
LIMIT 5;
2025-06-15 17:56:38,768 - __main__ - INFO - SQL Query Executed Successfully. Results count: 5
2025-06-15 17:56:42,558 - __main__ - ERROR - Error decoding JSON from Gemini: Invalid \escape: line 2 column 211 (char 212). Raw content: ```python
{
  "natural_language_response": "Â¡Hola! Claro que sÃ­, puedo ayudarte a revisar tus gastos mÃ¡s altos. AquÃ­ tienes un resumen basado en la informaciÃ³n que tengo:\n\n*   **W/D FR SAV BDO/005542 54SM STAMESA BDO:** \$83,512.53\n    *   Esto parece ser un retiro de tu cuenta de ahorros en una sucursal de BDO ubicada en SM Sta. Mesa. La abreviatura '54SM STAMESA' podrÃ­a referirse a la ubicaciÃ³n especÃ­fica dentro del centro comercial SM Sta. Mesa. Es posible que haya sido un retiro en cajero automÃ¡tico o en ventanilla.\n*   **W/D FR SAV MNL\_GTZON SAMPALOC, M ML:** \$76,849.16\n    *   Otro retiro de tu cuenta de ahorros, esta vez en una sucursal de BDO en Sampaloc, Manila, cerca de GTZON (probablemente una referencia a la zona de la calle G. Tuazon). 'M ML' podrÃ­a indicar Manila, Metro Manila. De nuevo, podrÃ­a ser un retiro en cajero automÃ¡tico o en ventanilla.\n*   **POS W/D SV HEALTHY OP POS:** \$57,748.53\n    *   Este gasto parece ser un retiro en un punto de venta (POS) en 'HEALTHY OP POS'. No tengo detalles especÃ­ficos sobre quÃ© tipo de comercio es 'HEALTHY OP POS'.\n*   **W/D FR SAV BDO/002013 01MAYON-N R BDO:** \$47,547.56\n    *   Otro retiro de tu cuenta de ahorros en una sucursal de BDO ubicada cerca de la calle Mayon en Manila. '01MAYON-N R' probablemente se refiere a la calle Mayon. Al igual que los anteriores, podrÃ­a ser un retiro en cajero automÃ¡tico o en ventanilla.\n*   **POS W/D SV MOVE IT MAKATI ATP:** \$28,777.90\n    *   Este gasto parece ser un retiro en un punto de venta (POS) relacionado con 'MOVE IT' en Makati. Dado el nombre, podrÃ­a ser una transacciÃ³n relacionada con el servicio de entrega 'Move It'. 'MAKATI ATP' podrÃ­a referirse a una ubicaciÃ³n especifica, quizÃ¡s cerca de una estaciÃ³n de tren.\n\nÂ¿Hay algo mÃ¡s en lo que te pueda ayudar con estos gastos? Â¿Quieres que revisemos alguna transacciÃ³n en particular o te gustarÃ­a ver tus gastos por categorÃ­a?"
}
```
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_nonml.py", line 334, in get_gemini_json_response
    response_dict = json.loads(json_str)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 353, in raw_decode
    obj, end = self.scan_once(s, idx)
json.decoder.JSONDecodeError: Invalid \escape: line 2 column 211 (char 212)
2025-06-15 17:56:42,560 - __main__ - ERROR - Gemini failed at NL generation step after query execution. Error: Error decoding JSON from Gemini: Invalid \escape: line 2 column 211 (char 212). Raw: ```python
{
  "natural_language_response": "Â¡Hola! Claro que sÃ­, puedo ayudarte a revisar tus gastos mÃ¡s altos. AquÃ­ tienes un resumen basado en la informaciÃ³n que tengo:\n\n*   **W/D FR SAV BDO/005542 54SM STAMESA BDO:** \$83,512.53\n    *   Esto parece ser un retiro de tu cuenta de ahorros en una sucursal de BDO ubicada en SM Sta. Mesa. La abreviatura '54SM STAMESA' podrÃ­a referirse a la ubicaciÃ³n especÃ­fica dentro del centro comercial SM Sta. Mesa. Es posible que haya sido un retiro en cajero automÃ¡tico o en ventanilla.\n*   **W/D FR SAV MNL\_GTZON SAMPALOC, M ML:** \$76,849.16\n    *   Otro retiro de tu cuenta de ahorros, esta vez en una sucursal de BDO en Sampaloc, Manila, cerca de GTZON (probablemente una referencia a la zona de la calle G. Tuazon). 'M ML' podrÃ­a indicar Manila, Metro Manila. De nuevo, podrÃ­a ser un retiro en cajero automÃ¡tico o en ventanilla.\n*   **POS W/D SV HEALTHY OP POS:** \$57,748.53\n    *   Este gasto parece ser un retiro en un punto de venta (POS) en 'HEALTHY OP POS'. No tengo detalles especÃ­ficos sobre quÃ© tipo de comercio es 'HEALTHY OP POS'.\n*   **W/D FR SAV BDO/002013 01MAYON-N R BDO:** \$47,547.56\n    *   Otro retiro de tu cuenta de ahorros en una sucursal de BDO ubicada cerca de la calle Mayon en Manila. '01MAYON-N R' probablemente se refiere a la calle Mayon. Al igual que los anteriores, podrÃ­a ser un retiro en cajero automÃ¡tico o en ventanilla.\n*   **POS W/D SV MOVE IT MAKATI ATP:** \$28,777.90\n    *   Este gasto parece ser un retiro en un punto de venta (POS) relacionado con 'MOVE IT' en Makati. Dado el nombre, podrÃ­a ser una transacciÃ³n relacionada con el servicio de entrega 'Move It'. 'MAKATI ATP' podrÃ­a referirse a una ubicaciÃ³n especifica, quizÃ¡s cerca de una estaciÃ³n de tren.\n\nÂ¿Hay algo mÃ¡s en lo que te pueda ayudar con estos gastos? Â¿Quieres que revisemos alguna transacciÃ³n en particular o te gustarÃ­a ver tus gastos por categorÃ­a?"
}
```
2025-06-15 17:56:55,927 - __main__ - INFO - User Query (es): puedes ayudarme en los gastos mas altas?
2025-06-15 17:56:56,948 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:56:56,948 - __main__ - INFO - Generated SQL Query: N/A
2025-06-15 17:56:56,949 - __main__ - ERROR - Database error during SQL execution for query 'N/A': near "N": syntax error
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_nonml.py", line 417, in chat
    cursor.execute(sql_query)
sqlite3.OperationalError: near "N": syntax error
2025-06-15 17:57:22,750 - __main__ - INFO - Flask Application started.
2025-06-15 17:57:22,764 - __main__ - INFO - Database connection established.
2025-06-15 17:57:22,764 - __main__ - INFO - Database schema retrieved and cached.
2025-06-15 17:57:22,807 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-15 17:57:22,848 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-15 17:57:32,545 - __main__ - INFO - User Query (es): hola, necesito ayuda de ti
2025-06-15 17:57:34,687 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:57:34,688 - __main__ - INFO - Generated SQL Query: None
2025-06-15 17:57:34,689 - __main__ - INFO - Database connection established.
2025-06-15 17:57:34,690 - __main__ - CRITICAL - An unexpected critical error occurred: argument 1 must be str, not None
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_nonml.py", line 318, in chat
    cursor.execute(sql_query)
TypeError: argument 1 must be str, not None
2025-06-15 17:57:42,429 - __main__ - INFO - User Query (es): hola, necesito ayuda con mi tarjeta
2025-06-15 17:57:43,498 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:57:43,499 - __main__ - INFO - Generated SQL Query: SELECT 'Â¡Hola! Estoy aquÃ­ para ayudarte con tu tarjeta. Â¿QuÃ© informaciÃ³n especÃ­fica necesitas? ðŸ˜Š'
2025-06-15 17:57:43,499 - __main__ - INFO - Database connection established.
2025-06-15 17:57:43,500 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10afa7ed0>]
2025-06-15 17:57:45,097 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:57:45,097 - __main__ - INFO - Final Assistant Response (NL): Â¡Hola! Estoy aquÃ­ para ayudarte con tu tarjeta. Â¿QuÃ© informaciÃ³n especÃ­fica necesitas? ðŸ˜Š
2025-06-15 17:58:04,458 - __main__ - INFO - User Query (es): que son transacciones con gastos mas altas? dame 5
2025-06-15 17:58:05,842 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:58:05,842 - __main__ - INFO - Generated SQL Query: SELECT "Counter party name", "Book date", Amount, "Credit/debit indicator" FROM transactions WHERE "Credit/debit indicator" = 'Debit' ORDER BY Amount DESC LIMIT 5;
2025-06-15 17:58:05,845 - __main__ - INFO - Database connection established.
2025-06-15 17:58:05,847 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10afa7ed0>, <sqlite3.Row object at 0x10afa7ef0>, <sqlite3.Row object at 0x10afa7e30>, <sqlite3.Row object at 0x10afa7dd0>, <sqlite3.Row object at 0x10afa7e10>]
2025-06-15 17:58:08,091 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:58:08,092 - __main__ - INFO - Final Assistant Response (NL): Â¡Claro! AquÃ­ estÃ¡n las 5 transacciones con los gastos mÃ¡s altos en tu cuenta:

*   29 de mayo de 2025: Retiro en W/D FR SAV MNL_GTZON SAMPALOC, M ML por â‚±5,959.10
*   29 de mayo de 2025: Retiro en W/D FR SAV MNL_GTZON SAMPALOC, M ML por â‚±5,912.08
*   29 de mayo de 2025: Retiro en W/D FR SAV MNL_GTZON SAMPALOC, M ML por â‚±5,786.64
*   30 de mayo de 2025: Pago BDOPAY BN P2MQR-PAY2-83646535- P2MI por â‚±5,299.49
*   30 de mayo de 2025: Pago BDOPAY BN P2MQR-PAY2-70692273- P2MI por â‚±4,494.82

Â¿Quieres revisar alguna de estas transacciones en detalle? ðŸ˜Š
2025-06-15 17:58:19,570 - __main__ - INFO - User Query (es): si, quiero detalles
2025-06-15 17:58:22,009 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:58:22,010 - __main__ - INFO - Generated SQL Query: SELECT "Book date", "Counter party name", "Credit/debit indicator", Amount, Currency, Source FROM transactions ORDER BY Amount DESC LIMIT 5;
2025-06-15 17:58:22,012 - __main__ - INFO - Database connection established.
2025-06-15 17:58:22,015 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10afa7dd0>, <sqlite3.Row object at 0x10afa7ed0>, <sqlite3.Row object at 0x10afa7f30>, <sqlite3.Row object at 0x10afa7e10>, <sqlite3.Row object at 0x10afa73b0>]
2025-06-15 17:58:24,031 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:58:24,032 - __main__ - INFO - Final Assistant Response (NL): Â¡Por supuesto! AquÃ­ tienes los detalles de las 5 transacciones con los gastos mÃ¡s altos:

*   **29 de mayo de 2025:** Retiro de â‚±5,959.10 en W/D FR SAV MNL_GTZON SAMPALOC, M ML.
*   **28 de mayo de 2025:** Recibo de â‚±5,937.10 desde Otro Banco.
*   **29 de mayo de 2025:** Retiro de â‚±5,912.08 en W/D FR SAV MNL_GTZON SAMPALOC, M ML.
*   **28 de mayo de 2025:** Recibo de â‚±5,850.91 desde Otro Banco.
*   **28 de mayo de 2025:** Recibo de â‚±5,828.88 desde Otro Banco.

Â¿Te gustarÃ­a que revisemos alguna de estas transacciones en particular? ðŸ˜Š
2025-06-15 17:58:40,735 - __main__ - INFO - User Query (es): si, quiero detalles sobre los mercados
2025-06-15 17:58:41,968 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:58:41,968 - __main__ - INFO - Generated SQL Query: SELECT "Book date", "Counter party name", Amount, "Credit/debit indicator" FROM transactions WHERE LOWER("Counter party name") LIKE '%mercado%' ORDER BY "Book date" ASC
2025-06-15 17:58:41,970 - __main__ - INFO - Database connection established.
2025-06-15 17:58:41,972 - __main__ - INFO - SQL Query Executed Successfully. Results: []
2025-06-15 17:58:43,400 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:58:43,400 - __main__ - INFO - Final Assistant Response (NL): Â¡Entendido! AquÃ­ estÃ¡n los detalles de las transacciones relacionadas con 'mercados' en tu cuenta:

Lo siento, no encontrÃ© transacciones relacionadas con mercados en tu cuenta. Â¿Hay algo mÃ¡s en lo que pueda ayudarte?
2025-06-15 17:59:01,871 - __main__ - INFO - User Query (es): cuanto gastÃ© en chooks
2025-06-15 17:59:05,593 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:59:05,594 - __main__ - INFO - Generated SQL Query: SELECT SUM(Amount) FROM transactions WHERE LOWER("Counter party name") LIKE '%chooks%' AND "Credit/debit indicator" = 'Debit';
2025-06-15 17:59:05,595 - __main__ - INFO - Database connection established.
2025-06-15 17:59:05,598 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10f0923f0>]
2025-06-15 17:59:06,916 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:59:06,916 - __main__ - INFO - Final Assistant Response (NL): Â¡Claro! Gastaste â‚±13,413.87 en 'chooks'. Â¿Necesitas algo mÃ¡s? ðŸ˜Š
2025-06-15 17:59:24,924 - __main__ - INFO - User Query (es): si, digame mas detalles con ese transaccion (chooks)
2025-06-15 17:59:26,881 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:59:26,882 - __main__ - INFO - Generated SQL Query: SELECT * FROM transactions WHERE LOWER("Counter party name") LIKE '%chooks%';
2025-06-15 17:59:26,884 - __main__ - INFO - Database connection established.
2025-06-15 17:59:26,886 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10f0923b0>, <sqlite3.Row object at 0x10f092270>, <sqlite3.Row object at 0x10f0922f0>, <sqlite3.Row object at 0x10f092070>, <sqlite3.Row object at 0x10f092450>, <sqlite3.Row object at 0x10f092350>, <sqlite3.Row object at 0x10f092470>, <sqlite3.Row object at 0x10f092290>, <sqlite3.Row object at 0x10f092410>, <sqlite3.Row object at 0x10f092130>, <sqlite3.Row object at 0x10f0922d0>, <sqlite3.Row object at 0x10f092310>]
2025-06-15 17:59:29,856 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:59:29,857 - __main__ - INFO - Final Assistant Response (NL): Â¡AquÃ­ estÃ¡n los detalles de tus transacciones en 'Chooks', todas del 27 de mayo de 2025:

*   POS W/D SV CHOOKS SM QUEZON ATP por â‚±927.77
*   POS W/D SV CHOOKS SM QUEZON ATP por â‚±1,020.00
*   POS W/D SV CHOOKS SM QUEZON ATP por â‚±1,364.62
*   POS W/D SV CHOOKS SM QUEZON ATP por â‚±635.49
*   POS W/D SV CHOOKS SM QUEZON ATP por â‚±1,402.83
*   POS W/D SV CHOOKS SM QUEZON ATP por â‚±1,020.00
*   POS W/D SV CHOOKS SM QUEZON ATP por â‚±1,447.35
*   POS W/D SV CHOOKS SM QUEZON ATP por â‚±1,321.53
*   POS W/D SV CHOOKS SM QUEZON ATP por â‚±748.06
*   POS W/D SV CHOOKS SM QUEZON ATP por â‚±1,367.93
*   POS W/D SV CHOOKS SM QUEZON ATP por â‚±1,523.48
*   POS W/D SV CHOOKS SM QUEZON ATP por â‚±634.81

Â¿Necesitas saber algo mÃ¡s sobre estas transacciones? ðŸ˜Š
2025-06-15 17:59:45,141 - __main__ - INFO - User Query (es): que significa con el nombre the transaccion
2025-06-15 17:59:46,957 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:59:46,958 - __main__ - INFO - Generated SQL Query: SELECT DISTINCT Source FROM transactions WHERE LOWER("Counter party name") LIKE '%chooks%';
2025-06-15 17:59:46,959 - __main__ - INFO - Database connection established.
2025-06-15 17:59:46,962 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10afa76b0>, <sqlite3.Row object at 0x10afa7f30>, <sqlite3.Row object at 0x10afa7db0>, <sqlite3.Row object at 0x10afa7ed0>, <sqlite3.Row object at 0x10afa7fd0>, <sqlite3.Row object at 0x10afa7490>]
2025-06-15 17:59:48,221 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 17:59:48,221 - __main__ - INFO - Final Assistant Response (NL): Â¡Claro! Las fuentes de transacciÃ³n que he encontrado son: synthetic_5, original, synthetic_4, synthetic_3, synthetic_2, y synthetic_1. Â¿Te gustarÃ­a saber algo mÃ¡s sobre alguna de estas fuentes en particular? ðŸ˜Š
2025-06-15 18:00:12,714 - __main__ - INFO - User Query (es): que son creditos mas altos?
2025-06-15 18:00:14,708 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:00:14,708 - __main__ - INFO - Generated SQL Query: SELECT "Book date", "Counter party name", Amount FROM transactions WHERE "Credit/debit indicator" = 'Credit' ORDER BY Amount DESC LIMIT 5;
2025-06-15 18:00:14,711 - __main__ - INFO - Database connection established.
2025-06-15 18:00:14,712 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10afa7df0>, <sqlite3.Row object at 0x10f092270>, <sqlite3.Row object at 0x10f092410>, <sqlite3.Row object at 0x10f092390>, <sqlite3.Row object at 0x10f092070>]
2025-06-15 18:00:16,649 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:00:16,650 - __main__ - INFO - Final Assistant Response (NL): Â¡Claro! AquÃ­ estÃ¡n los 5 crÃ©ditos mÃ¡s altos en tu cuenta:

*   **28 de mayo de 2025:** Recibido de Otro Banco por â‚±5,937.10
*   **28 de mayo de 2025:** Recibido de Otro Banco por â‚±5,850.91
*   **28 de mayo de 2025:** Recibido de Otro Banco por â‚±5,828.88
*   **28 de mayo de 2025:** Recibido de Otro Banco por â‚±5,725.94
*   **28 de mayo de 2025:** Recibido de Otro Banco por â‚±5,499.39

Â¿Necesitas mÃ¡s detalles sobre alguno de estos crÃ©ditos? ðŸ˜Š
2025-06-15 18:00:33,990 - __main__ - INFO - User Query (es): que sobre con debitos
2025-06-15 18:00:36,291 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:00:36,292 - __main__ - INFO - Generated SQL Query: SELECT Amount, "Counter party name", "Book date" FROM transactions WHERE "Credit/debit indicator" = 'Debit' ORDER BY Amount DESC LIMIT 5;
2025-06-15 18:00:36,294 - __main__ - INFO - Database connection established.
2025-06-15 18:00:36,296 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10f092130>, <sqlite3.Row object at 0x10f0923f0>, <sqlite3.Row object at 0x10f092410>, <sqlite3.Row object at 0x10f092070>, <sqlite3.Row object at 0x10f0923b0>]
2025-06-15 18:00:38,668 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:00:38,668 - __main__ - INFO - Final Assistant Response (NL): Â¡Claro! AquÃ­ estÃ¡n los 5 dÃ©bitos mÃ¡s altos en tu cuenta:

*   **29 de mayo de 2025:** Retiro en W/D FR SAV MNL_GTZON SAMPALOC, M ML por â‚±5,959.10
*   **29 de mayo de 2025:** Retiro en W/D FR SAV MNL_GTZON SAMPALOC, M ML por â‚±5,912.08
*   **29 de mayo de 2025:** Retiro en W/D FR SAV MNL_GTZON SAMPALOC, M ML por â‚±5,786.64
*   **30 de mayo de 2025:** Pago BDOPAY BN P2MQR-PAY2-83646535- P2MI por â‚±5,299.49
*   **30 de mayo de 2025:** Pago BDOPAY BN P2MQR-PAY2-70692273- P2MI por â‚±4,494.82

Â¿Te gustarÃ­a revisar alguno de estos dÃ©bitos en detalle? ðŸ˜Š
2025-06-15 18:00:50,828 - __main__ - INFO - User Query (es): si, que son esos significan?
2025-06-15 18:00:52,264 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:00:52,265 - __main__ - INFO - Generated SQL Query: SELECT DISTINCT "Counter party name" FROM transactions;
2025-06-15 18:00:52,267 - __main__ - INFO - Database connection established.
2025-06-15 18:00:52,269 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10afa7fd0>, <sqlite3.Row object at 0x10afa7ed0>, <sqlite3.Row object at 0x10afa7db0>, <sqlite3.Row object at 0x10afa7f10>, <sqlite3.Row object at 0x10f0923f0>, <sqlite3.Row object at 0x10afa7730>, <sqlite3.Row object at 0x10f0921b0>, <sqlite3.Row object at 0x10f0922f0>, <sqlite3.Row object at 0x10f092070>, <sqlite3.Row object at 0x10f092130>, <sqlite3.Row object at 0x10f092410>, <sqlite3.Row object at 0x10f092350>, <sqlite3.Row object at 0x10f092050>, <sqlite3.Row object at 0x10f0923b0>, <sqlite3.Row object at 0x10f092210>, <sqlite3.Row object at 0x10f092170>, <sqlite3.Row object at 0x10f092510>, <sqlite3.Row object at 0x10f092530>, <sqlite3.Row object at 0x10f092290>, <sqlite3.Row object at 0x10f092370>, <sqlite3.Row object at 0x10f092330>, <sqlite3.Row object at 0x10f0922d0>, <sqlite3.Row object at 0x10f092110>, <sqlite3.Row object at 0x10f092310>, <sqlite3.Row object at 0x10f0925b0>, <sqlite3.Row object at 0x10f092690>, <sqlite3.Row object at 0x10f092630>, <sqlite3.Row object at 0x10f092430>, <sqlite3.Row object at 0x10f0925f0>, <sqlite3.Row object at 0x10f0924f0>, <sqlite3.Row object at 0x10f092590>, <sqlite3.Row object at 0x10f092550>, <sqlite3.Row object at 0x10f092570>, <sqlite3.Row object at 0x10f0926b0>, <sqlite3.Row object at 0x10f0926d0>, <sqlite3.Row object at 0x10f0926f0>, <sqlite3.Row object at 0x10f092710>, <sqlite3.Row object at 0x10f092730>, <sqlite3.Row object at 0x10f092750>, <sqlite3.Row object at 0x10f092770>, <sqlite3.Row object at 0x10f092790>, <sqlite3.Row object at 0x10f0927b0>, <sqlite3.Row object at 0x10f0927d0>, <sqlite3.Row object at 0x10f0927f0>, <sqlite3.Row object at 0x10f092810>, <sqlite3.Row object at 0x10f092830>, <sqlite3.Row object at 0x10f092850>, <sqlite3.Row object at 0x10f092870>, <sqlite3.Row object at 0x10f092890>, <sqlite3.Row object at 0x10f0928b0>, <sqlite3.Row object at 0x10f0928d0>, <sqlite3.Row object at 0x10f0928f0>, <sqlite3.Row object at 0x10f092910>, <sqlite3.Row object at 0x10f092930>, <sqlite3.Row object at 0x10f092950>, <sqlite3.Row object at 0x10f092970>, <sqlite3.Row object at 0x10f092990>, <sqlite3.Row object at 0x10f0929b0>, <sqlite3.Row object at 0x10f0929d0>, <sqlite3.Row object at 0x10f0929f0>, <sqlite3.Row object at 0x10f092a10>, <sqlite3.Row object at 0x10f092a30>, <sqlite3.Row object at 0x10f092a50>, <sqlite3.Row object at 0x10f092a70>, <sqlite3.Row object at 0x10f092a90>, <sqlite3.Row object at 0x10f092ab0>, <sqlite3.Row object at 0x10f092ad0>, <sqlite3.Row object at 0x10f092af0>, <sqlite3.Row object at 0x10f092b10>, <sqlite3.Row object at 0x10f092b30>, <sqlite3.Row object at 0x10f092b50>, <sqlite3.Row object at 0x10f092b70>, <sqlite3.Row object at 0x10f092b90>, <sqlite3.Row object at 0x10f092bb0>, <sqlite3.Row object at 0x10f092bd0>, <sqlite3.Row object at 0x10f092bf0>, <sqlite3.Row object at 0x10f092c10>, <sqlite3.Row object at 0x10f092c30>, <sqlite3.Row object at 0x10f092c50>, <sqlite3.Row object at 0x10f092c70>, <sqlite3.Row object at 0x10f092c90>, <sqlite3.Row object at 0x10f092cb0>, <sqlite3.Row object at 0x10f092cd0>, <sqlite3.Row object at 0x10f092cf0>, <sqlite3.Row object at 0x10f092d10>, <sqlite3.Row object at 0x10f092d30>, <sqlite3.Row object at 0x10f092d50>, <sqlite3.Row object at 0x10f092d70>, <sqlite3.Row object at 0x10f092d90>, <sqlite3.Row object at 0x10f092db0>, <sqlite3.Row object at 0x10f092dd0>, <sqlite3.Row object at 0x10f092df0>, <sqlite3.Row object at 0x10f092e10>, <sqlite3.Row object at 0x10f092e30>, <sqlite3.Row object at 0x10f092e50>, <sqlite3.Row object at 0x10f092e70>, <sqlite3.Row object at 0x10f092e90>, <sqlite3.Row object at 0x10f092eb0>, <sqlite3.Row object at 0x10f092ed0>, <sqlite3.Row object at 0x10f092ef0>, <sqlite3.Row object at 0x10f092f10>, <sqlite3.Row object at 0x10f092f30>, <sqlite3.Row object at 0x10f092f50>, <sqlite3.Row object at 0x10f092f70>, <sqlite3.Row object at 0x10f092f90>, <sqlite3.Row object at 0x10f092fb0>, <sqlite3.Row object at 0x10f092fd0>, <sqlite3.Row object at 0x10f0be030>, <sqlite3.Row object at 0x10f0be050>, <sqlite3.Row object at 0x10f0be070>, <sqlite3.Row object at 0x10f0be090>, <sqlite3.Row object at 0x10f0be0b0>, <sqlite3.Row object at 0x10f0be0d0>, <sqlite3.Row object at 0x10f0be0f0>, <sqlite3.Row object at 0x10f0be110>, <sqlite3.Row object at 0x10f0be130>, <sqlite3.Row object at 0x10f0be150>, <sqlite3.Row object at 0x10f0be170>, <sqlite3.Row object at 0x10f0be190>, <sqlite3.Row object at 0x10f0be1b0>, <sqlite3.Row object at 0x10f0be1d0>, <sqlite3.Row object at 0x10f0be1f0>, <sqlite3.Row object at 0x10f0be210>, <sqlite3.Row object at 0x10f0be230>, <sqlite3.Row object at 0x10f0be250>, <sqlite3.Row object at 0x10f0be270>, <sqlite3.Row object at 0x10f0be290>, <sqlite3.Row object at 0x10f0be2b0>, <sqlite3.Row object at 0x10f0be2d0>, <sqlite3.Row object at 0x10f0be2f0>, <sqlite3.Row object at 0x10f0be310>, <sqlite3.Row object at 0x10f0be330>, <sqlite3.Row object at 0x10f0be350>, <sqlite3.Row object at 0x10f0be370>, <sqlite3.Row object at 0x10f0be390>, <sqlite3.Row object at 0x10f0be3b0>, <sqlite3.Row object at 0x10f0be3d0>, <sqlite3.Row object at 0x10f0be3f0>, <sqlite3.Row object at 0x10f0be410>, <sqlite3.Row object at 0x10f0be430>, <sqlite3.Row object at 0x10f0be450>, <sqlite3.Row object at 0x10f0be470>, <sqlite3.Row object at 0x10f0be490>, <sqlite3.Row object at 0x10f0be4b0>, <sqlite3.Row object at 0x10f0be4d0>, <sqlite3.Row object at 0x10f0be4f0>, <sqlite3.Row object at 0x10f0be510>, <sqlite3.Row object at 0x10f0be530>, <sqlite3.Row object at 0x10f0be550>, <sqlite3.Row object at 0x10f0be570>, <sqlite3.Row object at 0x10f0be590>, <sqlite3.Row object at 0x10f0be5b0>, <sqlite3.Row object at 0x10f0be5d0>, <sqlite3.Row object at 0x10f0be5f0>, <sqlite3.Row object at 0x10f0be610>, <sqlite3.Row object at 0x10f0be630>, <sqlite3.Row object at 0x10f0be650>, <sqlite3.Row object at 0x10f0be670>, <sqlite3.Row object at 0x10f0be690>, <sqlite3.Row object at 0x10f0be6b0>, <sqlite3.Row object at 0x10f0be6d0>, <sqlite3.Row object at 0x10f0be6f0>, <sqlite3.Row object at 0x10f0be710>, <sqlite3.Row object at 0x10f0be730>, <sqlite3.Row object at 0x10f0be750>, <sqlite3.Row object at 0x10f0be770>, <sqlite3.Row object at 0x10f0be790>, <sqlite3.Row object at 0x10f0be7b0>, <sqlite3.Row object at 0x10f0be7d0>, <sqlite3.Row object at 0x10f0be7f0>, <sqlite3.Row object at 0x10f0be810>, <sqlite3.Row object at 0x10f0be830>, <sqlite3.Row object at 0x10f0be850>, <sqlite3.Row object at 0x10f0be870>, <sqlite3.Row object at 0x10f0be890>, <sqlite3.Row object at 0x10f0be8b0>, <sqlite3.Row object at 0x10f0be8d0>, <sqlite3.Row object at 0x10f0be8f0>, <sqlite3.Row object at 0x10f0be910>, <sqlite3.Row object at 0x10f0be930>]
2025-06-15 18:01:10,494 - __main__ - ERROR - Error decoding JSON from Gemini: Invalid \escape: line 3 column 609 (char 680). Raw content: ```json
{
  "sql": "SELECT DISTINCT \"Counter party name\" FROM transactions;",
  "natural_language_response": "Â¡Entendido! AquÃ­ hay una lista de los nombres de las contrapartes de tus transacciones:\n\n*   Received from Other Bank\n*   W/D FR SAV BDO/005542 54SM STAMESA BDO\n*   POS W/D SV MOVE IT MAKATI ATP\n*   W/D FR SAV BDO/005532 53SM STAMESA BDO\n*   W/D FR SAV BDO/005592 59SM STAMESA BDO\n*   POS W/D SV SMART APP MAKATI ATP\n*   POS W/D SV SM CINEMA 53728811 ATP\n*   POS W/D SV SM CINEMA 18411665 ATP\n*   POS W/D SV SM CINEMA 68273483 ATP\n*   POS W/D SV ANGKAS MANILA ATP\n*   POS W/D SV SM CINEMA 19782041 ATP\n*   POS W/D SV SM CINEMA 88896800 ATP\n*   POS W/D SV GOOGLE \*CH g.co/helppa ATP\n*   POS W/D SV SM CINEMA 62765935 ATP\n*   POS W/D SV SM CINEMA 56863434 ATP\n*   POS W/D SV SM CINEMA 29556038 ATP\n*   POS W/D SV SM CINEMA 83363959 ATP\n*   POS W/D SV SM CINEMA 54796039 ATP\n*   POS W/D SV SM CINEMA 25816394 ATP\n*   POS W/D SV SM CINEMA 41470978 ATP\n*   POS W/D SV SM CINEMA 44661536 ATP\n*   POS W/D SV SM CINEMA 18518243 ATP\n*   POS W/D SV SM CINEMA 48286014 ATP\n*   POS W/D SV SM CINEMA 13605079 ATP\n*   POS W/D SV SM CINEMA 29228470 ATP\n*   POS W/D SV SM CINEMA 92862405 ATP\n*   POS W/D SV SM CINEMA 53938745 ATP\n*   POS W/D SV SM CINEMA 68141388 ATP\n*   POS W/D SV SM CINEMA 31448693 ATP\n*   POS W/D SV SM CINEMA 34467927 ATP\n*   POS W/D SV SM CINEMA 02154337 ATP\n*   POS W/D SV SM CINEMA 84025397 ATP\n*   POS W/D SV SM CINEMA 50133467 ATP\n*   POS W/D SV SM CINEMA 88632801 ATP\n*   W/D FR SAV BDO/002013 01MAYON-N R BDO\n*   POS W/D SV CHOOKS SM QUEZON ATP\n*   POS W/D SV GRAB MAKATI ATP\n*   Prepaid Reload to ****ZNST\n*   BDOPAY BN P2MQR-PAY2-17483459- P2MI\n*   Prepaid Reload to ****QC00\n*   Prepaid Reload to ****8695\n*   Prepaid Reload to ****6IA1\n*   BDOPAY BN P2MQR-PAY2-33256727- P2MI\n*   BDOPAY BN P2MQR-PAY2-47314744- P2MI\n*   BDOPAY BN P2MQR-PAY2-92027653- P2MI\n*   Prepaid Reload to ****6U8C\n*   BDOPAY BN P2MQR-PAY2-16995017- P2MI\n*   BDOPAY BN P2MQR-PAY2-38336163- P2MI\n*   BDOPAY BN P2MQR-PAY2-84271008- P2MI\n*   Prepaid Reload to ****4VKS\n*   Prepaid Reload to ****X6SM\n*   Prepaid Reload to ****G6SW\n*   BDOPAY BN P2MQR-PAY2-05396154- P2MI\n*   BDOPAY BN P2MQR-PAY2-52841860- P2MI\n*   BDOPAY BN P2MQR-PAY2-05214021- P2MI\n*   BDOPAY BN P2MQR-PAY2-57662202- P2MI\n*   BDOPAY BN P2MQR-PAY2-37643500- P2MI\n*   Prepaid Reload to ****D2Y2\n*   BDOPAY BN P2MQR-PAY2-00361956- P2MI\n*   BDOPAY BN P2MQR-PAY2-86985239- P2MI\n*   BDOPAY BN P2MQR-PAY2-40567289- P2MI\n*   BDOPAY BN P2MQR-PAY2-15910745- P2MI\n*   BDOPAY BN P2MQR-PAY2-99855748- P2MI\n*   BDOPAY BN P2MQR-PAY2-00732660- P2MI\n*   BDOPAY BN P2MQR-PAY2-75428180- P2MI\n*   BDOPAY BN P2MQR-PAY2-34064037- P2MI\n*   Prepaid Reload to ****B1KP\n*   Prepaid Reload to ****53T7\n*   BDOPAY BN P2MQR-PAY2-12016460- P2MI\n*   BDOPAY BN P2MQR-PAY2-29226550- P2MI\n*   BDOPAY BN P2MQR-PAY2-85455595- P2MI\n*   MINISO-SM STA MESA QUEZON CITY POS\n*   BDOPAY BN P2MQR-PAY2-17484171- P2MI\n*   BDOPAY BN P2MQR-PAY2-93316990- P2MI\n*   BDOPAY BN P2MQR-PAY2-05331248- P2MI\n*   BDOPAY BN P2MQR-PAY2-61652633- P2MI\n*   W/D FR SAV MNL_GTZON SAMPALOC, M ML\n*   Sent via InstaPay GXI ****QMLP\n*   BDOPAY BN P2MQR-PAY2-97018567- P2MI\n*   BDOPAY BN P2MQR-PAY2-91056901- P2MI\n*   Sent via InstaPay GXI ****H92L\n*   BDOPAY BN P2MQR-PAY2-32479368- P2MI\n*   BDOPAY BN P2MQR-PAY2-73027926- P2MI\n*   BDOPAY BN P2MQR-PAY2-96777012- P2MI\n*   Sent via InstaPay GXI ****R1IP\n*   BDOPAY BN P2MQR-PAY2-17485955- P2MI\n*   BDOPAY BN P2MQR-PAY2-91529316- P2MI\n*   BDOPAY BN P2MQR-PAY2-05127485- P2MI\n*   BDOPAY BN P2MQR-PAY2-01980015- P2MI\n*   Sent via InstaPay GXI ****UW25\n*   Sent via InstaPay GXI ****Y3QW\n*   BDOPAY BN P2MQR-PAY2-70692273- P2MI\n*   BDOPAY BN P2MQR-PAY2-83646535- P2MI\n*   Sent via InstaPay GXI ****TW5X\n*   INTEREST PAY SYS-GEN\n*   BDOPAY BN P2MQR-PAY2-70318733- P2MI\n*   BDOPAY BN P2MQR-PAY2-99016253- P2MI\n*   POS W/D SV GOOGLE*TEM CC GOOGLE.C ATP\n*   POS W/D SV JOLLIBEE J MANILA ATP\n*   BDOPAY BN P2MQR-PAY2-24141935- P2MI\n*   BDOPAY BN P2MQR-PAY2-83929933- P2MI\n*   BDOPAY BN P2MQR-PAY2-17486924- P2MI\n*   BDOPAY BN P2MQR-PAY2-08549451- P2MI\n*   BDOPAY BN P2MQR-PAY2-50722621- P2MI\n*   BDOPAY BN P2MQR-PAY2-50100443- P2MI\n*   BDOPAY BN P2MQR-PAY2-71378519- P2MI\n*   BDOPAY BN P2MQR-PAY2-82234525- P2MI\n*   BDOPAY BN P2MQR-PAY2-00464117- P2MI\n*   BDOPAY BN P2MQR-PAY2-98517458- P2MI\n*   BDOPAY BN P2MQR-PAY2-69375533- P2MI\n*   BDOPAY BN P2MQR-PAY2-75463953- P2MI\n*   BDOPAY BN P2MQR-PAY2-76240182- P2MI\n*   BDOPAY BN P2MQR-PAY2-17488665- P2MI\n*   BDOPAY BN P2MQR-PAY2-62111453- P2MI\n*   BDOPAY BN P2MQR-PAY2-70279545- P2MI\n*   BDOPAY BN P2MQR-PAY2-37091900- P2MI\n*   BDOPAY BN P2MQR-PAY2-14679715- P2MI\n*   BDOPAY BN P2MQR-PAY2-58650977- P2MI\n*   BDOPAY BN P2MQR-PAY2-60126267- P2MI\n*   C8 LCL LWRSET DR  MOVE IT 0430\n*   C8 LCL LSETT CR MOVE 0430\n*   Sent via InstaPay GXI ****69X1\n*   Sent via InstaPay GXI ****R8GA\n*   Sent via InstaPay GXI ****BVG3\n*   Sent via InstaPay GXI ****UKBP\n*   Sent via InstaPay GXI ****C1PZ\n*   Sent via InstaPay GXI ****PH0D\n*   Sent via InstaPay GXI ****T5YK\n*   Sent via InstaPay GXI ****DO3W\n*   Sent via InstaPay GXI ****6OMH\n*   Sent via InstaPay GXI ****QZN7\n*   Sent via InstaPay GXI ****8DMS\n*   Sent via InstaPay GXI ****WHLS\n*   Sent via InstaPay GXI ****ZW71\n*   Sent via InstaPay GXI ****77NE\n*   Sent via InstaPay GXI ****FWW5\n*   Sent via InstaPay GXI ****FK3G\n*   POS W/D SV APPLE.COM/ ITUNES.COM ATP\n*   BDOPAY BN P2MQR-PAY2-17491200- P2MI\n*   BDOPAY BN P2MQR-PAY2-36914545- P2MI\n*   BDOPAY BN P2MQR-PAY2-35115586- P2MI\n*   BDOPAY BN P2MQR-PAY2-42726333- P2MI\n*   BDOPAY BN P2MQR-PAY2-35724717- P2MI\n*   BDOPAY BN P2MQR-PAY2-35943151- P2MI\n*   BDOPAY BN P2MQR-PAY2-09571689- P2MI\n*   POS W/D SV SALARYMAN TAGUIG MLIC\n*   POS W/D SV THE COFFEE POS\n*   BDOPAY BN P2MQR-PAY2-60377374- P2MI\n*   POS W/D SV HEALTHY OP POS\n*   BDOPAY BN P2MQR-PAY2-17492695- P2MI\n*   POS W/D SV CARGOFISH TAGUIG CITY ATP\n*   BDOPAY BN P2MQR-PAY2-65934867- P2MI\n*   BDOPAY BN P2MQR-PAY2-92500893- P2MI\n*   BDOPAY BN P2MQR-PAY2-17492837- P2MI\n*   BDOPAY BN P2MQR-PAY2-19682140- P2MI\n*   BDOPAY BN P2MQR-PAY2-55040674- P2MI\n*   BDOPAY BN P2MQR-PAY2-11680761- P2MI\n*   BDOPAY BN P2MQR-PAY2-24013435- P2MI\n*   BDOPAY BN P2MQR-PAY2-86175942- P2MI\n*   BDOPAY BN P2MQR-PAY2-05128014- P2MI\n*   POS W/D SV Google You London ATP\n*   BDOPAY BN P2MQR-PAY2-50274026- P2MI\n*   BDOPAY BN P2MQR-PAY2-70311090- P2MI\n*   BDOPAY BN P2MQR-PAY2-74204440- P2MI\n*   BDOPAY BN P2MQR-PAY2-77843474- P2MI\n*   BDOPAY BN P2MQR-PAY2-34576825- P2MI\n*   BDOPAY BN P2MQR-PAY2-17496284- P2MI\n*   POS W/D SV NATIONAL B POS\n*   Received from BDO Account\n*   Sent via InstaPay GXI ****FIRR\n*   Sent via InstaPay GXI ****5K33\n*   Sent via InstaPay GXI ****MG58\n*   Sent via InstaPay GXI ****TWYW\n*   Sent via InstaPay GXI ****9G97\n*   Sent via InstaPay GXI ****5FYE\n*   Sent via InstaPay GXI ****4ERH\n*   Sent via InstaPay GXI ****SFCD\n*   Sent via InstaPay GXI ****NSN1\n*   Sent via InstaPay GXI ****GAYO\n*   Sent via InstaPay GXI ****71P9\n\nÂ¿Te gustarÃ­a saber el significado de alguno de estos nombres en particular? ðŸ˜Š
}
```
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_nonml.py", line 245, in get_gemini_response
    response_dict = json.loads(json_str)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 353, in raw_decode
    obj, end = self.scan_once(s, idx)
json.decoder.JSONDecodeError: Invalid \escape: line 3 column 609 (char 680)
2025-06-15 18:01:10,503 - __main__ - ERROR - Gemini failed to generate final NL response after query execution. Assistant response: EjecutÃ© la consulta, pero tuve problemas para formar una respuesta clara. Por favor, intÃ©ntalo de nuevo.
2025-06-15 18:01:20,171 - __main__ - INFO - User Query (es): que son esos transacciones significan?
2025-06-15 18:01:21,450 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:01:21,450 - __main__ - INFO - Generated SQL Query: SELECT DISTINCT Source FROM transactions
2025-06-15 18:01:21,453 - __main__ - INFO - Database connection established.
2025-06-15 18:01:21,455 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10f092510>, <sqlite3.Row object at 0x10f092130>, <sqlite3.Row object at 0x10f0922d0>, <sqlite3.Row object at 0x10f0925b0>, <sqlite3.Row object at 0x10f092310>, <sqlite3.Row object at 0x10f092490>]
2025-06-15 18:01:22,979 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:01:22,979 - __main__ - INFO - Final Assistant Response (NL): Las fuentes de transacciones en tus registros incluyen: 'synthetic_3', 'synthetic_4', 'synthetic_2', 'original', 'synthetic_1' y 'synthetic_5'. Estos nombres representan diferentes maneras en que las transacciones fueron registradas en el sistema. Â¿Te gustarÃ­a que te explique alguna de estas fuentes en particular? ðŸ˜Š
2025-06-15 18:02:00,776 - __main__ - INFO - Flask Application started.
2025-06-15 18:02:00,792 - __main__ - INFO - Database connection established.
2025-06-15 18:02:00,792 - __main__ - INFO - Database schema retrieved and cached.
2025-06-15 18:02:00,838 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-15 18:02:10,403 - __main__ - INFO - Flask Application started.
2025-06-15 18:02:10,418 - __main__ - INFO - Database connection established.
2025-06-15 18:02:10,418 - __main__ - INFO - Database schema retrieved and cached.
2025-06-15 18:02:10,458 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-15 18:02:10,721 - __main__ - INFO - Flask Application started.
2025-06-15 18:02:10,731 - __main__ - INFO - Database connection established.
2025-06-15 18:02:10,731 - __main__ - INFO - Database schema retrieved and cached.
2025-06-15 18:02:10,759 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-15 18:02:12,960 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-15 18:02:19,589 - __main__ - INFO - User Query (es): necesito ayuda con mi tarjeta
2025-06-15 18:02:23,829 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:02:23,829 - __main__ - INFO - Generated SQL Query: None
2025-06-15 18:02:23,832 - __main__ - INFO - Database connection established.
2025-06-15 18:02:23,832 - __main__ - CRITICAL - An unexpected critical error occurred: argument 1 must be str, not None
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_nonml.py", line 318, in chat
    cursor.execute(sql_query)
TypeError: argument 1 must be str, not None
2025-06-15 18:02:37,550 - __main__ - INFO - User Query (es): necesito ayuda con el tarjeta de cuenta
2025-06-15 18:02:38,948 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:02:38,949 - __main__ - INFO - Generated SQL Query: SELECT * FROM transactions LIMIT 5;
2025-06-15 18:02:38,951 - __main__ - INFO - Database connection established.
2025-06-15 18:02:38,952 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x109177fd0>, <sqlite3.Row object at 0x109177e30>, <sqlite3.Row object at 0x109177eb0>, <sqlite3.Row object at 0x109177f90>, <sqlite3.Row object at 0x109177e90>]
2025-06-15 18:02:40,272 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:02:40,272 - __main__ - INFO - Final Assistant Response (NL): Â¡Hola! Para ayudarte mejor con tu tarjeta de cuenta, Â¿podrÃ­as ser un poco mÃ¡s especÃ­fico? Por ejemplo, Â¿quÃ© tipo de ayuda necesitas? Â¿Quieres ver tus Ãºltimas transacciones, revisar algÃºn cargo en particular, o quizÃ¡s consultar tu saldo? Dime quÃ© necesitas y harÃ© lo posible por asistirte.
2025-06-15 18:02:50,452 - __main__ - INFO - User Query (es): necesito ayuda con mi cuenta
2025-06-15 18:02:51,598 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:02:51,598 - __main__ - INFO - Generated SQL Query: SELECT COUNT(*) FROM transactions;
2025-06-15 18:02:51,599 - __main__ - INFO - Database connection established.
2025-06-15 18:02:51,601 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x109177490>]
2025-06-15 18:02:53,012 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:02:53,013 - __main__ - INFO - Final Assistant Response (NL): Â¡Hola! Veo que necesitas ayuda con tu cuenta. Actualmente tengo registrados 1,200 movimientos en tu cuenta. Â¿QuÃ© te gustarÃ­a saber o quÃ© necesitas revisar especÃ­ficamente? Puedo mostrarte tus Ãºltimas transacciones, resumir tus gastos, o ayudarte a encontrar algo en particular. Â¡AvÃ­same!
2025-06-15 18:03:09,178 - __main__ - INFO - User Query (es): que es el gasto mas alto?
2025-06-15 18:03:10,629 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:03:10,629 - __main__ - INFO - Generated SQL Query: SELECT "Counter party name", Amount, "Book date" FROM transactions WHERE "Credit/debit indicator" = 'Debit' ORDER BY Amount DESC LIMIT 1
2025-06-15 18:03:10,631 - __main__ - INFO - Database connection established.
2025-06-15 18:03:10,634 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10924d170>]
2025-06-15 18:03:11,963 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:03:11,963 - __main__ - INFO - Final Assistant Response (NL): Â¡Hola! El gasto mÃ¡s alto que registras fue de â‚±5,959.10 el 29 de mayo de 2025, en W/D FR SAV MNL_GTZON SAMPALOC, M ML. Â¿Quieres que revisemos este movimiento en detalle o necesitas algo mÃ¡s?
2025-06-15 18:03:20,935 - __main__ - INFO - User Query (es): que este significa?
2025-06-15 18:03:22,501 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:03:22,502 - __main__ - INFO - Generated SQL Query: SELECT DISTINCT `Counter party name` FROM transactions WHERE `Counter party name` LIKE '%SAV MNL_GTZON SAMPALOC, M ML%';
2025-06-15 18:03:22,503 - __main__ - INFO - Database connection established.
2025-06-15 18:03:22,504 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10924d310>]
2025-06-15 18:03:23,802 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:03:23,802 - __main__ - INFO - Final Assistant Response (NL): Â¡Hola! "W/D FR SAV MNL_GTZON SAMPALOC, M ML" se refiere a un retiro de tu cuenta de ahorros realizado en la sucursal de Sampaloc, Manila. Â¿Hay algo mÃ¡s en lo que pueda ayudarte con esta transacciÃ³n?
2025-06-15 18:03:48,114 - __main__ - INFO - User Query (es): si parece que "ATM withdrawal" en ingles?
2025-06-15 18:03:49,646 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:03:49,647 - __main__ - INFO - Generated SQL Query: SELECT CASE WHEN LOWER('W/D FR SAV MNL_GTZON SAMPALOC, M ML') LIKE '%atm%' THEN 'SÃ­' ELSE 'No' END;
2025-06-15 18:03:49,648 - __main__ - INFO - Database connection established.
2025-06-15 18:03:49,649 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x109177510>]
2025-06-15 18:03:51,291 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:03:51,291 - __main__ - INFO - Final Assistant Response (NL): Â¡Hola! No, la descripciÃ³n 'W/D FR SAV MNL_GTZON SAMPALOC, M ML' no parece indicar un retiro de cajero automÃ¡tico (ATM). Â¿Hay algo mÃ¡s que te preocupe de esta transacciÃ³n o necesitas que investigue algo mÃ¡s?
2025-06-15 18:04:10,353 - __main__ - INFO - User Query (es): si, explicame
2025-06-15 18:04:11,724 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:04:11,724 - __main__ - INFO - Generated SQL Query: SELECT * FROM transactions WHERE "Book date" = '2025-05-29' AND Amount = 5959.10;
2025-06-15 18:04:11,728 - __main__ - INFO - Database connection established.
2025-06-15 18:04:11,732 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10924d350>]
2025-06-15 18:04:13,294 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:04:13,295 - __main__ - INFO - Final Assistant Response (NL): Â¡Hola! Parece ser un retiro en la sucursal de Sampaloc, Manila. Â¿Te gustarÃ­a saber si hay mÃ¡s detalles disponibles sobre esta transacciÃ³n en particular?
2025-06-15 18:05:08,173 - __main__ - INFO - User Query (es): entonces que parece "withdrawal", sabe?
2025-06-15 18:05:09,584 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:05:09,584 - __main__ - INFO - Generated SQL Query: SELECT DISTINCT `Credit/debit indicator` FROM transactions;
2025-06-15 18:05:09,587 - __main__ - INFO - Database connection established.
2025-06-15 18:05:09,589 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1091774f0>, <sqlite3.Row object at 0x109177ef0>]
2025-06-15 18:05:12,100 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:05:12,100 - __main__ - INFO - Final Assistant Response (NL): Â¡Hola! Basado en los datos que tengo, las transacciones de 'retiro' o 'withdrawal' se identifican como 'Debit'. Â¿Te gustarÃ­a saber algo mÃ¡s sobre los retiros o tienes otra pregunta en mente?
2025-06-15 18:05:24,213 - __main__ - INFO - User Query (es): que es el gasto mas alto?
2025-06-15 18:05:25,718 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:05:25,719 - __main__ - INFO - Generated SQL Query: SELECT "Counter party name", Amount, "Book date" FROM transactions WHERE "Credit/debit indicator" = 'Debit' ORDER BY Amount DESC LIMIT 1;
2025-06-15 18:05:25,720 - __main__ - INFO - Database connection established.
2025-06-15 18:05:25,722 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10924d430>]
2025-06-15 18:05:27,125 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:05:27,125 - __main__ - INFO - Final Assistant Response (NL): Â¡Hola! El gasto mÃ¡s alto que registras fue de â‚±5,959.10 el 29 de mayo de 2025, en W/D FR SAV MNL_GTZON SAMPALOC, M ML. Â¿Quieres que revisemos este movimiento en detalle o necesitas algo mÃ¡s?
2025-06-15 18:05:39,106 - __main__ - INFO - User Query (es): necesito detalles con eso, que este significa
2025-06-15 18:05:40,668 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:05:40,669 - __main__ - INFO - Generated SQL Query: SELECT "Counter party name", "Counter party account number", "Book date", Amount, "Credit/debit indicator", Currency FROM transactions WHERE Amount = 5959.10 AND "Book date" = '2025-05-29';
2025-06-15 18:05:40,670 - __main__ - INFO - Database connection established.
2025-06-15 18:05:40,672 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x109177670>]
2025-06-15 18:05:42,494 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:05:42,494 - __main__ - INFO - Final Assistant Response (NL): Â¡Hola! El detalle de ese gasto de â‚±5,959.10 del 29 de mayo de 2025 corresponde a un retiro (Debit) realizado en W/D FR SAV MNL_GTZON SAMPALOC, M ML. No tengo el nÃºmero de cuenta del contraparte registrado. Â¿Hay algo mÃ¡s que te gustarÃ­a saber sobre esta transacciÃ³n o necesitas mÃ¡s detalles?
2025-06-15 18:08:52,757 - __main__ - INFO - Flask Application started.
2025-06-15 18:09:04,655 - __main__ - INFO - Database connection established.
2025-06-15 18:09:09,127 - __main__ - ERROR - SQL generation error: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_nonml.py", line 143, in generate_sql_from_text
    return json.loads(json_str)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
2025-06-15 18:09:30,337 - __main__ - ERROR - SQL generation error: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_nonml.py", line 143, in generate_sql_from_text
    return json.loads(json_str)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
2025-06-15 18:11:31,461 - __main__ - INFO - Flask Application started.
2025-06-15 18:11:31,481 - __main__ - INFO - Database schema retrieved and cached (newly).
2025-06-15 18:11:31,539 - __main__ - INFO - Philippine holidays fetched and cached (newly).
2025-06-15 18:11:31,602 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-15 18:11:34,530 - __main__ - INFO - User Query (en): hi
2025-06-15 18:11:36,873 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:11:36,873 - __main__ - INFO - Generated SQL Query: SELECT 1;
2025-06-15 18:11:36,875 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1
2025-06-15 18:11:36,875 - __main__ - CRITICAL - An unexpected critical error occurred: get_natural_language_response_prompt() got an unexpected keyword argument 'user_query'
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_nonml.py", line 435, in chat
    nl_prompt_str = get_natural_language_response_prompt(
TypeError: get_natural_language_response_prompt() got an unexpected keyword argument 'user_query'
2025-06-15 18:11:58,906 - __main__ - INFO - Flask Application started.
2025-06-15 18:11:58,923 - __main__ - INFO - Database schema retrieved and cached (newly).
2025-06-15 18:11:58,974 - __main__ - INFO - Philippine holidays fetched and cached (newly).
2025-06-15 18:11:59,390 - __main__ - INFO - Flask Application started.
2025-06-15 18:11:59,407 - __main__ - INFO - Database schema retrieved and cached (newly).
2025-06-15 18:11:59,450 - __main__ - INFO - Philippine holidays fetched and cached (newly).
2025-06-15 18:12:04,390 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-15 18:12:06,259 - __main__ - INFO - User Query (en): hi
2025-06-15 18:12:08,427 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:12:08,427 - __main__ - INFO - Generated SQL Query: SELECT 1;
2025-06-15 18:12:08,428 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1
2025-06-15 18:12:08,428 - __main__ - CRITICAL - An unexpected critical error occurred: get_natural_language_response_prompt() got an unexpected keyword argument 'user_query'
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_nonml.py", line 435, in chat
    nl_prompt_str = get_natural_language_response_prompt(
TypeError: get_natural_language_response_prompt() got an unexpected keyword argument 'user_query'
2025-06-15 18:12:48,654 - __main__ - INFO - Flask Application started.
2025-06-15 18:12:48,671 - __main__ - INFO - Database schema retrieved and cached (newly).
2025-06-15 18:12:48,722 - __main__ - INFO - Philippine holidays fetched and cached (newly).
2025-06-15 18:12:48,833 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-15 18:12:50,703 - __main__ - INFO - User Query (en): hi
2025-06-15 18:12:52,772 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:12:52,773 - __main__ - INFO - Generated SQL Query: SELECT 1;
2025-06-15 18:12:52,774 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1
2025-06-15 18:12:54,149 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:12:54,150 - __main__ - INFO - Final Assistant Response (NL): Hey there! ðŸ‘‹ I see you're looking at your account. It looks like we have some numbers here: '1' and '1.00'.  Is there anything specific you'd like to know about these?  Perhaps you're wondering what these represent in your transaction history?  Just let me know what you're trying to figure out, and I'll do my best to help! ðŸ˜Š
2025-06-15 18:13:14,222 - __main__ - INFO - User Query (en): i want to know my transactions more, i cant remember some of them
2025-06-15 18:13:15,897 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:13:15,897 - __main__ - INFO - Generated SQL Query: SELECT * FROM transactions;
2025-06-15 18:13:15,901 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1200
2025-06-15 18:13:23,298 - __main__ - ERROR - Error decoding JSON from Gemini: Invalid \escape: line 2 column 654 (char 655). Raw content: ```python
{
  "natural_language_response": "Okay, I can definitely help you take a look at your recent transactions! I see a bunch of transactions from May 20th, 2025 to June 13th, 2025, and here's a quick breakdown of what I'm seeing:\n\n*   **Credits (Money coming IN):**\n    *   Lots of \"Received from Other Bank\" transactions, which looks like funds being transferred into your account. These range from a few hundred pesos to several thousands. I can see that you got so many transfers from Other Bank, I think this is your salary!\n    *   Some transactions with \"POS W/D SV MOVE IT MAKATI ATP\", \"POS W/D SV ANGKAS MANILA ATP\", and \"POS W/D SV GOOGLE \*CH g.co/helppa ATP\" as credits. It seems there are refunds from your previous ridesharing bookings from MOVE IT and ANGKAS, and Google subscriptions.\n    *   Many received transfers from your BDO account and Other Bank Account.\n\n*   **Debits (Money going OUT):**\n    *   Many ATM withdrawals at \"54SM STAMESA BDO\", \"53SM STAMESA BDO\", \"59SM STAMESA BDO\" , and \"MNL_GTZON SAMPALOC\".\n    *   Lots of small transactions with \"POS W/D SV MOVE IT MAKATI ATP\" and \"POS W/D SV ANGKAS MANILA ATP\". These are ride-sharing services in Makati. You also have transactions labelled \"C8 LCL LWRSET DR MOVE IT 0430\" which I believe are Move It transactions.\n    *   Quite a few small payments to \"POS W/D SV SMART APP MAKATI ATP\", which I am not sure what this for. Do you remember any subscriptions this might be connected to?\n    *   Also I see transactions with \"POS W/D SV SM CINEMA\", which must be your cinema ticket purchases at SM.\n    *   There are transactions with \"POS W/D SV GOOGLE \*CH g.co/helppa ATP\", which might be charges related to Google subscriptions or services (like Google One, YouTube Premium, Google Play apps etc.)\n    *   Multiple transactions labelled \"POS W/D SV CHOOKS SM QUEZON ATP\". This likely refers to spending at Chooks-to-Go, a popular roasted chicken chain in the Philippines, specifically at their SM Quezon City branch.\n    *   Several transactions with \"BDOPAY BN P2MQR-PAY2\", these transactions are likely payments made using BDO Pay to different merchants.\n    *   Also I see transactions with \"POS W/D SV SALARYMAN TAGUIG MLIC\", \"POS W/D SV CARGOFISH TAGUIG CITY ATP\", \"POS W/D SV HEALTHY OP POS\", and \"POS W/D SV THE COFFEE POS\".\n\nI hope that helps jog your memory! Is there anything specific you'd like to investigate further? For example, we could look closer at your transactions with MOVE IT or ANGKAS, the payments from Other Bank, or maybe those smaller transactions with SMART APP MAKATI ATP? Let me know! ðŸ˜Š"
}
```
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_nonml.py", line 336, in get_gemini_json_response
    response_dict = json.loads(json_str)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 353, in raw_decode
    obj, end = self.scan_once(s, idx)
json.decoder.JSONDecodeError: Invalid \escape: line 2 column 654 (char 655)
2025-06-15 18:13:23,303 - __main__ - ERROR - Gemini failed at NL generation step after query execution. Error: Error decoding JSON from Gemini: Invalid \escape: line 2 column 654 (char 655). Raw: ```python
{
  "natural_language_response": "Okay, I can definitely help you take a look at your recent transactions! I see a bunch of transactions from May 20th, 2025 to June 13th, 2025, and here's a quick breakdown of what I'm seeing:\n\n*   **Credits (Money coming IN):**\n    *   Lots of \"Received from Other Bank\" transactions, which looks like funds being transferred into your account. These range from a few hundred pesos to several thousands. I can see that you got so many transfers from Other Bank, I think this is your salary!\n    *   Some transactions with \"POS W/D SV MOVE IT MAKATI ATP\", \"POS W/D SV ANGKAS MANILA ATP\", and \"POS W/D SV GOOGLE \*CH g.co/helppa ATP\" as credits. It seems there are refunds from your previous ridesharing bookings from MOVE IT and ANGKAS, and Google subscriptions.\n    *   Many received transfers from your BDO account and Other Bank Account.\n\n*   **Debits (Money going OUT):**\n    *   Many ATM withdrawals at \"54SM STAMESA BDO\", \"53SM STAMESA BDO\", \"59SM STAMESA BDO\" , and \"MNL_GTZON SAMPALOC\".\n    *   Lots of small transactions with \"POS W/D SV MOVE IT MAKATI ATP\" and \"POS W/D SV ANGKAS MANILA ATP\". These are ride-sharing services in Makati. You also have transactions labelled \"C8 LCL LWRSET DR MOVE IT 0430\" which I believe are Move It transactions.\n    *   Quite a few small payments to \"POS W/D SV SMART APP MAKATI ATP\", which I am not sure what this for. Do you remember any subscriptions this might be connected to?\n    *   Also I see transactions with \"POS W/D SV SM CINEMA\", which must be your cinema ticket purchases at SM.\n    *   There are transactions with \"POS W/D SV GOOGLE \*CH g.co/helppa ATP\", which might be charges related to Google subscriptions or services (like Google One, YouTube Premium, Google Play apps etc.)\n    *   Multiple transactions labelled \"POS W/D SV CHOOKS SM QUEZON ATP\". This likely refers to spending at Chooks-to-Go, a popular roasted chicken chain in the Philippines, specifically at their SM Quezon City branch.\n    *   Several transactions with \"BDOPAY BN P2MQR-PAY2\", these transactions are likely payments made using BDO Pay to different merchants.\n    *   Also I see transactions with \"POS W/D SV SALARYMAN TAGUIG MLIC\", \"POS W/D SV CARGOFISH TAGUIG CITY ATP\", \"POS W/D SV HEALTHY OP POS\", and \"POS W/D SV THE COFFEE POS\".\n\nI hope that helps jog your memory! Is there anything specific you'd like to investigate further? For example, we could look closer at your transactions with MOVE IT or ANGKAS, the payments from Other Bank, or maybe those smaller transactions with SMART APP MAKATI ATP? Let me know! ðŸ˜Š"
}
```
2025-06-15 18:13:26,484 - __main__ - INFO - User Query (en): huh
2025-06-15 18:13:27,331 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:13:27,331 - __main__ - INFO - Generated SQL Query: SELECT * FROM transactions;
2025-06-15 18:13:27,334 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1200
2025-06-15 18:13:36,070 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:13:36,070 - __main__ - INFO - Final Assistant Response (NL): Okay, I understand. You're having a bit of trouble remembering some of your transactions. Based on the data I'm seeing, here's a breakdown to help jog your memory:

*   **Frequent "Received from Other Bank" Credits (PHP):** You've received multiple credits from other banks. It looks like these are a common way you receive funds, with several around PHP 1,000-5,000 each time, especially on May 20, May 23, May 26, May 28, May 29, June 4, June 5, June 10, and June 13. Is this salary, remittances, or payments from other accounts?
*   **Withdrawals at BDO Branches (PHP):** You've made quite a few withdrawals from BDO branches, especially at "54SM STAMESA BDO", "01MAYON-N R BDO", "MNL_GTZON SAMPALOC, M ML", "53SM STAMESA BDO", and "59SM STAMESA BDO". These withdrawals range from a few hundred to several thousand PHP. Do you usually withdraw cash from a specific branch for convenience?
*   **Move It and Angkas Transactions (PHP):** There are several transactions with "MOVE IT MAKATI ATP" and "ANGKAS MANILA ATP", showing both credits and debits. The credits might be refunds or promotional credits, while the debits are likely payments for rides. There's a high volume of these, mostly dated May 20, May 23, May 26, May 28, May 29, June 3, June 4, June 5 and June 9. Do you use these services frequently for commuting in Makati and Manila?
*   **SM Cinema Debits (PHP):** There's a series of small debits (around PHP 0.50 to PHP 2,480.16) from "SM CINEMA" locations. These are mostly dated May 26. Were you enjoying a movie marathon or buying snacks at SM Cinema around that time?
*   **BDOPay Transactions:** It looks like you've been using BDOPay a lot, with transactions marked as "BDOPAY BN P2MQR-PAY2-". These appear to be payments made to various merchants (P2MI). Do you recall using BDOPay for shopping or paying bills?
*   **SMART App Purchases:** There are consistent debits for small amounts to "SMART APP MAKATI ATP", especially dated May 23, May 26, May 27, May 29, May 30, June 2, June 9, June 10 and June 13. Do you usually buy load for SMART or pay for subscriptions using your card?
*   **Google Transactions (PHP):** There are several transactions related to "GOOGLE *CH g.co/helppa ATP" and "GOOGLE*TEM CC GOOGLE.C ATP", showing both debits and credits. These could be for Google services, app purchases, or even ad-related expenses.
*   **Miniso Purchases (PHP):** There's a series of debits with merchant name "MINISO-SM STA MESA QUEZON CITY POS" dated May 28. Are you a frequent shopper at this particular Miniso branch?
*   **Chooks! SM Quezon ATP (PHP):** There's a series of debits with merchant name "CHOOKS SM QUEZON ATP" dated May 27. Are you a frequent shopper at this particular Chooks branch?
*   **The Coffee POS (PHP):** There's a series of debits with merchant name "THE COFFEE POS", especially dated June 9. Are you a frequent shopper at this particular coffee shop?
*   **InstaPay Transfers (PHP):** You've made several transfers via InstaPay (indicated by "Sent via InstaPay GXI"), typically ranging from PHP 500 to PHP 1,500. These appear to be payments to other individuals or businesses. Which were dated June 4, June 13 and May 30.

I hope this helps you remember your transactions better! Do any of these stand out, or would you like me to help you investigate a specific transaction in more detail? ðŸ˜Š
2025-06-15 18:14:22,990 - __main__ - INFO - User Query (en): total spending in subscriptions
2025-06-15 18:14:24,612 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:14:24,612 - __main__ - INFO - Generated SQL Query: SELECT SUM("Amount") FROM transactions WHERE LOWER("Counter party name") LIKE '%netflix%' OR LOWER("Counter party name") LIKE '%spotify%' OR LOWER("Counter party name") LIKE '%youtube premium%' OR LOWER("Counter party name") LIKE '%apple music%' OR LOWER("Counter party name") LIKE '%google one%' OR LOWER("Counter party name") LIKE '%adobe%' OR LOWER("Counter party name") LIKE '%canva%' AND "Credit/debit indicator" = 'Debit';
2025-06-15 18:14:24,616 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1
2025-06-15 18:14:26,485 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:14:26,485 - __main__ - INFO - Final Assistant Response (NL): Okay, I checked for your total spending on subscriptions, but it looks like I don't have enough information about your transactions to give you a concrete number. The query returned 'None'. This means I can't identify any transactions specifically categorized as 'subscriptions' in your data. 

To help me figure this out, could you tell me some of the merchants you use for subscriptions? Knowing the specific names (like Netflix, Spotify, or even specific billers for utilities) would help me search for those transactions and calculate the total. Let me know if you want to give that a try! ðŸ˜Š
2025-06-15 18:14:48,634 - __main__ - INFO - User Query (en): total spending in subscriptions
2025-06-15 18:14:49,803 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:14:49,804 - __main__ - INFO - Generated SQL Query: SELECT SUM("Amount") FROM transactions WHERE LOWER("Counter party name") LIKE '%netflix%' OR LOWER("Counter party name") LIKE '%spotify%' OR LOWER("Counter party name") LIKE '%youtube premium%' OR LOWER("Counter party name") LIKE '%apple music%' OR LOWER("Counter party name") LIKE '%google one%' OR LOWER("Counter party name") LIKE '%adobe%' OR LOWER("Counter party name") LIKE '%canva%' AND "Credit/debit indicator" = 'Debit';
2025-06-15 18:14:49,808 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1
2025-06-15 18:14:51,284 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:14:51,284 - __main__ - INFO - Final Assistant Response (NL): Okay, I checked for your total spending on subscriptions again, but it still looks like I don't have enough information about your transactions to give you a concrete number. The query returned 'None'. This means I still can't identify any transactions specifically categorized as 'subscriptions' in your data.

To help me figure this out, could you tell me some of the merchants you use for subscriptions? Knowing the specific names (like Netflix, Spotify, mobile data subscriptions, or even specific billers for utilities) would help me search for those transactions and calculate the total. Let me know if you want to give that a try! ðŸ˜Š
2025-06-15 18:15:05,455 - __main__ - INFO - User Query (en): highest spending
2025-06-15 18:15:06,594 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:15:06,594 - __main__ - INFO - Generated SQL Query: SELECT MAX("Amount") FROM transactions WHERE "Credit/debit indicator" = 'Debit';
2025-06-15 18:15:06,596 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1
2025-06-15 18:15:08,125 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:15:08,126 - __main__ - INFO - Final Assistant Response (NL): Alright! I looked into your transactions and found your single highest spending amount. It looks like your biggest spend was PHP 5,959.10. 

Do you recall what you purchased that day? It might have been a larger purchase like appliances, a plane ticket, or maybe even a bigger grocery run! Let me know if that looks off, or if you'd like me to try and narrow down that transaction further. ðŸ˜Š
2025-06-15 18:15:19,680 - __main__ - INFO - User Query (en): details of highest spending
2025-06-15 18:15:20,935 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:15:20,936 - __main__ - INFO - Generated SQL Query: SELECT * FROM transactions WHERE "Amount" = (SELECT MAX("Amount") FROM transactions WHERE "Credit/debit indicator" = 'Debit') AND "Credit/debit indicator" = 'Debit';
2025-06-15 18:15:20,938 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1
2025-06-15 18:15:22,766 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:15:22,766 - __main__ - INFO - Final Assistant Response (NL): Okay, I've got the details of your highest spending transaction. On May 29, 2025, you made a debit of PHP 5,959.10. The transaction is listed as "W/D FR SAV MNL_GTZON SAMPALOC, M ML".

It looks like this was a withdrawal from your savings account at a BDO branch located in Sampaloc, Manila, specifically the branch near GTZON (likely referring to a commercial area). Do you remember making a larger cash withdrawal around that time in Sampaloc? Was it for something specific like paying rent or for a special occasion? Let me know if that rings a bell! ðŸ˜Š
2025-06-15 18:15:35,826 - __main__ - INFO - User Query (en): details of top highest spendings
2025-06-15 18:15:36,923 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:15:36,923 - __main__ - INFO - Generated SQL Query: SELECT * FROM transactions WHERE "Credit/debit indicator" = 'Debit' ORDER BY "Amount" DESC LIMIT 10;
2025-06-15 18:15:36,925 - __main__ - INFO - SQL Query Executed Successfully. Results count: 10
2025-06-15 18:15:39,870 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:15:39,871 - __main__ - INFO - Final Assistant Response (NL): Okay, here's a breakdown of your top spending transactions, ranked from highest to lowest:

*   **PHP 5,959.10, PHP 5,912.08, PHP 5,786.64, PHP 4,015.00, and PHP 4,015.00:** These are all withdrawals from your savings account at the BDO branch located in Sampaloc, Manila, specifically the branch near GTZON, all on May 29, 2025. It seems you made multiple withdrawals at this branch on the same day. Do you remember needing a large amount of cash around that time, maybe for paying bills or other expenses?
*   **PHP 5,299.49, PHP 4,494.82, PHP 4,038.73, PHP 3,986.00, and PHP 3,986.00:** These are all debits via BDOPay to various P2MI merchants (indicated by 'BDOPAY BN P2MQR-PAY2-'). All these transactions occurred on May 30, 2025. These seem to be payments to different merchants using the P2MI QR code payment system of BDO. Do you recall using BDOPay frequently on that day for shopping or settling bills at various establishments accepting QRPh payments? 

Does anything here spark a memory? Let me know if you want to investigate any of these further! ðŸ˜Š
2025-06-15 18:15:57,278 - __main__ - INFO - User Query (en): what do the payment methods mean?
2025-06-15 18:15:58,301 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:15:58,301 - __main__ - INFO - Generated SQL Query: SELECT DISTINCT "Counter party name" FROM transactions;
2025-06-15 18:15:58,303 - __main__ - INFO - SQL Query Executed Successfully. Results count: 180
2025-06-15 18:16:04,156 - __main__ - ERROR - Error decoding JSON from Gemini: Invalid \escape: line 2 column 1834 (char 1835). Raw content: ```python
{
"natural_language_response": "Okay, I can definitely help you understand what these payment methods mean! Based on your transaction history, here's a quick rundown:\n\n*   **Received from Other Bank:** This means you received money that was transferred from an account at a different bank to your BDO account.\n*   **W/D FR SAV BDO:** This is a withdrawal from your savings account at a BDO branch. The numbers following 'BDO/' likely refer to specific branch codes (e.g., '54SM STAMESA BDO' might indicate a branch inside SM Sta. Mesa).\n*   **POS W/D SV [Merchant Name] ATP:** This indicates a purchase made using your card at a Point of Sale (POS) terminal. 'ATP' often means 'at the point' of the transaction.\n    *   **MOVE IT MAKATI ATP/ANGKAS MANILA ATP/GRAB MAKATI ATP:** Payments for your rides with these ride-sharing services popular in the Philippines.\n    *   **SM CINEMA [Location/Code] ATP:** Purchases made at SM Cinema, probably for movie tickets or snacks.\n    *   **SMART APP MAKATI ATP:** Could be for topping up your SMART prepaid load or paying for subscriptions via the SMART app.\n    *   **GOOGLE *CH g.co/helppa ATP/GOOGLE*TEM CC GOOGLE.C ATP:** Transactions related to Google services. The '*CH' and '*TEM' indicate different Google departments or types of services.\n    *   **CHOOKS SM QUEZON ATP:** Payment at a Chooks-to-Go branch, likely for some delicious roasted chicken!\n    *   **THE COFFEE POS:** Payment to a coffee shop.\n    *   **SALARYMAN TAGUIG MLIC/CARGOFISH TAGUIG CITY ATP:** Payment to a restaurant or merchant in Taguig.\n    *   **APPLE.COM/ITUNES.COM ATP:** Transactions related to the Apple store, such as buying subscription or an app.\n    *   **NATIONAL B POS:** Payment to national bookstore. This could be for purchasing books and school supplies.\n*   **Prepaid Reload to \*\*\*\*[Code]:** Topping up a prepaid mobile number. The '\*\*\*\*' hides part of the number for security.\n*   **BDOPAY BN P2MQR-PAY2-[Code]- P2MI:** Payments made using BDOPay. P2MI likely refers to 'Person to Merchant Instapay', so these are payments to merchants through the Instapay network. You're using this payment method a lot!\n*   **Sent via InstaPay GXI \*\*\*\*\[Code]:** Funds you transferred to someone else via InstaPay. GXI is often the identifier for the specific Instapay service provider.\n*   **INTEREST PAY SYS-GEN:** Interest earned on your savings account, automatically generated by the system.\n*   **Received from BDO Account:** Money you received from another BDO account.\n*   **C8 LCL LWRSET DR MOVE IT 0430/C8 LCL LSETT CR MOVE 0430:** These transactions are related to Move It. The 'DR' likely refers to debit and 'CR' refers to credit.\n\nHopefully, this clarifies things! Do any of these payment methods stand out, or would you like me to elaborate on a specific one? ðŸ˜Š"
}
```
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_nonml.py", line 336, in get_gemini_json_response
    response_dict = json.loads(json_str)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 353, in raw_decode
    obj, end = self.scan_once(s, idx)
json.decoder.JSONDecodeError: Invalid \escape: line 2 column 1834 (char 1835)
2025-06-15 18:16:04,157 - __main__ - ERROR - Gemini failed at NL generation step after query execution. Error: Error decoding JSON from Gemini: Invalid \escape: line 2 column 1834 (char 1835). Raw: ```python
{
"natural_language_response": "Okay, I can definitely help you understand what these payment methods mean! Based on your transaction history, here's a quick rundown:\n\n*   **Received from Other Bank:** This means you received money that was transferred from an account at a different bank to your BDO account.\n*   **W/D FR SAV BDO:** This is a withdrawal from your savings account at a BDO branch. The numbers following 'BDO/' likely refer to specific branch codes (e.g., '54SM STAMESA BDO' might indicate a branch inside SM Sta. Mesa).\n*   **POS W/D SV [Merchant Name] ATP:** This indicates a purchase made using your card at a Point of Sale (POS) terminal. 'ATP' often means 'at the point' of the transaction.\n    *   **MOVE IT MAKATI ATP/ANGKAS MANILA ATP/GRAB MAKATI ATP:** Payments for your rides with these ride-sharing services popular in the Philippines.\n    *   **SM CINEMA [Location/Code] ATP:** Purchases made at SM Cinema, probably for movie tickets or snacks.\n    *   **SMART APP MAKATI ATP:** Could be for topping up your SMART prepaid load or paying for subscriptions via the SMART app.\n    *   **GOOGLE *CH g.co/helppa ATP/GOOGLE*TEM CC GOOGLE.C ATP:** Transactions related to Google services. The '*CH' and '*TEM' indicate different Google departments or types of services.\n    *   **CHOOKS SM QUEZON ATP:** Payment at a Chooks-to-Go branch, likely for some delicious roasted chicken!\n    *   **THE COFFEE POS:** Payment to a coffee shop.\n    *   **SALARYMAN TAGUIG MLIC/CARGOFISH TAGUIG CITY ATP:** Payment to a restaurant or merchant in Taguig.\n    *   **APPLE.COM/ITUNES.COM ATP:** Transactions related to the Apple store, such as buying subscription or an app.\n    *   **NATIONAL B POS:** Payment to national bookstore. This could be for purchasing books and school supplies.\n*   **Prepaid Reload to \*\*\*\*[Code]:** Topping up a prepaid mobile number. The '\*\*\*\*' hides part of the number for security.\n*   **BDOPAY BN P2MQR-PAY2-[Code]- P2MI:** Payments made using BDOPay. P2MI likely refers to 'Person to Merchant Instapay', so these are payments to merchants through the Instapay network. You're using this payment method a lot!\n*   **Sent via InstaPay GXI \*\*\*\*\[Code]:** Funds you transferred to someone else via InstaPay. GXI is often the identifier for the specific Instapay service provider.\n*   **INTEREST PAY SYS-GEN:** Interest earned on your savings account, automatically generated by the system.\n*   **Received from BDO Account:** Money you received from another BDO account.\n*   **C8 LCL LWRSET DR MOVE IT 0430/C8 LCL LSETT CR MOVE 0430:** These transactions are related to Move It. The 'DR' likely refers to debit and 'CR' refers to credit.\n\nHopefully, this clarifies things! Do any of these payment methods stand out, or would you like me to elaborate on a specific one? ðŸ˜Š"
}
```
2025-06-15 18:16:15,743 - __main__ - INFO - Flask Application started.
2025-06-15 18:16:15,760 - __main__ - INFO - Database connection established.
2025-06-15 18:16:15,760 - __main__ - INFO - Database schema retrieved and cached.
2025-06-15 18:16:15,811 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-15 18:16:16,916 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-15 18:16:23,366 - __main__ - INFO - User Query (en): details of my highest spendings
2025-06-15 18:16:30,760 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:16:30,761 - __main__ - INFO - Generated SQL Query: SELECT * FROM transactions ORDER BY Amount DESC LIMIT 5
2025-06-15 18:16:30,762 - __main__ - INFO - Database connection established.
2025-06-15 18:16:30,764 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1093386b0>, <sqlite3.Row object at 0x109338ab0>, <sqlite3.Row object at 0x1093385b0>, <sqlite3.Row object at 0x109338d50>, <sqlite3.Row object at 0x109338db0>]
2025-06-15 18:16:33,217 - __main__ - ERROR - Error decoding JSON from Gemini: Invalid \escape: line 3 column 147 (char 332). Raw content: ```json
{
  "sql": "SELECT \"Counter party account number\", \"Counter party name\", Currency, Amount, \"Credit/debit indicator\", \"Book date\" FROM transactions ORDER BY Amount DESC LIMIT 5",
  "natural_language_response": "Here are the details of your top 5 highest transactions:\n\n*   May 29, 2025: Debit of â‚±5,959.10 at W/D FR SAV MNL\_GTZON SAMPALOC, M ML\n*   May 28, 2025: Credit of â‚±5,937.10 received from Other Bank\n*   May 29, 2025: Debit of â‚±5,912.08 at W/D FR SAV MNL\_GTZON SAMPALOC, M ML\n*   May 28, 2025: Credit of â‚±5,850.91 received from Other Bank\n*   May 28, 2025: Credit of â‚±5,828.88 received from Other Bank\n\nLet me know if you'd like more details on any of these transactions!"
}
```
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_nonml.py", line 245, in get_gemini_response
    response_dict = json.loads(json_str)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 353, in raw_decode
    obj, end = self.scan_once(s, idx)
json.decoder.JSONDecodeError: Invalid \escape: line 3 column 147 (char 332)
2025-06-15 18:16:33,221 - __main__ - ERROR - Gemini failed to generate final NL response after query execution. Assistant response: I executed the query, but I had trouble forming a clear response. Please try again.
2025-06-15 18:16:41,192 - __main__ - INFO - User Query (en): details of my highest spendings
2025-06-15 18:16:42,540 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:16:42,540 - __main__ - INFO - Generated SQL Query: SELECT * FROM transactions ORDER BY Amount DESC LIMIT 5
2025-06-15 18:16:42,541 - __main__ - INFO - Database connection established.
2025-06-15 18:16:42,542 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x109338ef0>, <sqlite3.Row object at 0x109338530>, <sqlite3.Row object at 0x109338fd0>, <sqlite3.Row object at 0x109338f50>, <sqlite3.Row object at 0x109338eb0>]
2025-06-15 18:16:44,787 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:16:44,787 - __main__ - INFO - Final Assistant Response (NL): Okay, here are the details of your top 5 highest transactions:

*   **May 29, 2025:** A debit of â‚±5,959.10 at W/D FR SAV MNL_GTZON SAMPALOC, M ML
*   **May 28, 2025:** A credit of â‚±5,937.10 Received from Other Bank
*   **May 29, 2025:** A debit of â‚±5,912.08 at W/D FR SAV MNL_GTZON SAMPALOC, M ML
*   **May 28, 2025:** A credit of â‚±5,850.91 Received from Other Bank
*   **May 28, 2025:** A credit of â‚±5,828.88 Received from Other Bank

Do you need more details on any of these?
2025-06-15 18:17:02,354 - __main__ - INFO - User Query (en): i need more details please
2025-06-15 18:17:03,845 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:17:03,846 - __main__ - INFO - Generated SQL Query: SELECT * FROM transactions ORDER BY Amount DESC LIMIT 5;
2025-06-15 18:17:03,846 - __main__ - INFO - Database connection established.
2025-06-15 18:17:03,848 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1093385b0>, <sqlite3.Row object at 0x109338450>, <sqlite3.Row object at 0x1093385f0>, <sqlite3.Row object at 0x109338f90>, <sqlite3.Row object at 0x1093fd190>]
2025-06-15 18:17:06,396 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:17:06,396 - __main__ - INFO - Final Assistant Response (NL): Okay, here's a more detailed breakdown of your top 5 highest transactions:

*   **May 29, 2025:** A debit of â‚±5,959.10 at W/D FR SAV MNL_GTZON SAMPALOC, M ML. No counter party account number available.
*   **May 28, 2025:** A credit of â‚±5,937.10 Received from Other Bank. No counter party account number available.
*   **May 29, 2025:** A debit of â‚±5,912.08 at W/D FR SAV MNL_GTZON SAMPALOC, M ML. No counter party account number available.
*   **May 28, 2025:** A credit of â‚±5,850.91 Received from Other Bank. No counter party account number available.
*   **May 28, 2025:** A credit of â‚±5,828.88 Received from Other Bank. No counter party account number available.

Do you need more details on any of these transactions, like the counter party's name?
2025-06-15 18:17:20,280 - __main__ - INFO - User Query (en): what does those transactions indicate?
2025-06-15 18:17:22,375 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:17:22,375 - __main__ - INFO - Generated SQL Query: SELECT "Credit/debit indicator", "Counter party name", "Book date", Amount FROM transactions WHERE Amount IN (SELECT MAX(Amount) FROM transactions ORDER BY Amount DESC LIMIT 5)
2025-06-15 18:17:22,376 - __main__ - INFO - Database connection established.
2025-06-15 18:17:22,378 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x109338530>]
2025-06-15 18:17:24,519 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:17:24,519 - __main__ - INFO - Final Assistant Response (NL): Okay, here's what those transactions generally indicate:

*   **Debits (Withdrawals):** Transactions at 'W/D FR SAV MNL_GTZON SAMPALOC, M ML' on May 29, 2025, suggest ATM withdrawals or point-of-sale transactions from that location in Sampaloc, Manila.
*   **Credits (Deposits):** Transactions marked as 'Received from Other Bank' indicate funds transferred into your account from another bank. These occurred on May 28, 2025.

Essentially, it looks like you made some withdrawals and received transfers from another bank around that time. Do you want me to look into any specific transaction further?
2025-06-15 18:17:43,924 - __main__ - INFO - User Query (en): what does it mean, debit and credit?
2025-06-15 18:17:45,306 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:17:45,306 - __main__ - INFO - Generated SQL Query: None
2025-06-15 18:17:45,307 - __main__ - INFO - Database connection established.
2025-06-15 18:17:45,307 - __main__ - CRITICAL - An unexpected critical error occurred: argument 1 must be str, not None
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_nonml.py", line 318, in chat
    cursor.execute(sql_query)
TypeError: argument 1 must be str, not None
2025-06-15 18:17:54,736 - __main__ - INFO - User Query (en): what does debit and credit mean here?
2025-06-15 18:17:56,624 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:17:56,624 - __main__ - INFO - Generated SQL Query: SELECT DISTINCT `Credit/debit indicator` FROM transactions;
2025-06-15 18:17:56,625 - __main__ - INFO - Database connection established.
2025-06-15 18:17:56,627 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1093fd0b0>, <sqlite3.Row object at 0x1093fd230>]
2025-06-15 18:17:58,082 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:17:58,082 - __main__ - INFO - Final Assistant Response (NL): Okay, in the context of your account: 

*   **Credit** typically means money coming into your account, like a deposit.
*   **Debit** usually means money leaving your account, such as a withdrawal or payment.

Does that make sense? Let me know if you have more questions!
2025-06-15 18:18:03,558 - __main__ - INFO - User Query (en): oh, okay.
2025-06-15 18:18:04,863 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:18:04,864 - __main__ - INFO - Generated SQL Query: SELECT 'Understood'
2025-06-15 18:18:04,864 - __main__ - INFO - Database connection established.
2025-06-15 18:18:04,864 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x109338f90>]
2025-06-15 18:18:05,890 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:18:05,891 - __main__ - INFO - Final Assistant Response (NL): Great! Just making sure everything's clear. If you have any more questions down the road, don't hesitate to ask!
2025-06-15 18:18:22,631 - __main__ - INFO - User Query (es): que son gastos mas altas, dame 10
2025-06-15 18:18:25,840 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:18:25,840 - __main__ - INFO - Generated SQL Query: SELECT "Book date", "Credit/debit indicator", Amount, "Counter party name" FROM transactions ORDER BY Amount DESC LIMIT 10;
2025-06-15 18:18:25,842 - __main__ - INFO - Database connection established.
2025-06-15 18:18:25,843 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1093fd330>, <sqlite3.Row object at 0x1093fd250>, <sqlite3.Row object at 0x1093fd290>, <sqlite3.Row object at 0x1093fd3f0>, <sqlite3.Row object at 0x1093fd210>, <sqlite3.Row object at 0x1093fd390>, <sqlite3.Row object at 0x1093fd230>, <sqlite3.Row object at 0x1093fd310>, <sqlite3.Row object at 0x1093fd0b0>, <sqlite3.Row object at 0x1093fd0f0>]
2025-06-15 18:18:28,985 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:18:28,986 - __main__ - INFO - Final Assistant Response (NL): Claro, aquÃ­ estÃ¡n tus 10 gastos mÃ¡s altos:

*   **29 de mayo de 2025:** Un dÃ©bito de â‚±5,959.10 en W/D FR SAV MNL_GTZON SAMPALOC, M ML
*   **28 de mayo de 2025:** Un crÃ©dito de â‚±5,937.10 Recibido de Otro Banco
*   **29 de mayo de 2025:** Un dÃ©bito de â‚±5,912.08 en W/D FR SAV MNL_GTZON SAMPALOC, M ML
*   **28 de mayo de 2025:** Un crÃ©dito de â‚±5,850.91 Recibido de Otro Banco
*   **28 de mayo de 2025:** Un crÃ©dito de â‚±5,828.88 Recibido de Otro Banco
*   **29 de mayo de 2025:** Un dÃ©bito de â‚±5,786.64 en W/D FR SAV MNL_GTZON SAMPALOC, M ML
*   **28 de mayo de 2025:** Un crÃ©dito de â‚±5,725.94 Recibido de Otro Banco
*   **28 de mayo de 2025:** Un crÃ©dito de â‚±5,499.39 Recibido de Otro Banco
*   **28 de mayo de 2025:** Un crÃ©dito de â‚±5,403.40 Recibido de Otro Banco
*   **30 de mayo de 2025:** Un dÃ©bito de â‚±5,299.49 en BDOPAY BN P2MQR-PAY2-83646535- P2MI

Â¿Quieres que te dÃ© mÃ¡s detalles sobre alguna de estas transacciones?
2025-06-15 18:19:14,251 - __main__ - INFO - User Query (es): promedio aumento de gasto cada transaccion por favor
2025-06-15 18:19:15,725 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:19:15,725 - __main__ - INFO - Generated SQL Query: SELECT AVG(Amount) AS "Promedio de Aumento de Gasto" FROM transactions WHERE "Credit/debit indicator" = 'debit';
2025-06-15 18:19:15,726 - __main__ - INFO - Database connection established.
2025-06-15 18:19:15,728 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x109338f70>]
2025-06-15 18:19:17,466 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:19:17,466 - __main__ - INFO - Final Assistant Response (NL): Para darte el promedio de aumento de gasto por transacciÃ³n, necesito un poco mÃ¡s de informaciÃ³n. Â¿Te refieres a un perÃ­odo especÃ­fico o a un tipo particular de transacciÃ³n? Por ejemplo, Â¿quieres saber el aumento promedio de tus gastos mensuales o el aumento promedio en tus retiros de efectivo? Con mÃ¡s detalles, puedo calcular el promedio que buscas. Â¡AvÃ­same!
2025-06-15 18:19:27,315 - __main__ - INFO - User Query (es): en todas las fechas
2025-06-15 18:19:29,245 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:19:29,245 - __main__ - INFO - Generated SQL Query: WITH RankedTransactions AS (SELECT Amount, "Book date", ROW_NUMBER() OVER (ORDER BY "Book date") AS TransactionNumber FROM transactions WHERE "Credit/debit indicator" = 'Debit'),  LaggedTransactions AS (SELECT Amount, "Book date", TransactionNumber, LAG(Amount, 1, 0) OVER (ORDER BY TransactionNumber) AS PreviousAmount FROM RankedTransactions) SELECT AVG(CASE WHEN Amount > PreviousAmount THEN Amount - PreviousAmount ELSE 0 END) AS AverageIncrease FROM LaggedTransactions;
2025-06-15 18:19:29,246 - __main__ - INFO - Database connection established.
2025-06-15 18:19:29,250 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1093fd370>]
2025-06-15 18:19:30,570 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:19:30,570 - __main__ - INFO - Final Assistant Response (NL): CalculÃ© el aumento promedio de gasto por transacciÃ³n en todas las fechas. El aumento promedio es de â‚±260.25. Â¿Te gustarÃ­a que calcule algo mÃ¡s?
2025-06-15 18:19:57,225 - __main__ - INFO - User Query (es): cuanto gaste en Move it y angkas
2025-06-15 18:19:59,049 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:19:59,050 - __main__ - INFO - Generated SQL Query: SELECT SUM(CASE WHEN LOWER("Counter party name") LIKE '%move it%' THEN Amount ELSE 0 END) AS "Move It", SUM(CASE WHEN LOWER("Counter party name") LIKE '%angkas%' THEN Amount ELSE 0 END) AS "Angkas" FROM transactions WHERE LOWER("Counter party name") LIKE '%move it%' OR LOWER("Counter party name") LIKE '%angkas%';
2025-06-15 18:19:59,051 - __main__ - INFO - Database connection established.
2025-06-15 18:19:59,053 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1093fd250>]
2025-06-15 18:20:00,878 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:20:00,878 - __main__ - INFO - Final Assistant Response (NL): Â¡Hola! He calculado tus gastos en Move It y Angkas. Gastaste â‚±21,468.01 en Move It y â‚±8,375.41 en Angkas. Â¿Te gustarÃ­a saber algo mÃ¡s sobre tus gastos en transporte?
2025-06-15 18:20:06,746 - __main__ - INFO - User Query (es): que son promedios
2025-06-15 18:20:08,199 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:20:08,199 - __main__ - INFO - Generated SQL Query: SELECT AVG(Amount) FROM transactions;
2025-06-15 18:20:08,200 - __main__ - INFO - Database connection established.
2025-06-15 18:20:08,200 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x109338fd0>]
2025-06-15 18:20:09,528 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:20:09,528 - __main__ - INFO - Final Assistant Response (NL): El promedio de todas tus transacciones es de â‚±649.63. Â¿Te gustarÃ­a que calcule el promedio de algÃºn tipo de transacciÃ³n en particular?
2025-06-15 18:20:24,817 - __main__ - INFO - User Query (es): no, significa, que son promedios en move it y angkas
2025-06-15 18:20:26,582 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:20:26,582 - __main__ - INFO - Generated SQL Query: SELECT 
    AVG(CASE WHEN LOWER("Counter party name") LIKE '%move it%' THEN Amount ELSE NULL END) AS Promedio_MoveIt,
    AVG(CASE WHEN LOWER("Counter party name") LIKE '%angkas%' THEN Amount ELSE NULL END) AS Promedio_Angkas
FROM transactions;
2025-06-15 18:20:26,583 - __main__ - INFO - Database connection established.
2025-06-15 18:20:26,585 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1093fd0f0>]
2025-06-15 18:20:28,328 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:20:28,328 - __main__ - INFO - Final Assistant Response (NL): El promedio de gasto por transacciÃ³n en Move It es de â‚±89.45, y en Angkas es de â‚±73.47. Â¿Hay algo mÃ¡s en lo que te pueda ayudar?
2025-06-15 18:21:05,386 - __main__ - INFO - User Query (es): ok, cuanto en comidas?
2025-06-15 18:21:07,032 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:21:07,032 - __main__ - INFO - Generated SQL Query: SELECT SUM(Amount) FROM transactions WHERE LOWER("Counter party name") LIKE '%food%' OR LOWER("Counter party name") LIKE '%restaurant%' OR LOWER("Counter party name") LIKE '%cafe%' OR LOWER("Counter party name") LIKE '%fast food%';
2025-06-15 18:21:07,034 - __main__ - INFO - Database connection established.
2025-06-15 18:21:07,036 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1093fd3b0>]
2025-06-15 18:21:08,872 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:21:08,872 - __main__ - INFO - Final Assistant Response (NL): Hmm, no encontrÃ© informaciÃ³n especÃ­fica sobre tus gastos en 'comidas'. Â¿PodrÃ­as darme mÃ¡s detalles sobre cÃ³mo se registran esos gastos en tus transacciones, como nombres de restaurantes o descripciones? Â¡AsÃ­ podrÃ© ayudarte mejor!
2025-06-15 18:21:23,445 - __main__ - INFO - User Query (es): no, puedes contextualizar.
2025-06-15 18:21:25,219 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:21:25,220 - __main__ - INFO - Generated SQL Query: SELECT SUM(CASE WHEN LOWER("Counter party name") LIKE '%food%' OR LOWER("Counter party name") LIKE '%restaurant%' OR LOWER("Counter party name") LIKE '%cafe%' THEN Amount ELSE 0 END) FROM transactions WHERE "Credit/debit indicator" = 'Debit'
2025-06-15 18:21:25,221 - __main__ - INFO - Database connection established.
2025-06-15 18:21:25,223 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x109338fd0>]
2025-06-15 18:21:26,766 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:21:26,766 - __main__ - INFO - Final Assistant Response (NL): Basado en la informaciÃ³n disponible y buscando transacciones relacionadas con 'comida', 'restaurante' o 'cafÃ©', no se encontraron gastos en esas categorÃ­as. Â¿Hay otros tÃ©rminos o nombres de establecimientos que podrÃ­a buscar para obtener la informaciÃ³n que necesitas?
2025-06-15 18:21:55,343 - __main__ - INFO - User Query (es): pero no son nombrados como eso, pueden nombrados como un nombre de fast food o algos
2025-06-15 18:21:57,193 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:21:57,193 - __main__ - INFO - Generated SQL Query: SELECT SUM(Amount) FROM transactions WHERE LOWER("Counter party name") LIKE '%fast food%' OR LOWER("Counter party name") LIKE '%kfc%' OR LOWER("Counter party name") LIKE '%mc donalds%' OR LOWER("Counter party name") LIKE '%burger king%' OR LOWER("Counter party name") LIKE '%jollibee%' OR LOWER("Counter party name") LIKE '%pizza%' OR LOWER("Counter party name") LIKE '%chowking%';
2025-06-15 18:21:57,194 - __main__ - INFO - Database connection established.
2025-06-15 18:21:57,197 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1093fd5b0>]
2025-06-15 18:21:59,050 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:21:59,050 - __main__ - INFO - Final Assistant Response (NL): Â¡Entendido! BusquÃ© nombres de establecimientos de comida rÃ¡pida y encontrÃ© un total de â‚±6,691.96 en gastos relacionados con 'fast food', 'McDo', 'Jollibee' y 'Burger King'. Â¿Te gustarÃ­a que busque otros establecimientos de comida?
2025-06-15 18:22:17,967 - __main__ - INFO - User Query (es): si, explicame las detalles sobre esos porfa
2025-06-15 18:22:22,088 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:22:22,088 - __main__ - INFO - Generated SQL Query: SELECT "Book date", "Counter party name", Amount, "Credit/debit indicator" FROM transactions WHERE LOWER("Counter party name") LIKE '%fast food%' OR LOWER("Counter party name") LIKE '%mcdo%' OR LOWER("Counter party name") LIKE '%jollibee%' OR LOWER("Counter party name") LIKE '%burger king%' ORDER BY "Book date" ASC
2025-06-15 18:22:22,089 - __main__ - INFO - Database connection established.
2025-06-15 18:22:22,092 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1093fd530>, <sqlite3.Row object at 0x1093fd450>, <sqlite3.Row object at 0x1093fd210>, <sqlite3.Row object at 0x1093fd230>, <sqlite3.Row object at 0x1093fd370>, <sqlite3.Row object at 0x1093fd690>, <sqlite3.Row object at 0x1093fd3b0>, <sqlite3.Row object at 0x1093fd310>, <sqlite3.Row object at 0x1093fd4d0>, <sqlite3.Row object at 0x1093fd3f0>, <sqlite3.Row object at 0x1093fd150>, <sqlite3.Row object at 0x1093fd4f0>]
2025-06-15 18:22:24,365 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:22:24,365 - __main__ - INFO - Final Assistant Response (NL): Claro, aquÃ­ estÃ¡n los detalles de tus gastos en comida rÃ¡pida que encontrÃ©:

*   **2 de junio de 2025:** Varios dÃ©bitos en 'POS W/D SV JOLLIBEE J MANILA ATP' con montos que varÃ­an entre â‚±379.24 y â‚±709.31.

Â¿Te gustarÃ­a que busque algÃºn otro tipo de establecimiento o rango de fechas en particular?
2025-06-15 18:22:44,073 - __main__ - INFO - User Query (es): que este significa
2025-06-15 18:22:46,030 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:22:46,031 - __main__ - INFO - Generated SQL Query: SELECT DISTINCT `Counter party name` FROM transactions WHERE `Counter party name` LIKE '%POS W/D SV JOLLIBEE J MANILA ATP%';
2025-06-15 18:22:46,032 - __main__ - INFO - Database connection established.
2025-06-15 18:22:46,034 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1093fd630>]
2025-06-15 18:22:47,897 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:22:47,897 - __main__ - INFO - Final Assistant Response (NL): Esa transacciÃ³n 'POS W/D SV JOLLIBEE J MANILA ATP' indica un pago o retiro en un punto de venta (POS) de Jollibee en Manila. 'W/D' podrÃ­a referirse a 'Withdrawal', sugiriendo que quizÃ¡s retiraste efectivo al hacer una compra ahÃ­. Â¿Hay algo mÃ¡s que quieras saber sobre esta transacciÃ³n?
2025-06-15 18:23:10,360 - __main__ - INFO - User Query (es): entonces, significa que le compro algo en Jollibee?
2025-06-15 18:23:12,088 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:23:12,089 - __main__ - INFO - Generated SQL Query: SELECT "Counter party name", "Book date", Amount, "Credit/debit indicator" FROM transactions WHERE LOWER("Counter party name") LIKE '%jollibee%' ORDER BY "Book date" ASC
2025-06-15 18:23:12,090 - __main__ - INFO - Database connection established.
2025-06-15 18:23:12,092 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1093fd310>, <sqlite3.Row object at 0x1093fd230>, <sqlite3.Row object at 0x1093fd7b0>, <sqlite3.Row object at 0x1093fd690>, <sqlite3.Row object at 0x1093fd6f0>, <sqlite3.Row object at 0x1093fd770>, <sqlite3.Row object at 0x1093fd670>, <sqlite3.Row object at 0x1093fd650>, <sqlite3.Row object at 0x1093fd210>, <sqlite3.Row object at 0x1093fd530>, <sqlite3.Row object at 0x1093fd4d0>, <sqlite3.Row object at 0x1093fd3b0>]
2025-06-15 18:23:14,383 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:23:14,383 - __main__ - INFO - Final Assistant Response (NL): Â¡Exacto! 'POS W/D SV JOLLIBEE J MANILA ATP' significa que hiciste una compra en Jollibee en Manila. Los dÃ©bitos indican que gastaste dinero allÃ­. Veo varias transacciones en Jollibee el 2 de junio de 2025. Â¿Quieres que te muestre el total gastado en Jollibee ese dÃ­a?
2025-06-15 18:23:27,920 - __main__ - INFO - User Query (es): si
2025-06-15 18:23:29,874 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:23:29,874 - __main__ - INFO - Generated SQL Query: SELECT "Book date", "Counter party name", "Credit/debit indicator", Amount FROM transactions WHERE LOWER("Counter party name") LIKE '%jollibee%' ORDER BY "Book date" ASC;
2025-06-15 18:23:29,875 - __main__ - INFO - Database connection established.
2025-06-15 18:23:29,877 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1093fd370>, <sqlite3.Row object at 0x1093fd4f0>, <sqlite3.Row object at 0x1093fd6b0>, <sqlite3.Row object at 0x1093fd410>, <sqlite3.Row object at 0x1093fd4b0>, <sqlite3.Row object at 0x1093fd5f0>, <sqlite3.Row object at 0x1093fd830>, <sqlite3.Row object at 0x1093fd790>, <sqlite3.Row object at 0x1093fd7f0>, <sqlite3.Row object at 0x1093fd490>, <sqlite3.Row object at 0x1093fd810>, <sqlite3.Row object at 0x1093fd050>]
2025-06-15 18:23:31,631 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:23:31,631 - __main__ - INFO - Final Assistant Response (NL): Claro, aquÃ­ estÃ¡n los detalles de tus transacciones en Jollibee el 2 de junio de 2025:

*   **2 de junio de 2025:** Varios dÃ©bitos en 'POS W/D SV JOLLIBEE J MANILA ATP' con montos que varÃ­an entre â‚±379.24 y â‚±709.31.

Â¿Hay algo mÃ¡s en lo que te pueda ayudar?
2025-06-15 18:23:36,932 - __main__ - INFO - User Query (es): necesito un total
2025-06-15 18:23:38,755 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:23:38,755 - __main__ - INFO - Generated SQL Query: SELECT SUM(Amount) AS Total FROM transactions WHERE "Counter party name" LIKE '%JOLLIBEE%' AND strftime('%Y-%m-%d', "Book date") = '2025-06-02' AND "Credit/debit indicator" = 'debit';
2025-06-15 18:23:38,756 - __main__ - INFO - Database connection established.
2025-06-15 18:23:38,756 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1093fd6f0>]
2025-06-15 18:23:40,835 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:23:40,835 - __main__ - INFO - Final Assistant Response (NL): No encontrÃ© un total exacto para las transacciones en Jollibee el 2 de junio de 2025. Parece que no hay montos registrados como 'Amount' en esas transacciones. Â¿Te gustarÃ­a que busque informaciÃ³n diferente o en otro rango de fechas?
2025-06-15 18:23:55,386 - __main__ - INFO - User Query (es): necesito un gasto total en Jollibee
2025-06-15 18:23:56,966 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:23:56,966 - __main__ - INFO - Generated SQL Query: SELECT SUM(Amount) AS total_jollibee_expenses FROM transactions WHERE `Counter party name` LIKE '%JOLLIBEE%' AND `Credit/debit indicator` = 'Debit'
2025-06-15 18:23:56,967 - __main__ - INFO - Database connection established.
2025-06-15 18:23:56,969 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1093fd790>]
2025-06-15 18:23:58,573 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:23:58,573 - __main__ - INFO - Final Assistant Response (NL): Â¡Claro! Tu gasto total en Jollibee es de â‚±6,691.96. Â¿Te gustarÃ­a saber algo mÃ¡s?
2025-06-15 18:24:16,222 - __main__ - INFO - User Query (es): cuanto gaste en Grab
2025-06-15 18:24:18,821 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:24:18,821 - __main__ - INFO - Generated SQL Query: SELECT SUM(Amount) FROM transactions WHERE LOWER("Counter party name") LIKE '%grab%' AND "Credit/debit indicator" = 'Debit';
2025-06-15 18:24:18,822 - __main__ - INFO - Database connection established.
2025-06-15 18:24:18,824 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x109338f90>]
2025-06-15 18:24:20,391 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:24:20,392 - __main__ - INFO - Final Assistant Response (NL): Â¡Hola! He revisado tus transacciones y encontrÃ© que gastaste un total de â‚±4,085.94 en Grab. Â¿Te gustarÃ­a que te dÃ© mÃ¡s detalles sobre estos gastos?
2025-06-15 18:24:23,864 - __main__ - INFO - User Query (es): si
2025-06-15 18:24:26,006 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:24:26,007 - __main__ - INFO - Generated SQL Query: SELECT * FROM transactions WHERE "Counter party name" LIKE '%JOLLIBEE%' AND "Book date" = 'June 02, 2025';
2025-06-15 18:24:26,007 - __main__ - INFO - Database connection established.
2025-06-15 18:24:26,008 - __main__ - INFO - SQL Query Executed Successfully. Results: []
2025-06-15 18:24:27,567 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:24:27,567 - __main__ - INFO - Final Assistant Response (NL): Claro, Â¿en quÃ© te puedo ayudar ahora? Para darte la informaciÃ³n mÃ¡s Ãºtil, Â¿podrÃ­as ser un poco mÃ¡s especÃ­fico sobre lo que estÃ¡s buscando? ðŸ˜Š
2025-06-15 18:24:43,199 - __main__ - INFO - User Query (es): cuanto gaste en Grab, dame detalles
2025-06-15 18:24:45,769 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:24:45,770 - __main__ - INFO - Generated SQL Query: SELECT "Book date", "Counter party name", Amount, "Credit/debit indicator" FROM transactions WHERE LOWER("Counter party name") LIKE '%grab%' ORDER BY "Book date" ASC;
2025-06-15 18:24:45,771 - __main__ - INFO - Database connection established.
2025-06-15 18:24:45,773 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x109338410>, <sqlite3.Row object at 0x1093fd790>, <sqlite3.Row object at 0x1093fd3d0>, <sqlite3.Row object at 0x1093fd4b0>, <sqlite3.Row object at 0x1093fd490>, <sqlite3.Row object at 0x1093386b0>, <sqlite3.Row object at 0x1093fd670>, <sqlite3.Row object at 0x1093fd410>, <sqlite3.Row object at 0x1093fd5f0>, <sqlite3.Row object at 0x1093fd770>, <sqlite3.Row object at 0x1093fd6f0>, <sqlite3.Row object at 0x1093fd650>, <sqlite3.Row object at 0x1093fd7d0>, <sqlite3.Row object at 0x1093fd7b0>, <sqlite3.Row object at 0x1093fd690>, <sqlite3.Row object at 0x1093fd0f0>, <sqlite3.Row object at 0x1093fd910>, <sqlite3.Row object at 0x1093fd3b0>, <sqlite3.Row object at 0x1093fd950>, <sqlite3.Row object at 0x1093fd310>, <sqlite3.Row object at 0x1093fd390>, <sqlite3.Row object at 0x1093fd290>, <sqlite3.Row object at 0x1093fd750>, <sqlite3.Row object at 0x1093fd030>, <sqlite3.Row object at 0x1093fd0b0>, <sqlite3.Row object at 0x1093fd510>, <sqlite3.Row object at 0x1093fd350>, <sqlite3.Row object at 0x1093fd2f0>, <sqlite3.Row object at 0x1093fd6b0>, <sqlite3.Row object at 0x1093fd8d0>, <sqlite3.Row object at 0x1093fd810>, <sqlite3.Row object at 0x1093fd050>, <sqlite3.Row object at 0x1093fd4f0>, <sqlite3.Row object at 0x1093fd590>, <sqlite3.Row object at 0x1093fd850>, <sqlite3.Row object at 0x1093fd4d0>, <sqlite3.Row object at 0x1093fd870>, <sqlite3.Row object at 0x1093fda10>, <sqlite3.Row object at 0x1093fd8b0>, <sqlite3.Row object at 0x1093fd890>, <sqlite3.Row object at 0x1093fda70>, <sqlite3.Row object at 0x1093fd930>]
2025-06-15 18:24:47,956 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:24:47,956 - __main__ - INFO - Final Assistant Response (NL): Â¡Claro! AquÃ­ estÃ¡n los detalles de tus transacciones con Grab:

*   **27 de mayo de 2025:** Varios dÃ©bitos en 'POS W/D SV GRAB MAKATI ATP' con montos que varÃ­an entre â‚±107.02 y â‚±286.26.
*   **2 de junio de 2025:** Varios dÃ©bitos en 'POS W/D SV GRAB MAKATI ATP' con montos que varÃ­an entre â‚±57.99 y â‚±127.11.
*   **4 de junio de 2025:** Varios crÃ©ditos y dÃ©bitos en 'POS W/D SV GRAB MAKATI ATP' con montos que varÃ­an entre â‚±76.28 y â‚±206.15.

Â¿Te gustarÃ­a que calcule el total gastado en Grab o que busque en un rango de fechas especÃ­fico?
2025-06-15 18:25:04,042 - __main__ - INFO - User Query (es): si, calcule el total, y el promedio
2025-06-15 18:25:05,724 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:25:05,724 - __main__ - INFO - Generated SQL Query: SELECT COUNT(Amount), SUM(Amount), AVG(Amount) FROM transactions WHERE "Book date" LIKE '2025-06-02%' AND "Counter party name" LIKE '%JOLLIBEE%';
2025-06-15 18:25:05,726 - __main__ - INFO - Database connection established.
2025-06-15 18:25:05,727 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1093fdcd0>]
2025-06-15 18:25:07,266 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:25:07,267 - __main__ - INFO - Final Assistant Response (NL): Â¡Claro! CalculÃ© el total y el promedio de tus transacciones en Jollibee. El total gastado es de â‚±6,691.96 y el promedio por transacciÃ³n es de â‚±557.66. Â¿Te gustarÃ­a que haga algÃºn otro cÃ¡lculo?
2025-06-15 18:25:14,598 - __main__ - INFO - User Query (es): si, calcule el total, y el promedio, en Grab
2025-06-15 18:25:16,274 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:25:16,274 - __main__ - INFO - Generated SQL Query: SELECT SUM(Amount) AS Total_Gastado, AVG(Amount) AS Promedio_Gasto FROM transactions WHERE LOWER("Counter party name") LIKE '%grab%';
2025-06-15 18:25:16,275 - __main__ - INFO - Database connection established.
2025-06-15 18:25:16,276 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1093fde10>]
2025-06-15 18:25:18,357 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:25:18,357 - __main__ - INFO - Final Assistant Response (NL): Â¡Claro! CalculÃ© el total y el promedio de tus gastos en Grab. Gastaste un total de â‚±6,527.75, con un promedio de gasto por transacciÃ³n de â‚±155.42. Â¿Te gustarÃ­a saber algo mÃ¡s sobre tus gastos en Grab?
2025-06-15 18:25:53,802 - __main__ - INFO - User Query (es): cuantas veces que gaste en Grab y Jollibee, digame separadamente
2025-06-15 18:25:55,500 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:25:55,500 - __main__ - INFO - Generated SQL Query: SELECT COUNT(*) AS Grab_Transactions FROM transactions WHERE LOWER("Counter party name") LIKE '%grab%' UNION ALL SELECT COUNT(*) AS Jollibee_Transactions FROM transactions WHERE LOWER("Counter party name") LIKE '%jollibee%'
2025-06-15 18:25:55,502 - __main__ - INFO - Database connection established.
2025-06-15 18:25:55,504 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1093fdc30>, <sqlite3.Row object at 0x1093fdd90>]
2025-06-15 18:25:57,429 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:25:57,430 - __main__ - INFO - Final Assistant Response (NL): Â¡Hola! Gastaste en Grab 42 veces y en Jollibee 12 veces. Â¿Necesitas saber algo mÃ¡s sobre tus gastos?
2025-06-15 18:26:36,109 - __main__ - INFO - User Query (es): cuantas veces que "gaste" en Move it y angkas, separadamente tambien, no incluir los creditos
2025-06-15 18:26:37,690 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:26:37,690 - __main__ - INFO - Generated SQL Query: SELECT COUNT(*) AS MoveIt_Count FROM transactions WHERE LOWER("Counter party name") LIKE '%move it%' AND "Credit/debit indicator" = 'Debit' UNION ALL SELECT COUNT(*) AS Angkas_Count FROM transactions WHERE LOWER("Counter party name") LIKE '%angkas%' AND "Credit/debit indicator" = 'Debit'
2025-06-15 18:26:37,693 - __main__ - INFO - Database connection established.
2025-06-15 18:26:37,696 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1093fdb30>, <sqlite3.Row object at 0x1093fdd90>]
2025-06-15 18:26:39,292 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:26:39,293 - __main__ - INFO - Final Assistant Response (NL): Â¡Hola! En total, has realizado 186 transacciones en Move It y 72 transacciones en Angkas. Â¡Espero que tus viajes hayan sido seguros y rÃ¡pidos! Â¿Hay algo mÃ¡s en lo que te pueda ayudar?
2025-06-15 18:27:12,972 - __main__ - INFO - User Query (es): transporte publico es muy mal, que xk usar move it mas que transporte publico.
2025-06-15 18:27:15,163 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:27:15,164 - __main__ - INFO - Generated SQL Query: SELECT SUM(CASE WHEN LOWER("Counter party name") LIKE '%move it%' THEN Amount ELSE 0 END) AS MoveIt, SUM(CASE WHEN LOWER("Counter party name") NOT LIKE '%move it%' THEN Amount ELSE 0 END) AS PublicTransport FROM transactions WHERE LOWER("Counter party name") LIKE '%move it%' OR LOWER("Counter party name") LIKE '%bus%' OR LOWER("Counter party name") LIKE '%train%' OR LOWER("Counter party name") LIKE '%jeepney%'
2025-06-15 18:27:15,167 - __main__ - INFO - Database connection established.
2025-06-15 18:27:15,172 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1093fdd70>]
2025-06-15 18:27:17,635 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:27:17,635 - __main__ - INFO - Final Assistant Response (NL): Â¡Hola! Entiendo tu frustraciÃ³n con el transporte pÃºblico. SegÃºn mis registros, gastaste â‚±21,468.01 en Move It, mientras que no hay registros de gastos en transporte pÃºblico en este periodo. Usar Move It puede ser mÃ¡s conveniente aunque implique un mayor gasto. Â¿Te gustarÃ­a explorar otras opciones o comparar tus gastos en transporte de forma mÃ¡s detallada?
2025-06-15 18:29:14,267 - __main__ - INFO - User Query (es): cuanto gaste en Angkas
2025-06-15 18:29:15,684 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:29:15,685 - __main__ - INFO - Generated SQL Query: SELECT SUM(Amount) FROM transactions WHERE "Counter party name" LIKE '%Angkas%' AND "Credit/debit indicator" = 'Debit'
2025-06-15 18:29:15,689 - __main__ - INFO - Database connection established.
2025-06-15 18:29:15,693 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1093fdb30>]
2025-06-15 18:29:17,388 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:29:17,389 - __main__ - INFO - Final Assistant Response (NL): He revisado tus transacciones y veo que gastaste â‚±5,171.85 en Angkas. Â¿Necesitas algÃºn otro detalle sobre tus gastos?
2025-06-15 18:29:30,217 - __main__ - INFO - User Query (es): cuantas veces usÃ© angkas
2025-06-15 18:29:32,408 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:29:32,409 - __main__ - INFO - Generated SQL Query: SELECT COUNT(*) FROM transactions WHERE LOWER("Counter party name") LIKE '%angkas%';
2025-06-15 18:29:32,410 - __main__ - INFO - Database connection established.
2025-06-15 18:29:32,413 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1093fdc50>]
2025-06-15 18:29:33,702 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:29:33,702 - __main__ - INFO - Final Assistant Response (NL): Usaste Angkas 114 veces. Â¿Hay algo mÃ¡s en lo que te pueda ayudar?
2025-06-15 18:29:43,780 - __main__ - INFO - User Query (es): cuantas veces usÃ© angkas, excluir creditos
2025-06-15 18:29:45,291 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:29:45,292 - __main__ - INFO - Generated SQL Query: SELECT COUNT(*) FROM transactions WHERE LOWER("Counter party name") LIKE '%angkas%' AND "Credit/debit indicator" = 'Debit';
2025-06-15 18:29:45,294 - __main__ - INFO - Database connection established.
2025-06-15 18:29:45,297 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1093fdb70>]
2025-06-15 18:29:46,721 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:29:46,721 - __main__ - INFO - Final Assistant Response (NL): Usaste Angkas 72 veces, excluyendo los crÃ©ditos. Â¿Hay algo mÃ¡s en lo que te pueda ayudar?
2025-06-15 18:30:07,673 - __main__ - INFO - User Query (es): xk hay creditos en angkas?
2025-06-15 18:30:09,149 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:30:09,149 - __main__ - INFO - Generated SQL Query: SELECT COUNT(*) FROM transactions WHERE LOWER("Counter party name") LIKE '%angkas%' AND "Credit/debit indicator" = 'Credit';
2025-06-15 18:30:09,151 - __main__ - INFO - Database connection established.
2025-06-15 18:30:09,154 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1093fdb30>]
2025-06-15 18:30:10,692 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:30:10,693 - __main__ - INFO - Final Assistant Response (NL): DetectÃ© que tienes 42 crÃ©ditos relacionados con Angkas. A veces, los crÃ©ditos de Angkas pueden ser reembolsos, promociones, o ajustes en tu cuenta. Â¿Quieres que investigue alguna transacciÃ³n en particular de Angkas para aclarar por quÃ© aparece como crÃ©dito?
2025-06-15 18:30:34,349 - __main__ - INFO - User Query (es): puede significa no hay bookings que sucedio?
2025-06-15 18:30:35,493 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:30:35,493 - __main__ - INFO - Generated SQL Query: SELECT COUNT(*) FROM transactions WHERE LOWER("Counter party name") LIKE '%angkas%';
2025-06-15 18:30:35,494 - __main__ - INFO - Database connection established.
2025-06-15 18:30:35,496 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1093fdc30>]
2025-06-15 18:30:37,054 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:30:37,055 - __main__ - INFO - Final Assistant Response (NL): Basado en mis datos, registraste 114 viajes con Angkas. Â¿Te refieres a que quizÃ¡s algunas reservas no se completaron o no se registraron correctamente? PodrÃ­a haber algunas razones por las que no se muestran todas las reservas. Â¿Quieres que intente buscar mÃ¡s detalles?
2025-06-15 18:30:50,786 - __main__ - INFO - User Query (es): puede significa hay creditos en angkas xk no hay bookings que sucedio?
2025-06-15 18:30:52,057 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:30:52,057 - __main__ - INFO - Generated SQL Query: SELECT COUNT(*) FROM transactions WHERE LOWER("Counter party name") LIKE '%angkas%' AND "Credit/debit indicator" = 'Credit';
2025-06-15 18:30:52,064 - __main__ - INFO - Database connection established.
2025-06-15 18:30:52,066 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1093fdc50>]
2025-06-15 18:30:53,489 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:30:53,489 - __main__ - INFO - Final Assistant Response (NL): EncontrÃ© 42 crÃ©ditos relacionados con Angkas. Puede que sean reembolsos, promociones, o errores en la transacciÃ³n. Â¿Te gustarÃ­a que revise alguna fecha en particular para entender mejor estos crÃ©ditos?
2025-06-15 18:31:33,290 - __main__ - INFO - User Query (es): y si sobre move it? porque hay creditos?
2025-06-15 18:31:34,767 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:31:34,767 - __main__ - INFO - Generated SQL Query: SELECT COUNT(*) FROM transactions WHERE LOWER("Counter party name") LIKE '%move it%' AND "Credit/debit indicator" = 'Credit';
2025-06-15 18:31:34,769 - __main__ - INFO - Database connection established.
2025-06-15 18:31:34,772 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1093fdcf0>]
2025-06-15 18:31:36,036 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:31:36,037 - __main__ - INFO - Final Assistant Response (NL): Â¡Hola! Usaste Move It 54 veces. Â¿Hay algo mÃ¡s en lo que te pueda ayudar hoy?
2025-06-15 18:31:45,856 - __main__ - INFO - User Query (es): si pero por que hay creditos?
2025-06-15 18:31:47,790 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:31:47,791 - __main__ - INFO - Generated SQL Query: SELECT "Credit/debit indicator", COUNT(*) FROM transactions WHERE LOWER("Counter party name") LIKE '%angkas%' GROUP BY "Credit/debit indicator";
2025-06-15 18:31:47,792 - __main__ - INFO - Database connection established.
2025-06-15 18:31:47,796 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1093fdf30>, <sqlite3.Row object at 0x1093fdb30>]
2025-06-15 18:31:49,735 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-15 18:31:49,736 - __main__ - INFO - Final Assistant Response (NL): Ah, veo tu pregunta. De las 114 transacciones de Angkas, 72 son dÃ©bitos, lo que tiene sentido ya que son los pagos que hiciste por los viajes. Pero hay 42 crÃ©ditos. Estos crÃ©ditos podrÃ­an ser reembolsos, promociones o ajustes en tus pagos. Â¿Quieres que revise los detalles de esos crÃ©ditos para darte mÃ¡s informaciÃ³n?
2025-06-17 10:24:51,059 - __main__ - INFO - Flask Application started.
2025-06-17 10:24:51,084 - __main__ - INFO - Database connection established.
2025-06-17 10:24:51,084 - __main__ - INFO - Database schema retrieved and cached.
2025-06-17 10:24:51,136 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-17 10:24:51,429 - __main__ - INFO - Flask Application started.
2025-06-17 10:24:51,441 - __main__ - INFO - Database connection established.
2025-06-17 10:24:51,441 - __main__ - INFO - Database schema retrieved and cached.
2025-06-17 10:24:51,470 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-17 10:24:59,182 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-17 10:25:03,881 - __main__ - INFO - User Query (es): hola
2025-06-17 10:25:06,687 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 10:25:06,687 - __main__ - INFO - Generated SQL Query: None
2025-06-17 10:25:06,690 - __main__ - INFO - Database connection established.
2025-06-17 10:25:06,690 - __main__ - CRITICAL - An unexpected critical error occurred: argument 1 must be str, not None
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_nonml.py", line 318, in chat
    cursor.execute(sql_query)
TypeError: argument 1 must be str, not None
2025-06-17 10:25:18,415 - __main__ - INFO - User Query (es): hola necesito ayuda con mi cuenta
2025-06-17 10:25:19,382 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 10:25:19,382 - __main__ - INFO - Generated SQL Query: None
2025-06-17 10:25:19,383 - __main__ - INFO - Database connection established.
2025-06-17 10:25:19,383 - __main__ - CRITICAL - An unexpected critical error occurred: argument 1 must be str, not None
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_nonml.py", line 318, in chat
    cursor.execute(sql_query)
TypeError: argument 1 must be str, not None
2025-06-17 10:25:21,231 - __main__ - INFO - User Query (es): ha
2025-06-17 10:25:22,181 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 10:25:22,181 - __main__ - INFO - Generated SQL Query: SELECT 'Hola, Â¿en quÃ© puedo ayudarte hoy con tu cuenta?'
2025-06-17 10:25:22,182 - __main__ - INFO - Database connection established.
2025-06-17 10:25:22,183 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d0271f0>]
2025-06-17 10:25:23,184 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 10:25:23,185 - __main__ - INFO - Final Assistant Response (NL): Â¡Hola! Â¿En quÃ© puedo ayudarte hoy con tu cuenta? Estoy aquÃ­ para asistirte con cualquier consulta que tengas.
2025-06-17 10:25:32,518 - __main__ - INFO - User Query (es): hola
2025-06-17 10:25:33,540 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 10:25:33,540 - __main__ - INFO - Generated SQL Query: SELECT 1
2025-06-17 10:25:33,542 - __main__ - INFO - Database connection established.
2025-06-17 10:25:33,543 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d0274b0>]
2025-06-17 10:25:34,494 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 10:25:34,494 - __main__ - INFO - Final Assistant Response (NL): Â¡Hola! Â¿QuÃ© tal? Â¿CÃ³mo puedo ayudarte hoy con tu cuenta bancaria? AvÃ­same en quÃ© te puedo asistir.
2025-06-17 10:26:14,940 - __main__ - INFO - User Query (es): calcule los totales de gastos que hago de move it y angkas
2025-06-17 10:26:16,173 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 10:26:16,173 - __main__ - INFO - Generated SQL Query: SELECT SUM(Amount) FROM transactions WHERE `Credit/debit indicator` = 'Debit' AND (`Counter party name` LIKE '%Move It%' OR `Counter party name` LIKE '%Angkas%');
2025-06-17 10:26:16,175 - __main__ - INFO - Database connection established.
2025-06-17 10:26:16,178 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d027310>]
2025-06-17 10:26:17,369 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 10:26:17,370 - __main__ - INFO - Final Assistant Response (NL): Â¡Claro! He calculado tus gastos totales en Move It y Angkas. Ascienden a â‚±22,059.19. Â¿Hay algo mÃ¡s en lo que pueda ayudarte hoy?
2025-06-17 10:26:52,159 - __main__ - INFO - User Query (es): puedes digame en detalles?
2025-06-17 10:26:53,589 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 10:26:53,589 - __main__ - INFO - Generated SQL Query: SELECT "Counter party name", SUM(Amount) AS TotalAmount FROM transactions WHERE LOWER("Counter party name") LIKE '%move it%' OR LOWER("Counter party name") LIKE '%angkas%' GROUP BY "Counter party name" ORDER BY TotalAmount DESC;
2025-06-17 10:26:53,592 - __main__ - INFO - Database connection established.
2025-06-17 10:26:53,597 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d027330>, <sqlite3.Row object at 0x10d027210>, <sqlite3.Row object at 0x10d027350>]
2025-06-17 10:26:55,186 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 10:26:55,186 - __main__ - INFO - Final Assistant Response (NL): Â¡Por supuesto! AquÃ­ tienes el desglose de tus gastos en Move It y Angkas:

*   POS W/D SV MOVE IT MAKATI ATP: â‚±14,946.72
*   POS W/D SV ANGKAS MANILA ATP: â‚±8,375.41
*   C8 LCL LWRSET DR MOVE IT 0430: â‚±6,521.29

Â¿Hay algo mÃ¡s que quieras revisar?
2025-06-17 10:28:02,138 - __main__ - INFO - User Query (es): ok pero cuando es el gasto mas alto en move it
2025-06-17 10:28:03,423 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 10:28:03,423 - __main__ - INFO - Generated SQL Query: SELECT "Book date", Amount FROM transactions WHERE "Counter party name" LIKE '%MOVE IT%' ORDER BY Amount DESC LIMIT 1
2025-06-17 10:28:03,425 - __main__ - INFO - Database connection established.
2025-06-17 10:28:03,426 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d027610>]
2025-06-17 10:28:04,766 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 10:28:04,766 - __main__ - INFO - Final Assistant Response (NL): Â¡Entendido! El gasto mÃ¡s alto que has hecho en Move It fue el 9 de junio de 2025, por un monto de â‚±219.25. Â¿Te gustarÃ­a saber algo mÃ¡s sobre tus transacciones?
2025-06-17 10:28:31,058 - __main__ - INFO - User Query (es): y si con angkas? cuando es el gasto mas alto
2025-06-17 10:28:32,610 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 10:28:32,610 - __main__ - INFO - Generated SQL Query: SELECT Amount, "Book date" FROM transactions WHERE "Counter party name" LIKE '%ANGKAS%' AND "Credit/debit indicator" = 'Debit' ORDER BY Amount DESC LIMIT 1;
2025-06-17 10:28:32,612 - __main__ - INFO - Database connection established.
2025-06-17 10:28:32,614 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d027310>]
2025-06-17 10:28:33,838 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 10:28:33,839 - __main__ - INFO - Final Assistant Response (NL): Â¡Claro! Tu gasto mÃ¡s alto en Angkas fue el 3 de junio de 2025, con un monto de â‚±145.74. Â¿Necesitas mÃ¡s detalles sobre alguna otra transacciÃ³n?
2025-06-17 10:28:52,378 - __main__ - INFO - User Query (es): si
2025-06-17 10:28:53,585 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 10:28:53,586 - __main__ - INFO - Generated SQL Query: SELECT "Book date", "Counter party name", Amount, "Credit/debit indicator" FROM transactions ORDER BY "Book date" ASC LIMIT 5;
2025-06-17 10:28:53,588 - __main__ - INFO - Database connection established.
2025-06-17 10:28:53,591 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d0273b0>, <sqlite3.Row object at 0x10d027470>, <sqlite3.Row object at 0x10d027370>, <sqlite3.Row object at 0x10d0274d0>, <sqlite3.Row object at 0x10d027170>]
2025-06-17 10:28:55,545 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 10:28:55,545 - __main__ - INFO - Final Assistant Response (NL): Â¡Por supuesto! AquÃ­ tienes un detalle de tus Ãºltimas 5 transacciones, ordenadas por fecha:

*   **20 de mayo de 2025:**
    *   Recibido de Otro Banco: â‚±951.64 (CrÃ©dito)
    *   Recibido de Otro Banco: â‚±2,029.19 (CrÃ©dito)
    *   Retiro de SAV BDO/005542 54SM STAMESA BDO: â‚±1,932.20 (DÃ©bito)
    *   Retiro de SAV BDO/005542 54SM STAMESA BDO: â‚±1,291.64 (DÃ©bito)
    *   Recibido de Otro Banco: â‚±1,013.97 (CrÃ©dito)

Â¿Te gustarÃ­a que revise alguna otra transacciÃ³n en particular?
2025-06-17 10:29:21,873 - __main__ - INFO - User Query (es): no creo estan transacciones mas recientes, dime mas recientes
2025-06-17 10:29:24,126 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 10:29:24,127 - __main__ - INFO - Generated SQL Query: SELECT "Book date", "Counter party name", Amount, "Credit/debit indicator" FROM transactions ORDER BY "Book date" DESC LIMIT 5;
2025-06-17 10:29:24,129 - __main__ - INFO - Database connection established.
2025-06-17 10:29:24,131 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d027630>, <sqlite3.Row object at 0x10d027510>, <sqlite3.Row object at 0x10d0275d0>, <sqlite3.Row object at 0x10d027230>, <sqlite3.Row object at 0x10d027670>]
2025-06-17 10:29:26,150 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 10:29:26,150 - __main__ - INFO - Final Assistant Response (NL): Â¡Claro que sÃ­! AquÃ­ tienes tus 5 transacciones mÃ¡s recientes:

*   **13 de junio de 2025:**
    *   Recibido de Otro Banco: â‚±2,994.73 (CrÃ©dito)
    *   POS W/D SV NATIONAL B POS: â‚±128.41 (DÃ©bito)
    *   POS W/D SV NATIONAL B POS: â‚±286.67 (DÃ©bito)
    *   POS W/D SV SMART APP MAKATI ATP: â‚±39.45 (DÃ©bito)
    *   POS W/D SV NATIONAL B POS: â‚±279.29 (DÃ©bito)

Â¿Necesitas algÃºn detalle adicional sobre alguna de estas transacciones? Â¿O quieres que revisemos algo mÃ¡s?
2025-06-17 10:30:09,043 - __main__ - INFO - User Query (es): que es retiro, no sabo este termino, explicame en termino general
2025-06-17 10:30:10,605 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 10:30:10,606 - __main__ - INFO - Generated SQL Query: SELECT DISTINCT `Credit/debit indicator` FROM transactions;
2025-06-17 10:30:10,607 - __main__ - INFO - Database connection established.
2025-06-17 10:30:10,609 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d027630>, <sqlite3.Row object at 0x10d027690>]
2025-06-17 10:30:11,938 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 10:30:11,939 - __main__ - INFO - Final Assistant Response (NL): Â¡Hola! En tÃ©rminos generales, un 'retiro' (o 'dÃ©bito') significa que el dinero se estÃ¡ sacando de tu cuenta, mientras que un 'depÃ³sito' (o 'crÃ©dito') significa que el dinero estÃ¡ entrando en tu cuenta. Â¿Te gustarÃ­a saber mÃ¡s detalles sobre alguna transacciÃ³n en particular?
2025-06-17 10:30:52,258 - __main__ - INFO - User Query (es): bale, entonces debito significa dinero afuera mi cuenta, y credito es adentro mi cuenta, no?
2025-06-17 10:30:53,516 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 10:30:53,516 - __main__ - INFO - Generated SQL Query: SELECT 'Correcto' AS Confirmation;
2025-06-17 10:30:53,518 - __main__ - INFO - Database connection established.
2025-06-17 10:30:53,518 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d027690>]
2025-06-17 10:30:54,740 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 10:30:54,740 - __main__ - INFO - Final Assistant Response (NL): Â¡Exacto! DÃ©bito significa que el dinero sale de tu cuenta y crÃ©dito significa que el dinero entra a tu cuenta. Â¿Hay algo mÃ¡s en lo que te pueda ayudar?
2025-06-17 10:31:20,820 - __main__ - INFO - User Query (es): ok, so sale es 'exit' y 'entra' is enter, correcto?
2025-06-17 10:31:22,287 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 10:31:22,287 - __main__ - INFO - Generated SQL Query: SELECT CASE WHEN 'sale' = 'exit' THEN 'Correcto' ELSE 'Incorrecto' END AS confirmation, CASE WHEN 'entra' = 'enter' THEN 'Correcto' ELSE 'Incorrecto' END AS confirmation2;
2025-06-17 10:31:22,289 - __main__ - INFO - Database connection established.
2025-06-17 10:31:22,290 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d027610>]
2025-06-17 10:31:23,883 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 10:31:23,883 - __main__ - INFO - Final Assistant Response (NL): Â¡Casi! 'Sale' serÃ­a mÃ¡s como 'salida' y 'entra' como 'entrada'. Pero sÃ­, la idea es correcta: 'dÃ©bito' (sale) es dinero que sale de tu cuenta y 'crÃ©dito' (entra) es dinero que entra a tu cuenta. Â¿En quÃ© mÃ¡s puedo ayudarte hoy?
2025-06-17 10:31:49,071 - __main__ - INFO - User Query (es): si pero compara esos palabras en similares en ingles
2025-06-17 10:31:50,551 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 10:31:50,552 - __main__ - INFO - Generated SQL Query: SELECT 'Debit' AS Spanish_Term, 'Withdrawal' AS English_Equivalent UNION ALL SELECT 'Credit' AS Spanish_Term, 'Deposit' AS English_Equivalent;
2025-06-17 10:31:50,553 - __main__ - INFO - Database connection established.
2025-06-17 10:31:50,554 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d027690>, <sqlite3.Row object at 0x10d0276d0>]
2025-06-17 10:31:51,882 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 10:31:51,882 - __main__ - INFO - Final Assistant Response (NL): Â¡Claro! En inglÃ©s, 'dÃ©bito' se asemeja a 'withdrawal' (retiro) y 'crÃ©dito' se asemeja a 'deposit' (depÃ³sito). Â¿Te puedo ayudar con algo mÃ¡s?
2025-06-17 10:37:08,088 - __main__ - INFO - User Query (en): hello
2025-06-17 10:37:10,250 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 10:37:10,250 - __main__ - INFO - Generated SQL Query: SELECT 1
2025-06-17 10:37:10,254 - __main__ - INFO - Database connection established.
2025-06-17 10:37:10,256 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x108f3e610>]
2025-06-17 10:37:11,373 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 10:37:11,373 - __main__ - INFO - Final Assistant Response (NL): Hello there! It's great to connect with you. How can I assist you with your account today? Perhaps you'd like to check your recent transactions or account balance?
2025-06-17 10:37:15,031 - __main__ - INFO - User Query (en): yes please
2025-06-17 10:37:16,328 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 10:37:16,328 - __main__ - INFO - Generated SQL Query: SELECT "Book date", "Counter party name", "Credit/debit indicator", Amount, Currency FROM transactions ORDER BY "Book date" DESC LIMIT 5;
2025-06-17 10:37:16,329 - __main__ - INFO - Database connection established.
2025-06-17 10:37:16,330 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x108f3e9d0>, <sqlite3.Row object at 0x10d027310>, <sqlite3.Row object at 0x10d027550>, <sqlite3.Row object at 0x10d0272f0>, <sqlite3.Row object at 0x10d0275f0>]
2025-06-17 10:37:18,076 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 10:37:18,076 - __main__ - INFO - Final Assistant Response (NL): Okay, here are your last 5 transactions:

*   **June 13, 2025:**
    *   Received from Other Bank: â‚±2,994.73 (Credit)
    *   POS W/D SV NATIONAL B POS: â‚±128.41 (Debit)
    *   POS W/D SV NATIONAL B POS: â‚±286.67 (Debit)
    *   POS W/D SV SMART APP MAKATI ATP: â‚±39.45 (Debit)
    *   POS W/D SV NATIONAL B POS: â‚±279.29 (Debit)

Would you like more details on any of these?
2025-06-17 10:37:35,091 - __main__ - INFO - User Query (en): yes, i want to know the merchant there
2025-06-17 10:37:36,870 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 10:37:36,871 - __main__ - INFO - Generated SQL Query: SELECT "Counter party name", "Book date", Amount, "Credit/debit indicator" FROM transactions ORDER BY "Book date" DESC LIMIT 5;
2025-06-17 10:37:36,873 - __main__ - INFO - Database connection established.
2025-06-17 10:37:36,876 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x108f3e750>, <sqlite3.Row object at 0x108f3e9b0>, <sqlite3.Row object at 0x108f3ee30>, <sqlite3.Row object at 0x108f3ea10>, <sqlite3.Row object at 0x108f3e610>]
2025-06-17 10:37:38,712 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 10:37:38,712 - __main__ - INFO - Final Assistant Response (NL): Okay, here are the merchants for your last 5 transactions:

*   **June 13, 2025:**
    *   Received from Other Bank: Credit of â‚±2,994.73
    *   POS W/D SV NATIONAL B POS: Debit of â‚±128.41
    *   POS W/D SV NATIONAL B POS: Debit of â‚±286.67
    *   POS W/D SV SMART APP MAKATI ATP: Debit of â‚±39.45
    *   POS W/D SV NATIONAL B POS: Debit of â‚±279.29

Let me know if that looks right or if you need more info!
2025-06-17 10:37:49,429 - __main__ - INFO - User Query (en): no, who are these merchants?
2025-06-17 10:37:50,999 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 10:37:50,999 - __main__ - INFO - Generated SQL Query: SELECT DISTINCT `Counter party name` FROM transactions WHERE `Book date` IN ('2025-06-13') AND `Counter party name` IN ('Other Bank','NATIONAL B POS','SMART APP MAKATI ATP');
2025-06-17 10:37:51,000 - __main__ - INFO - Database connection established.
2025-06-17 10:37:51,002 - __main__ - INFO - SQL Query Executed Successfully. Results: []
2025-06-17 10:37:52,842 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 10:37:52,842 - __main__ - INFO - Final Assistant Response (NL): Ah, I see what you mean! Unfortunately, I don't have details on the specific nature of each merchant ('NATIONAL B POS', 'SMART APP MAKATI ATP', 'Other Bank'). Often, 'POS' indicates a Point of Sale transaction. 'Other Bank' simply means the transaction came from another bank. To get more specific information, you might want to check your records or contact them directly. Is there anything else I can help clarify?
2025-06-17 10:38:09,621 - __main__ - INFO - User Query (en): oh, so it's likely i purchased some of these
2025-06-17 10:38:10,968 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 10:38:10,968 - __main__ - INFO - Generated SQL Query: SELECT DISTINCT "Counter party name" FROM transactions WHERE "Credit/debit indicator" = 'Debit' ORDER BY "Counter party name";
2025-06-17 10:38:10,970 - __main__ - INFO - Database connection established.
2025-06-17 10:38:10,972 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d0275f0>, <sqlite3.Row object at 0x10d027530>, <sqlite3.Row object at 0x10d027210>, <sqlite3.Row object at 0x10d027150>, <sqlite3.Row object at 0x10d0270f0>, <sqlite3.Row object at 0x10d027830>, <sqlite3.Row object at 0x10d0271d0>, <sqlite3.Row object at 0x10d027670>, <sqlite3.Row object at 0x10d027510>, <sqlite3.Row object at 0x10d027470>, <sqlite3.Row object at 0x10d0275d0>, <sqlite3.Row object at 0x10d0275b0>, <sqlite3.Row object at 0x10d027790>, <sqlite3.Row object at 0x10d0271f0>, <sqlite3.Row object at 0x10d027610>, <sqlite3.Row object at 0x10d027390>, <sqlite3.Row object at 0x10d0274f0>, <sqlite3.Row object at 0x10d027450>, <sqlite3.Row object at 0x10d027230>, <sqlite3.Row object at 0x10d0277d0>, <sqlite3.Row object at 0x10d0276d0>, <sqlite3.Row object at 0x10d027350>, <sqlite3.Row object at 0x10d0276f0>, <sqlite3.Row object at 0x10d027690>, <sqlite3.Row object at 0x10d0273b0>, <sqlite3.Row object at 0x10d027810>, <sqlite3.Row object at 0x10d027850>, <sqlite3.Row object at 0x10d0274d0>, <sqlite3.Row object at 0x10d0277f0>, <sqlite3.Row object at 0x10d027330>, <sqlite3.Row object at 0x10d0277b0>, <sqlite3.Row object at 0x10d0278b0>, <sqlite3.Row object at 0x10d027950>, <sqlite3.Row object at 0x10d027930>, <sqlite3.Row object at 0x10d027770>, <sqlite3.Row object at 0x10d027650>, <sqlite3.Row object at 0x10d027870>, <sqlite3.Row object at 0x10d027730>, <sqlite3.Row object at 0x10d027170>, <sqlite3.Row object at 0x10d027910>, <sqlite3.Row object at 0x10d027970>, <sqlite3.Row object at 0x10d027990>, <sqlite3.Row object at 0x10d0279b0>, <sqlite3.Row object at 0x10d0279d0>, <sqlite3.Row object at 0x10d0279f0>, <sqlite3.Row object at 0x10d027a10>, <sqlite3.Row object at 0x10d027a30>, <sqlite3.Row object at 0x10d027a50>, <sqlite3.Row object at 0x10d027a70>, <sqlite3.Row object at 0x10d027a90>, <sqlite3.Row object at 0x10d027ab0>, <sqlite3.Row object at 0x10d027ad0>, <sqlite3.Row object at 0x10d027af0>, <sqlite3.Row object at 0x10d027b10>, <sqlite3.Row object at 0x10d027b30>, <sqlite3.Row object at 0x10d027b50>, <sqlite3.Row object at 0x10d027b70>, <sqlite3.Row object at 0x10d027b90>, <sqlite3.Row object at 0x10d027bb0>, <sqlite3.Row object at 0x10d027bd0>, <sqlite3.Row object at 0x10d027bf0>, <sqlite3.Row object at 0x10d027c10>, <sqlite3.Row object at 0x10d027c30>, <sqlite3.Row object at 0x10d027c50>, <sqlite3.Row object at 0x10d027c70>, <sqlite3.Row object at 0x10d027c90>, <sqlite3.Row object at 0x10d027cb0>, <sqlite3.Row object at 0x10d027cd0>, <sqlite3.Row object at 0x10d027cf0>, <sqlite3.Row object at 0x10d027d10>, <sqlite3.Row object at 0x10d027d30>, <sqlite3.Row object at 0x10d027d50>, <sqlite3.Row object at 0x10d027d70>, <sqlite3.Row object at 0x10d027d90>, <sqlite3.Row object at 0x10d027db0>, <sqlite3.Row object at 0x10d027dd0>, <sqlite3.Row object at 0x10d027df0>, <sqlite3.Row object at 0x10d027e10>, <sqlite3.Row object at 0x10d027e30>, <sqlite3.Row object at 0x10d027e50>, <sqlite3.Row object at 0x10d027e70>, <sqlite3.Row object at 0x10d027e90>, <sqlite3.Row object at 0x10d027eb0>, <sqlite3.Row object at 0x10d027ed0>, <sqlite3.Row object at 0x10d027ef0>, <sqlite3.Row object at 0x10d027f10>, <sqlite3.Row object at 0x10d027f30>, <sqlite3.Row object at 0x10d027f50>, <sqlite3.Row object at 0x10d027f70>, <sqlite3.Row object at 0x10d027f90>, <sqlite3.Row object at 0x10d027fb0>, <sqlite3.Row object at 0x10d027fd0>, <sqlite3.Row object at 0x10d059030>, <sqlite3.Row object at 0x10d059050>, <sqlite3.Row object at 0x10d059070>, <sqlite3.Row object at 0x10d059090>, <sqlite3.Row object at 0x10d0590b0>, <sqlite3.Row object at 0x10d0590d0>, <sqlite3.Row object at 0x10d0590f0>, <sqlite3.Row object at 0x10d059110>, <sqlite3.Row object at 0x10d059130>, <sqlite3.Row object at 0x10d059150>, <sqlite3.Row object at 0x10d059170>, <sqlite3.Row object at 0x10d059190>, <sqlite3.Row object at 0x10d0591b0>, <sqlite3.Row object at 0x10d0591d0>, <sqlite3.Row object at 0x10d0591f0>, <sqlite3.Row object at 0x10d059210>, <sqlite3.Row object at 0x10d059230>, <sqlite3.Row object at 0x10d059250>, <sqlite3.Row object at 0x10d059270>, <sqlite3.Row object at 0x10d059290>, <sqlite3.Row object at 0x10d0592b0>, <sqlite3.Row object at 0x10d0592d0>, <sqlite3.Row object at 0x10d0592f0>, <sqlite3.Row object at 0x10d059310>, <sqlite3.Row object at 0x10d059330>, <sqlite3.Row object at 0x10d059350>, <sqlite3.Row object at 0x10d059370>, <sqlite3.Row object at 0x10d059390>, <sqlite3.Row object at 0x10d0593b0>, <sqlite3.Row object at 0x10d0593d0>, <sqlite3.Row object at 0x10d0593f0>, <sqlite3.Row object at 0x10d059410>, <sqlite3.Row object at 0x10d059430>, <sqlite3.Row object at 0x10d059450>, <sqlite3.Row object at 0x10d059470>, <sqlite3.Row object at 0x10d059490>, <sqlite3.Row object at 0x10d0594b0>, <sqlite3.Row object at 0x10d0594d0>, <sqlite3.Row object at 0x10d0594f0>, <sqlite3.Row object at 0x10d059510>, <sqlite3.Row object at 0x10d059530>, <sqlite3.Row object at 0x10d059550>, <sqlite3.Row object at 0x10d059570>, <sqlite3.Row object at 0x10d059590>, <sqlite3.Row object at 0x10d0595b0>, <sqlite3.Row object at 0x10d0595d0>, <sqlite3.Row object at 0x10d0595f0>, <sqlite3.Row object at 0x10d059610>, <sqlite3.Row object at 0x10d059630>, <sqlite3.Row object at 0x10d059650>, <sqlite3.Row object at 0x10d059670>, <sqlite3.Row object at 0x10d059690>, <sqlite3.Row object at 0x10d0596b0>, <sqlite3.Row object at 0x10d0596d0>, <sqlite3.Row object at 0x10d0596f0>, <sqlite3.Row object at 0x10d059710>, <sqlite3.Row object at 0x10d059730>, <sqlite3.Row object at 0x10d059750>, <sqlite3.Row object at 0x10d059770>, <sqlite3.Row object at 0x10d059790>, <sqlite3.Row object at 0x10d0597b0>, <sqlite3.Row object at 0x10d0597d0>, <sqlite3.Row object at 0x10d0597f0>, <sqlite3.Row object at 0x10d059810>, <sqlite3.Row object at 0x10d059830>, <sqlite3.Row object at 0x10d059850>, <sqlite3.Row object at 0x10d059870>, <sqlite3.Row object at 0x10d059890>, <sqlite3.Row object at 0x10d0598b0>, <sqlite3.Row object at 0x10d0598d0>, <sqlite3.Row object at 0x10d0598f0>, <sqlite3.Row object at 0x10d059910>, <sqlite3.Row object at 0x10d059930>, <sqlite3.Row object at 0x10d059950>, <sqlite3.Row object at 0x10d059970>, <sqlite3.Row object at 0x10d059990>, <sqlite3.Row object at 0x10d0599b0>, <sqlite3.Row object at 0x10d0599d0>, <sqlite3.Row object at 0x10d0599f0>, <sqlite3.Row object at 0x10d059a10>, <sqlite3.Row object at 0x10d059a30>, <sqlite3.Row object at 0x10d059a50>, <sqlite3.Row object at 0x10d059a70>, <sqlite3.Row object at 0x10d059a90>]
2025-06-17 10:38:13,117 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 10:38:13,117 - __main__ - INFO - Final Assistant Response (NL): Yes, that's right! Many of those transactions are likely from your purchases. Here's a list of all the merchants and transaction descriptions I see in your records. Some common ones include BDOPAY for online payments, various SM Cinema locations for movie tickets, and transport apps like Move It and Angkas. There are also prepaid reloads and InstaPay transfers. 

Would you like me to help you categorize these or look into specific merchants?
2025-06-17 10:39:01,690 - __main__ - INFO - User Query (en): what's the most expensive one i spent
2025-06-17 10:39:03,298 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 10:39:03,299 - __main__ - INFO - Generated SQL Query: SELECT "Counter party name", Amount, "Book date", "Credit/debit indicator" FROM transactions ORDER BY Amount DESC LIMIT 1;
2025-06-17 10:39:03,301 - __main__ - INFO - Database connection established.
2025-06-17 10:39:03,305 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d027830>]
2025-06-17 10:39:05,657 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 10:39:05,657 - __main__ - INFO - Final Assistant Response (NL): The most expensive transaction I see is a debit of â‚±5,959.10 on May 29, 2025, at W/D FR SAV MNL_GTZON SAMPALOC, M ML. Would you like more details about this transaction?
2025-06-17 10:39:14,627 - __main__ - INFO - User Query (en): how about the one i purchased?
2025-06-17 10:39:16,415 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 10:39:16,416 - __main__ - INFO - Generated SQL Query: SELECT "Counter party name", Amount, "Book date", "Credit/debit indicator" FROM transactions WHERE "Credit/debit indicator" = 'Debit' ORDER BY Amount DESC LIMIT 1
2025-06-17 10:39:16,417 - __main__ - INFO - Database connection established.
2025-06-17 10:39:16,420 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d0275d0>]
2025-06-17 10:39:17,872 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 10:39:17,872 - __main__ - INFO - Final Assistant Response (NL): The highest debit transaction I see is for â‚±5,959.10 at 'W/D FR SAV MNL_GTZON SAMPALOC, M ML' on May 29, 2025. Is there anything else I can help you with?
2025-06-17 10:39:26,165 - __main__ - INFO - User Query (en): what does this likely mean
2025-06-17 10:39:28,043 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 10:39:28,043 - __main__ - INFO - Generated SQL Query: SELECT "Counter party name" FROM transactions WHERE "Counter party name" = 'W/D FR SAV MNL_GTZON SAMPALOC, M ML';
2025-06-17 10:39:28,044 - __main__ - INFO - Database connection established.
2025-06-17 10:39:28,046 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d027610>, <sqlite3.Row object at 0x10d0275f0>, <sqlite3.Row object at 0x10d0276d0>, <sqlite3.Row object at 0x10d027790>, <sqlite3.Row object at 0x10d027510>, <sqlite3.Row object at 0x10d0275d0>, <sqlite3.Row object at 0x10d0275b0>, <sqlite3.Row object at 0x10d0271f0>, <sqlite3.Row object at 0x10d0277d0>, <sqlite3.Row object at 0x10d027210>, <sqlite3.Row object at 0x10d027350>, <sqlite3.Row object at 0x10d027390>]
2025-06-17 10:39:30,037 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 10:39:30,037 - __main__ - INFO - Final Assistant Response (NL): Okay, 'W/D FR SAV MNL_GTZON SAMPALOC, M ML' likely means a withdrawal from your savings account at a branch in Sampaloc, Manila, possibly near GTZon. Does that sound right? Sometimes the descriptions can be a bit cryptic! Let me know if anything seems off!
2025-06-17 10:39:55,587 - __main__ - INFO - User Query (es): hola
2025-06-17 10:39:56,644 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 10:39:56,645 - __main__ - INFO - Generated SQL Query: None
2025-06-17 10:39:56,645 - __main__ - INFO - Database connection established.
2025-06-17 10:39:56,645 - __main__ - CRITICAL - An unexpected critical error occurred: argument 1 must be str, not None
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_nonml.py", line 318, in chat
    cursor.execute(sql_query)
TypeError: argument 1 must be str, not None
2025-06-17 10:39:58,631 - __main__ - INFO - User Query (es): hola
2025-06-17 10:39:59,625 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 10:39:59,625 - __main__ - INFO - Generated SQL Query: None
2025-06-17 10:39:59,626 - __main__ - INFO - Database connection established.
2025-06-17 10:39:59,626 - __main__ - CRITICAL - An unexpected critical error occurred: argument 1 must be str, not None
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_nonml.py", line 318, in chat
    cursor.execute(sql_query)
TypeError: argument 1 must be str, not None
2025-06-17 10:40:05,954 - __main__ - INFO - User Query (es): necesito ayuda con mi cuent
2025-06-17 10:40:07,229 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 10:40:07,229 - __main__ - INFO - Generated SQL Query: SELECT 1
2025-06-17 10:40:07,229 - __main__ - INFO - Database connection established.
2025-06-17 10:40:07,230 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x108f3e670>]
2025-06-17 10:40:08,236 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 10:40:08,236 - __main__ - INFO - Final Assistant Response (NL): Â¡Hola! Estoy aquÃ­ para ayudarte con tu cuenta. Â¿En quÃ© puedo asistirte hoy?
2025-06-17 13:50:01,835 - __main__ - INFO - Flask Application started.
2025-06-17 13:50:01,862 - __main__ - INFO - Database connection established.
2025-06-17 13:50:01,863 - __main__ - INFO - Database schema retrieved and cached.
2025-06-17 13:50:01,910 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-17 13:52:35,752 - __main__ - INFO - Flask Application started.
2025-06-17 13:52:35,768 - __main__ - INFO - Database connection established.
2025-06-17 13:52:35,768 - __main__ - INFO - Database schema retrieved and cached.
2025-06-17 13:52:35,815 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-17 14:17:35,751 - __main__ - INFO - Flask Application started.
2025-06-17 14:17:35,769 - __main__ - INFO - Database connection established.
2025-06-17 14:17:35,769 - __main__ - INFO - Database schema retrieved and cached.
2025-06-17 14:17:35,819 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-17 14:18:22,277 - __main__ - INFO - Flask Application started.
2025-06-17 14:18:22,295 - __main__ - INFO - Database connection established.
2025-06-17 14:18:22,296 - __main__ - INFO - Database schema retrieved and cached.
2025-06-17 14:18:22,349 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-17 14:18:22,654 - __main__ - INFO - Flask Application started.
2025-06-17 14:18:22,665 - __main__ - INFO - Database connection established.
2025-06-17 14:18:22,665 - __main__ - INFO - Database schema retrieved and cached.
2025-06-17 14:18:22,694 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-17 14:18:31,690 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-17 14:18:38,351 - __main__ - INFO - User Query (en): hi
2025-06-17 14:18:55,978 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:18:55,980 - __main__ - INFO - Generated SQL Query: SELECT strftime('%Y-%m-%d %H:%M:%S', 'now', 'localtime');
2025-06-17 14:18:55,983 - __main__ - INFO - Database connection established.
2025-06-17 14:18:55,985 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d161fb0>]
2025-06-17 14:18:57,105 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:18:57,105 - __main__ - INFO - Final Assistant Response (NL): Hi there! It's great to connect with you. What can I help you with today regarding your account?
2025-06-17 14:21:11,467 - __main__ - INFO - User Query (en): i want to know my most expensive spendings
2025-06-17 14:21:13,027 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:21:13,028 - __main__ - INFO - Generated SQL Query: SELECT "Counter party name", SUM(Amount) AS TotalAmount
FROM transactions
WHERE "Credit/debit indicator" = 'Debit'
GROUP BY "Counter party name"
ORDER BY TotalAmount DESC
LIMIT 5;
2025-06-17 14:21:13,032 - __main__ - INFO - Database connection established.
2025-06-17 14:21:13,038 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d2411b0>, <sqlite3.Row object at 0x10d241210>, <sqlite3.Row object at 0x10d241090>, <sqlite3.Row object at 0x10d2412f0>, <sqlite3.Row object at 0x10d241230>]
2025-06-17 14:21:15,116 - __main__ - ERROR - Error decoding JSON from Gemini: Invalid \escape: line 3 column 173 (char 372). Raw content: ```json
{
  "sql": "SELECT \"Counter party name\", SUM(Amount) AS TotalAmount FROM transactions WHERE \"Credit/debit indicator\" = 'Debit' GROUP BY \"Counter party name\" ORDER BY TotalAmount DESC LIMIT 5;",
  "natural_language_response": "Okay, I've looked into your most significant spending. Here are the top 5 counter parties where you've spent the most:\n\n*   W/D FR SAV MNL\_GTZON SAMPALOC, M ML: â‚±45,504.97\n*   W/D FR SAV BDO/005542 54SM STAMESA BDO: â‚±36,550.37\n*   W/D FR SAV BDO/002013 01MAYON-N R BDO: â‚±34,885.71\n*   POS W/D SV SALARYMAN TAGUIG MLIC: â‚±25,980.86\n*   POS W/D SV HEALTHY OP POS: â‚±16,545.71\n\nWould you like a more detailed breakdown of any of these transactions?"
}
```
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_nonml.py", line 245, in get_gemini_response
    response_dict = json.loads(json_str)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 353, in raw_decode
    obj, end = self.scan_once(s, idx)
json.decoder.JSONDecodeError: Invalid \escape: line 3 column 173 (char 372)
2025-06-17 14:21:15,123 - __main__ - ERROR - Gemini failed to generate final NL response after query execution. Assistant response: I executed the query, but I had trouble forming a clear response. Please try again.
2025-06-17 14:21:20,655 - __main__ - INFO - User Query (en): i want to know my most expensive spendings here
2025-06-17 14:21:22,668 - __main__ - ERROR - Error decoding JSON from Gemini: Invalid \escape: line 3 column 234 (char 438). Raw content: ```json
{
  "sql": "SELECT \"Counter party name\", SUM(Amount) AS TotalAmount\nFROM transactions\nWHERE \"Credit/debit indicator\" = 'Debit'\nGROUP BY \"Counter party name\"\nORDER BY TotalAmount DESC\nLIMIT 5;",
  "natural_language_response": "Okay, I've looked into your most significant debit transactions. Here are the top 5 merchants where you've spent the most:\n\nI found the five most expensive spendings, here they are:\n*   Spending 1: \[Counter party name] at \[Total Amount]\n*   Spending 2: \[Counter party name] at \[Total Amount]\n*   Spending 3: \[Counter party name] at \[Total Amount]\n*   Spending 4: \[Counter party name] at \[Total Amount]\n*   Spending 5: \[Counter party name] at \[Total Amount]\n\n\n\nIf there is anything else I can help you with, don't hesitate to ask!"
}
```
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_nonml.py", line 245, in get_gemini_response
    response_dict = json.loads(json_str)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 353, in raw_decode
    obj, end = self.scan_once(s, idx)
json.decoder.JSONDecodeError: Invalid \escape: line 3 column 234 (char 438)
2025-06-17 14:21:22,669 - __main__ - WARNING - Gemini failed to generate SQL for user query: i want to know my most expensive spendings here. Assistant response: I'm sorry, I couldn't generate a SQL query for that request. Could you please rephrase it?
2025-06-17 14:21:29,793 - __main__ - INFO - User Query (en): highest spending
2025-06-17 14:21:31,069 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:21:31,070 - __main__ - INFO - Generated SQL Query: SELECT "Counter party name", SUM(Amount) AS TotalSpending FROM transactions WHERE "Credit/debit indicator" = 'Debit' GROUP BY "Counter party name" ORDER BY TotalSpending DESC LIMIT 5;
2025-06-17 14:21:31,072 - __main__ - INFO - Database connection established.
2025-06-17 14:21:31,075 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d241130>, <sqlite3.Row object at 0x10d2413f0>, <sqlite3.Row object at 0x10d2410d0>, <sqlite3.Row object at 0x10d241270>, <sqlite3.Row object at 0x10d241290>]
2025-06-17 14:21:33,009 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:21:33,010 - __main__ - INFO - Final Assistant Response (NL): Okay, I've looked into your top spendings. Here's a breakdown of your most expensive transactions:

*   **W/D FR SAV MNL_GTZON SAMPALOC, M ML**: â‚±45,504.97
*   **W/D FR SAV BDO/005542 54SM STAMESA BDO**: â‚±36,550.37
*   **W/D FR SAV BDO/002013 01MAYON-N R BDO**: â‚±34,885.71
*   **POS W/D SV SALARYMAN TAGUIG MLIC**: â‚±25,980.86
*   **POS W/D SV HEALTHY OP POS**: â‚±16,545.71

Do these transactions look right to you? Let me know if anything seems off!
2025-06-17 14:21:55,009 - __main__ - INFO - User Query (en): how about the highest i received
2025-06-17 14:21:57,122 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:21:57,122 - __main__ - INFO - Generated SQL Query: SELECT "Counter party name", Amount FROM transactions WHERE "Credit/debit indicator" = 'Credit' ORDER BY Amount DESC LIMIT 5;
2025-06-17 14:21:57,126 - __main__ - INFO - Database connection established.
2025-06-17 14:21:57,129 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d2411d0>, <sqlite3.Row object at 0x10d2410d0>, <sqlite3.Row object at 0x10d241390>, <sqlite3.Row object at 0x10d2411f0>, <sqlite3.Row object at 0x10d241510>]
2025-06-17 14:21:58,855 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:21:58,856 - __main__ - INFO - Final Assistant Response (NL): Alright, here are the top 5 highest amounts you've received, to give you a clear picture:

*   **Received from Other Bank**: â‚±5,937.10
*   **Received from Other Bank**: â‚±5,850.91
*   **Received from Other Bank**: â‚±5,828.88
*   **Received from Other Bank**: â‚±5,725.94
*   **Received from Other Bank**: â‚±5,499.39

Do those amounts look familiar? Let me know if you need more details on any of these!
2025-06-17 14:22:21,502 - __main__ - INFO - User Query (en): what is my average spending in move it and angkas
2025-06-17 14:22:22,707 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:22:22,707 - __main__ - INFO - Generated SQL Query: SELECT AVG(Amount) FROM transactions WHERE LOWER("Counter party name") LIKE '%move it%' OR LOWER("Counter party name") LIKE '%angkas%' AND "Credit/debit indicator" = 'Debit';
2025-06-17 14:22:22,709 - __main__ - INFO - Database connection established.
2025-06-17 14:22:22,711 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d2413b0>]
2025-06-17 14:22:24,026 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:22:24,026 - __main__ - INFO - Final Assistant Response (NL): Your average spending on Move It and Angkas transactions is â‚±85.38. Do you want me to calculate this on a weekly or monthly basis?
2025-06-17 14:22:33,406 - __main__ - INFO - User Query (en): what is my average spending each in move it and angkas?
2025-06-17 14:22:35,215 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:22:35,216 - __main__ - INFO - Generated SQL Query: SELECT 
    CASE
        WHEN LOWER(`Counter party name`) LIKE '%move it%'
        THEN 'Move It'
        WHEN LOWER(`Counter party name`) LIKE '%angkas%'
        THEN 'Angkas'
        ELSE 'Other'
    END AS Service,
    AVG(Amount) AS AverageSpending
FROM transactions
WHERE LOWER(`Counter party name`) LIKE '%move it%' OR LOWER(`Counter party name`) LIKE '%angkas%'
GROUP BY Service
HAVING Service IN ('Move It', 'Angkas');
2025-06-17 14:22:35,217 - __main__ - INFO - Database connection established.
2025-06-17 14:22:35,220 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d241510>, <sqlite3.Row object at 0x10d241210>]
2025-06-17 14:22:37,270 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:22:37,271 - __main__ - INFO - Final Assistant Response (NL): Alright! Looking at your average spending for each:

*   Your average Angkas transaction is â‚±73.47.
*   Your average Move It transaction is â‚±89.45.

Is there anything else I can help you with today?
2025-06-17 14:22:59,321 - __main__ - INFO - User Query (es): que es un gasto promedio en move it y angkas
2025-06-17 14:23:01,221 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:23:01,222 - __main__ - INFO - Generated SQL Query: SELECT 
    CASE 
        WHEN LOWER("Counter party name") LIKE '%move it%' THEN 'Move It'
        WHEN LOWER("Counter party name") LIKE '%angkas%' THEN 'Angkas'
        ELSE 'Other'
    END AS transaction_type,
    AVG(Amount) AS average_spending
FROM transactions
WHERE LOWER("Counter party name") LIKE '%move it%' OR LOWER("Counter party name") LIKE '%angkas%'
GROUP BY transaction_type
HAVING transaction_type IN ('Move It', 'Angkas');
2025-06-17 14:23:01,223 - __main__ - INFO - Database connection established.
2025-06-17 14:23:01,226 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d241630>, <sqlite3.Row object at 0x10d241270>]
2025-06-17 14:23:02,798 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:23:02,798 - __main__ - INFO - Final Assistant Response (NL): Â¡Hola! Tu gasto promedio en Angkas es de â‚±73.47 y en Move It es de â‚±89.45. Â¿Necesitas que revise algo mÃ¡s?
2025-06-17 14:23:37,642 - __main__ - INFO - User Query (es): que es un gasto promedio en bdo
2025-06-17 14:23:39,097 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:23:39,098 - __main__ - INFO - Generated SQL Query: SELECT AVG(Amount) AS "Gasto Promedio en BDO" FROM transactions WHERE LOWER("Counter party name") LIKE '%bdo%' AND "Credit/debit indicator" = 'Debit';
2025-06-17 14:23:39,100 - __main__ - INFO - Database connection established.
2025-06-17 14:23:39,102 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d241130>]
2025-06-17 14:23:40,547 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:23:40,547 - __main__ - INFO - Final Assistant Response (NL): Â¡Hola! Tu gasto promedio en transacciones relacionadas con BDO es de â‚±1,045.91. Â¿Quieres que desglose esto un poco mÃ¡s, tal vez por tipo de gasto o periodo de tiempo?
2025-06-17 14:24:42,987 - __main__ - INFO - User Query (es): que son transacciones/mercantes con promedios mas altos?
2025-06-17 14:24:45,782 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:24:45,783 - __main__ - INFO - Generated SQL Query: SELECT "Counter party name", AVG(Amount) AS average_amount FROM transactions WHERE "Credit/debit indicator" = 'Debit' GROUP BY "Counter party name" ORDER BY average_amount DESC LIMIT 5;
2025-06-17 14:24:45,785 - __main__ - INFO - Database connection established.
2025-06-17 14:24:45,789 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d2414f0>, <sqlite3.Row object at 0x10d241670>, <sqlite3.Row object at 0x10d2412f0>, <sqlite3.Row object at 0x10d2416f0>, <sqlite3.Row object at 0x10d2414d0>]
2025-06-17 14:24:48,151 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:24:48,151 - __main__ - INFO - Final Assistant Response (NL): Â¡Hola! AquÃ­ estÃ¡n los 5 principales comercios/transacciones con los promedios de gastos mÃ¡s altos:

*   BDOPAY BN P2MQR-PAY2-83646535- P2MI: â‚±5,299.49
*   BDOPAY BN P2MQR-PAY2-70692273- P2MI: â‚±4,494.82
*   BDOPAY BN P2MQR-PAY2-97018567- P2MI: â‚±4,038.73
*   BDOPAY BN P2MQR-PAY2-17485955- P2MI: â‚±3,986.00
*   BDOPAY BN P2MQR-PAY2-96777012- P2MI: â‚±3,798.28

Â¿Te gustarÃ­a que investigue mÃ¡s a fondo alguno de estos comercios?
2025-06-17 14:25:39,155 - __main__ - INFO - User Query (es): gasto promedio con bdopay, y que significa con bdopay
2025-06-17 14:25:40,618 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:25:40,619 - __main__ - INFO - Generated SQL Query: SELECT AVG(Amount) AS average_spending, COUNT(*) AS transaction_count FROM transactions WHERE LOWER("Counter party name") LIKE '%bdopay%' AND "Credit/debit indicator" = 'Debit';
2025-06-17 14:25:40,620 - __main__ - INFO - Database connection established.
2025-06-17 14:25:40,622 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d241130>]
2025-06-17 14:25:41,962 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:25:41,963 - __main__ - INFO - Final Assistant Response (NL): Â¡Hola! Tu gasto promedio en transacciones con BDOPAY es de â‚±947.43, basado en 90 transacciones. BDOPAY se refiere generalmente a pagos realizados a travÃ©s de la plataforma de pago en lÃ­nea de BDO. Â¿Te gustarÃ­a que te dÃ© mÃ¡s detalles sobre estas transacciones o que las desglose por tipo?
2025-06-17 14:26:06,198 - __main__ - INFO - User Query (es): digame los detalles sobre bdopay
2025-06-17 14:26:09,533 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:26:09,533 - __main__ - INFO - Generated SQL Query: SELECT "Counter party name", COUNT(*) AS TransactionCount, AVG(Amount) AS AverageAmount, SUM(Amount) AS TotalAmount FROM transactions WHERE LOWER("Counter party name") LIKE '%bdopay%' AND "Credit/debit indicator" = 'Debit' GROUP BY "Counter party name" ORDER BY TotalAmount DESC LIMIT 5;
2025-06-17 14:26:09,536 - __main__ - INFO - Database connection established.
2025-06-17 14:26:09,539 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d241650>, <sqlite3.Row object at 0x10d241390>, <sqlite3.Row object at 0x10d241530>, <sqlite3.Row object at 0x10d241290>, <sqlite3.Row object at 0x10d241730>]
2025-06-17 14:26:13,296 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:26:13,296 - __main__ - INFO - Final Assistant Response (NL): Â¡Hola! AquÃ­ tienes un desglose de los detalles de tus transacciones BDOPAY, mostrando los principales comercios, el nÃºmero de transacciones, el gasto promedio y el gasto total:

*   BDOPAY BN P2MQR-PAY2-17485955- P2MI: 2 transacciones, gasto promedio de â‚±3,986.00, gasto total de â‚±7,972.00
*   BDOPAY BN P2MQR-PAY2-17483459- P2MI: 4 transacciones, gasto promedio de â‚±1,500.00, gasto total de â‚±6,000.00
*   BDOPAY BN P2MQR-PAY2-83646535- P2MI: 1 transacciÃ³n, gasto promedio de â‚±5,299.49, gasto total de â‚±5,299.49
*   BDOPAY BN P2MQR-PAY2-70692273- P2MI: 1 transacciÃ³n, gasto promedio de â‚±4,494.82, gasto total de â‚±4,494.82
*   BDOPAY BN P2MQR-PAY2-97018567- P2MI: 1 transacciÃ³n, gasto promedio de â‚±4,038.73, gasto total de â‚±4,038.73

Â¿Te gustarÃ­a saber mÃ¡s sobre alguna de estas transacciones en particular?
2025-06-17 14:26:25,959 - __main__ - INFO - User Query (es): digame los detalles sobre bdopay, que es bdopay?
2025-06-17 14:26:29,565 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:26:29,565 - __main__ - INFO - Generated SQL Query: SELECT "Counter party name", COUNT(*) AS transaction_count, AVG(Amount) AS average_amount, SUM(Amount) AS total_amount FROM transactions WHERE LOWER("Counter party name") LIKE '%bdopay%' AND "Credit/debit indicator" = 'Debit' GROUP BY "Counter party name" ORDER BY SUM(Amount) DESC LIMIT 5;
2025-06-17 14:26:29,566 - __main__ - INFO - Database connection established.
2025-06-17 14:26:29,568 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d241390>, <sqlite3.Row object at 0x10d241210>, <sqlite3.Row object at 0x10d241190>, <sqlite3.Row object at 0x10d2415f0>, <sqlite3.Row object at 0x10d2410f0>]
2025-06-17 14:26:33,481 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:26:33,482 - __main__ - INFO - Final Assistant Response (NL): Â¡Hola! AquÃ­ tienes un resumen de los detalles de tus transacciones de BDOPAY, incluyendo los principales destinatarios, el nÃºmero de transacciones, el gasto promedio y el gasto total:

*   BDOPAY BN P2MQR-PAY2-17485955- P2MI: 2 transacciones, gasto promedio de â‚±3,986.00, gasto total de â‚±7,972.00
*   BDOPAY BN P2MQR-PAY2-17483459- P2MI: 4 transacciones, gasto promedio de â‚±1,500.00, gasto total de â‚±6,000.00
*   BDOPAY BN P2MQR-PAY2-83646535- P2MI: 1 transacciÃ³n, gasto promedio de â‚±5,299.49, gasto total de â‚±5,299.49
*   BDOPAY BN P2MQR-PAY2-70692273- P2MI: 1 transacciÃ³n, gasto promedio de â‚±4,494.82, gasto total de â‚±4,494.82
*   BDOPAY BN P2MQR-PAY2-97018567- P2MI: 1 transacciÃ³n, gasto promedio de â‚±4,038.73, gasto total de â‚±4,038.73

BDOPAY es un servicio que te permite realizar pagos en lÃ­nea o a travÃ©s de cÃ³digos QR usando tu cuenta. Â¿Hay algo mÃ¡s en lo que pueda ayudarte con BDOPAY o cualquier otra cosa?
2025-06-17 14:26:39,334 - __main__ - INFO - User Query (es): que es bdopay
2025-06-17 14:26:41,032 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:26:41,032 - __main__ - INFO - Generated SQL Query: SELECT DISTINCT CASE WHEN LOWER("Counter party name") LIKE '%bdopay%' THEN 'BDOPAY' ELSE NULL END AS BDOPAY_Description FROM transactions WHERE LOWER("Counter party name") LIKE '%bdopay%' LIMIT 1;
2025-06-17 14:26:41,033 - __main__ - INFO - Database connection established.
2025-06-17 14:26:41,033 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d241390>]
2025-06-17 14:26:42,821 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:26:42,822 - __main__ - INFO - Final Assistant Response (NL): Â¡Hola! BDOPAY es una plataforma de pagos de terceros muy utilizada por los comerciantes. Te permite realizar pagos directamente desde tu cuenta bancaria de forma segura y cÃ³moda. Â¿Te gustarÃ­a saber mÃ¡s sobre cÃ³mo funciona o cÃ³mo puedes utilizarla?
2025-06-17 14:27:45,717 - __main__ - INFO - User Query (es): como se hagan pagamento de bdopay
2025-06-17 14:27:48,263 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:27:48,263 - __main__ - INFO - Generated SQL Query: SELECT DISTINCT "Counter party name" FROM transactions WHERE LOWER("Counter party name") LIKE '%bdopay%'
2025-06-17 14:27:48,268 - __main__ - INFO - Database connection established.
2025-06-17 14:27:48,272 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d2417d0>, <sqlite3.Row object at 0x10d241290>, <sqlite3.Row object at 0x10d2414d0>, <sqlite3.Row object at 0x10d241390>, <sqlite3.Row object at 0x10d241370>, <sqlite3.Row object at 0x10d241610>, <sqlite3.Row object at 0x10d241710>, <sqlite3.Row object at 0x10d241690>, <sqlite3.Row object at 0x10d2417b0>, <sqlite3.Row object at 0x10d2417f0>, <sqlite3.Row object at 0x10d241130>, <sqlite3.Row object at 0x10d241790>, <sqlite3.Row object at 0x10d241330>, <sqlite3.Row object at 0x10d241650>, <sqlite3.Row object at 0x10d241770>, <sqlite3.Row object at 0x10d241570>, <sqlite3.Row object at 0x10d2413f0>, <sqlite3.Row object at 0x10d241530>, <sqlite3.Row object at 0x10d241250>, <sqlite3.Row object at 0x10d241730>, <sqlite3.Row object at 0x10d2413b0>, <sqlite3.Row object at 0x10d241810>, <sqlite3.Row object at 0x10d241230>, <sqlite3.Row object at 0x10d241870>, <sqlite3.Row object at 0x10d241830>, <sqlite3.Row object at 0x10d2418f0>, <sqlite3.Row object at 0x10d241910>, <sqlite3.Row object at 0x10d241930>, <sqlite3.Row object at 0x10d241950>, <sqlite3.Row object at 0x10d241970>, <sqlite3.Row object at 0x10d241990>, <sqlite3.Row object at 0x10d2419b0>, <sqlite3.Row object at 0x10d2419d0>, <sqlite3.Row object at 0x10d2419f0>, <sqlite3.Row object at 0x10d241a10>, <sqlite3.Row object at 0x10d241a30>, <sqlite3.Row object at 0x10d241a50>, <sqlite3.Row object at 0x10d241a70>, <sqlite3.Row object at 0x10d241a90>, <sqlite3.Row object at 0x10d241ab0>, <sqlite3.Row object at 0x10d241ad0>, <sqlite3.Row object at 0x10d241af0>, <sqlite3.Row object at 0x10d241b10>, <sqlite3.Row object at 0x10d241b30>, <sqlite3.Row object at 0x10d241b50>, <sqlite3.Row object at 0x10d241b70>, <sqlite3.Row object at 0x10d241b90>, <sqlite3.Row object at 0x10d241bb0>, <sqlite3.Row object at 0x10d241bd0>, <sqlite3.Row object at 0x10d241bf0>, <sqlite3.Row object at 0x10d241c10>, <sqlite3.Row object at 0x10d241c30>, <sqlite3.Row object at 0x10d241c50>, <sqlite3.Row object at 0x10d241c70>, <sqlite3.Row object at 0x10d241c90>, <sqlite3.Row object at 0x10d241cb0>, <sqlite3.Row object at 0x10d241cd0>, <sqlite3.Row object at 0x10d241cf0>, <sqlite3.Row object at 0x10d241d10>, <sqlite3.Row object at 0x10d241d30>, <sqlite3.Row object at 0x10d241d50>, <sqlite3.Row object at 0x10d241d70>, <sqlite3.Row object at 0x10d241d90>, <sqlite3.Row object at 0x10d241db0>, <sqlite3.Row object at 0x10d241dd0>, <sqlite3.Row object at 0x10d241df0>, <sqlite3.Row object at 0x10d241e10>, <sqlite3.Row object at 0x10d241e30>, <sqlite3.Row object at 0x10d241e50>, <sqlite3.Row object at 0x10d241e70>, <sqlite3.Row object at 0x10d241e90>, <sqlite3.Row object at 0x10d241eb0>, <sqlite3.Row object at 0x10d241ed0>, <sqlite3.Row object at 0x10d241ef0>, <sqlite3.Row object at 0x10d241f10>, <sqlite3.Row object at 0x10d241f30>, <sqlite3.Row object at 0x10d241f50>, <sqlite3.Row object at 0x10d241f70>, <sqlite3.Row object at 0x10d241f90>, <sqlite3.Row object at 0x10d241fb0>, <sqlite3.Row object at 0x10d241fd0>, <sqlite3.Row object at 0x10d296030>, <sqlite3.Row object at 0x10d296050>, <sqlite3.Row object at 0x10d296070>]
2025-06-17 14:28:01,578 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:28:01,579 - __main__ - INFO - Final Assistant Response (NL): Â¡Hola! Para realizar pagos a travÃ©s de BDOPAY, usualmente accedes a la aplicaciÃ³n o plataforma en lÃ­nea del comercio donde quieres pagar y seleccionas BDOPAY como mÃ©todo de pago. Luego, sigues las instrucciones para enlazar tu cuenta bancaria y autorizar el pago. 

AquÃ­ hay algunos comercios donde has realizado pagos con BDOPAY en el pasado:

*   BDOPAY BN P2MQR-PAY2-17483459- P2MI
*   BDOPAY BN P2MQR-PAY2-33256727- P2MI
*   BDOPAY BN P2MQR-PAY2-47314744- P2MI
*   BDOPAY BN P2MQR-PAY2-92027653- P2MI
*   BDOPAY BN P2MQR-PAY2-16995017- P2MI
*   BDOPAY BN P2MQR-PAY2-38336163- P2MI
*   BDOPAY BN P2MQR-PAY2-84271008- P2MI
*   BDOPAY BN P2MQR-PAY2-05396154- P2MI
*   BDOPAY BN P2MQR-PAY2-52841860- P2MI
*   BDOPAY BN P2MQR-PAY2-05214021- P2MI
*   BDOPAY BN P2MQR-PAY2-57662202- P2MI
*   BDOPAY BN P2MQR-PAY2-37643500- P2MI
*   BDOPAY BN P2MQR-PAY2-00361956- P2MI
*   BDOPAY BN P2MQR-PAY2-86985239- P2MI
*   BDOPAY BN P2MQR-PAY2-40567289- P2MI
*   BDOPAY BN P2MQR-PAY2-15910745- P2MI
*   BDOPAY BN P2MQR-PAY2-99855748- P2MI
*   BDOPAY BN P2MQR-PAY2-00732660- P2MI
*   BDOPAY BN P2MQR-PAY2-75428180- P2MI
*   BDOPAY BN P2MQR-PAY2-34064037- P2MI
*   BDOPAY BN P2MQR-PAY2-12016460- P2MI
*   BDOPAY BN P2MQR-PAY2-29226550- P2MI
*   BDOPAY BN P2MQR-PAY2-85455595- P2MI
*   BDOPAY BN P2MQR-PAY2-17484171- P2MI
*   BDOPAY BN P2MQR-PAY2-93316990- P2MI
*   BDOPAY BN P2MQR-PAY2-05331248- P2MI
*   BDOPAY BN P2MQR-PAY2-61652633- P2MI
*   BDOPAY BN P2MQR-PAY2-97018567- P2MI
*   BDOPAY BN P2MQR-PAY2-91056901- P2MI
*   BDOPAY BN P2MQR-PAY2-32479368- P2MI
*   BDOPAY BN P2MQR-PAY2-73027926- P2MI
*   BDOPAY BN P2MQR-PAY2-96777012- P2MI
*   BDOPAY BN P2MQR-PAY2-17485955- P2MI
*   BDOPAY BN P2MQR-PAY2-91529316- P2MI
*   BDOPAY BN P2MQR-PAY2-05127485- P2MI
*   BDOPAY BN P2MQR-PAY2-01980015- P2MI
*   BDOPAY BN P2MQR-PAY2-70692273- P2MI
*   BDOPAY BN P2MQR-PAY2-83646535- P2MI
*   BDOPAY BN P2MQR-PAY2-70318733- P2MI
*   BDOPAY BN P2MQR-PAY2-99016253- P2MI
*   BDOPAY BN P2MQR-PAY2-24141935- P2MI
*   BDOPAY BN P2MQR-PAY2-83929933- P2MI
*   BDOPAY BN P2MQR-PAY2-17486924- P2MI
*   BDOPAY BN P2MQR-PAY2-08549451- P2MI
*   BDOPAY BN P2MQR-PAY2-50722621- P2MI
*   BDOPAY BN P2MQR-PAY2-50100443- P2MI
*   BDOPAY BN P2MQR-PAY2-71378519- P2MI
*   BDOPAY BN P2MQR-PAY2-82234525- P2MI
*   BDOPAY BN P2MQR-PAY2-00464117- P2MI
*   BDOPAY BN P2MQR-PAY2-98517458- P2MI
*   BDOPAY BN P2MQR-PAY2-69375533- P2MI
*   BDOPAY BN P2MQR-PAY2-75463953- P2MI
*   BDOPAY BN P2MQR-PAY2-76240182- P2MI
*   BDOPAY BN P2MQR-PAY2-17488665- P2MI
*   BDOPAY BN P2MQR-PAY2-62111453- P2MI
*   BDOPAY BN P2MQR-PAY2-70279545- P2MI
*   BDOPAY BN P2MQR-PAY2-37091900- P2MI
*   BDOPAY BN P2MQR-PAY2-14679715- P2MI
*   BDOPAY BN P2MQR-PAY2-58650977- P2MI
*   BDOPAY BN P2MQR-PAY2-60126267- P2MI
*   BDOPAY BN P2MQR-PAY2-17491200- P2MI
*   BDOPAY BN P2MQR-PAY2-36914545- P2MI
*   BDOPAY BN P2MQR-PAY2-35115586- P2MI
*   BDOPAY BN P2MQR-PAY2-42726333- P2MI
*   BDOPAY BN P2MQR-PAY2-35724717- P2MI
*   BDOPAY BN P2MQR-PAY2-35943151- P2MI
*   BDOPAY BN P2MQR-PAY2-09571689- P2MI
*   BDOPAY BN P2MQR-PAY2-60377374- P2MI
*   BDOPAY BN P2MQR-PAY2-17492695- P2MI
*   BDOPAY BN P2MQR-PAY2-65934867- P2MI
*   BDOPAY BN P2MQR-PAY2-92500893- P2MI
*   BDOPAY BN P2MQR-PAY2-17492837- P2MI
*   BDOPAY BN P2MQR-PAY2-19682140- P2MI
*   BDOPAY BN P2MQR-PAY2-55040674- P2MI
*   BDOPAY BN P2MQR-PAY2-11680761- P2MI
*   BDOPAY BN P2MQR-PAY2-24013435- P2MI
*   BDOPAY BN P2MQR-PAY2-86175942- P2MI
*   BDOPAY BN P2MQR-PAY2-05128014- P2MI
*   BDOPAY BN P2MQR-PAY2-50274026- P2MI
*   BDOPAY BN P2MQR-PAY2-70311090- P2MI
*   BDOPAY BN P2MQR-PAY2-74204440- P2MI
*   BDOPAY BN P2MQR-PAY2-77843474- P2MI
*   BDOPAY BN P2MQR-PAY2-34576825- P2MI
*   BDOPAY BN P2MQR-PAY2-17496284- P2MI

Â¿Te gustarÃ­a que te guiara a travÃ©s del proceso con un ejemplo especÃ­fico?
2025-06-17 14:28:11,089 - __main__ - INFO - User Query (en): hi
2025-06-17 14:28:12,332 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:28:12,333 - __main__ - INFO - Generated SQL Query: SELECT 'Hi there! It's great to connect with you. What can I help you with today regarding your account?'
2025-06-17 14:28:12,334 - __main__ - INFO - Database connection established.
2025-06-17 14:28:12,334 - __main__ - ERROR - Database error during SQL execution for query 'SELECT 'Hi there! It's great to connect with you. What can I help you with today regarding your account?'': near "great": syntax error
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_nonml.py", line 318, in chat
    cursor.execute(sql_query)
sqlite3.OperationalError: near "great": syntax error
2025-06-17 14:28:15,387 - __main__ - INFO - User Query (en): i need your help
2025-06-17 14:28:17,236 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:28:17,236 - __main__ - INFO - Generated SQL Query: SELECT 'Hi there! It\'s great to connect with you. What can I help you with today regarding your account?'
2025-06-17 14:28:17,237 - __main__ - INFO - Database connection established.
2025-06-17 14:28:17,239 - __main__ - ERROR - Database error during SQL execution for query 'SELECT 'Hi there! It\'s great to connect with you. What can I help you with today regarding your account?'': near "great": syntax error
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_nonml.py", line 318, in chat
    cursor.execute(sql_query)
sqlite3.OperationalError: near "great": syntax error
2025-06-17 14:28:23,524 - __main__ - INFO - User Query (en): need help
2025-06-17 14:28:25,135 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:28:25,135 - __main__ - INFO - Generated SQL Query: SELECT 'Hi there! It\'s great to connect with you. What can I help you with today regarding your account?'
2025-06-17 14:28:25,136 - __main__ - INFO - Database connection established.
2025-06-17 14:28:25,137 - __main__ - ERROR - Database error during SQL execution for query 'SELECT 'Hi there! It\'s great to connect with you. What can I help you with today regarding your account?'': near "great": syntax error
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_nonml.py", line 318, in chat
    cursor.execute(sql_query)
sqlite3.OperationalError: near "great": syntax error
2025-06-17 14:28:31,705 - __main__ - INFO - User Query (en): need help with my account
2025-06-17 14:28:33,080 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:28:33,080 - __main__ - INFO - Generated SQL Query: SELECT COUNT(*) FROM transactions;
2025-06-17 14:28:33,081 - __main__ - INFO - Database connection established.
2025-06-17 14:28:33,084 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d241670>]
2025-06-17 14:28:34,342 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:28:34,343 - __main__ - INFO - Final Assistant Response (NL): Hi! Of course, I can help. It looks like you have 1,200 transaction records. What specifically are you hoping to find out about your account?
2025-06-17 14:28:49,439 - __main__ - INFO - User Query (en): ok, do i have records of using bdopay?
2025-06-17 14:28:50,869 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:28:50,870 - __main__ - INFO - Generated SQL Query: SELECT COUNT(*) FROM transactions WHERE LOWER('Counter party name') LIKE '%bdopay%';
2025-06-17 14:28:50,872 - __main__ - INFO - Database connection established.
2025-06-17 14:28:50,873 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d161d50>]
2025-06-17 14:28:52,126 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:28:52,127 - __main__ - INFO - Final Assistant Response (NL): Hi! It looks like you haven't made any transactions using BDOPAY in your records. Is there anything else you'd like to check?
2025-06-17 14:29:07,403 - __main__ - INFO - User Query (en): ok, did i use bdopay?
2025-06-17 14:29:08,691 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:29:08,691 - __main__ - INFO - Generated SQL Query: SELECT COUNT(*) FROM transactions WHERE LOWER("Counter party name") LIKE '%bdopay%';
2025-06-17 14:29:08,692 - __main__ - INFO - Database connection established.
2025-06-17 14:29:08,695 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d241910>]
2025-06-17 14:29:09,974 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:29:09,974 - __main__ - INFO - Final Assistant Response (NL): You sure did! I found 90 transactions with BDOPAY. Would you like to know more details about them?
2025-06-17 14:29:29,410 - __main__ - INFO - User Query (en): what are the merchants with the highest average spendings? who are they?
2025-06-17 14:29:31,478 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:29:31,478 - __main__ - INFO - Generated SQL Query: SELECT "Counter party name", AVG(Amount) AS AverageSpending FROM transactions WHERE "Credit/debit indicator" = 'Debit' GROUP BY "Counter party name" ORDER BY AverageSpending DESC LIMIT 5;
2025-06-17 14:29:31,479 - __main__ - INFO - Database connection established.
2025-06-17 14:29:31,481 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d241370>, <sqlite3.Row object at 0x10d241950>, <sqlite3.Row object at 0x10d241130>, <sqlite3.Row object at 0x10d241570>, <sqlite3.Row object at 0x10d2419b0>]
2025-06-17 14:29:33,831 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:29:33,831 - __main__ - INFO - Final Assistant Response (NL): Alright! Here are the top 5 merchants with the highest average spending based on your transactions:

*   BDOPAY BN P2MQR-PAY2-83646535- P2MI: â‚±5,299.49
*   BDOPAY BN P2MQR-PAY2-70692273- P2MI: â‚±4,494.82
*   BDOPAY BN P2MQR-PAY2-97018567- P2MI: â‚±4,038.73
*   BDOPAY BN P2MQR-PAY2-17485955- P2MI: â‚±3,986.00
*   BDOPAY BN P2MQR-PAY2-96777012- P2MI: â‚±3,798.28

These are the names as they appear on your transaction records. Do you need any further details about these merchants or transactions?
2025-06-17 14:29:45,999 - __main__ - INFO - User Query (en): it seems like it's all bdopay, what is it?
2025-06-17 14:29:47,356 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:29:47,356 - __main__ - INFO - Generated SQL Query: SELECT COUNT(*) FROM transactions WHERE LOWER("Counter party name") LIKE '%bdopay%';
2025-06-17 14:29:47,358 - __main__ - INFO - Database connection established.
2025-06-17 14:29:47,360 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d161870>]
2025-06-17 14:29:48,887 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:29:48,887 - __main__ - INFO - Final Assistant Response (NL): You're right, it seems like a lot of your transactions are through BDOPAY. You've made 90 transactions. BDOPAY is a third-party payment platform that's popular with merchants. It allows you to make payments directly from your bank account in a secure and convenient way. Anything else about BDOPAY you'd like to know?
2025-06-17 14:29:57,602 - __main__ - INFO - User Query (en): how does it work?
2025-06-17 14:29:59,020 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:29:59,021 - __main__ - INFO - Generated SQL Query: SELECT DISTINCT "Counter party name" FROM transactions WHERE LOWER("Counter party name") LIKE '%bdopay%';
2025-06-17 14:29:59,022 - __main__ - INFO - Database connection established.
2025-06-17 14:29:59,024 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d241530>, <sqlite3.Row object at 0x10d2419b0>, <sqlite3.Row object at 0x10d241370>, <sqlite3.Row object at 0x10d2418d0>, <sqlite3.Row object at 0x10d241490>, <sqlite3.Row object at 0x10d241390>, <sqlite3.Row object at 0x10d241690>, <sqlite3.Row object at 0x10d241670>, <sqlite3.Row object at 0x10d241910>, <sqlite3.Row object at 0x10d241ad0>, <sqlite3.Row object at 0x10d2411d0>, <sqlite3.Row object at 0x10d2415f0>, <sqlite3.Row object at 0x10d241810>, <sqlite3.Row object at 0x10d241930>, <sqlite3.Row object at 0x10d2412f0>, <sqlite3.Row object at 0x10d241630>, <sqlite3.Row object at 0x10d2417b0>, <sqlite3.Row object at 0x10d2411b0>, <sqlite3.Row object at 0x10d241510>, <sqlite3.Row object at 0x10d241230>, <sqlite3.Row object at 0x10d2411f0>, <sqlite3.Row object at 0x10d2410d0>, <sqlite3.Row object at 0x10d241350>, <sqlite3.Row object at 0x10d241790>, <sqlite3.Row object at 0x10d241870>, <sqlite3.Row object at 0x10d241750>, <sqlite3.Row object at 0x10d241270>, <sqlite3.Row object at 0x10d241070>, <sqlite3.Row object at 0x10d2410b0>, <sqlite3.Row object at 0x10d241290>, <sqlite3.Row object at 0x10d2418f0>, <sqlite3.Row object at 0x10d241a90>, <sqlite3.Row object at 0x10d241730>, <sqlite3.Row object at 0x10d241250>, <sqlite3.Row object at 0x10d241ab0>, <sqlite3.Row object at 0x10d2414d0>, <sqlite3.Row object at 0x10d2415d0>, <sqlite3.Row object at 0x10d2417d0>, <sqlite3.Row object at 0x10d2413b0>, <sqlite3.Row object at 0x10d241a70>, <sqlite3.Row object at 0x10d241a50>, <sqlite3.Row object at 0x10d241a30>, <sqlite3.Row object at 0x10d241a10>, <sqlite3.Row object at 0x10d2419f0>, <sqlite3.Row object at 0x10d2419d0>, <sqlite3.Row object at 0x10d241af0>, <sqlite3.Row object at 0x10d241b10>, <sqlite3.Row object at 0x10d241b30>, <sqlite3.Row object at 0x10d241b50>, <sqlite3.Row object at 0x10d241b70>, <sqlite3.Row object at 0x10d241b90>, <sqlite3.Row object at 0x10d241bb0>, <sqlite3.Row object at 0x10d241bd0>, <sqlite3.Row object at 0x10d241bf0>, <sqlite3.Row object at 0x10d241c10>, <sqlite3.Row object at 0x10d241c30>, <sqlite3.Row object at 0x10d241c50>, <sqlite3.Row object at 0x10d241c70>, <sqlite3.Row object at 0x10d241c90>, <sqlite3.Row object at 0x10d241cb0>, <sqlite3.Row object at 0x10d241cd0>, <sqlite3.Row object at 0x10d241cf0>, <sqlite3.Row object at 0x10d241d10>, <sqlite3.Row object at 0x10d241d30>, <sqlite3.Row object at 0x10d241d50>, <sqlite3.Row object at 0x10d241d70>, <sqlite3.Row object at 0x10d241d90>, <sqlite3.Row object at 0x10d241db0>, <sqlite3.Row object at 0x10d241dd0>, <sqlite3.Row object at 0x10d241df0>, <sqlite3.Row object at 0x10d241e10>, <sqlite3.Row object at 0x10d241e30>, <sqlite3.Row object at 0x10d241e50>, <sqlite3.Row object at 0x10d241e70>, <sqlite3.Row object at 0x10d241e90>, <sqlite3.Row object at 0x10d241eb0>, <sqlite3.Row object at 0x10d241ed0>, <sqlite3.Row object at 0x10d241ef0>, <sqlite3.Row object at 0x10d241f10>, <sqlite3.Row object at 0x10d241f30>, <sqlite3.Row object at 0x10d241f50>, <sqlite3.Row object at 0x10d241f70>, <sqlite3.Row object at 0x10d241f90>, <sqlite3.Row object at 0x10d241fb0>]
2025-06-17 14:30:11,032 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:30:11,032 - __main__ - INFO - Final Assistant Response (NL): BDOPAY works by linking your account to their platform, allowing you to pay merchants online or via QR codes directly from your bank account. When you make a BDOPAY transaction, it will be processed and debited from your account, showing up on your statement similar to other transactions. 

Here is a list of BDOPAY transactions made from your account. 

BDOPAY BN P2MQR-PAY2-17483459- P2MI
BDOPAY BN P2MQR-PAY2-33256727- P2MI
BDOPAY BN P2MQR-PAY2-47314744- P2MI
BDOPAY BN P2MQR-PAY2-92027653- P2MI
BDOPAY BN P2MQR-PAY2-16995017- P2MI
BDOPAY BN P2MQR-PAY2-38336163- P2MI
BDOPAY BN P2MQR-PAY2-84271008- P2MI
BDOPAY BN P2MQR-PAY2-05396154- P2MI
BDOPAY BN P2MQR-PAY2-52841860- P2MI
BDOPAY BN P2MQR-PAY2-05214021- P2MI
BDOPAY BN P2MQR-PAY2-57662202- P2MI
BDOPAY BN P2MQR-PAY2-37643500- P2MI
BDOPAY BN P2MQR-PAY2-00361956- P2MI
BDOPAY BN P2MQR-PAY2-86985239- P2MI
BDOPAY BN P2MQR-PAY2-40567289- P2MI
BDOPAY BN P2MQR-PAY2-15910745- P2MI
BDOPAY BN P2MQR-PAY2-99855748- P2MI
BDOPAY BN P2MQR-PAY2-00732660- P2MI
BDOPAY BN P2MQR-PAY2-75428180- P2MI
BDOPAY BN P2MQR-PAY2-34064037- P2MI
BDOPAY BN P2MQR-PAY2-12016460- P2MI
BDOPAY BN P2MQR-PAY2-29226550- P2MI
BDOPAY BN P2MQR-PAY2-85455595- P2MI
BDOPAY BN P2MQR-PAY2-17484171- P2MI
BDOPAY BN P2MQR-PAY2-93316990- P2MI
BDOPAY BN P2MQR-PAY2-05331248- P2MI
BDOPAY BN P2MQR-PAY2-61652633- P2MI
BDOPAY BN P2MQR-PAY2-97018567- P2MI
BDOPAY BN P2MQR-PAY2-91056901- P2MI
BDOPAY BN P2MQR-PAY2-32479368- P2MI
BDOPAY BN P2MQR-PAY2-73027926- P2MI
BDOPAY BN P2MQR-PAY2-96777012- P2MI
BDOPAY BN P2MQR-PAY2-17485955- P2MI
BDOPAY BN P2MQR-PAY2-91529316- P2MI
BDOPAY BN P2MQR-PAY2-05127485- P2MI
BDOPAY BN P2MQR-PAY2-01980015- P2MI
BDOPAY BN P2MQR-PAY2-70692273- P2MI
BDOPAY BN P2MQR-PAY2-83646535- P2MI
BDOPAY BN P2MQR-PAY2-70318733- P2MI
BDOPAY BN P2MQR-PAY2-99016253- P2MI
BDOPAY BN P2MQR-PAY2-24141935- P2MI
BDOPAY BN P2MQR-PAY2-83929933- P2MI
BDOPAY BN P2MQR-PAY2-17486924- P2MI
BDOPAY BN P2MQR-PAY2-08549451- P2MI
BDOPAY BN P2MQR-PAY2-50722621- P2MI
BDOPAY BN P2MQR-PAY2-50100443- P2MI
BDOPAY BN P2MQR-PAY2-71378519- P2MI
BDOPAY BN P2MQR-PAY2-82234525- P2MI
BDOPAY BN P2MQR-PAY2-00464117- P2MI
BDOPAY BN P2MQR-PAY2-98517458- P2MI
BDOPAY BN P2MQR-PAY2-69375533- P2MI
BDOPAY BN P2MQR-PAY2-75463953- P2MI
BDOPAY BN P2MQR-PAY2-76240182- P2MI
BDOPAY BN P2MQR-PAY2-17488665- P2MI
BDOPAY BN P2MQR-PAY2-62111453- P2MI
BDOPAY BN P2MQR-PAY2-70279545- P2MI
BDOPAY BN P2MQR-PAY2-37091900- P2MI
BDOPAY BN P2MQR-PAY2-14679715- P2MI
BDOPAY BN P2MQR-PAY2-58650977- P2MI
BDOPAY BN P2MQR-PAY2-60126267- P2MI
BDOPAY BN P2MQR-PAY2-17491200- P2MI
BDOPAY BN P2MQR-PAY2-36914545- P2MI
BDOPAY BN P2MQR-PAY2-35115586- P2MI
BDOPAY BN P2MQR-PAY2-42726333- P2MI
BDOPAY BN P2MQR-PAY2-35724717- P2MI
BDOPAY BN P2MQR-PAY2-35943151- P2MI
BDOPAY BN P2MQR-PAY2-09571689- P2MI
BDOPAY BN P2MQR-PAY2-60377374- P2MI
BDOPAY BN P2MQR-PAY2-17492695- P2MI
BDOPAY BN P2MQR-PAY2-65934867- P2MI
BDOPAY BN P2MQR-PAY2-92500893- P2MI
BDOPAY BN P2MQR-PAY2-17492837- P2MI
BDOPAY BN P2MQR-PAY2-19682140- P2MI
BDOPAY BN P2MQR-PAY2-55040674- P2MI
BDOPAY BN P2MQR-PAY2-11680761- P2MI
BDOPAY BN P2MQR-PAY2-24013435- P2MI
BDOPAY BN P2MQR-PAY2-86175942- P2MI
BDOPAY BN P2MQR-PAY2-05128014- P2MI
BDOPAY BN P2MQR-PAY2-50274026- P2MI
BDOPAY BN P2MQR-PAY2-70311090- P2MI
BDOPAY BN P2MQR-PAY2-74204440- P2MI
BDOPAY BN P2MQR-PAY2-77843474- P2MI
BDOPAY BN P2MQR-PAY2-34576825- P2MI
BDOPAY BN P2MQR-PAY2-17496284- P2MI


If you have any other questions, feel free to ask!
2025-06-17 14:32:50,539 - __main__ - INFO - User Query (en): what is the average spending i made on each general merchant?
2025-06-17 14:32:52,903 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:32:52,904 - __main__ - INFO - Generated SQL Query: SELECT "Counter party name", AVG(Amount) AS "Average Spending" FROM transactions WHERE "Credit/debit indicator" = 'Debit' GROUP BY "Counter party name" ORDER BY "Average Spending" DESC LIMIT 5
2025-06-17 14:32:52,907 - __main__ - INFO - Database connection established.
2025-06-17 14:32:52,913 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d241530>, <sqlite3.Row object at 0x10d2410f0>, <sqlite3.Row object at 0x10d241670>, <sqlite3.Row object at 0x10d2411d0>, <sqlite3.Row object at 0x10d241810>]
2025-06-17 14:32:55,261 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:32:55,261 - __main__ - INFO - Final Assistant Response (NL): Here are the top 5 merchants where you have the highest average spending:

*   BDOPAY BN P2MQR-PAY2-83646535- P2MI: â‚±5,299.49
*   BDOPAY BN P2MQR-PAY2-70692273- P2MI: â‚±4,494.82
*   BDOPAY BN P2MQR-PAY2-97018567- P2MI: â‚±4,038.73
*   BDOPAY BN P2MQR-PAY2-17485955- P2MI: â‚±3,986.00
*   BDOPAY BN P2MQR-PAY2-96777012- P2MI: â‚±3,798.28

Do you want to explore any of these merchants in more detail?
2025-06-17 14:33:24,612 - __main__ - INFO - Flask Application started.
2025-06-17 14:33:24,627 - __main__ - INFO - Database connection established.
2025-06-17 14:33:24,627 - __main__ - INFO - Database schema retrieved and cached.
2025-06-17 14:33:24,673 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-17 14:33:34,437 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-17 14:33:36,443 - __main__ - INFO - User Query (en): hi
2025-06-17 14:33:38,489 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:33:38,489 - __main__ - INFO - Generated SQL Query: SELECT 1
2025-06-17 14:33:38,492 - __main__ - INFO - Database connection established.
2025-06-17 14:33:38,493 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10dc7ef90>]
2025-06-17 14:33:39,915 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:33:39,916 - __main__ - INFO - Final Assistant Response (NL): Hi there! How can I help you with your account today? I can assist with checking your balance, reviewing transactions, and more. Just let me know what you need!
2025-06-17 14:33:46,691 - __main__ - INFO - User Query (en): where did i spend the most?
2025-06-17 14:33:47,870 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:33:47,871 - __main__ - INFO - Generated SQL Query: SELECT "Counter party name", SUM(Amount) AS TotalAmount FROM bank_transactions WHERE "Credit/debit indicator" = 'Debit' GROUP BY "Counter party name" ORDER BY TotalAmount DESC LIMIT 1;
2025-06-17 14:33:47,872 - __main__ - INFO - Database connection established.
2025-06-17 14:33:47,877 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10dd7a410>]
2025-06-17 14:33:49,355 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:33:49,356 - __main__ - INFO - Final Assistant Response (NL): It looks like the largest chunk of your spending, totaling â‚±83,512.53, went to W/D FR SAV BDO/005542 54SM STAMESA BDO. Need me to break down any other spending categories for you?
2025-06-17 14:33:58,887 - __main__ - INFO - User Query (en): what does this mean?
2025-06-17 14:34:00,379 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:34:00,380 - __main__ - INFO - Generated SQL Query: SELECT DISTINCT Source FROM bank_transactions WHERE Amount = 83512.53;
2025-06-17 14:34:00,381 - __main__ - INFO - Database connection established.
2025-06-17 14:34:00,383 - __main__ - INFO - SQL Query Executed Successfully. Results: []
2025-06-17 14:34:01,870 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:34:01,870 - __main__ - INFO - Final Assistant Response (NL): Okay, so 'Source' in the transaction table refers to where the transaction originated from. It could be an ATM location like '54SM STAMESA BDO', a branch, or even an online transfer. Does that help clarify things? Let me know if you'd like to investigate a specific transaction source!
2025-06-17 14:34:15,989 - __main__ - INFO - User Query (en): where did it originate?
2025-06-17 14:34:17,066 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:34:17,066 - __main__ - INFO - Generated SQL Query: SELECT DISTINCT Source FROM bank_transactions;
2025-06-17 14:34:17,066 - __main__ - INFO - Database connection established.
2025-06-17 14:34:17,068 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10dc7e670>, <sqlite3.Row object at 0x10dd7a290>, <sqlite3.Row object at 0x10dd7a610>, <sqlite3.Row object at 0x10dd7a4f0>, <sqlite3.Row object at 0x10dd7a350>, <sqlite3.Row object at 0x10dd7a5d0>]
2025-06-17 14:34:18,169 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:34:18,169 - __main__ - INFO - Final Assistant Response (NL): Based on your transaction history, the transactions originated from synthetic_2, synthetic_3, original, synthetic_4, synthetic_1, and synthetic_5. Is there anything else I can help you with?
2025-06-17 14:34:38,404 - __main__ - INFO - Flask Application started.
2025-06-17 14:34:38,419 - __main__ - INFO - Database connection established.
2025-06-17 14:34:38,420 - __main__ - INFO - Database schema retrieved and cached.
2025-06-17 14:34:38,484 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-17 14:34:38,528 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-17 14:34:40,496 - __main__ - INFO - User Query (en): hi
2025-06-17 14:34:43,090 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:34:43,091 - __main__ - INFO - Generated SQL Query: SELECT strftime('%Y-%m-%d %H:%M:%S', Date) AS FormattedDate, * FROM bank_transactions ORDER BY Date ASC LIMIT 5;
2025-06-17 14:34:43,092 - __main__ - INFO - Database connection established.
2025-06-17 14:34:43,093 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d6b5e90>, <sqlite3.Row object at 0x11180a3d0>, <sqlite3.Row object at 0x11180a4b0>, <sqlite3.Row object at 0x11180a410>, <sqlite3.Row object at 0x11180a590>]
2025-06-17 14:34:44,522 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:34:44,522 - __main__ - INFO - Final Assistant Response (NL): Hi there! I'm ready to help you manage your account. Here are the first five transactions in your account. Let me know what you'd like to explore!
2025-06-17 14:34:49,111 - __main__ - INFO - User Query (en): where's my highest spending
2025-06-17 14:34:50,672 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:34:50,672 - __main__ - INFO - Generated SQL Query: SELECT "Transaction Details", MAX(Withdrawals) AS HighestWithdrawal FROM bank_transactions GROUP BY "Transaction Details" ORDER BY HighestWithdrawal DESC LIMIT 1;
2025-06-17 14:34:50,673 - __main__ - INFO - Database connection established.
2025-06-17 14:34:50,675 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x11180a750>]
2025-06-17 14:34:51,790 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:34:51,790 - __main__ - INFO - Final Assistant Response (NL): Your highest single spending was â‚±9,993.80 for Bills Payment. Want help reviewing this!
2025-06-17 14:35:22,902 - __main__ - INFO - User Query (en): i went to cebu last January for Sinulog but i can't remember i spent something after that, can you help me pull it up?
2025-06-17 14:35:24,659 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:35:24,659 - __main__ - INFO - Generated SQL Query: SELECT * FROM bank_transactions WHERE Date BETWEEN '2025-01-29 00:00:00' AND '2025-01-31 23:59:59' AND LOWER("Branch / Source") LIKE '%cebu%' ORDER BY Date ASC;
2025-06-17 14:35:24,661 - __main__ - INFO - Database connection established.
2025-06-17 14:35:24,662 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x11180a3d0>, <sqlite3.Row object at 0x11180a5f0>, <sqlite3.Row object at 0x11180a670>]
2025-06-17 14:35:26,611 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:35:26,612 - __main__ - INFO - Final Assistant Response (NL): Okay, I found these transactions in Cebu during January 2025:

*   **January 29:** An ATM withdrawal of â‚±8,090.37 and an interest credit of â‚±16,313.14 at BDO Cebu
*   **January 30:** An interest credit of â‚±19,971.57 at BDO Cebu. 

Do these transactions look familiar? Let me know if that looks off!
2025-06-17 14:36:09,314 - __main__ - INFO - User Query (en): i went to cebu last January for Sinulog but i can't remember i spent something after that date, can you help me pull it up?
2025-06-17 14:36:10,648 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:36:10,648 - __main__ - INFO - Generated SQL Query: SELECT * FROM bank_transactions WHERE "Branch / Source" LIKE '%Cebu%' AND Date > '2025-01-29' ORDER BY Date ASC;
2025-06-17 14:36:10,650 - __main__ - INFO - Database connection established.
2025-06-17 14:36:10,652 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x11180a910>, <sqlite3.Row object at 0x11180a6d0>, <sqlite3.Row object at 0x11180a5d0>, <sqlite3.Row object at 0x11180a6b0>, <sqlite3.Row object at 0x11180a690>, <sqlite3.Row object at 0x11180a8b0>, <sqlite3.Row object at 0x11180a770>, <sqlite3.Row object at 0x11180a890>, <sqlite3.Row object at 0x11180a830>, <sqlite3.Row object at 0x11180a7b0>, <sqlite3.Row object at 0x11180a970>, <sqlite3.Row object at 0x11180a990>, <sqlite3.Row object at 0x11180a9f0>, <sqlite3.Row object at 0x11180aa50>, <sqlite3.Row object at 0x11180aab0>, <sqlite3.Row object at 0x11180ab10>, <sqlite3.Row object at 0x11180ab70>, <sqlite3.Row object at 0x11180abd0>, <sqlite3.Row object at 0x11180ac30>, <sqlite3.Row object at 0x11180ac90>, <sqlite3.Row object at 0x11180acf0>, <sqlite3.Row object at 0x11180ad50>, <sqlite3.Row object at 0x11180adb0>, <sqlite3.Row object at 0x11180ae10>, <sqlite3.Row object at 0x11180ae70>, <sqlite3.Row object at 0x11180aed0>, <sqlite3.Row object at 0x11180af30>, <sqlite3.Row object at 0x11180af90>, <sqlite3.Row object at 0x111858030>, <sqlite3.Row object at 0x111858090>, <sqlite3.Row object at 0x1118580f0>, <sqlite3.Row object at 0x111858150>, <sqlite3.Row object at 0x1118581b0>, <sqlite3.Row object at 0x111858210>, <sqlite3.Row object at 0x111858270>, <sqlite3.Row object at 0x1118582d0>, <sqlite3.Row object at 0x111858330>, <sqlite3.Row object at 0x111858390>, <sqlite3.Row object at 0x1118583f0>, <sqlite3.Row object at 0x111858450>, <sqlite3.Row object at 0x1118584b0>, <sqlite3.Row object at 0x111858510>, <sqlite3.Row object at 0x111858570>, <sqlite3.Row object at 0x1118585d0>]
2025-06-17 14:36:16,994 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:36:16,995 - __main__ - INFO - Final Assistant Response (NL): Okay, these are the transactions in Cebu after January 30, 2025:

*   **February 05:** A deposit of â‚±11,505.26
*   **February 06:** A deposit of â‚±17,438.08
*   **February 07:** A salary deposit of â‚±6,104.04
*   **February 12:** A service charge of â‚±470.84 and a bills payment of â‚±2,868.62
*   **February 14:** A POS purchase of â‚±1,676.06
*   **February 15:** A fund transfer of â‚±516.46
*   **February 16:** A fund transfer of â‚±7,197.68
*   **February 18:** A salary deposit of â‚±4,146.11
*   **February 21:** A POS purchase of â‚±7,292.84
*   **February 22:** A bills payment of â‚±2,875.43 and a deposit of â‚±23,300.73
*   **February 25:** An ATM withdrawal of â‚±9,489.79
*   **February 26:** An interest credit of â‚±8,125.38
*   **February 28:** An interest credit of â‚±14,476.07
*   **March 05:** A salary deposit of â‚±15,168.70
*   **March 07:** A mobile banking transfer of â‚±5,413.24
*   **March 10:** A POS purchase of â‚±8,589.66
*   **March 12:** A mobile banking transfer of â‚±8,952.13
*   **March 18:** A salary deposit of â‚±8,843.54
*   **March 19:** A fund transfer of â‚±9,344.14
*   **March 21:** A check deposit of â‚±23,929.79
*   **March 25:** A service charge of â‚±222.37 and an ATM withdrawal of â‚±114.47
*   **March 27:** A service charge of â‚±295.71
*   **April 10:** A mobile banking transfer of â‚±8,615.65
*   **April 13:** A POS purchase of â‚±3,197.93
*   **April 14:** A bills payment of â‚±6,184.79 and an interest credit of â‚±14,479.12
*   **April 16:** A salary deposit of â‚±14,436.40
*   **April 17:** A mobile banking transfer of â‚±1,015.39
*   **April 20:** A salary deposit of â‚±4,145.01
*   **April 23:** A deposit of â‚±20,531.68
*   **April 26:** A POS purchase of â‚±4,369.84
*   **April 30:** A deposit of â‚±21,163.75
*   **May 01:** A POS purchase of â‚±1,083.61
*   **May 03:** A check deposit of â‚±14,603.27
*   **May 05:** A POS purchase of â‚±5,625.06
*   **May 13:** A mobile banking transfer of â‚±2,767.26
*   **May 15:** A salary deposit of â‚±14,891.36 and a service charge of â‚±53.64

Does this help you remember your spending?
2025-06-17 14:37:30,208 - __main__ - INFO - User Query (es): fui en cebu en enero antes de Sinulog, pero despues eso, quede por un semana, puedes recordar esos?
2025-06-17 14:37:31,870 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:37:31,870 - __main__ - INFO - Generated SQL Query: SELECT * FROM bank_transactions WHERE "Branch / Source" LIKE '%Cebu%' AND Date BETWEEN '2025-01-01' AND '2025-01-31' ORDER BY Date ASC;
2025-06-17 14:37:31,872 - __main__ - INFO - Database connection established.
2025-06-17 14:37:31,874 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x11180a890>, <sqlite3.Row object at 0x11180a410>, <sqlite3.Row object at 0x11180a6d0>, <sqlite3.Row object at 0x11180a490>, <sqlite3.Row object at 0x11180a5f0>, <sqlite3.Row object at 0x11180a6b0>, <sqlite3.Row object at 0x11180a910>, <sqlite3.Row object at 0x11180a990>, <sqlite3.Row object at 0x11180a3d0>, <sqlite3.Row object at 0x11180a6f0>, <sqlite3.Row object at 0x11180a9f0>]
2025-06-17 14:37:33,861 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:37:33,861 - __main__ - INFO - Final Assistant Response (NL): Â¡Claro! AquÃ­ estÃ¡n sus transacciones en CebÃº desde el 21 de enero de 2025 hasta el 30 de enero de 2025:

*   **29 de enero:** Un retiro de cajero automÃ¡tico de â‚±8,090.37 y un crÃ©dito de interÃ©s de â‚±16,313.14 en BDO Cebu.
*   **30 de enero:** Un crÃ©dito de interÃ©s de â‚±19,971.57 en BDO Cebu.

Â¿Le resulta familiar? Â¡AvÃ­same si algo parece raro!
2025-06-17 14:38:09,797 - __main__ - INFO - User Query (es): que es credito de interes, no recuerdo haciendo esas cosas.
2025-06-17 14:38:11,169 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:38:11,169 - __main__ - INFO - Generated SQL Query: SELECT DISTINCT "Transaction Details" FROM bank_transactions WHERE LOWER("Transaction Details") LIKE '%interest credit%';
2025-06-17 14:38:11,172 - __main__ - INFO - Database connection established.
2025-06-17 14:38:11,174 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x11180a3d0>]
2025-06-17 14:38:12,573 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:38:12,574 - __main__ - INFO - Final Assistant Response (NL): Un 'crÃ©dito de interÃ©s' es cuando el banco le paga intereses por el dinero que tiene en su cuenta. Es esencialmente dinero extra que se agrega a su saldo. Â¿Le gustarÃ­a que revisemos todos los crÃ©ditos de interÃ©s en su cuenta?
2025-06-17 14:38:37,867 - __main__ - INFO - User Query (es): tiene la cuenta el saldo?
2025-06-17 14:38:42,550 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:38:42,550 - __main__ - INFO - Generated SQL Query: SELECT Balance, Date FROM bank_transactions ORDER BY Date DESC LIMIT 1;
2025-06-17 14:38:42,552 - __main__ - INFO - Database connection established.
2025-06-17 14:38:42,554 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x11180adb0>]
2025-06-17 14:38:43,703 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:38:43,703 - __main__ - INFO - Final Assistant Response (NL): Su saldo actual es de â‚±2,512,163.96 al 15 de mayo de 2025. Â¿Hay algo mÃ¡s que le gustarÃ­a saber?
2025-06-17 14:39:17,206 - __main__ - INFO - User Query (es): si, que son transacciones mas recientes?
2025-06-17 14:39:19,156 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:39:19,156 - __main__ - INFO - Generated SQL Query: SELECT * FROM bank_transactions ORDER BY Date DESC LIMIT 5;
2025-06-17 14:39:19,157 - __main__ - INFO - Database connection established.
2025-06-17 14:39:19,160 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x11180a830>, <sqlite3.Row object at 0x11180ae70>, <sqlite3.Row object at 0x11180adb0>, <sqlite3.Row object at 0x11180a970>, <sqlite3.Row object at 0x11180a9f0>]
2025-06-17 14:39:21,210 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:39:21,211 - __main__ - INFO - Final Assistant Response (NL): Â¡Claro! AquÃ­ estÃ¡n sus cinco transacciones mÃ¡s recientes:

*   **15 de mayo de 2025:** DepÃ³sito de sueldo de â‚±21,109.85 vÃ­a BDO Online.
*   **15 de mayo de 2025:** DepÃ³sito de sueldo de â‚±14,891.36 en BDO Cebu.
*   **15 de mayo de 2025:** Un cargo por servicio de â‚±53.64 en BDO Cebu.
*   **14 de mayo de 2025:** Un crÃ©dito de interÃ©s de â‚±2,019.04 en BDO Davao.
*   **13 de mayo de 2025:** Una compra POS de â‚±7,002.25 vÃ­a BDO Online.

Â¿Le gustarÃ­a revisar alguna de estas transacciones mÃ¡s a fondo?
2025-06-17 14:39:33,421 - __main__ - INFO - User Query (es): que es compra POS
2025-06-17 14:39:35,058 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:39:35,059 - __main__ - INFO - Generated SQL Query: SELECT DISTINCT "Transaction Details" FROM bank_transactions WHERE LOWER("Transaction Details") LIKE '%pos purchase%';
2025-06-17 14:39:35,061 - __main__ - INFO - Database connection established.
2025-06-17 14:39:35,063 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x11180ad50>]
2025-06-17 14:39:36,666 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:39:36,667 - __main__ - INFO - Final Assistant Response (NL): Una 'Compra POS' es una transacciÃ³n realizada a travÃ©s de un terminal de punto de venta (Point of Sale). Esencialmente, es cuando usas tu tarjeta de dÃ©bito para pagar directamente en una tienda o establecimiento. Â¿Hay algo mÃ¡s en lo que pueda ayudarle hoy?
2025-06-17 14:39:59,657 - __main__ - INFO - User Query (es): entonces, significa que comprÃ³ algo?
2025-06-17 14:40:01,141 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:40:01,141 - __main__ - INFO - Generated SQL Query: SELECT "Transaction Details" FROM bank_transactions WHERE LOWER("Transaction Details") LIKE '%pos purchase%' ORDER BY Date DESC LIMIT 1;
2025-06-17 14:40:01,143 - __main__ - INFO - Database connection established.
2025-06-17 14:40:01,144 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x11180ae70>]
2025-06-17 14:40:02,572 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:40:02,572 - __main__ - INFO - Final Assistant Response (NL): Â¡SÃ­, eso es correcto! Una compra POS generalmente indica que comprÃ³ algo en una tienda usando su tarjeta de dÃ©bito. Â¿Hay algo mÃ¡s en lo que le pueda ayudar relacionado con esta compra?
2025-06-17 14:40:36,325 - __main__ - INFO - User Query (es): y, entonces, significa que, comprÃ³ algo usando tarjeta por NFC o PIN? cierto?
2025-06-17 14:40:37,756 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:40:37,756 - __main__ - INFO - Generated SQL Query: SELECT "Transaction Details" FROM bank_transactions WHERE LOWER("Transaction Details") LIKE '%pos purchase%' ORDER BY Date DESC LIMIT 1;
2025-06-17 14:40:37,757 - __main__ - INFO - Database connection established.
2025-06-17 14:40:37,760 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x11180abd0>]
2025-06-17 14:40:39,410 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:40:39,410 - __main__ - INFO - Final Assistant Response (NL): Exactamente. Al realizar una compra POS, usualmente se requiere el uso de tu tarjeta, ya sea a travÃ©s de la tecnologÃ­a NFC (pago sin contacto) o ingresando tu PIN en el terminal. Â¿Necesitas ayuda para revisar los detalles de alguna de estas compras?
2025-06-17 14:41:11,464 - __main__ - INFO - User Query (es): mercantes con gastos promedios mas altas.
2025-06-17 14:41:13,537 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:41:13,538 - __main__ - INFO - Generated SQL Query: SELECT "Branch / Source", AVG(COALESCE(Withdrawals, 0)) AS average_spending FROM bank_transactions WHERE Withdrawals > 0 GROUP BY "Branch / Source" ORDER BY average_spending DESC LIMIT 5;
2025-06-17 14:41:13,540 - __main__ - INFO - Database connection established.
2025-06-17 14:41:13,542 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x11180acf0>, <sqlite3.Row object at 0x11180a3d0>, <sqlite3.Row object at 0x11180ac90>, <sqlite3.Row object at 0x11180aab0>, <sqlite3.Row object at 0x11180a970>]
2025-06-17 14:41:15,482 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:41:15,483 - __main__ - INFO - Final Assistant Response (NL): Claro, aquÃ­ estÃ¡n los 5 'Branch / Source' con los gastos promedios mÃ¡s altos:

*   BDO QC: â‚±4,894.59
*   BDO Cebu: â‚±4,675.60
*   BDO Taguig: â‚±4,402.66
*   BDO Makati: â‚±4,197.60
*   BDO Online: â‚±4,100.56

Â¿Le gustarÃ­a explorar los gastos en algÃºn 'Branch / Source' en particular?
2025-06-17 14:41:26,687 - __main__ - INFO - User Query (es): tipo de transacciones con gastos promedios mas altas.
2025-06-17 14:41:28,798 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:41:28,799 - __main__ - INFO - Generated SQL Query: SELECT "Transaction Details", AVG(COALESCE(Withdrawals, 0)) AS average_withdrawal FROM bank_transactions WHERE Withdrawals IS NOT NULL GROUP BY "Transaction Details" ORDER BY average_withdrawal DESC LIMIT 5;
2025-06-17 14:41:28,800 - __main__ - INFO - Database connection established.
2025-06-17 14:41:28,801 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x11180a890>, <sqlite3.Row object at 0x11180ac30>, <sqlite3.Row object at 0x11180ae10>, <sqlite3.Row object at 0x11180ab10>, <sqlite3.Row object at 0x11180a490>]
2025-06-17 14:41:30,946 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:41:30,946 - __main__ - INFO - Final Assistant Response (NL): Â¡Claro! AquÃ­ estÃ¡n los 5 tipos de transacciones con los gastos promedio mÃ¡s altos:

*   Transferencia de fondos a 3127657643: â‚±9,972.00
*   Transferencia de fondos a 7400268709: â‚±9,961.78
*   Transferencia de fondos a 7299922974: â‚±9,960.10
*   Transferencia de fondos a 1613549255: â‚±9,930.11
*   Transferencia de fondos a 6766723248: â‚±9,924.24

Â¿Le gustarÃ­a explorar mÃ¡s a fondo alguno de estos tipos de transacciones?
2025-06-17 14:41:41,029 - __main__ - INFO - User Query (es): tipo de transacciones (general) con gastos promedios mas altas.
2025-06-17 14:41:44,055 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:41:44,055 - __main__ - INFO - Generated SQL Query: SELECT
    CASE
        WHEN LOWER("Transaction Details") LIKE '%transferencia de fondos%' THEN 'Transferencia de Fondos'
        WHEN LOWER("Transaction Details") LIKE '%pago de facturas%' THEN 'Pago de Facturas'
        WHEN LOWER("Transaction Details") LIKE '%compra pos%' THEN 'Compra POS'
        WHEN LOWER("Transaction Details") LIKE '%retiro atm%' THEN 'Retiro ATM'
        WHEN LOWER("Transaction Details") LIKE '%cargo por servicio%' THEN 'Cargo por Servicio'
        WHEN LOWER("Transaction Details") LIKE '%deposito de sueldo%' THEN 'Deposito de Sueldo'
        WHEN LOWER("Transaction Details") LIKE '%deposito de cheque%' THEN 'Deposito de Cheque'
        WHEN LOWER("Transaction Details") LIKE '%credito de interes%' THEN 'CrÃ©dito de InterÃ©s'
        ELSE 'Otro'
    END AS transaction_type,
    AVG(COALESCE(Withdrawals, 0)) AS average_withdrawal
FROM bank_transactions
WHERE Withdrawals IS NOT NULL AND Withdrawals > 0
GROUP BY transaction_type
ORDER BY average_withdrawal DESC
LIMIT 5;
2025-06-17 14:41:44,057 - __main__ - INFO - Database connection established.
2025-06-17 14:41:44,060 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x11180a970>]
2025-06-17 14:41:46,061 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:41:46,061 - __main__ - INFO - Final Assistant Response (NL): Basado en sus registros, el tipo de transacciÃ³n general con el gasto promedio mÃ¡s alto es 'Otro', con un promedio de â‚±4,370.53. Â¿Le gustarÃ­a saber mÃ¡s detalles sobre este tipo de transacciÃ³n?
2025-06-17 14:42:25,239 - __main__ - INFO - User Query (es): que es deposito de cheque, 'check account' en ingles cierto?
2025-06-17 14:42:27,271 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:42:27,271 - __main__ - INFO - Generated SQL Query: SELECT DISTINCT "Transaction Details" FROM bank_transactions WHERE LOWER("Transaction Details") LIKE '%check deposit%';
2025-06-17 14:42:27,274 - __main__ - INFO - Database connection established.
2025-06-17 14:42:27,276 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x11180adb0>]
2025-06-17 14:42:28,547 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:42:28,547 - __main__ - INFO - Final Assistant Response (NL): Un 'depÃ³sito de cheque' es cuando depositas un cheque en tu cuenta. SÃ­, 'check deposit' en espaÃ±ol es 'depÃ³sito de cheque'. Â¿Hay algo mÃ¡s en lo que le pueda ayudar?
2025-06-17 14:43:13,550 - __main__ - INFO - User Query (es): entonces, deposito de cheque no usa deposito con dinero, pero usa una papel dedicada con cuentas de cheque? cierto?
2025-06-17 14:43:15,187 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:43:15,188 - __main__ - INFO - Generated SQL Query: SELECT CASE WHEN COUNT(*) > 0 THEN 'SÃ­, eso es correcto. Un depÃ³sito de cheque implica usar un cheque (un papel) para depositar fondos en tu cuenta, en lugar de efectivo directamente.' ELSE 'No tengo suficiente informaciÃ³n para responder a tu pregunta.' END FROM bank_transactions WHERE LOWER("Transaction Details") LIKE '%check deposit%';
2025-06-17 14:43:15,190 - __main__ - INFO - Database connection established.
2025-06-17 14:43:15,193 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x11180a6d0>]
2025-06-17 14:43:16,624 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:43:16,625 - __main__ - INFO - Final Assistant Response (NL): Â¡SÃ­, eso es correcto! Un depÃ³sito de cheque implica usar un cheque (un papel) para depositar fondos en tu cuenta, en lugar de efectivo directamente. Â¿Hay algo mÃ¡s en lo que le puedo ayudar?
2025-06-17 14:44:06,123 - __main__ - INFO - User Query (es): como se dijenos la definicion de debito y credito en situaciones casuales?
2025-06-17 14:44:07,928 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:44:07,928 - __main__ - INFO - Generated SQL Query: SELECT 'DÃ©bito' AS Tipo, 'Cuando gastas dinero de tu cuenta' AS Definicion UNION ALL SELECT 'CrÃ©dito' AS Tipo, 'Cuando recibes dinero en tu cuenta' AS Definicion;
2025-06-17 14:44:07,930 - __main__ - INFO - Database connection established.
2025-06-17 14:44:07,930 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x11180adb0>, <sqlite3.Row object at 0x11180af30>]
2025-06-17 14:44:09,585 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:44:09,585 - __main__ - INFO - Final Assistant Response (NL): En tÃ©rminos sencillos:

*   **DÃ©bito:** Cuando gastas dinero de tu cuenta.
*   **CrÃ©dito:** Cuando recibes dinero en tu cuenta.

Â¿Hay algo mÃ¡s que pueda explicarle?
2025-06-17 14:44:30,128 - __main__ - INFO - User Query (es): entonces, debito significa afuera de mi cuenta, y credito significa adentra de mi cuenta, cierot?
2025-06-17 14:44:32,123 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:44:32,123 - __main__ - INFO - Generated SQL Query: SELECT CASE WHEN SUM(CASE WHEN Withdrawals > 0 THEN 1 ELSE 0 END) > SUM(CASE WHEN Deposits > 0 THEN 1 ELSE 0 END) THEN 'Â¡SÃ­, casi! "DÃ©bito" significa una salida de fondos de su cuenta, como retiros o pagos. "CrÃ©dito" significa una entrada de fondos a su cuenta, como depÃ³sitos o intereses.' ELSE 'Â¡SÃ­, casi! "DÃ©bito" significa una salida de fondos de su cuenta, como retiros o pagos. "CrÃ©dito" significa una entrada de fondos a su cuenta, como depÃ³sitos o intereses.' END;
2025-06-17 14:44:32,126 - __main__ - INFO - Database connection established.
2025-06-17 14:44:32,127 - __main__ - ERROR - Database error during SQL execution for query 'SELECT CASE WHEN SUM(CASE WHEN Withdrawals > 0 THEN 1 ELSE 0 END) > SUM(CASE WHEN Deposits > 0 THEN 1 ELSE 0 END) THEN 'Â¡SÃ­, casi! "DÃ©bito" significa una salida de fondos de su cuenta, como retiros o pagos. "CrÃ©dito" significa una entrada de fondos a su cuenta, como depÃ³sitos o intereses.' ELSE 'Â¡SÃ­, casi! "DÃ©bito" significa una salida de fondos de su cuenta, como retiros o pagos. "CrÃ©dito" significa una entrada de fondos a su cuenta, como depÃ³sitos o intereses.' END;': no such column: Withdrawals
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_nonml.py", line 318, in chat
    cursor.execute(sql_query)
sqlite3.OperationalError: no such column: Withdrawals
2025-06-17 14:44:35,850 - __main__ - INFO - User Query (es): entonces, debito significa afuera de mi cuenta, y credito significa adentra de mi cuenta, cierot?
2025-06-17 14:44:37,615 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:44:37,615 - __main__ - INFO - Generated SQL Query: SELECT 'SÃ­, eso es correcto.  Un dÃ©bito representa una salida de fondos de su cuenta, mientras que un crÃ©dito representa una entrada de fondos a su cuenta.';
2025-06-17 14:44:37,616 - __main__ - INFO - Database connection established.
2025-06-17 14:44:37,617 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x11180aab0>]
2025-06-17 14:44:39,058 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:44:39,058 - __main__ - INFO - Final Assistant Response (NL): Â¡SÃ­, eso es correcto! Un dÃ©bito representa una salida de fondos de su cuenta, mientras que un crÃ©dito representa una entrada de fondos a su cuenta. Â¿Hay algo mÃ¡s en lo que pueda ayudarle hoy?
2025-06-17 14:45:05,985 - __main__ - INFO - User Query (es): si, que son 10 transacciones con gastos mas altos?
2025-06-17 14:45:08,700 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:45:08,700 - __main__ - INFO - Generated SQL Query: SELECT "Transaction Details", Withdrawals FROM bank_transactions WHERE Withdrawals IS NOT NULL ORDER BY Withdrawals DESC LIMIT 10;
2025-06-17 14:45:08,701 - __main__ - INFO - Database connection established.
2025-06-17 14:45:08,702 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x11180ac90>, <sqlite3.Row object at 0x11180a890>, <sqlite3.Row object at 0x11180adb0>, <sqlite3.Row object at 0x11180ab70>, <sqlite3.Row object at 0x11180a730>, <sqlite3.Row object at 0x11180a870>, <sqlite3.Row object at 0x11180a6b0>, <sqlite3.Row object at 0x11180af90>, <sqlite3.Row object at 0x11180af30>, <sqlite3.Row object at 0x11180a810>]
2025-06-17 14:45:11,325 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:45:11,327 - __main__ - INFO - Final Assistant Response (NL): Â¡Claro! AquÃ­ estÃ¡n las 10 transacciones con los gastos mÃ¡s altos:

*   Pago de facturas: â‚±9,993.80
*   Retiro en cajero automÃ¡tico: â‚±9,986.01
*   Compra POS: â‚±9,972.92
*   Transferencia de fondos a 3127657643: â‚±9,972.00
*   Transferencia de fondos a 7400268709: â‚±9,961.78
*   Transferencia de fondos a 7299922974: â‚±9,960.10
*   Compra POS: â‚±9,941.46
*   Transferencia de fondos a 1613549255: â‚±9,930.11
*   Transferencia de fondos a 6766723248: â‚±9,924.24
*   Pago de facturas: â‚±9,892.08

Â¿Le gustarÃ­a revisar alguna de estas transacciones en detalle?
2025-06-17 14:46:51,142 - __main__ - INFO - User Query (es): que es pago de facturas? significa que pago en electricidad/agua/internet o todas las tipos de transacciones que repetir en una tiempo?
2025-06-17 14:46:53,419 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:46:53,419 - __main__ - INFO - Generated SQL Query: SELECT COUNT(*) FROM bank_transactions WHERE LOWER("Transaction Details") LIKE '%bills payment%';
2025-06-17 14:46:53,422 - __main__ - INFO - Database connection established.
2025-06-17 14:46:53,424 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x11180a6b0>]
2025-06-17 14:46:55,059 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:46:55,059 - __main__ - INFO - Final Assistant Response (NL): Un 'Pago de facturas' se refiere a cualquier pago que realiza para liquidar una factura, como la de electricidad, agua, internet, o cualquier otra cuenta recurrente. En tus registros, hay 108 transacciones registradas como 'Pago de facturas'. Â¿Te gustarÃ­a revisar alguna de ellas?
2025-06-17 14:47:15,049 - __main__ - INFO - User Query (es): entonces, le interpreto correctamente?
2025-06-17 14:47:16,963 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:47:16,963 - __main__ - INFO - Generated SQL Query: SELECT COUNT(*) FROM bank_transactions;
2025-06-17 14:47:16,965 - __main__ - INFO - Database connection established.
2025-06-17 14:47:16,967 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x11180a5f0>]
2025-06-17 14:47:18,408 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:47:18,409 - __main__ - INFO - Final Assistant Response (NL): Si usted se refiere a si hay alguna transacciÃ³n con un saldo de â‚±1,000.00, la respuesta es sÃ­. Â¿Le gustarÃ­a revisar esa transacciÃ³n?
2025-06-17 14:54:54,817 - __main__ - INFO - User Query (es): vale, proximo. que "branch" tiene gasto mas alto?
2025-06-17 14:54:58,026 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:54:58,026 - __main__ - INFO - Generated SQL Query: SELECT "Branch / Source", SUM(COALESCE(Withdrawals, 0)) AS TotalGastos FROM bank_transactions WHERE Withdrawals IS NOT NULL GROUP BY "Branch / Source" ORDER BY TotalGastos DESC LIMIT 5;
2025-06-17 14:54:58,030 - __main__ - INFO - Database connection established.
2025-06-17 14:54:58,034 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x11180af90>, <sqlite3.Row object at 0x11180ad50>, <sqlite3.Row object at 0x11180adb0>, <sqlite3.Row object at 0x11180a890>, <sqlite3.Row object at 0x11180a6d0>]
2025-06-17 14:54:59,818 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:54:59,819 - __main__ - INFO - Final Assistant Response (NL): Â¡Entendido! AquÃ­ estÃ¡n los 5 'Branch / Source' con el gasto total mÃ¡s alto:

*   BDO Cebu: â‚±504,964.40
*   BDO QC: â‚±445,407.39
*   BDO Makati: â‚±444,945.29
*   BDO Taguig: â‚±431,460.91
*   BDO Online: â‚±393,654.21

Â¿Le gustarÃ­a ver detalles de los gastos en alguna de estas sucursales?
2025-06-17 14:55:45,394 - __main__ - INFO - User Query (es): cuantas transacciones que tengo en esos "branches" (cada "branch")
2025-06-17 14:55:47,125 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:55:47,125 - __main__ - INFO - Generated SQL Query: SELECT "Branch / Source", COUNT(*) AS transaction_count FROM bank_transactions GROUP BY "Branch / Source" ORDER BY transaction_count DESC;
2025-06-17 14:55:47,127 - __main__ - INFO - Database connection established.
2025-06-17 14:55:47,131 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x11180a890>, <sqlite3.Row object at 0x11180aab0>, <sqlite3.Row object at 0x11180acf0>, <sqlite3.Row object at 0x11180a810>, <sqlite3.Row object at 0x11180a690>, <sqlite3.Row object at 0x11180aed0>]
2025-06-17 14:55:49,073 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:55:49,074 - __main__ - INFO - Final Assistant Response (NL): Â¡Por supuesto! AquÃ­ tienes el nÃºmero de transacciones en cada una de esas sucursales: 

*   BDO Makati: 180 transacciones.
*   BDO Online: 173 transacciones.
*   BDO Cebu: 172 transacciones.
*   BDO QC: 165 transacciones.
*   BDO Taguig: 163 transacciones.
*   BDO Davao: 147 transacciones.

Â¿Te gustarÃ­a saber algo mÃ¡s sobre estas transacciones?
2025-06-17 14:56:14,140 - __main__ - INFO - User Query (es): entonces, cuantos son promedios en cada sucursales?
2025-06-17 14:56:16,514 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:56:16,515 - __main__ - INFO - Generated SQL Query: SELECT "Branch / Source", AVG(COALESCE(Withdrawals, 0)) AS AverageWithdrawal FROM bank_transactions GROUP BY "Branch / Source" ORDER BY AverageWithdrawal DESC;
2025-06-17 14:56:16,517 - __main__ - INFO - Database connection established.
2025-06-17 14:56:16,520 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x11180a590>, <sqlite3.Row object at 0x11180af90>, <sqlite3.Row object at 0x11180a810>, <sqlite3.Row object at 0x11180a6d0>, <sqlite3.Row object at 0x11180a9f0>, <sqlite3.Row object at 0x11180aed0>]
2025-06-17 14:56:18,368 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:56:18,369 - __main__ - INFO - Final Assistant Response (NL): Â¡Claro! AquÃ­ estÃ¡n los gastos promedio por sucursal:

*   BDO Cebu: â‚±2,935.84
*   BDO QC: â‚±2,699.44
*   BDO Taguig: â‚±2,647.00
*   BDO Davao: â‚±2,585.24
*   BDO Makati: â‚±2,471.92
*   BDO Online: â‚±2,275.46

Â¿Le gustarÃ­a comparar alguna de estas sucursales en particular?
2025-06-17 14:56:43,449 - __main__ - INFO - User Query (es): que son tipos de transacciones presente en este historia?
2025-06-17 14:56:45,084 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:56:45,084 - __main__ - INFO - Generated SQL Query: SELECT DISTINCT "Transaction Details" FROM bank_transactions;
2025-06-17 14:56:45,086 - __main__ - INFO - Database connection established.
2025-06-17 14:56:45,089 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x11180aa50>, <sqlite3.Row object at 0x11180a5f0>, <sqlite3.Row object at 0x11180acf0>, <sqlite3.Row object at 0x11180aed0>, <sqlite3.Row object at 0x111858150>, <sqlite3.Row object at 0x11180a9f0>, <sqlite3.Row object at 0x1118581b0>, <sqlite3.Row object at 0x111858770>, <sqlite3.Row object at 0x1118582d0>, <sqlite3.Row object at 0x1118585f0>, <sqlite3.Row object at 0x111858390>, <sqlite3.Row object at 0x1118580f0>, <sqlite3.Row object at 0x111858090>, <sqlite3.Row object at 0x111858270>, <sqlite3.Row object at 0x111858210>, <sqlite3.Row object at 0x111858330>, <sqlite3.Row object at 0x111858030>, <sqlite3.Row object at 0x1118583f0>, <sqlite3.Row object at 0x111858450>, <sqlite3.Row object at 0x1118584b0>, <sqlite3.Row object at 0x111858510>, <sqlite3.Row object at 0x111858570>, <sqlite3.Row object at 0x1118585d0>, <sqlite3.Row object at 0x1118586d0>, <sqlite3.Row object at 0x111858750>, <sqlite3.Row object at 0x1118586b0>, <sqlite3.Row object at 0x1118586f0>, <sqlite3.Row object at 0x111858790>, <sqlite3.Row object at 0x1118587b0>, <sqlite3.Row object at 0x1118587d0>, <sqlite3.Row object at 0x1118587f0>, <sqlite3.Row object at 0x111858810>, <sqlite3.Row object at 0x111858830>, <sqlite3.Row object at 0x111858850>, <sqlite3.Row object at 0x111858890>, <sqlite3.Row object at 0x1118588f0>, <sqlite3.Row object at 0x111858910>, <sqlite3.Row object at 0x111858930>, <sqlite3.Row object at 0x111858950>, <sqlite3.Row object at 0x111858970>, <sqlite3.Row object at 0x111858990>, <sqlite3.Row object at 0x1118589b0>, <sqlite3.Row object at 0x1118589d0>, <sqlite3.Row object at 0x1118589f0>, <sqlite3.Row object at 0x111858a10>, <sqlite3.Row object at 0x111858a30>, <sqlite3.Row object at 0x111858a50>, <sqlite3.Row object at 0x111858a70>, <sqlite3.Row object at 0x111858a90>, <sqlite3.Row object at 0x111858ab0>, <sqlite3.Row object at 0x111858ad0>, <sqlite3.Row object at 0x111858af0>, <sqlite3.Row object at 0x111858b10>, <sqlite3.Row object at 0x111858b30>, <sqlite3.Row object at 0x111858b50>, <sqlite3.Row object at 0x111858b70>, <sqlite3.Row object at 0x111858b90>, <sqlite3.Row object at 0x111858bb0>, <sqlite3.Row object at 0x111858bd0>, <sqlite3.Row object at 0x111858bf0>, <sqlite3.Row object at 0x111858c10>, <sqlite3.Row object at 0x111858c30>, <sqlite3.Row object at 0x111858c50>, <sqlite3.Row object at 0x111858c70>, <sqlite3.Row object at 0x111858c90>, <sqlite3.Row object at 0x111858cb0>, <sqlite3.Row object at 0x111858cd0>, <sqlite3.Row object at 0x111858cf0>, <sqlite3.Row object at 0x111858d10>, <sqlite3.Row object at 0x111858d30>, <sqlite3.Row object at 0x111858d50>, <sqlite3.Row object at 0x111858d70>, <sqlite3.Row object at 0x111858d90>, <sqlite3.Row object at 0x111858db0>, <sqlite3.Row object at 0x111858dd0>, <sqlite3.Row object at 0x111858df0>, <sqlite3.Row object at 0x111858e10>, <sqlite3.Row object at 0x111858e30>, <sqlite3.Row object at 0x111858e50>, <sqlite3.Row object at 0x111858e70>, <sqlite3.Row object at 0x111858e90>, <sqlite3.Row object at 0x111858eb0>, <sqlite3.Row object at 0x111858ed0>, <sqlite3.Row object at 0x111858ef0>, <sqlite3.Row object at 0x111858f10>, <sqlite3.Row object at 0x111858f30>, <sqlite3.Row object at 0x111858f50>, <sqlite3.Row object at 0x111858f70>, <sqlite3.Row object at 0x111858f90>, <sqlite3.Row object at 0x111858fb0>, <sqlite3.Row object at 0x111858fd0>, <sqlite3.Row object at 0x11189c030>, <sqlite3.Row object at 0x11189c050>, <sqlite3.Row object at 0x11189c070>, <sqlite3.Row object at 0x11189c090>, <sqlite3.Row object at 0x11189c0b0>, <sqlite3.Row object at 0x11189c0d0>, <sqlite3.Row object at 0x11189c0f0>, <sqlite3.Row object at 0x11189c110>, <sqlite3.Row object at 0x11189c130>, <sqlite3.Row object at 0x11189c150>, <sqlite3.Row object at 0x11189c170>, <sqlite3.Row object at 0x11189c190>, <sqlite3.Row object at 0x11189c1b0>, <sqlite3.Row object at 0x11189c1d0>, <sqlite3.Row object at 0x11189c1f0>, <sqlite3.Row object at 0x11189c210>, <sqlite3.Row object at 0x11189c230>, <sqlite3.Row object at 0x11189c250>, <sqlite3.Row object at 0x11189c270>, <sqlite3.Row object at 0x11189c290>, <sqlite3.Row object at 0x11189c2b0>, <sqlite3.Row object at 0x11189c2d0>, <sqlite3.Row object at 0x11189c2f0>, <sqlite3.Row object at 0x11189c310>, <sqlite3.Row object at 0x11189c330>, <sqlite3.Row object at 0x11189c350>, <sqlite3.Row object at 0x11189c370>, <sqlite3.Row object at 0x11189c390>, <sqlite3.Row object at 0x11189c3b0>, <sqlite3.Row object at 0x11189c3d0>, <sqlite3.Row object at 0x11189c3f0>, <sqlite3.Row object at 0x11189c410>, <sqlite3.Row object at 0x11189c430>, <sqlite3.Row object at 0x11189c450>, <sqlite3.Row object at 0x11189c470>, <sqlite3.Row object at 0x11189c490>, <sqlite3.Row object at 0x11189c4b0>, <sqlite3.Row object at 0x11189c4d0>, <sqlite3.Row object at 0x11189c4f0>, <sqlite3.Row object at 0x11189c510>, <sqlite3.Row object at 0x11189c530>, <sqlite3.Row object at 0x11189c550>, <sqlite3.Row object at 0x11189c570>, <sqlite3.Row object at 0x11189c590>, <sqlite3.Row object at 0x11189c5b0>, <sqlite3.Row object at 0x11189c5d0>, <sqlite3.Row object at 0x11189c5f0>, <sqlite3.Row object at 0x11189c610>, <sqlite3.Row object at 0x11189c630>, <sqlite3.Row object at 0x11189c650>, <sqlite3.Row object at 0x11189c670>, <sqlite3.Row object at 0x11189c690>, <sqlite3.Row object at 0x11189c6b0>, <sqlite3.Row object at 0x11189c6d0>, <sqlite3.Row object at 0x11189c6f0>, <sqlite3.Row object at 0x11189c710>, <sqlite3.Row object at 0x11189c730>, <sqlite3.Row object at 0x11189c750>, <sqlite3.Row object at 0x11189c770>, <sqlite3.Row object at 0x11189c790>, <sqlite3.Row object at 0x11189c7b0>, <sqlite3.Row object at 0x11189c7d0>, <sqlite3.Row object at 0x11189c7f0>, <sqlite3.Row object at 0x11189c810>, <sqlite3.Row object at 0x11189c830>, <sqlite3.Row object at 0x11189c850>, <sqlite3.Row object at 0x11189c870>, <sqlite3.Row object at 0x11189c890>, <sqlite3.Row object at 0x11189c8b0>, <sqlite3.Row object at 0x11189c8d0>, <sqlite3.Row object at 0x11189c8f0>, <sqlite3.Row object at 0x11189c910>, <sqlite3.Row object at 0x11189c930>, <sqlite3.Row object at 0x11189c950>, <sqlite3.Row object at 0x11189c970>, <sqlite3.Row object at 0x11189c990>, <sqlite3.Row object at 0x11189c9b0>, <sqlite3.Row object at 0x11189c9d0>, <sqlite3.Row object at 0x11189c9f0>, <sqlite3.Row object at 0x11189ca10>, <sqlite3.Row object at 0x11189ca30>, <sqlite3.Row object at 0x11189ca50>, <sqlite3.Row object at 0x11189ca70>, <sqlite3.Row object at 0x11189ca90>, <sqlite3.Row object at 0x11189cab0>, <sqlite3.Row object at 0x11189cad0>, <sqlite3.Row object at 0x11189caf0>, <sqlite3.Row object at 0x11189cb10>, <sqlite3.Row object at 0x11189cb30>, <sqlite3.Row object at 0x11189cb50>, <sqlite3.Row object at 0x11189cb70>, <sqlite3.Row object at 0x11189cb90>, <sqlite3.Row object at 0x11189cbb0>, <sqlite3.Row object at 0x11189cbd0>, <sqlite3.Row object at 0x11189cbf0>, <sqlite3.Row object at 0x11189cc10>, <sqlite3.Row object at 0x11189cc30>, <sqlite3.Row object at 0x11189cc50>, <sqlite3.Row object at 0x11189cc70>, <sqlite3.Row object at 0x11189cc90>, <sqlite3.Row object at 0x11189ccb0>, <sqlite3.Row object at 0x11189ccd0>, <sqlite3.Row object at 0x11189ccf0>, <sqlite3.Row object at 0x11189cd10>, <sqlite3.Row object at 0x11189cd30>, <sqlite3.Row object at 0x11189cd50>, <sqlite3.Row object at 0x11189cd70>, <sqlite3.Row object at 0x11189cd90>, <sqlite3.Row object at 0x11189cdb0>, <sqlite3.Row object at 0x11189cdd0>, <sqlite3.Row object at 0x11189cdf0>, <sqlite3.Row object at 0x11189ce10>, <sqlite3.Row object at 0x11189ce30>, <sqlite3.Row object at 0x11189ce50>, <sqlite3.Row object at 0x11189ce70>, <sqlite3.Row object at 0x11189ce90>, <sqlite3.Row object at 0x11189ceb0>, <sqlite3.Row object at 0x11189ced0>, <sqlite3.Row object at 0x11189cef0>, <sqlite3.Row object at 0x11189cf10>, <sqlite3.Row object at 0x11189cf30>, <sqlite3.Row object at 0x11189cf50>, <sqlite3.Row object at 0x11189cf70>, <sqlite3.Row object at 0x11189cf90>, <sqlite3.Row object at 0x11189cfb0>, <sqlite3.Row object at 0x11189cfd0>]
2025-06-17 14:56:47,030 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:56:47,031 - __main__ - INFO - Final Assistant Response (NL): Â¡Claro! Los tipos de transacciones presentes en su historial son:

*   Received from
*   POS Purchase
*   Service Charge
*   Mobile Banking Transfer (seguido de un nÃºmero de referencia)
*   Check Deposit
*   ATM Withdrawal
*   Fund Transfer (seguido de un nÃºmero de referencia)
*   Deposit: Salary

Â¿Hay algÃºn tipo de transacciÃ³n en particular sobre el que le gustarÃ­a obtener mÃ¡s informaciÃ³n?
2025-06-17 14:57:12,951 - __main__ - INFO - User Query (es): okm que son los definiciones? explicame en palabras mas faciles
2025-06-17 14:57:15,460 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:57:15,460 - __main__ - INFO - Generated SQL Query: SELECT DISTINCT `Transaction Details` FROM bank_transactions;
2025-06-17 14:57:15,461 - __main__ - INFO - Database connection established.
2025-06-17 14:57:15,464 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x111858510>, <sqlite3.Row object at 0x1118583f0>, <sqlite3.Row object at 0x111858570>, <sqlite3.Row object at 0x111858750>, <sqlite3.Row object at 0x1118585d0>, <sqlite3.Row object at 0x111858030>, <sqlite3.Row object at 0x1118584b0>, <sqlite3.Row object at 0x1118586d0>, <sqlite3.Row object at 0x1118586b0>, <sqlite3.Row object at 0x1118587b0>, <sqlite3.Row object at 0x111858790>, <sqlite3.Row object at 0x1118582d0>, <sqlite3.Row object at 0x1118587d0>, <sqlite3.Row object at 0x1118587f0>, <sqlite3.Row object at 0x111858810>, <sqlite3.Row object at 0x111858830>, <sqlite3.Row object at 0x111858850>, <sqlite3.Row object at 0x111858890>, <sqlite3.Row object at 0x1118588f0>, <sqlite3.Row object at 0x111858910>, <sqlite3.Row object at 0x111858930>, <sqlite3.Row object at 0x111858950>, <sqlite3.Row object at 0x111858970>, <sqlite3.Row object at 0x111858990>, <sqlite3.Row object at 0x1118589b0>, <sqlite3.Row object at 0x1118589d0>, <sqlite3.Row object at 0x1118589f0>, <sqlite3.Row object at 0x111858a10>, <sqlite3.Row object at 0x111858a30>, <sqlite3.Row object at 0x111858a50>, <sqlite3.Row object at 0x111858a70>, <sqlite3.Row object at 0x111858a90>, <sqlite3.Row object at 0x111858ab0>, <sqlite3.Row object at 0x111858ad0>, <sqlite3.Row object at 0x111858af0>, <sqlite3.Row object at 0x111858b10>, <sqlite3.Row object at 0x111858b30>, <sqlite3.Row object at 0x111858b50>, <sqlite3.Row object at 0x111858b70>, <sqlite3.Row object at 0x111858b90>, <sqlite3.Row object at 0x111858bb0>, <sqlite3.Row object at 0x111858bd0>, <sqlite3.Row object at 0x111858bf0>, <sqlite3.Row object at 0x111858c10>, <sqlite3.Row object at 0x111858c30>, <sqlite3.Row object at 0x111858c50>, <sqlite3.Row object at 0x111858c70>, <sqlite3.Row object at 0x111858c90>, <sqlite3.Row object at 0x111858cb0>, <sqlite3.Row object at 0x111858cd0>, <sqlite3.Row object at 0x111858cf0>, <sqlite3.Row object at 0x111858d10>, <sqlite3.Row object at 0x111858d30>, <sqlite3.Row object at 0x111858d50>, <sqlite3.Row object at 0x111858d70>, <sqlite3.Row object at 0x111858d90>, <sqlite3.Row object at 0x111858db0>, <sqlite3.Row object at 0x111858dd0>, <sqlite3.Row object at 0x111858df0>, <sqlite3.Row object at 0x111858e10>, <sqlite3.Row object at 0x111858e30>, <sqlite3.Row object at 0x111858e50>, <sqlite3.Row object at 0x111858e70>, <sqlite3.Row object at 0x111858e90>, <sqlite3.Row object at 0x111858eb0>, <sqlite3.Row object at 0x111858ed0>, <sqlite3.Row object at 0x111858ef0>, <sqlite3.Row object at 0x111858f10>, <sqlite3.Row object at 0x111858f30>, <sqlite3.Row object at 0x111858f50>, <sqlite3.Row object at 0x111858f70>, <sqlite3.Row object at 0x111858f90>, <sqlite3.Row object at 0x111858fb0>, <sqlite3.Row object at 0x111858fd0>, <sqlite3.Row object at 0x11180aab0>, <sqlite3.Row object at 0x11180af90>, <sqlite3.Row object at 0x11180a810>, <sqlite3.Row object at 0x11180a590>, <sqlite3.Row object at 0x11180a890>, <sqlite3.Row object at 0x11180aa50>, <sqlite3.Row object at 0x11180a5f0>, <sqlite3.Row object at 0x11180acf0>, <sqlite3.Row object at 0x11180aed0>, <sqlite3.Row object at 0x11180a9f0>, <sqlite3.Row object at 0x11180adb0>, <sqlite3.Row object at 0x11180a6d0>, <sqlite3.Row object at 0x1118a6030>, <sqlite3.Row object at 0x1118a6050>, <sqlite3.Row object at 0x1118a6070>, <sqlite3.Row object at 0x1118a6090>, <sqlite3.Row object at 0x1118a60b0>, <sqlite3.Row object at 0x1118a60d0>, <sqlite3.Row object at 0x1118a60f0>, <sqlite3.Row object at 0x1118a6110>, <sqlite3.Row object at 0x1118a6130>, <sqlite3.Row object at 0x1118a6150>, <sqlite3.Row object at 0x1118a6170>, <sqlite3.Row object at 0x1118a6190>, <sqlite3.Row object at 0x1118a61b0>, <sqlite3.Row object at 0x1118a61d0>, <sqlite3.Row object at 0x1118a61f0>, <sqlite3.Row object at 0x1118a6210>, <sqlite3.Row object at 0x1118a6230>, <sqlite3.Row object at 0x1118a6250>, <sqlite3.Row object at 0x1118a6270>, <sqlite3.Row object at 0x1118a6290>, <sqlite3.Row object at 0x1118a62b0>, <sqlite3.Row object at 0x1118a62d0>, <sqlite3.Row object at 0x1118a62f0>, <sqlite3.Row object at 0x1118a6310>, <sqlite3.Row object at 0x1118a6330>, <sqlite3.Row object at 0x1118a6350>, <sqlite3.Row object at 0x1118a6370>, <sqlite3.Row object at 0x1118a6390>, <sqlite3.Row object at 0x1118a63b0>, <sqlite3.Row object at 0x1118a63d0>, <sqlite3.Row object at 0x1118a63f0>, <sqlite3.Row object at 0x1118a6410>, <sqlite3.Row object at 0x1118a6430>, <sqlite3.Row object at 0x1118a6450>, <sqlite3.Row object at 0x1118a6470>, <sqlite3.Row object at 0x1118a6490>, <sqlite3.Row object at 0x1118a64b0>, <sqlite3.Row object at 0x1118a64d0>, <sqlite3.Row object at 0x1118a64f0>, <sqlite3.Row object at 0x1118a6510>, <sqlite3.Row object at 0x1118a6530>, <sqlite3.Row object at 0x1118a6550>, <sqlite3.Row object at 0x1118a6570>, <sqlite3.Row object at 0x1118a6590>, <sqlite3.Row object at 0x1118a65b0>, <sqlite3.Row object at 0x1118a65d0>, <sqlite3.Row object at 0x1118a65f0>, <sqlite3.Row object at 0x1118a6610>, <sqlite3.Row object at 0x1118a6630>, <sqlite3.Row object at 0x1118a6650>, <sqlite3.Row object at 0x1118a6670>, <sqlite3.Row object at 0x1118a6690>, <sqlite3.Row object at 0x1118a66b0>, <sqlite3.Row object at 0x1118a66d0>, <sqlite3.Row object at 0x1118a66f0>, <sqlite3.Row object at 0x1118a6710>, <sqlite3.Row object at 0x1118a6730>, <sqlite3.Row object at 0x1118a6750>, <sqlite3.Row object at 0x1118a6770>, <sqlite3.Row object at 0x1118a6790>, <sqlite3.Row object at 0x1118a67b0>, <sqlite3.Row object at 0x1118a67d0>, <sqlite3.Row object at 0x1118a67f0>, <sqlite3.Row object at 0x1118a6810>, <sqlite3.Row object at 0x1118a6830>, <sqlite3.Row object at 0x1118a6850>, <sqlite3.Row object at 0x1118a6870>, <sqlite3.Row object at 0x1118a6890>, <sqlite3.Row object at 0x1118a68b0>, <sqlite3.Row object at 0x1118a68d0>, <sqlite3.Row object at 0x1118a68f0>, <sqlite3.Row object at 0x1118a6910>, <sqlite3.Row object at 0x1118a6930>, <sqlite3.Row object at 0x1118a6950>, <sqlite3.Row object at 0x1118a6970>, <sqlite3.Row object at 0x1118a6990>, <sqlite3.Row object at 0x1118a69b0>, <sqlite3.Row object at 0x1118a69d0>, <sqlite3.Row object at 0x1118a69f0>, <sqlite3.Row object at 0x1118a6a10>, <sqlite3.Row object at 0x1118a6a30>, <sqlite3.Row object at 0x1118a6a50>, <sqlite3.Row object at 0x1118a6a70>, <sqlite3.Row object at 0x1118a6a90>, <sqlite3.Row object at 0x1118a6ab0>, <sqlite3.Row object at 0x1118a6ad0>, <sqlite3.Row object at 0x1118a6af0>, <sqlite3.Row object at 0x1118a6b10>, <sqlite3.Row object at 0x1118a6b30>, <sqlite3.Row object at 0x1118a6b50>, <sqlite3.Row object at 0x1118a6b70>, <sqlite3.Row object at 0x1118a6b90>, <sqlite3.Row object at 0x1118a6bb0>, <sqlite3.Row object at 0x1118a6bd0>, <sqlite3.Row object at 0x1118a6bf0>, <sqlite3.Row object at 0x1118a6c10>, <sqlite3.Row object at 0x1118a6c30>, <sqlite3.Row object at 0x1118a6c50>, <sqlite3.Row object at 0x1118a6c70>, <sqlite3.Row object at 0x1118a6c90>, <sqlite3.Row object at 0x1118a6cb0>, <sqlite3.Row object at 0x1118a6cd0>, <sqlite3.Row object at 0x1118a6cf0>, <sqlite3.Row object at 0x1118a6d10>, <sqlite3.Row object at 0x1118a6d30>, <sqlite3.Row object at 0x1118a6d50>, <sqlite3.Row object at 0x1118a6d70>, <sqlite3.Row object at 0x1118a6d90>, <sqlite3.Row object at 0x1118a6db0>, <sqlite3.Row object at 0x1118a6dd0>, <sqlite3.Row object at 0x1118a6df0>, <sqlite3.Row object at 0x1118a6e10>, <sqlite3.Row object at 0x1118a6e30>, <sqlite3.Row object at 0x1118a6e50>, <sqlite3.Row object at 0x1118a6e70>, <sqlite3.Row object at 0x1118a6e90>, <sqlite3.Row object at 0x1118a6eb0>, <sqlite3.Row object at 0x1118a6ed0>, <sqlite3.Row object at 0x1118a6ef0>, <sqlite3.Row object at 0x1118a6f10>, <sqlite3.Row object at 0x1118a6f30>, <sqlite3.Row object at 0x1118a6f50>, <sqlite3.Row object at 0x1118a6f70>, <sqlite3.Row object at 0x1118a6f90>, <sqlite3.Row object at 0x1118a6fb0>, <sqlite3.Row object at 0x1118a6fd0>, <sqlite3.Row object at 0x1118a7030>, <sqlite3.Row object at 0x1118a7050>, <sqlite3.Row object at 0x1118a7070>, <sqlite3.Row object at 0x1118a7090>, <sqlite3.Row object at 0x1118a70b0>]
2025-06-17 14:57:19,171 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:57:19,172 - __main__ - INFO - Final Assistant Response (NL): Â¡Por supuesto! AquÃ­ tienes una explicaciÃ³n sencilla de los tipos de transacciones mÃ¡s comunes:

*   **Received from:** Dinero que recibiste de alguien.
*   **POS Purchase (Compra POS):** Pago que hiciste con tu tarjeta de dÃ©bito en una tienda.
*   **Service Charge (Cargo por Servicio):** Un pequeÃ±o cobro del banco por usar ciertos servicios.
*   **Mobile Banking Transfer (Transferencia Bancaria MÃ³vil):** EnvÃ­o de dinero a travÃ©s de la aplicaciÃ³n del banco.
*   **Check Deposit (DepÃ³sito de Cheque):** DepÃ³sito de un cheque en tu cuenta.
*   **ATM Withdrawal (Retiro de Cajero AutomÃ¡tico):** Retiro de efectivo de un cajero automÃ¡tico.
*   **Fund Transfer (Transferencia de Fondos):** EnvÃ­o de dinero a otra cuenta, usualmente a travÃ©s de una transferencia bancaria.
*   **Bills Payment (Pago de Facturas):** Pago de facturas (como agua, luz, telÃ©fono) directamente desde tu cuenta.
*   **Interest Credit (CrÃ©dito de Intereses):** Dinero que el banco te paga por tener fondos en tu cuenta.
*   **Deposit: Salary (DepÃ³sito: Salario):** Dinero que recibes de tu empleador como salario.

Espero que esto aclare las cosas. Â¿Hay alguna transacciÃ³n en particular sobre la que quieras saber mÃ¡s?
2025-06-17 14:58:19,532 - __main__ - INFO - User Query (es): necesito ayuda contigo
2025-06-17 14:58:20,829 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:58:20,829 - __main__ - INFO - Generated SQL Query: SELECT 'Â¡Estoy aquÃ­ para ayudarle! Â¿QuÃ© necesita? ' AS response;
2025-06-17 14:58:20,831 - __main__ - INFO - Database connection established.
2025-06-17 14:58:20,832 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1118589f0>]
2025-06-17 14:58:22,056 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:58:22,057 - __main__ - INFO - Final Assistant Response (NL): Â¡Estoy aquÃ­ para ayudarle! Â¿QuÃ© necesita? 
2025-06-17 14:58:50,185 - __main__ - INFO - User Query (es): umm, necesito numeros de transacciones que hague en cada sucursales
2025-06-17 14:58:52,060 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:58:52,061 - __main__ - INFO - Generated SQL Query: SELECT "Branch / Source", COUNT(*) AS transaction_count FROM bank_transactions GROUP BY "Branch / Source" ORDER BY transaction_count DESC;
2025-06-17 14:58:52,062 - __main__ - INFO - Database connection established.
2025-06-17 14:58:52,064 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x111858810>, <sqlite3.Row object at 0x111858910>, <sqlite3.Row object at 0x111858850>, <sqlite3.Row object at 0x111858890>, <sqlite3.Row object at 0x111858210>, <sqlite3.Row object at 0x1118589d0>]
2025-06-17 14:58:53,825 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:58:53,826 - __main__ - INFO - Final Assistant Response (NL): Â¡Por supuesto! AquÃ­ estÃ¡ el nÃºmero de transacciones que ha realizado en cada sucursal, ordenado de mayor a menor:

*   BDO Makati: 180 transacciones
*   BDO Online: 173 transacciones
*   BDO Cebu: 172 transacciones
*   BDO QC: 165 transacciones
*   BDO Taguig: 163 transacciones
*   BDO Davao: 147 transacciones

Â¿Le gustarÃ­a ver los detalles de alguna sucursal en particular?
2025-06-17 14:59:48,181 - __main__ - INFO - User Query (es): y si las totales y promedios gastos
2025-06-17 14:59:49,924 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:59:49,925 - __main__ - INFO - Generated SQL Query: SELECT 
    SUM(COALESCE(Withdrawals, 0)) AS Total_Gastos,
    AVG(COALESCE(Withdrawals, 0)) AS Promedio_Gastos
FROM bank_transactions;
2025-06-17 14:59:49,928 - __main__ - INFO - Database connection established.
2025-06-17 14:59:49,932 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x111858890>]
2025-06-17 14:59:51,870 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 14:59:51,870 - __main__ - INFO - Final Assistant Response (NL): Â¡Por supuesto! Sus gastos totales suman â‚±2,600,462.63, con un gasto promedio de â‚±2,600.46 por transacciÃ³n. Â¿Desea que desglosemos esta informaciÃ³n aÃºn mÃ¡s?
2025-06-17 14:59:59,081 - __main__ - INFO - User Query (es): y si las totales y promedios gastos cada sucursales
2025-06-17 15:00:02,235 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 15:00:02,236 - __main__ - INFO - Generated SQL Query: SELECT 
    "Branch / Source",
    SUM(COALESCE(Withdrawals, 0)) AS total_gastos,
    AVG(COALESCE(Withdrawals, 0)) AS promedio_gastos
FROM bank_transactions
WHERE Withdrawals IS NOT NULL
GROUP BY "Branch / Source"
ORDER BY total_gastos DESC;
2025-06-17 15:00:02,237 - __main__ - INFO - Database connection established.
2025-06-17 15:00:02,240 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x111858830>, <sqlite3.Row object at 0x111858270>, <sqlite3.Row object at 0x1118587b0>, <sqlite3.Row object at 0x111858990>, <sqlite3.Row object at 0x111858930>, <sqlite3.Row object at 0x1118589d0>]
2025-06-17 15:00:05,280 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-17 15:00:05,280 - __main__ - INFO - Final Assistant Response (NL): Â¡Claro que sÃ­! AquÃ­ estÃ¡n los gastos totales y promedios por sucursal, ordenados de mayor a menor en gastos totales:

*   **BDO Cebu:** Total: â‚±504,964.40, Promedio: â‚±4,675.60
*   **BDO QC:** Total: â‚±445,407.39, Promedio: â‚±4,894.59
*   **BDO Makati:** Total: â‚±444,945.29, Promedio: â‚±4,197.60
*   **BDO Taguig:** Total: â‚±431,460.91, Promedio: â‚±4,402.66
*   **BDO Online:** Total: â‚±393,654.21, Promedio: â‚±4,100.56
*   **BDO Davao:** Total: â‚±380,030.43, Promedio: â‚±3,958.65

Â¿Le gustarÃ­a explorar alguna de estas sucursales con mÃ¡s detalle?
2025-06-18 13:39:19,175 - __main__ - INFO - Flask Application started.
2025-06-18 13:39:19,207 - __main__ - INFO - Database schema retrieved and cached (newly).
2025-06-18 13:39:19,256 - __main__ - INFO - Philippine holidays fetched and cached (newly).
2025-06-18 13:39:19,776 - __main__ - INFO - Flask Application started.
2025-06-18 13:39:19,786 - __main__ - INFO - Database schema retrieved and cached (newly).
2025-06-18 13:39:19,816 - __main__ - INFO - Philippine holidays fetched and cached (newly).
2025-06-18 13:39:24,771 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-18 13:39:27,289 - __main__ - INFO - User Query (es): hola
2025-06-18 13:39:29,784 - __main__ - ERROR - Error decoding JSON from Gemini: Expecting property name enclosed in double quotes: line 1 column 2 (char 1). Raw content: {{
  "sql": "SELECT 'Hola, como puedo ayudarte hoy?'",
  "natural_language_response": "SQL generated, awaiting execution."
}}
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/sepapp.py", line 337, in get_gemini_json_response
    response_dict = json.loads(json_str)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 353, in raw_decode
    obj, end = self.scan_once(s, idx)
json.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 1 column 2 (char 1)
2025-06-18 13:39:29,789 - __main__ - ERROR - Gemini failed at SQL generation step for user query: hola. Error: Error decoding JSON from Gemini: Expecting property name enclosed in double quotes: line 1 column 2 (char 1). Raw: {{
  "sql": "SELECT 'Hola, como puedo ayudarte hoy?'",
  "natural_language_response": "SQL generated, awaiting execution."
}}
2025-06-18 13:41:53,635 - __main__ - INFO - Flask Application started.
2025-06-18 13:41:53,651 - __main__ - INFO - Database schema retrieved and cached (newly).
2025-06-18 13:41:53,694 - __main__ - INFO - Philippine holidays fetched and cached (newly).
2025-06-18 13:41:54,278 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-18 13:41:56,210 - __main__ - INFO - User Query (es): hola
2025-06-18 13:41:58,697 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-18 13:41:58,698 - __main__ - INFO - Query classified as GREETING. Responding directly: Â¡Hola! Â¿En quÃ© puedo ayudarte hoy con tus transacciones bancarias?
2025-06-18 13:42:26,043 - __main__ - INFO - User Query (es): umm, estoy preocupada con mis transacciones en enero, no recuerdo algunas cosa
2025-06-18 13:42:27,056 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-18 13:42:27,057 - __main__ - INFO - Query classified as BANKING_QUERY. Proceeding to SQL generation.
2025-06-18 13:42:28,279 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-18 13:42:28,279 - __main__ - INFO - Generated SQL Query: SELECT * FROM transactions WHERE STRFTIME('%Y', "Book date") = '2025' AND STRFTIME('%m', "Book date") = '01';
2025-06-18 13:42:28,284 - __main__ - INFO - SQL Query Executed Successfully. Results count: 0
2025-06-18 13:42:30,127 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-18 13:42:30,127 - __main__ - INFO - Final Assistant Response (NL): Â¡Entiendo tu preocupaciÃ³n! Veo que estÃ¡s preocupada por tus transacciones de enero. Actualmente, no tengo informaciÃ³n especÃ­fica sobre esas transacciones para mostrarte. Parece que no hay resultados de la consulta disponibles. Â¿PodrÃ­as especificar un poco mÃ¡s quÃ© tipo de informaciÃ³n estÃ¡s buscando sobre tus transacciones de enero? Por ejemplo, Â¿hay alguna transacciÃ³n en particular que te preocupe, o estÃ¡s buscando un resumen general de tus gastos e ingresos de ese mes? Â¡Con mÃ¡s detalles, puedo ayudarte mejor a encontrar la informaciÃ³n que necesitas!
2025-06-18 13:42:43,958 - __main__ - INFO - User Query (en): hi
2025-06-18 13:42:44,967 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-18 13:42:44,968 - __main__ - INFO - Query classified as GREETING. Responding directly: Hi! How can I help you with your banking needs today?
2025-06-18 13:42:54,305 - __main__ - INFO - User Query (en): can you tell me my latest transactions
2025-06-18 13:42:55,311 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-18 13:42:55,311 - __main__ - INFO - Query classified as BANKING_QUERY. Proceeding to SQL generation.
2025-06-18 13:42:56,849 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-18 13:42:56,850 - __main__ - INFO - Generated SQL Query: SELECT * FROM transactions ORDER BY "Book date" DESC LIMIT 10;
2025-06-18 13:42:56,854 - __main__ - INFO - SQL Query Executed Successfully. Results count: 10
2025-06-18 13:42:59,323 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-18 13:42:59,324 - __main__ - INFO - Final Assistant Response (NL): Okay, here are your latest transactions from June 13, 2025. It looks like a busy day! 

*   **Credits (Deposits):**
    *   You received several deposits from other banks, totaling PHP 9,195.60. That's awesome!
    *   You also received transfers from BDO accounts, totaling PHP 2,620.80.
*   **Debits (Withdrawals/Payments):**
    *   Several small debit transactions at "NATIONAL B POS" totaling PHP 694.37. These might be point-of-sale (POS) purchases at various merchants.
    *   A small purchase at "SMART APP MAKATI ATP" for PHP 39.45. This could be a payment made through the SMART mobile app at a merchant in Makati.
    *   You sent PHP 860.00 via InstaPay to GXI ****FIRR.  Perhaps a payment to a friend or family member?

Let me know if that looks off!  Do you want help reviewing any specific transaction or seeing a summary of your spending habits?
2025-06-18 13:43:31,477 - __main__ - INFO - User Query (en): where is my most expensive transaction
2025-06-18 13:43:32,786 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-18 13:43:32,786 - __main__ - INFO - Query classified as BANKING_QUERY. Proceeding to SQL generation.
2025-06-18 13:43:34,018 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-18 13:43:34,018 - __main__ - INFO - Generated SQL Query: SELECT * FROM transactions ORDER BY Amount DESC LIMIT 1;
2025-06-18 13:43:34,022 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1
2025-06-18 13:43:35,869 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-18 13:43:35,869 - __main__ - INFO - Final Assistant Response (NL): Okay, I found your most expensive transaction! On May 29, 2025, you had a debit (withdrawal) of PHP 5,959.10. The transaction is listed as "W/D FR SAV MNL_GTZON SAMPALOC, M ML". This looks like a withdrawal from your savings account at an ATM located in GTZON Sampaloc, Manila. Does that sound right? Sometimes, ATM locations can be a bit cryptic!

Want help reviewing this! Did you make that withdrawal, or should we investigate further?
2025-06-18 13:43:52,661 - __main__ - INFO - User Query (en): how about in transportation?
2025-06-18 13:43:53,706 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-18 13:43:53,706 - __main__ - INFO - Query classified as BANKING_QUERY. Proceeding to SQL generation.
2025-06-18 13:43:55,520 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-18 13:43:55,520 - __main__ - INFO - Generated SQL Query: SELECT * FROM transactions WHERE LOWER("Transaction Details") LIKE '%angkas%' OR LOWER("Transaction Details") LIKE '%moveit%' OR LOWER("Transaction Details") LIKE '%grab%' OR LOWER("Transaction Details") LIKE '%taxi%' OR LOWER("Transaction Details") LIKE '%jeepney%' OR LOWER("Transaction Details") LIKE '%bus%' OR LOWER("Transaction Details") LIKE '%mrt%' OR LOWER("Transaction Details") LIKE '%lrt%' OR LOWER("Transaction Details") LIKE '%fare%' OR LOWER("Transaction Details") LIKE '%transport%' ORDER BY Amount DESC LIMIT 1;
2025-06-18 13:43:55,524 - __main__ - INFO - SQL Query Executed Successfully. Results count: 0
2025-06-18 13:43:57,363 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-18 13:43:57,364 - __main__ - INFO - Final Assistant Response (NL): Okay, let's take a look at your transportation expenses! Hmm, it seems like I don't have any specific transportation-related transactions available in the details I have right now. I can't see any transactions labelled as 'Grab Ride', 'Angkas', 'Bus Fare' or anything similar.  Perhaps the merchants are listed under a different category, or you used cash for those trips? 

Is there a specific date range you'd like me to check again, or maybe a particular amount you're trying to recall? If you remember anything else about the transaction, it might help me find it!
2025-06-18 13:44:13,246 - __main__ - INFO - User Query (en): i think they are listed as other names
2025-06-18 13:44:14,258 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-18 13:44:14,258 - __main__ - INFO - Query classified as BANKING_QUERY. Proceeding to SQL generation.
2025-06-18 13:44:15,181 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-18 13:44:15,182 - __main__ - INFO - Generated SQL Query: SELECT * FROM transactions ORDER BY Amount DESC LIMIT 1;
2025-06-18 13:44:15,187 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1
2025-06-18 13:44:17,330 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-18 13:44:17,330 - __main__ - INFO - Final Assistant Response (NL): Ah, gotcha! It seems that large withdrawal from May 29th might actually *be* a transportation expense, even though it's labelled as "W/D FR SAV MNL_GTZON SAMPALOC, M ML" which I previously identified as an ATM withdrawal. Given what you're saying, and the amount (PHP 5,959.10), could it perhaps be related to paying for a car repair, or a large taxi/ride-sharing bill after a night out? Sometimes those kinds of expenses don't show up super clearly!

Does that ring any bells? If not, we can try to dig deeper! Let me know if that's not right!
2025-06-18 13:44:49,099 - __main__ - INFO - User Query (es): cuanto es mi gastos totales/promedios en Angkas y Move It (digame cada mercante)
2025-06-18 13:44:50,237 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-18 13:44:50,237 - __main__ - INFO - Query classified as BANKING_QUERY. Proceeding to SQL generation.
2025-06-18 13:44:52,078 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-18 13:44:52,078 - __main__ - INFO - Generated SQL Query: SELECT "Counter party name", SUM(CASE WHEN LOWER("Counter party name") LIKE '%angkas%' THEN Amount ELSE 0 END) AS TotalAngkas, AVG(CASE WHEN LOWER("Counter party name") LIKE '%angkas%' THEN Amount ELSE NULL END) AS AverageAngkas, SUM(CASE WHEN LOWER("Counter party name") LIKE '%move it%' THEN Amount ELSE 0 END) AS TotalMoveIt, AVG(CASE WHEN LOWER("Counter party name") LIKE '%move it%' THEN Amount ELSE NULL END) AS AverageMoveIt FROM transactions WHERE LOWER("Counter party name") LIKE '%angkas%' OR LOWER("Counter party name") LIKE '%move it%' GROUP BY "Counter party name";
2025-06-18 13:44:52,082 - __main__ - INFO - SQL Query Executed Successfully. Results count: 3
2025-06-18 13:44:55,428 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-18 13:44:55,429 - __main__ - INFO - Final Assistant Response (NL): Â¡Hola! AquÃ­ tienes el desglose de tus gastos totales y promedios en Angkas y Move It, segÃºn los datos que tengo:

*   **Angkas:**
    *   Gastos totales: PHP 8,375.41 (Transacciones registradas como "POS W/D SV ANGKAS MANILA ATP")
    *   Gasto promedio por transacciÃ³n: PHP 73.47

*   **Move It:**
    *   Gastos totales: PHP 21,468.01 (PHP 6,521.29 registrado como "C8 LCL LWRSET DR MOVE IT 0430" + PHP 14,946.72 registrado como "POS W/D SV MOVE IT MAKATI ATP")
    *   Gasto promedio por transacciÃ³n: PHP 108.69 (Para las transacciones como "C8 LCL LWRSET DR MOVE IT 0430") y PHP 83.04 (Para las transacciones como "POS W/D SV MOVE IT MAKATI ATP").

**Notas importantes:**

*   Parece que tus gastos en Angkas estÃ¡n registrados como retiros en cajeros automÃ¡ticos (ATP) en Manila, mientras que tus gastos en Move It estÃ¡n registrados de manera similar en Makati, o como "C8 LCL LWRSET DR MOVE IT 0430". Es posible que estas descripciones no sean del todo claras.
*   Recuerda que estos datos dependen de cÃ³mo se registren las transacciones en tu banco. A veces, las descripciones pueden ser un poco confusas.

Â¿Te parece que estos montos son correctos? Â¡AvÃ­same si hay algo que no cuadre o si necesitas que revise algo mÃ¡s!
2025-06-18 13:45:38,327 - __main__ - INFO - User Query (es): por que son transacciones etiquetadas como POS
2025-06-18 13:45:39,353 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-18 13:45:39,353 - __main__ - INFO - Query classified as BANKING_QUERY. Proceeding to SQL generation.
2025-06-18 13:45:40,384 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-18 13:45:40,384 - __main__ - INFO - Generated SQL Query: SELECT * FROM transactions WHERE LOWER("Transaction Details") LIKE '%pos%';
2025-06-18 13:45:40,388 - __main__ - INFO - SQL Query Executed Successfully. Results count: 0
2025-06-18 13:45:42,427 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-18 13:45:42,427 - __main__ - INFO - Final Assistant Response (NL): Â¡Hola! QuÃ© buena pregunta. La etiqueta "POS" en tus transacciones significa "Point of Sale" (Punto de Venta, en espaÃ±ol). BÃ¡sicamente, indica que la transacciÃ³n se realizÃ³ en un comercio cuando pagaste algo directamente con tu tarjeta de dÃ©bito o crÃ©dito. 

Puede ser cualquier tipo de comercio: desde una tienda de ropa en SM Megamall hasta un restaurante Jollibee, o incluso un supermercado Puregold. Â¡Es la forma mÃ¡s comÃºn de pagar hoy en dÃ­a!

Â¿Tienes alguna otra duda sobre alguna transacciÃ³n en particular etiquetada como POS que te preocupe? Â¡Estoy aquÃ­ para ayudarte!
2025-06-18 13:47:48,021 - __main__ - INFO - User Query (en): cuales son mercantes (excluyendo ATM y retiros) con gastos promedios mas altos?
2025-06-18 13:47:48,995 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-18 13:47:48,996 - __main__ - INFO - Query classified as BANKING_QUERY. Proceeding to SQL generation.
2025-06-18 13:47:50,145 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-18 13:47:50,145 - __main__ - INFO - Generated SQL Query: SELECT "Counter party name", AVG(Amount) AS AverageAmount FROM transactions WHERE LOWER("Transaction Details") NOT LIKE '%atm%' AND LOWER("Transaction Details") NOT LIKE '%cash withdrawal%' GROUP BY "Counter party name" ORDER BY AverageAmount DESC LIMIT 10;
2025-06-18 13:47:50,150 - __main__ - INFO - SQL Query Executed Successfully. Results count: 10
2025-06-18 13:47:54,210 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-18 13:47:54,212 - __main__ - INFO - Final Assistant Response (NL): Okay, here are the merchants (excluding ATMs and withdrawals) where you had the highest average spending. It looks like most of your higher average transactions are through BDOPay! Let's break it down:

*   **BDOPAY BN P2MQR-PAY2-83646535- P2MI:** Average of PHP 5,299.49. 
*   **BDOPAY BN P2MQR-PAY2-70692273- P2MI:** Average of PHP 4,494.82.
*   **BDOPAY BN P2MQR-PAY2-97018567- P2MI:** Average of PHP 4,038.73.
*   **BDOPAY BN P2MQR-PAY2-17485955- P2MI:** Average of PHP 3,986.00.
*   **BDOPAY BN P2MQR-PAY2-96777012- P2MI:** Average of PHP 3,798.28.
*   **BDOPAY BN P2MQR-PAY2-01980015- P2MI:** Average of PHP 3,598.50.
*   **BDOPAY BN P2MQR-PAY2-73027926- P2MI:** Average of PHP 3,081.72.
*   **BDOPAY BN P2MQR-PAY2-05127485- P2MI:** Average of PHP 2,885.45.
*   **BDOPAY BN P2MQR-PAY2-91056901- P2MI:** Average of PHP 2,779.67.

Since these are all tagged as "BDOPAY BN P2MQR", it seems you're frequently using BDO's QR payment system (P2MQR). These could be payments to various merchants that accept BDO QR codes, or online transactions. Unfortunately, the data doesn't tell us *exactly* which stores these are. 

Do any of these amounts or merchants look unfamiliar? If you have any suspicions or want to investigate a specific transaction further, let me know! Maybe we can cross-reference it with your receipts or spending habits. Just tell me which one you want to check. 
2025-06-18 13:48:21,576 - __main__ - INFO - User Query (en): What does thepayment mean?
2025-06-18 13:48:22,775 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-18 13:48:22,776 - __main__ - INFO - Query classified as BANKING_QUERY. Proceeding to SQL generation.
2025-06-18 13:48:24,321 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-18 13:48:24,322 - __main__ - INFO - Generated SQL Query: SELECT * FROM transactions WHERE LOWER("Transaction Details") LIKE '%payment%';
2025-06-18 13:48:24,324 - __main__ - INFO - SQL Query Executed Successfully. Results count: 0
2025-06-18 13:48:26,327 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-18 13:48:26,328 - __main__ - INFO - Final Assistant Response (NL): Hi! So, it looks like my systems are not picking up any specific transactions labeled as 'thepayment'. Hmmm, that's a bit odd! Are you perhaps referring to a specific transaction date or amount? Sometimes, transactions can be listed under slightly different descriptions by merchants or payment processors. 

Knowing a little more about what you're looking for could help me narrow it down! For example, do you remember where you might have made 'thepayment,' or approximately how much it was? Even a rough idea can help! Let me know!
2025-06-18 13:48:33,395 - __main__ - INFO - User Query (en): What does the payment mean?
2025-06-18 13:48:34,448 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-18 13:48:34,448 - __main__ - INFO - Query classified as BANKING_QUERY. Proceeding to SQL generation.
2025-06-18 13:48:35,600 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-18 13:48:35,600 - __main__ - INFO - Generated SQL Query: N/A
2025-06-18 13:48:35,601 - __main__ - ERROR - Database error during SQL execution for query 'N/A': near "N": syntax error
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/sepapp.py", line 544, in chat
    cursor.execute(sql_query)
sqlite3.OperationalError: near "N": syntax error
2025-06-18 13:48:59,575 - __main__ - INFO - User Query (en): what's the merchant (excl ATM and withdrawals) with highest average expenses
2025-06-18 13:49:00,564 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-18 13:49:00,565 - __main__ - INFO - Query classified as BANKING_QUERY. Proceeding to SQL generation.
2025-06-18 13:49:01,869 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-18 13:49:01,870 - __main__ - INFO - Generated SQL Query: SELECT "Counter party name", AVG(Amount) AS AverageExpense FROM transactions WHERE NOT LOWER("Transaction Details") LIKE '%atm%' AND NOT LOWER("Transaction Details") LIKE '%withdrawal%' AND NOT LOWER("Transaction Details") LIKE '%cashout%' GROUP BY "Counter party name" ORDER BY AverageExpense DESC LIMIT 1;
2025-06-18 13:49:01,874 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1
2025-06-18 13:49:03,941 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-18 13:49:03,941 - __main__ - INFO - Final Assistant Response (NL): Okay, based on the data (excluding ATM withdrawals), it looks like the merchant with your highest average expense is **BDOPAY BN P2MQR-PAY2-83646535- P2MI** with an average expense of PHP 5,299.49.

BDOPAY BN P2MQR usually indicates a payment made via BDO's PayQR service, which is a type of QR code payment. It's possible that this represents several smaller transactions lumped together. It could be for various online purchases, payments to merchants using QR codes, or even transfers to other individuals using BDO's payment platform.

Does that amount sound about right? Can you recall what kind of payment you may have done via QR code through the BDO app? Maybe online shopping? Let me know if that doesn't make sense, and we can investigate further!
2025-06-18 13:49:35,355 - __main__ - INFO - User Query (en): can you recall the method used in this payment? explain it to me in general terms.
2025-06-18 13:49:36,086 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-18 13:49:36,086 - __main__ - INFO - Query classified as BANKING_QUERY. Proceeding to SQL generation.
2025-06-18 13:49:37,423 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-18 13:49:37,423 - __main__ - INFO - Generated SQL Query: N/A
2025-06-18 13:49:37,424 - __main__ - ERROR - Database error during SQL execution for query 'N/A': near "N": syntax error
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/sepapp.py", line 544, in chat
    cursor.execute(sql_query)
sqlite3.OperationalError: near "N": syntax error
2025-06-18 13:49:41,979 - __main__ - INFO - User Query (en): can you recall the method used in this payment? explain it to me in general terms.
2025-06-18 13:49:42,874 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-18 13:49:42,875 - __main__ - INFO - Query classified as BANKING_QUERY. Proceeding to SQL generation.
2025-06-18 13:49:44,074 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-18 13:49:44,074 - __main__ - INFO - Generated SQL Query: SELECT DISTINCT "Credit/debit indicator" FROM transactions;
2025-06-18 13:49:44,076 - __main__ - INFO - SQL Query Executed Successfully. Results count: 2
2025-06-18 13:49:46,339 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-18 13:49:46,339 - __main__ - INFO - Final Assistant Response (NL): Okay, I see you're asking about the general payment methods used in your transactions, based on whether they were credits (deposits) or debits (withdrawals/payments). Let's break that down:

*   **Credit:** A "Credit" transaction means money was added *to* your account. This could be from a deposit, a transfer *into* your account, or a refund. Think of it as your account balance going *up*.
*   **Debit:** A "Debit" transaction means money was taken *from* your account. This usually happens when you make a purchase with your debit card at a store like Puregold, pay a bill (like Meralco), withdraw cash, or send money to someone else via online banking or an app like GCash. Essentially, your account balance goes *down*.

Is there a particular transaction you're curious about regarding the method used? Or were you just looking for a general explanation? I'm happy to dive deeper if you have a specific example in mind!
2025-06-18 13:50:37,597 - __main__ - INFO - User Query (en): so basically, credit is towards my account, and debit is going outside
2025-06-18 13:50:38,559 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-18 13:50:38,560 - __main__ - INFO - Query classified as BANKING_QUERY. Proceeding to SQL generation.
2025-06-18 13:50:39,755 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-18 13:50:39,755 - __main__ - INFO - Generated SQL Query: SELECT "Credit/debit indicator", COUNT(*) FROM transactions GROUP BY "Credit/debit indicator";
2025-06-18 13:50:39,758 - __main__ - INFO - SQL Query Executed Successfully. Results count: 2
2025-06-18 13:50:41,627 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-18 13:50:41,628 - __main__ - INFO - Final Assistant Response (NL): Okay, based on your transaction history, here's a breakdown of your credits and debits:

*   **Credits:** You have 324 transactions marked as 'Credit', which means money coming *into* your account. Awesome!
*   **Debits:** You have 876 transactions marked as 'Debit', meaning money going *out* of your account. 

So, you have significantly more outgoing transactions than incoming ones. Do you want to explore your debits to see where your money is going? Maybe break down your spending by category or merchant?
2025-06-18 13:51:01,021 - __main__ - INFO - User Query (en): woah, what now has the highest credit
2025-06-18 13:51:02,206 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-18 13:51:02,206 - __main__ - INFO - Query classified as OFF_TOPIC. Responding directly: I can help you with your banking questions.  Would you like to know your balance or recent transactions?
2025-06-18 13:51:07,186 - __main__ - INFO - User Query (en): woah, what now has the highest credit
2025-06-18 13:51:08,352 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-18 13:51:08,352 - __main__ - INFO - Query classified as OFF_TOPIC. Responding directly: I'm here to assist with your banking needs. Do you have any questions about your account or transactions?
2025-06-18 13:51:19,846 - __main__ - INFO - User Query (en): woah, what transaction has the highest credit/received
2025-06-18 13:51:20,616 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-18 13:51:20,617 - __main__ - INFO - Query classified as BANKING_QUERY. Proceeding to SQL generation.
2025-06-18 13:51:22,175 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-18 13:51:22,175 - __main__ - INFO - Generated SQL Query: SELECT * FROM transactions WHERE "Credit/debit indicator" = 'Credit' ORDER BY Amount DESC LIMIT 1;
2025-06-18 13:51:22,181 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1
2025-06-18 13:51:23,591 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-18 13:51:23,592 - __main__ - INFO - Final Assistant Response (NL): Okay, the transaction with the highest credit (amount received) was on May 28, 2025! You received PHP 5,937.10 from 'Received from Other Bank'. Nice! Do you recognize that deposit?
2025-06-18 13:57:29,924 - __main__ - INFO - Flask Application started.
2025-06-18 13:57:29,939 - __main__ - INFO - Database schema retrieved and cached (newly).
2025-06-18 13:57:29,984 - __main__ - INFO - Philippine holidays fetched and cached (newly).
2025-06-19 13:14:36,746 - __main__ - INFO - Flask Application started.
2025-06-19 13:14:36,772 - __main__ - INFO - Database connection established.
2025-06-19 13:14:36,772 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 13:14:36,820 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 13:14:37,088 - __main__ - INFO - Flask Application started.
2025-06-19 13:14:37,098 - __main__ - INFO - Database connection established.
2025-06-19 13:14:37,098 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 13:14:37,128 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 13:14:42,377 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-19 13:14:44,973 - __main__ - INFO - User Query (en): hi
2025-06-19 13:14:47,793 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:14:47,793 - __main__ - INFO - Generated SQL Query: SELECT strftime('%Y-%m-%d %H:%M:%S', Date) AS FormattedDate, "Transaction Details", "Branch / Source", Withdrawals, Deposits, Balance FROM bank_transactions ORDER BY Date ASC;
2025-06-19 13:14:47,795 - __main__ - INFO - Database connection established.
2025-06-19 13:14:47,803 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10955f690>, <sqlite3.Row object at 0x10955f9f0>, <sqlite3.Row object at 0x10955fe90>, <sqlite3.Row object at 0x10955fd50>, <sqlite3.Row object at 0x10955fcd0>, <sqlite3.Row object at 0x10955fc70>, <sqlite3.Row object at 0x10955fcb0>, <sqlite3.Row object at 0x10955ff70>, <sqlite3.Row object at 0x10955ffd0>, <sqlite3.Row object at 0x109619070>, <sqlite3.Row object at 0x1096190d0>, <sqlite3.Row object at 0x109619130>, <sqlite3.Row object at 0x109619190>, <sqlite3.Row object at 0x1096191f0>, <sqlite3.Row object at 0x109619250>, <sqlite3.Row object at 0x1096192b0>, <sqlite3.Row object at 0x109619310>, <sqlite3.Row object at 0x109619370>, <sqlite3.Row object at 0x1096193d0>, <sqlite3.Row object at 0x109619430>, <sqlite3.Row object at 0x109619490>, <sqlite3.Row object at 0x1096194f0>, <sqlite3.Row object at 0x109619550>, <sqlite3.Row object at 0x1096195b0>, <sqlite3.Row object at 0x109619610>, <sqlite3.Row object at 0x109619670>, <sqlite3.Row object at 0x1096196d0>, <sqlite3.Row object at 0x109619730>, <sqlite3.Row object at 0x109619790>, <sqlite3.Row object at 0x1096197f0>, <sqlite3.Row object at 0x109619850>, <sqlite3.Row object at 0x1096198b0>, <sqlite3.Row object at 0x109619910>, <sqlite3.Row object at 0x109619970>, <sqlite3.Row object at 0x1096199d0>, <sqlite3.Row object at 0x109619a30>, <sqlite3.Row object at 0x109619a90>, <sqlite3.Row object at 0x109619af0>, <sqlite3.Row object at 0x109619b50>, <sqlite3.Row object at 0x109619bb0>, <sqlite3.Row object at 0x109619c10>, <sqlite3.Row object at 0x109619c70>, <sqlite3.Row object at 0x109619cd0>, <sqlite3.Row object at 0x109619d30>, <sqlite3.Row object at 0x109619d90>, <sqlite3.Row object at 0x109619df0>, <sqlite3.Row object at 0x109619e50>, <sqlite3.Row object at 0x109619eb0>, <sqlite3.Row object at 0x109619f10>, <sqlite3.Row object at 0x109619f70>, <sqlite3.Row object at 0x109619fd0>, <sqlite3.Row object at 0x10961f070>, <sqlite3.Row object at 0x10961f0d0>, <sqlite3.Row object at 0x10961f130>, <sqlite3.Row object at 0x10961f190>, <sqlite3.Row object at 0x10961f1f0>, <sqlite3.Row object at 0x10961f250>, <sqlite3.Row object at 0x10961f2b0>, <sqlite3.Row object at 0x10961f310>, <sqlite3.Row object at 0x10961f370>, <sqlite3.Row object at 0x10961f3d0>, <sqlite3.Row object at 0x10961f430>, <sqlite3.Row object at 0x10961f490>, <sqlite3.Row object at 0x10961f4f0>, <sqlite3.Row object at 0x10961f550>, <sqlite3.Row object at 0x10961f5b0>, <sqlite3.Row object at 0x10961f610>, <sqlite3.Row object at 0x10961f670>, <sqlite3.Row object at 0x10961f6d0>, <sqlite3.Row object at 0x10961f730>, <sqlite3.Row object at 0x10961f790>, <sqlite3.Row object at 0x10961f7f0>, <sqlite3.Row object at 0x10961f850>, <sqlite3.Row object at 0x10961f8b0>, <sqlite3.Row object at 0x10961f910>, <sqlite3.Row object at 0x10961f970>, <sqlite3.Row object at 0x10961f9d0>, <sqlite3.Row object at 0x10961fa30>, <sqlite3.Row object at 0x10961fa90>, <sqlite3.Row object at 0x10961faf0>, <sqlite3.Row object at 0x10961fb50>, <sqlite3.Row object at 0x10961fbb0>, <sqlite3.Row object at 0x10961fc10>, <sqlite3.Row object at 0x10961fc70>, <sqlite3.Row object at 0x10961fcd0>, <sqlite3.Row object at 0x10961fd30>, <sqlite3.Row object at 0x10961fd90>, <sqlite3.Row object at 0x10961fdf0>, <sqlite3.Row object at 0x10961fe50>, <sqlite3.Row object at 0x10961feb0>, <sqlite3.Row object at 0x10961ff10>, <sqlite3.Row object at 0x10961ff70>, <sqlite3.Row object at 0x10961ffd0>, <sqlite3.Row object at 0x109622070>, <sqlite3.Row object at 0x1096220d0>, <sqlite3.Row object at 0x109622130>, <sqlite3.Row object at 0x109622190>, <sqlite3.Row object at 0x1096221f0>, <sqlite3.Row object at 0x109622250>, <sqlite3.Row object at 0x1096222b0>, <sqlite3.Row object at 0x109622310>, <sqlite3.Row object at 0x109622370>, <sqlite3.Row object at 0x1096223d0>, <sqlite3.Row object at 0x109622430>, <sqlite3.Row object at 0x109622490>, <sqlite3.Row object at 0x1096224f0>, <sqlite3.Row object at 0x109622550>, <sqlite3.Row object at 0x1096225b0>, <sqlite3.Row object at 0x109622610>, <sqlite3.Row object at 0x109622670>, <sqlite3.Row object at 0x1096226d0>, <sqlite3.Row object at 0x109622730>, <sqlite3.Row object at 0x109622790>, <sqlite3.Row object at 0x1096227f0>, <sqlite3.Row object at 0x109622850>, <sqlite3.Row object at 0x1096228b0>, <sqlite3.Row object at 0x109622910>, <sqlite3.Row object at 0x109622970>, <sqlite3.Row object at 0x1096229d0>, <sqlite3.Row object at 0x109622a30>, <sqlite3.Row object at 0x109622a90>, <sqlite3.Row object at 0x109622af0>, <sqlite3.Row object at 0x109622b50>, <sqlite3.Row object at 0x109622bb0>, <sqlite3.Row object at 0x109622c10>, <sqlite3.Row object at 0x109622c70>, <sqlite3.Row object at 0x109622cd0>, <sqlite3.Row object at 0x109622d30>, <sqlite3.Row object at 0x109622d90>, <sqlite3.Row object at 0x109622df0>, <sqlite3.Row object at 0x109622e50>, <sqlite3.Row object at 0x109622eb0>, <sqlite3.Row object at 0x109622f10>, <sqlite3.Row object at 0x109622f70>, <sqlite3.Row object at 0x109622fd0>, <sqlite3.Row object at 0x109626070>, <sqlite3.Row object at 0x1096260d0>, <sqlite3.Row object at 0x109626130>, <sqlite3.Row object at 0x109626190>, <sqlite3.Row object at 0x1096261f0>, <sqlite3.Row object at 0x109626250>, <sqlite3.Row object at 0x1096262b0>, <sqlite3.Row object at 0x109626310>, <sqlite3.Row object at 0x109626370>, <sqlite3.Row object at 0x1096263d0>, <sqlite3.Row object at 0x109626430>, <sqlite3.Row object at 0x109626490>, <sqlite3.Row object at 0x1096264f0>, <sqlite3.Row object at 0x109626550>, <sqlite3.Row object at 0x1096265b0>, <sqlite3.Row object at 0x109626610>, <sqlite3.Row object at 0x109626670>, <sqlite3.Row object at 0x1096266d0>, <sqlite3.Row object at 0x109626730>, <sqlite3.Row object at 0x109626790>, <sqlite3.Row object at 0x1096267f0>, <sqlite3.Row object at 0x109626850>, <sqlite3.Row object at 0x1096268b0>, <sqlite3.Row object at 0x109626910>, <sqlite3.Row object at 0x109626970>, <sqlite3.Row object at 0x1096269d0>, <sqlite3.Row object at 0x109626a30>, <sqlite3.Row object at 0x109626a90>, <sqlite3.Row object at 0x109626af0>, <sqlite3.Row object at 0x109626b50>, <sqlite3.Row object at 0x109626bb0>, <sqlite3.Row object at 0x109626c10>, <sqlite3.Row object at 0x109626c70>, <sqlite3.Row object at 0x109626cd0>, <sqlite3.Row object at 0x109626d30>, <sqlite3.Row object at 0x109626d90>, <sqlite3.Row object at 0x109626df0>, <sqlite3.Row object at 0x109626e50>, <sqlite3.Row object at 0x109626eb0>, <sqlite3.Row object at 0x109626f10>, <sqlite3.Row object at 0x109626f70>, <sqlite3.Row object at 0x109626fd0>, <sqlite3.Row object at 0x10962a070>, <sqlite3.Row object at 0x10962a0d0>, <sqlite3.Row object at 0x10962a130>, <sqlite3.Row object at 0x10962a190>, <sqlite3.Row object at 0x10962a1f0>, <sqlite3.Row object at 0x10962a250>, <sqlite3.Row object at 0x10962a2b0>, <sqlite3.Row object at 0x10962a310>, <sqlite3.Row object at 0x10962a370>, <sqlite3.Row object at 0x10962a3d0>, <sqlite3.Row object at 0x10962a430>, <sqlite3.Row object at 0x10962a490>, <sqlite3.Row object at 0x10962a4f0>, <sqlite3.Row object at 0x10962a550>, <sqlite3.Row object at 0x10962a5b0>, <sqlite3.Row object at 0x10962a610>, <sqlite3.Row object at 0x10962a670>, <sqlite3.Row object at 0x10962a6d0>, <sqlite3.Row object at 0x10962a730>, <sqlite3.Row object at 0x10962a790>, <sqlite3.Row object at 0x10962a7f0>, <sqlite3.Row object at 0x10962a850>, <sqlite3.Row object at 0x10962a8b0>, <sqlite3.Row object at 0x10962a910>, <sqlite3.Row object at 0x10962a970>, <sqlite3.Row object at 0x10962a9d0>, <sqlite3.Row object at 0x10962aa30>, <sqlite3.Row object at 0x10962aa90>, <sqlite3.Row object at 0x10962aaf0>, <sqlite3.Row object at 0x10962ab50>, <sqlite3.Row object at 0x10962abb0>, <sqlite3.Row object at 0x10962ac10>, <sqlite3.Row object at 0x10962ac70>, <sqlite3.Row object at 0x10962acd0>, <sqlite3.Row object at 0x10962ad30>, <sqlite3.Row object at 0x10962ad90>, <sqlite3.Row object at 0x10962adf0>, <sqlite3.Row object at 0x10962ae50>, <sqlite3.Row object at 0x10962aeb0>, <sqlite3.Row object at 0x10962af10>, <sqlite3.Row object at 0x10962af70>, <sqlite3.Row object at 0x10962afd0>, <sqlite3.Row object at 0x109630070>, <sqlite3.Row object at 0x1096300d0>, <sqlite3.Row object at 0x109630130>, <sqlite3.Row object at 0x109630190>, <sqlite3.Row object at 0x1096301f0>, <sqlite3.Row object at 0x109630250>, <sqlite3.Row object at 0x1096302b0>, <sqlite3.Row object at 0x109630310>, <sqlite3.Row object at 0x109630370>, <sqlite3.Row object at 0x1096303d0>, <sqlite3.Row object at 0x109630430>, <sqlite3.Row object at 0x109630490>, <sqlite3.Row object at 0x1096304f0>, <sqlite3.Row object at 0x109630550>, <sqlite3.Row object at 0x1096305b0>, <sqlite3.Row object at 0x109630610>, <sqlite3.Row object at 0x109630670>, <sqlite3.Row object at 0x1096306d0>, <sqlite3.Row object at 0x109630730>, <sqlite3.Row object at 0x109630790>, <sqlite3.Row object at 0x1096307f0>, <sqlite3.Row object at 0x109630850>, <sqlite3.Row object at 0x1096308b0>, <sqlite3.Row object at 0x109630910>, <sqlite3.Row object at 0x109630970>, <sqlite3.Row object at 0x1096309d0>, <sqlite3.Row object at 0x109630a30>, <sqlite3.Row object at 0x109630a90>, <sqlite3.Row object at 0x109630af0>, <sqlite3.Row object at 0x109630b50>, <sqlite3.Row object at 0x109630bb0>, <sqlite3.Row object at 0x109630c10>, <sqlite3.Row object at 0x109630c70>, <sqlite3.Row object at 0x109630cd0>, <sqlite3.Row object at 0x109630d30>, <sqlite3.Row object at 0x109630d90>, <sqlite3.Row object at 0x109630df0>, <sqlite3.Row object at 0x109630e50>, <sqlite3.Row object at 0x109630eb0>, <sqlite3.Row object at 0x109630f10>, <sqlite3.Row object at 0x109630f70>, <sqlite3.Row object at 0x109630fd0>, <sqlite3.Row object at 0x109634070>, <sqlite3.Row object at 0x1096340d0>, <sqlite3.Row object at 0x109634130>, <sqlite3.Row object at 0x109634190>, <sqlite3.Row object at 0x1096341f0>, <sqlite3.Row object at 0x109634250>, <sqlite3.Row object at 0x1096342b0>, <sqlite3.Row object at 0x109634310>, <sqlite3.Row object at 0x109634370>, <sqlite3.Row object at 0x1096343d0>, <sqlite3.Row object at 0x109634430>, <sqlite3.Row object at 0x109634490>, <sqlite3.Row object at 0x1096344f0>, <sqlite3.Row object at 0x109634550>, <sqlite3.Row object at 0x1096345b0>, <sqlite3.Row object at 0x109634610>, <sqlite3.Row object at 0x109634670>, <sqlite3.Row object at 0x1096346d0>, <sqlite3.Row object at 0x109634730>, <sqlite3.Row object at 0x109634790>, <sqlite3.Row object at 0x1096347f0>, <sqlite3.Row object at 0x109634850>, <sqlite3.Row object at 0x1096348b0>, <sqlite3.Row object at 0x109634910>, <sqlite3.Row object at 0x109634970>, <sqlite3.Row object at 0x1096349d0>, <sqlite3.Row object at 0x109634a30>, <sqlite3.Row object at 0x109634a90>, <sqlite3.Row object at 0x109634af0>, <sqlite3.Row object at 0x109634b50>, <sqlite3.Row object at 0x109634bb0>, <sqlite3.Row object at 0x109634c10>, <sqlite3.Row object at 0x109634c70>, <sqlite3.Row object at 0x109634cd0>, <sqlite3.Row object at 0x109634d30>, <sqlite3.Row object at 0x109634d90>, <sqlite3.Row object at 0x109634df0>, <sqlite3.Row object at 0x109634e50>, <sqlite3.Row object at 0x109634eb0>, <sqlite3.Row object at 0x109634f10>, <sqlite3.Row object at 0x109634f70>, <sqlite3.Row object at 0x109634fd0>, <sqlite3.Row object at 0x109638070>, <sqlite3.Row object at 0x1096380d0>, <sqlite3.Row object at 0x109638130>, <sqlite3.Row object at 0x109638190>, <sqlite3.Row object at 0x1096381f0>, <sqlite3.Row object at 0x109638250>, <sqlite3.Row object at 0x1096382b0>, <sqlite3.Row object at 0x109638310>, <sqlite3.Row object at 0x109638370>, <sqlite3.Row object at 0x1096383d0>, <sqlite3.Row object at 0x109638430>, <sqlite3.Row object at 0x109638490>, <sqlite3.Row object at 0x1096384f0>, <sqlite3.Row object at 0x109638550>, <sqlite3.Row object at 0x1096385b0>, <sqlite3.Row object at 0x109638610>, <sqlite3.Row object at 0x109638670>, <sqlite3.Row object at 0x1096386d0>, <sqlite3.Row object at 0x109638730>, <sqlite3.Row object at 0x109638790>, <sqlite3.Row object at 0x1096387f0>, <sqlite3.Row object at 0x109638850>, <sqlite3.Row object at 0x1096388b0>, <sqlite3.Row object at 0x109638910>, <sqlite3.Row object at 0x109638970>, <sqlite3.Row object at 0x1096389d0>, <sqlite3.Row object at 0x109638a30>, <sqlite3.Row object at 0x109638a90>, <sqlite3.Row object at 0x109638af0>, <sqlite3.Row object at 0x109638b50>, <sqlite3.Row object at 0x109638bb0>, <sqlite3.Row object at 0x109638c10>, <sqlite3.Row object at 0x109638c70>, <sqlite3.Row object at 0x109638cd0>, <sqlite3.Row object at 0x109638d30>, <sqlite3.Row object at 0x109638d90>, <sqlite3.Row object at 0x109638df0>, <sqlite3.Row object at 0x109638e50>, <sqlite3.Row object at 0x109638eb0>, <sqlite3.Row object at 0x109638f10>, <sqlite3.Row object at 0x109638f70>, <sqlite3.Row object at 0x109638fd0>, <sqlite3.Row object at 0x10963c070>, <sqlite3.Row object at 0x10963c0d0>, <sqlite3.Row object at 0x10963c130>, <sqlite3.Row object at 0x10963c190>, <sqlite3.Row object at 0x10963c1f0>, <sqlite3.Row object at 0x10963c250>, <sqlite3.Row object at 0x10963c2b0>, <sqlite3.Row object at 0x10963c310>, <sqlite3.Row object at 0x10963c370>, <sqlite3.Row object at 0x10963c3d0>, <sqlite3.Row object at 0x10963c430>, <sqlite3.Row object at 0x10963c490>, <sqlite3.Row object at 0x10963c4f0>, <sqlite3.Row object at 0x10963c550>, <sqlite3.Row object at 0x10963c5b0>, <sqlite3.Row object at 0x10963c610>, <sqlite3.Row object at 0x10963c670>, <sqlite3.Row object at 0x10963c6d0>, <sqlite3.Row object at 0x10963c730>, <sqlite3.Row object at 0x10963c790>, <sqlite3.Row object at 0x10963c7f0>, <sqlite3.Row object at 0x10963c850>, <sqlite3.Row object at 0x10963c8b0>, <sqlite3.Row object at 0x10963c910>, <sqlite3.Row object at 0x10963c970>, <sqlite3.Row object at 0x10963c9d0>, <sqlite3.Row object at 0x10963ca30>, <sqlite3.Row object at 0x10963ca90>, <sqlite3.Row object at 0x10963caf0>, <sqlite3.Row object at 0x10963cb50>, <sqlite3.Row object at 0x10963cbb0>, <sqlite3.Row object at 0x10963cc10>, <sqlite3.Row object at 0x10963cc70>, <sqlite3.Row object at 0x10963ccd0>, <sqlite3.Row object at 0x10963cd30>, <sqlite3.Row object at 0x10963cd90>, <sqlite3.Row object at 0x10963cdf0>, <sqlite3.Row object at 0x10963ce50>, <sqlite3.Row object at 0x10963ceb0>, <sqlite3.Row object at 0x10963cf10>, <sqlite3.Row object at 0x10963cf70>, <sqlite3.Row object at 0x10963cfd0>, <sqlite3.Row object at 0x109641070>, <sqlite3.Row object at 0x1096410d0>, <sqlite3.Row object at 0x109641130>, <sqlite3.Row object at 0x109641190>, <sqlite3.Row object at 0x1096411f0>, <sqlite3.Row object at 0x109641250>, <sqlite3.Row object at 0x1096412b0>, <sqlite3.Row object at 0x109641310>, <sqlite3.Row object at 0x109641370>, <sqlite3.Row object at 0x1096413d0>, <sqlite3.Row object at 0x109641430>, <sqlite3.Row object at 0x109641490>, <sqlite3.Row object at 0x1096414f0>, <sqlite3.Row object at 0x109641550>, <sqlite3.Row object at 0x1096415b0>, <sqlite3.Row object at 0x109641610>, <sqlite3.Row object at 0x109641670>, <sqlite3.Row object at 0x1096416d0>, <sqlite3.Row object at 0x109641730>, <sqlite3.Row object at 0x109641790>, <sqlite3.Row object at 0x1096417f0>, <sqlite3.Row object at 0x109641850>, <sqlite3.Row object at 0x1096418b0>, <sqlite3.Row object at 0x109641910>, <sqlite3.Row object at 0x109641970>, <sqlite3.Row object at 0x1096419d0>, <sqlite3.Row object at 0x109641a30>, <sqlite3.Row object at 0x109641a90>, <sqlite3.Row object at 0x109641af0>, <sqlite3.Row object at 0x109641b50>, <sqlite3.Row object at 0x109641bb0>, <sqlite3.Row object at 0x109641c10>, <sqlite3.Row object at 0x109641c70>, <sqlite3.Row object at 0x109641cd0>, <sqlite3.Row object at 0x109641d30>, <sqlite3.Row object at 0x109641d90>, <sqlite3.Row object at 0x109641df0>, <sqlite3.Row object at 0x109641e50>, <sqlite3.Row object at 0x109641eb0>, <sqlite3.Row object at 0x109641f10>, <sqlite3.Row object at 0x109641f70>, <sqlite3.Row object at 0x109641fd0>, <sqlite3.Row object at 0x109645070>, <sqlite3.Row object at 0x1096450d0>, <sqlite3.Row object at 0x109645130>, <sqlite3.Row object at 0x109645190>, <sqlite3.Row object at 0x1096451f0>, <sqlite3.Row object at 0x109645250>, <sqlite3.Row object at 0x1096452b0>, <sqlite3.Row object at 0x109645310>, <sqlite3.Row object at 0x109645370>, <sqlite3.Row object at 0x1096453d0>, <sqlite3.Row object at 0x109645430>, <sqlite3.Row object at 0x109645490>, <sqlite3.Row object at 0x1096454f0>, <sqlite3.Row object at 0x109645550>, <sqlite3.Row object at 0x1096455b0>, <sqlite3.Row object at 0x109645610>, <sqlite3.Row object at 0x109645670>, <sqlite3.Row object at 0x1096456d0>, <sqlite3.Row object at 0x109645730>, <sqlite3.Row object at 0x109645790>, <sqlite3.Row object at 0x1096457f0>, <sqlite3.Row object at 0x109645850>, <sqlite3.Row object at 0x1096458b0>, <sqlite3.Row object at 0x109645910>, <sqlite3.Row object at 0x109645970>, <sqlite3.Row object at 0x1096459d0>, <sqlite3.Row object at 0x109645a30>, <sqlite3.Row object at 0x109645a90>, <sqlite3.Row object at 0x109645af0>, <sqlite3.Row object at 0x109645b50>, <sqlite3.Row object at 0x109645bb0>, <sqlite3.Row object at 0x109645c10>, <sqlite3.Row object at 0x109645c70>, <sqlite3.Row object at 0x109645cd0>, <sqlite3.Row object at 0x109645d30>, <sqlite3.Row object at 0x109645d90>, <sqlite3.Row object at 0x109645df0>, <sqlite3.Row object at 0x109645e50>, <sqlite3.Row object at 0x109645eb0>, <sqlite3.Row object at 0x109645f10>, <sqlite3.Row object at 0x109645f70>, <sqlite3.Row object at 0x109645fd0>, <sqlite3.Row object at 0x109649070>, <sqlite3.Row object at 0x1096490d0>, <sqlite3.Row object at 0x109649130>, <sqlite3.Row object at 0x109649190>, <sqlite3.Row object at 0x1096491f0>, <sqlite3.Row object at 0x109649250>, <sqlite3.Row object at 0x1096492b0>, <sqlite3.Row object at 0x109649310>, <sqlite3.Row object at 0x109649370>, <sqlite3.Row object at 0x1096493d0>, <sqlite3.Row object at 0x109649430>, <sqlite3.Row object at 0x109649490>, <sqlite3.Row object at 0x1096494f0>, <sqlite3.Row object at 0x109649550>, <sqlite3.Row object at 0x1096495b0>, <sqlite3.Row object at 0x109649610>, <sqlite3.Row object at 0x109649670>, <sqlite3.Row object at 0x1096496d0>, <sqlite3.Row object at 0x109649730>, <sqlite3.Row object at 0x109649790>, <sqlite3.Row object at 0x1096497f0>, <sqlite3.Row object at 0x109649850>, <sqlite3.Row object at 0x1096498b0>, <sqlite3.Row object at 0x109649910>, <sqlite3.Row object at 0x109649970>, <sqlite3.Row object at 0x1096499d0>, <sqlite3.Row object at 0x109649a30>, <sqlite3.Row object at 0x109649a90>, <sqlite3.Row object at 0x109649af0>, <sqlite3.Row object at 0x109649b50>, <sqlite3.Row object at 0x109649bb0>, <sqlite3.Row object at 0x109649c10>, <sqlite3.Row object at 0x109649c70>, <sqlite3.Row object at 0x109649cd0>, <sqlite3.Row object at 0x109649d30>, <sqlite3.Row object at 0x109649d90>, <sqlite3.Row object at 0x109649df0>, <sqlite3.Row object at 0x109649e50>, <sqlite3.Row object at 0x109649eb0>, <sqlite3.Row object at 0x109649f10>, <sqlite3.Row object at 0x109649f70>, <sqlite3.Row object at 0x109649fd0>, <sqlite3.Row object at 0x10964d070>, <sqlite3.Row object at 0x10964d0d0>, <sqlite3.Row object at 0x10964d130>, <sqlite3.Row object at 0x10964d190>, <sqlite3.Row object at 0x10964d1f0>, <sqlite3.Row object at 0x10964d250>, <sqlite3.Row object at 0x10964d2b0>, <sqlite3.Row object at 0x10964d310>, <sqlite3.Row object at 0x10964d370>, <sqlite3.Row object at 0x10964d3d0>, <sqlite3.Row object at 0x10964d430>, <sqlite3.Row object at 0x10964d490>, <sqlite3.Row object at 0x10964d4f0>, <sqlite3.Row object at 0x10964d550>, <sqlite3.Row object at 0x10964d5b0>, <sqlite3.Row object at 0x10964d610>, <sqlite3.Row object at 0x10964d670>, <sqlite3.Row object at 0x10964d6d0>, <sqlite3.Row object at 0x10964d730>, <sqlite3.Row object at 0x10964d790>, <sqlite3.Row object at 0x10964d7f0>, <sqlite3.Row object at 0x10964d850>, <sqlite3.Row object at 0x10964d8b0>, <sqlite3.Row object at 0x10964d910>, <sqlite3.Row object at 0x10964d970>, <sqlite3.Row object at 0x10964d9d0>, <sqlite3.Row object at 0x10964da30>, <sqlite3.Row object at 0x10964da90>, <sqlite3.Row object at 0x10964daf0>, <sqlite3.Row object at 0x10964db50>, <sqlite3.Row object at 0x10964dbb0>, <sqlite3.Row object at 0x10964dc10>, <sqlite3.Row object at 0x10964dc70>, <sqlite3.Row object at 0x10964dcd0>, <sqlite3.Row object at 0x10964dd30>, <sqlite3.Row object at 0x10964dd90>, <sqlite3.Row object at 0x10964ddf0>, <sqlite3.Row object at 0x10964de50>, <sqlite3.Row object at 0x10964deb0>, <sqlite3.Row object at 0x10964df10>, <sqlite3.Row object at 0x10964df70>, <sqlite3.Row object at 0x10964dfd0>, <sqlite3.Row object at 0x109652070>, <sqlite3.Row object at 0x1096520d0>, <sqlite3.Row object at 0x109652130>, <sqlite3.Row object at 0x109652190>, <sqlite3.Row object at 0x1096521f0>, <sqlite3.Row object at 0x109652250>, <sqlite3.Row object at 0x1096522b0>, <sqlite3.Row object at 0x109652310>, <sqlite3.Row object at 0x109652370>, <sqlite3.Row object at 0x1096523d0>, <sqlite3.Row object at 0x109652430>, <sqlite3.Row object at 0x109652490>, <sqlite3.Row object at 0x1096524f0>, <sqlite3.Row object at 0x109652550>, <sqlite3.Row object at 0x1096525b0>, <sqlite3.Row object at 0x109652610>, <sqlite3.Row object at 0x109652670>, <sqlite3.Row object at 0x1096526d0>, <sqlite3.Row object at 0x109652730>, <sqlite3.Row object at 0x109652790>, <sqlite3.Row object at 0x1096527f0>, <sqlite3.Row object at 0x109652850>, <sqlite3.Row object at 0x1096528b0>, <sqlite3.Row object at 0x109652910>, <sqlite3.Row object at 0x109652970>, <sqlite3.Row object at 0x1096529d0>, <sqlite3.Row object at 0x109652a30>, <sqlite3.Row object at 0x109652a90>, <sqlite3.Row object at 0x109652af0>, <sqlite3.Row object at 0x109652b50>, <sqlite3.Row object at 0x109652bb0>, <sqlite3.Row object at 0x109652c10>, <sqlite3.Row object at 0x109652c70>, <sqlite3.Row object at 0x109652cd0>, <sqlite3.Row object at 0x109652d30>, <sqlite3.Row object at 0x109652d90>, <sqlite3.Row object at 0x109652df0>, <sqlite3.Row object at 0x109652e50>, <sqlite3.Row object at 0x109652eb0>, <sqlite3.Row object at 0x109652f10>, <sqlite3.Row object at 0x109652f70>, <sqlite3.Row object at 0x109652fd0>, <sqlite3.Row object at 0x109655070>, <sqlite3.Row object at 0x1096550d0>, <sqlite3.Row object at 0x109655130>, <sqlite3.Row object at 0x109655190>, <sqlite3.Row object at 0x1096551f0>, <sqlite3.Row object at 0x109655250>, <sqlite3.Row object at 0x1096552b0>, <sqlite3.Row object at 0x109655310>, <sqlite3.Row object at 0x109655370>, <sqlite3.Row object at 0x1096553d0>, <sqlite3.Row object at 0x109655430>, <sqlite3.Row object at 0x109655490>, <sqlite3.Row object at 0x1096554f0>, <sqlite3.Row object at 0x109655550>, <sqlite3.Row object at 0x1096555b0>, <sqlite3.Row object at 0x109655610>, <sqlite3.Row object at 0x109655670>, <sqlite3.Row object at 0x1096556d0>, <sqlite3.Row object at 0x109655730>, <sqlite3.Row object at 0x109655790>, <sqlite3.Row object at 0x1096557f0>, <sqlite3.Row object at 0x109655850>, <sqlite3.Row object at 0x1096558b0>, <sqlite3.Row object at 0x109655910>, <sqlite3.Row object at 0x109655970>, <sqlite3.Row object at 0x1096559d0>, <sqlite3.Row object at 0x109655a30>, <sqlite3.Row object at 0x109655a90>, <sqlite3.Row object at 0x109655af0>, <sqlite3.Row object at 0x109655b50>, <sqlite3.Row object at 0x109655bb0>, <sqlite3.Row object at 0x109655c10>, <sqlite3.Row object at 0x109655c70>, <sqlite3.Row object at 0x109655cd0>, <sqlite3.Row object at 0x109655d30>, <sqlite3.Row object at 0x109655d90>, <sqlite3.Row object at 0x109655df0>, <sqlite3.Row object at 0x109655e50>, <sqlite3.Row object at 0x109655eb0>, <sqlite3.Row object at 0x109655f10>, <sqlite3.Row object at 0x109655f70>, <sqlite3.Row object at 0x109655fd0>, <sqlite3.Row object at 0x10967a070>, <sqlite3.Row object at 0x10967a0d0>, <sqlite3.Row object at 0x10967a130>, <sqlite3.Row object at 0x10967a190>, <sqlite3.Row object at 0x10967a1f0>, <sqlite3.Row object at 0x10967a250>, <sqlite3.Row object at 0x10967a2b0>, <sqlite3.Row object at 0x10967a310>, <sqlite3.Row object at 0x10967a370>, <sqlite3.Row object at 0x10967a3d0>, <sqlite3.Row object at 0x10967a430>, <sqlite3.Row object at 0x10967a490>, <sqlite3.Row object at 0x10967a4f0>, <sqlite3.Row object at 0x10967a550>, <sqlite3.Row object at 0x10967a5b0>, <sqlite3.Row object at 0x10967a610>, <sqlite3.Row object at 0x10967a670>, <sqlite3.Row object at 0x10967a6d0>, <sqlite3.Row object at 0x10967a730>, <sqlite3.Row object at 0x10967a790>, <sqlite3.Row object at 0x10967a7f0>, <sqlite3.Row object at 0x10967a850>, <sqlite3.Row object at 0x10967a8b0>, <sqlite3.Row object at 0x10967a910>, <sqlite3.Row object at 0x10967a970>, <sqlite3.Row object at 0x10967a9d0>, <sqlite3.Row object at 0x10967aa30>, <sqlite3.Row object at 0x10967aa90>, <sqlite3.Row object at 0x10967aaf0>, <sqlite3.Row object at 0x10967ab50>, <sqlite3.Row object at 0x10967abb0>, <sqlite3.Row object at 0x10967ac10>, <sqlite3.Row object at 0x10967ac70>, <sqlite3.Row object at 0x10967acd0>, <sqlite3.Row object at 0x10967ad30>, <sqlite3.Row object at 0x10967ad90>, <sqlite3.Row object at 0x10967adf0>, <sqlite3.Row object at 0x10967ae50>, <sqlite3.Row object at 0x10967aeb0>, <sqlite3.Row object at 0x10967af10>, <sqlite3.Row object at 0x10967af70>, <sqlite3.Row object at 0x10967afd0>, <sqlite3.Row object at 0x10967e070>, <sqlite3.Row object at 0x10967e0d0>, <sqlite3.Row object at 0x10967e130>, <sqlite3.Row object at 0x10967e190>, <sqlite3.Row object at 0x10967e1f0>, <sqlite3.Row object at 0x10967e250>, <sqlite3.Row object at 0x10967e2b0>, <sqlite3.Row object at 0x10967e310>, <sqlite3.Row object at 0x10967e370>, <sqlite3.Row object at 0x10967e3d0>, <sqlite3.Row object at 0x10967e430>, <sqlite3.Row object at 0x10967e490>, <sqlite3.Row object at 0x10967e4f0>, <sqlite3.Row object at 0x10967e550>, <sqlite3.Row object at 0x10967e5b0>, <sqlite3.Row object at 0x10967e610>, <sqlite3.Row object at 0x10967e670>, <sqlite3.Row object at 0x10967e6d0>, <sqlite3.Row object at 0x10967e730>, <sqlite3.Row object at 0x10967e790>, <sqlite3.Row object at 0x10967e7f0>, <sqlite3.Row object at 0x10967e850>, <sqlite3.Row object at 0x10967e8b0>, <sqlite3.Row object at 0x10967e910>, <sqlite3.Row object at 0x10967e970>, <sqlite3.Row object at 0x10967e9d0>, <sqlite3.Row object at 0x10967ea30>, <sqlite3.Row object at 0x10967ea90>, <sqlite3.Row object at 0x10967eaf0>, <sqlite3.Row object at 0x10967eb50>, <sqlite3.Row object at 0x10967ebb0>, <sqlite3.Row object at 0x10967ec10>, <sqlite3.Row object at 0x10967ec70>, <sqlite3.Row object at 0x10967ecd0>, <sqlite3.Row object at 0x10967ed30>, <sqlite3.Row object at 0x10967ed90>, <sqlite3.Row object at 0x10967edf0>, <sqlite3.Row object at 0x10967ee50>, <sqlite3.Row object at 0x10967eeb0>, <sqlite3.Row object at 0x10967ef10>, <sqlite3.Row object at 0x10967ef70>, <sqlite3.Row object at 0x10967efd0>, <sqlite3.Row object at 0x109682070>, <sqlite3.Row object at 0x1096820d0>, <sqlite3.Row object at 0x109682130>, <sqlite3.Row object at 0x109682190>, <sqlite3.Row object at 0x1096821f0>, <sqlite3.Row object at 0x109682250>, <sqlite3.Row object at 0x1096822b0>, <sqlite3.Row object at 0x109682310>, <sqlite3.Row object at 0x109682370>, <sqlite3.Row object at 0x1096823d0>, <sqlite3.Row object at 0x109682430>, <sqlite3.Row object at 0x109682490>, <sqlite3.Row object at 0x1096824f0>, <sqlite3.Row object at 0x109682550>, <sqlite3.Row object at 0x1096825b0>, <sqlite3.Row object at 0x109682610>, <sqlite3.Row object at 0x109682670>, <sqlite3.Row object at 0x1096826d0>, <sqlite3.Row object at 0x109682730>, <sqlite3.Row object at 0x109682790>, <sqlite3.Row object at 0x1096827f0>, <sqlite3.Row object at 0x109682850>, <sqlite3.Row object at 0x1096828b0>, <sqlite3.Row object at 0x109682910>, <sqlite3.Row object at 0x109682970>, <sqlite3.Row object at 0x1096829d0>, <sqlite3.Row object at 0x109682a30>, <sqlite3.Row object at 0x109682a90>, <sqlite3.Row object at 0x109682af0>, <sqlite3.Row object at 0x109682b50>, <sqlite3.Row object at 0x109682bb0>, <sqlite3.Row object at 0x109682c10>, <sqlite3.Row object at 0x109682c70>, <sqlite3.Row object at 0x109682cd0>, <sqlite3.Row object at 0x109682d30>, <sqlite3.Row object at 0x109682d90>, <sqlite3.Row object at 0x109682df0>, <sqlite3.Row object at 0x109682e50>, <sqlite3.Row object at 0x109682eb0>, <sqlite3.Row object at 0x109682f10>, <sqlite3.Row object at 0x109682f70>, <sqlite3.Row object at 0x109682fd0>, <sqlite3.Row object at 0x109686070>, <sqlite3.Row object at 0x1096860d0>, <sqlite3.Row object at 0x109686130>, <sqlite3.Row object at 0x109686190>, <sqlite3.Row object at 0x1096861f0>, <sqlite3.Row object at 0x109686250>, <sqlite3.Row object at 0x1096862b0>, <sqlite3.Row object at 0x109686310>, <sqlite3.Row object at 0x109686370>, <sqlite3.Row object at 0x1096863d0>, <sqlite3.Row object at 0x109686430>, <sqlite3.Row object at 0x109686490>, <sqlite3.Row object at 0x1096864f0>, <sqlite3.Row object at 0x109686550>, <sqlite3.Row object at 0x1096865b0>, <sqlite3.Row object at 0x109686610>, <sqlite3.Row object at 0x109686670>, <sqlite3.Row object at 0x1096866d0>, <sqlite3.Row object at 0x109686730>, <sqlite3.Row object at 0x109686790>, <sqlite3.Row object at 0x1096867f0>, <sqlite3.Row object at 0x109686850>, <sqlite3.Row object at 0x1096868b0>, <sqlite3.Row object at 0x109686910>, <sqlite3.Row object at 0x109686970>, <sqlite3.Row object at 0x1096869d0>, <sqlite3.Row object at 0x109686a30>, <sqlite3.Row object at 0x109686a90>, <sqlite3.Row object at 0x109686af0>, <sqlite3.Row object at 0x109686b50>, <sqlite3.Row object at 0x109686bb0>, <sqlite3.Row object at 0x109686c10>, <sqlite3.Row object at 0x109686c70>, <sqlite3.Row object at 0x109686cd0>, <sqlite3.Row object at 0x109686d30>, <sqlite3.Row object at 0x109686d90>, <sqlite3.Row object at 0x109686df0>, <sqlite3.Row object at 0x109686e50>, <sqlite3.Row object at 0x109686eb0>, <sqlite3.Row object at 0x109686f10>, <sqlite3.Row object at 0x109686f70>, <sqlite3.Row object at 0x109686fd0>, <sqlite3.Row object at 0x10968a070>, <sqlite3.Row object at 0x10968a0d0>, <sqlite3.Row object at 0x10968a130>, <sqlite3.Row object at 0x10968a190>, <sqlite3.Row object at 0x10968a1f0>, <sqlite3.Row object at 0x10968a250>, <sqlite3.Row object at 0x10968a2b0>, <sqlite3.Row object at 0x10968a310>, <sqlite3.Row object at 0x10968a370>, <sqlite3.Row object at 0x10968a3d0>, <sqlite3.Row object at 0x10968a430>, <sqlite3.Row object at 0x10968a490>, <sqlite3.Row object at 0x10968a4f0>, <sqlite3.Row object at 0x10968a550>, <sqlite3.Row object at 0x10968a5b0>, <sqlite3.Row object at 0x10968a610>, <sqlite3.Row object at 0x10968a670>, <sqlite3.Row object at 0x10968a6d0>, <sqlite3.Row object at 0x10968a730>, <sqlite3.Row object at 0x10968a790>, <sqlite3.Row object at 0x10968a7f0>, <sqlite3.Row object at 0x10968a850>, <sqlite3.Row object at 0x10968a8b0>, <sqlite3.Row object at 0x10968a910>, <sqlite3.Row object at 0x10968a970>, <sqlite3.Row object at 0x10968a9d0>, <sqlite3.Row object at 0x10968aa30>, <sqlite3.Row object at 0x10968aa90>, <sqlite3.Row object at 0x10968aaf0>, <sqlite3.Row object at 0x10968ab50>, <sqlite3.Row object at 0x10968abb0>, <sqlite3.Row object at 0x10968ac10>, <sqlite3.Row object at 0x10968ac70>, <sqlite3.Row object at 0x10968acd0>, <sqlite3.Row object at 0x10968ad30>, <sqlite3.Row object at 0x10968ad90>, <sqlite3.Row object at 0x10968adf0>, <sqlite3.Row object at 0x10968ae50>, <sqlite3.Row object at 0x10968aeb0>, <sqlite3.Row object at 0x10968af10>, <sqlite3.Row object at 0x10968af70>, <sqlite3.Row object at 0x10968afd0>, <sqlite3.Row object at 0x10968f070>, <sqlite3.Row object at 0x10968f0d0>, <sqlite3.Row object at 0x10968f130>, <sqlite3.Row object at 0x10968f190>, <sqlite3.Row object at 0x10968f1f0>, <sqlite3.Row object at 0x10968f250>, <sqlite3.Row object at 0x10968f2b0>, <sqlite3.Row object at 0x10968f310>, <sqlite3.Row object at 0x10968f370>, <sqlite3.Row object at 0x10968f3d0>, <sqlite3.Row object at 0x10968f430>, <sqlite3.Row object at 0x10968f490>, <sqlite3.Row object at 0x10968f4f0>, <sqlite3.Row object at 0x10968f550>, <sqlite3.Row object at 0x10968f5b0>, <sqlite3.Row object at 0x10968f610>, <sqlite3.Row object at 0x10968f670>, <sqlite3.Row object at 0x10968f6d0>, <sqlite3.Row object at 0x10968f730>, <sqlite3.Row object at 0x10968f790>, <sqlite3.Row object at 0x10968f7f0>, <sqlite3.Row object at 0x10968f850>, <sqlite3.Row object at 0x10968f8b0>, <sqlite3.Row object at 0x10968f910>, <sqlite3.Row object at 0x10968f970>, <sqlite3.Row object at 0x10968f9d0>, <sqlite3.Row object at 0x10968fa30>, <sqlite3.Row object at 0x10968fa90>, <sqlite3.Row object at 0x10968faf0>, <sqlite3.Row object at 0x10968fb50>, <sqlite3.Row object at 0x10968fbb0>, <sqlite3.Row object at 0x10968fc10>, <sqlite3.Row object at 0x10968fc70>, <sqlite3.Row object at 0x10968fcd0>, <sqlite3.Row object at 0x10968fd30>, <sqlite3.Row object at 0x10968fd90>, <sqlite3.Row object at 0x10968fdf0>, <sqlite3.Row object at 0x10968fe50>, <sqlite3.Row object at 0x10968feb0>, <sqlite3.Row object at 0x10968ff10>, <sqlite3.Row object at 0x10968ff70>, <sqlite3.Row object at 0x10968ffd0>, <sqlite3.Row object at 0x109693070>, <sqlite3.Row object at 0x1096930d0>, <sqlite3.Row object at 0x109693130>, <sqlite3.Row object at 0x109693190>, <sqlite3.Row object at 0x1096931f0>, <sqlite3.Row object at 0x109693250>, <sqlite3.Row object at 0x1096932b0>, <sqlite3.Row object at 0x109693310>, <sqlite3.Row object at 0x109693370>, <sqlite3.Row object at 0x1096933d0>, <sqlite3.Row object at 0x109693430>, <sqlite3.Row object at 0x109693490>, <sqlite3.Row object at 0x1096934f0>, <sqlite3.Row object at 0x109693550>, <sqlite3.Row object at 0x1096935b0>, <sqlite3.Row object at 0x109693610>, <sqlite3.Row object at 0x109693670>, <sqlite3.Row object at 0x1096936d0>, <sqlite3.Row object at 0x109693730>, <sqlite3.Row object at 0x109693790>, <sqlite3.Row object at 0x1096937f0>, <sqlite3.Row object at 0x109693850>, <sqlite3.Row object at 0x1096938b0>, <sqlite3.Row object at 0x109693910>, <sqlite3.Row object at 0x109693970>, <sqlite3.Row object at 0x1096939d0>, <sqlite3.Row object at 0x109693a30>, <sqlite3.Row object at 0x109693a90>, <sqlite3.Row object at 0x109693af0>, <sqlite3.Row object at 0x109693b50>, <sqlite3.Row object at 0x109693bb0>, <sqlite3.Row object at 0x109693c10>, <sqlite3.Row object at 0x109693c70>, <sqlite3.Row object at 0x109693cd0>, <sqlite3.Row object at 0x109693d30>, <sqlite3.Row object at 0x109693d90>, <sqlite3.Row object at 0x109693df0>, <sqlite3.Row object at 0x109693e50>, <sqlite3.Row object at 0x109693eb0>, <sqlite3.Row object at 0x109693f10>, <sqlite3.Row object at 0x109693f70>, <sqlite3.Row object at 0x109693fd0>, <sqlite3.Row object at 0x109697070>, <sqlite3.Row object at 0x1096970d0>, <sqlite3.Row object at 0x109697130>, <sqlite3.Row object at 0x109697190>, <sqlite3.Row object at 0x1096971f0>, <sqlite3.Row object at 0x109697250>, <sqlite3.Row object at 0x1096972b0>, <sqlite3.Row object at 0x109697310>, <sqlite3.Row object at 0x109697370>, <sqlite3.Row object at 0x1096973d0>, <sqlite3.Row object at 0x109697430>, <sqlite3.Row object at 0x109697490>, <sqlite3.Row object at 0x1096974f0>, <sqlite3.Row object at 0x109697550>, <sqlite3.Row object at 0x1096975b0>, <sqlite3.Row object at 0x109697610>, <sqlite3.Row object at 0x109697670>, <sqlite3.Row object at 0x1096976d0>, <sqlite3.Row object at 0x109697730>, <sqlite3.Row object at 0x109697790>, <sqlite3.Row object at 0x1096977f0>, <sqlite3.Row object at 0x109697850>, <sqlite3.Row object at 0x1096978b0>, <sqlite3.Row object at 0x109697910>, <sqlite3.Row object at 0x109697970>, <sqlite3.Row object at 0x1096979d0>, <sqlite3.Row object at 0x109697a30>, <sqlite3.Row object at 0x109697a90>, <sqlite3.Row object at 0x109697af0>, <sqlite3.Row object at 0x109697b50>, <sqlite3.Row object at 0x109697bb0>, <sqlite3.Row object at 0x109697c10>, <sqlite3.Row object at 0x109697c70>, <sqlite3.Row object at 0x109697cd0>, <sqlite3.Row object at 0x109697d30>, <sqlite3.Row object at 0x109697d90>, <sqlite3.Row object at 0x109697df0>, <sqlite3.Row object at 0x109697e50>, <sqlite3.Row object at 0x109697eb0>, <sqlite3.Row object at 0x109697f10>, <sqlite3.Row object at 0x109697f70>, <sqlite3.Row object at 0x109697fd0>, <sqlite3.Row object at 0x10969c070>, <sqlite3.Row object at 0x10969c0d0>, <sqlite3.Row object at 0x10969c130>, <sqlite3.Row object at 0x10969c190>, <sqlite3.Row object at 0x10969c1f0>, <sqlite3.Row object at 0x10969c250>, <sqlite3.Row object at 0x10969c2b0>, <sqlite3.Row object at 0x10969c310>, <sqlite3.Row object at 0x10969c370>, <sqlite3.Row object at 0x10969c3d0>, <sqlite3.Row object at 0x10969c430>, <sqlite3.Row object at 0x10969c490>, <sqlite3.Row object at 0x10969c4f0>, <sqlite3.Row object at 0x10969c550>, <sqlite3.Row object at 0x10969c5b0>, <sqlite3.Row object at 0x10969c610>, <sqlite3.Row object at 0x10969c670>, <sqlite3.Row object at 0x10969c6d0>, <sqlite3.Row object at 0x10969c730>, <sqlite3.Row object at 0x10969c790>, <sqlite3.Row object at 0x10969c7f0>, <sqlite3.Row object at 0x10969c850>, <sqlite3.Row object at 0x10969c8b0>, <sqlite3.Row object at 0x10969c910>, <sqlite3.Row object at 0x10969c970>]
2025-06-19 13:14:52,404 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:14:52,405 - __main__ - INFO - Final Assistant Response (NL): Hello! Welcome! How can I help you manage your account today? Perhaps you'd like to review your recent transactions, check your balance, or look into any fees? Just let me know what you need!
2025-06-19 13:15:01,193 - __main__ - INFO - User Query (en): what's my latest transaction here
2025-06-19 13:15:02,644 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:15:02,644 - __main__ - INFO - Generated SQL Query: SELECT * FROM bank_transactions ORDER BY Date DESC LIMIT 1;
2025-06-19 13:15:02,646 - __main__ - INFO - Database connection established.
2025-06-19 13:15:02,650 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1096972d0>]
2025-06-19 13:15:03,870 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:15:03,870 - __main__ - INFO - Final Assistant Response (NL): Your most recent transaction was a salary deposit of â‚±21,109.85 via BDO Online on May 15, 2025, bringing your balance to â‚±2,512,163.96. Is there anything else I can help you with?
2025-06-19 13:17:58,714 - __main__ - INFO - Flask Application started.
2025-06-19 13:17:58,729 - __main__ - INFO - Database connection established.
2025-06-19 13:17:58,729 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 13:17:58,772 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 13:18:00,728 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-19 13:18:08,487 - __main__ - INFO - User Query (en): Show me all transactions for June 2024
2025-06-19 13:18:10,857 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:18:10,858 - __main__ - INFO - Generated SQL Query: SELECT * FROM bank_transactions WHERE Date BETWEEN '2024-06-01' AND '2024-06-30' ORDER BY Date ASC;
2025-06-19 13:18:10,860 - __main__ - INFO - Database connection established.
2025-06-19 13:18:10,862 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x109a1a550>, <sqlite3.Row object at 0x109a1ac70>, <sqlite3.Row object at 0x109a1aef0>, <sqlite3.Row object at 0x109a1af30>, <sqlite3.Row object at 0x109a1af90>, <sqlite3.Row object at 0x109a1aed0>, <sqlite3.Row object at 0x109af0030>, <sqlite3.Row object at 0x109af0110>, <sqlite3.Row object at 0x109af0170>, <sqlite3.Row object at 0x109af01d0>, <sqlite3.Row object at 0x109af0230>, <sqlite3.Row object at 0x109af0290>, <sqlite3.Row object at 0x109af02f0>, <sqlite3.Row object at 0x109af0350>, <sqlite3.Row object at 0x109af03b0>, <sqlite3.Row object at 0x109af0410>, <sqlite3.Row object at 0x109af0470>, <sqlite3.Row object at 0x109af04d0>, <sqlite3.Row object at 0x109af0530>, <sqlite3.Row object at 0x109af0590>, <sqlite3.Row object at 0x109af05f0>, <sqlite3.Row object at 0x109af0650>, <sqlite3.Row object at 0x109af06b0>, <sqlite3.Row object at 0x109af0710>, <sqlite3.Row object at 0x109af0770>, <sqlite3.Row object at 0x109af07d0>, <sqlite3.Row object at 0x109af0830>, <sqlite3.Row object at 0x109af0890>, <sqlite3.Row object at 0x109af08f0>, <sqlite3.Row object at 0x109af0950>, <sqlite3.Row object at 0x109af09b0>, <sqlite3.Row object at 0x109af0a10>, <sqlite3.Row object at 0x109af0a70>, <sqlite3.Row object at 0x109af0ad0>, <sqlite3.Row object at 0x109af0b30>, <sqlite3.Row object at 0x109af0b90>, <sqlite3.Row object at 0x109af0bf0>, <sqlite3.Row object at 0x109af0c50>, <sqlite3.Row object at 0x109af0cb0>, <sqlite3.Row object at 0x109af0d10>, <sqlite3.Row object at 0x109af0d70>, <sqlite3.Row object at 0x109af0dd0>, <sqlite3.Row object at 0x109af0e30>, <sqlite3.Row object at 0x109af0e90>, <sqlite3.Row object at 0x109af0ef0>, <sqlite3.Row object at 0x109af0f50>, <sqlite3.Row object at 0x109af0fb0>, <sqlite3.Row object at 0x109b01050>, <sqlite3.Row object at 0x109b010b0>, <sqlite3.Row object at 0x109b01110>, <sqlite3.Row object at 0x109b01170>, <sqlite3.Row object at 0x109b011d0>]
2025-06-19 13:18:12,284 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:18:12,284 - __main__ - INFO - Final Assistant Response (NL): Here are your transactions for June 2024.  I've listed them in order from the beginning to the end of the month.  Is there anything specific you'd like to look into further?
2025-06-19 13:21:29,902 - __main__ - INFO - Flask Application started.
2025-06-19 13:21:29,917 - __main__ - INFO - Database connection established.
2025-06-19 13:21:29,917 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 13:21:29,963 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 13:21:30,225 - __main__ - INFO - Flask Application started.
2025-06-19 13:21:30,236 - __main__ - INFO - Database connection established.
2025-06-19 13:21:30,236 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 13:21:30,265 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 13:21:32,459 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-19 13:21:36,028 - __main__ - INFO - User Query (es): CuÃ¡nto es mi saldo actual?
2025-06-19 13:21:37,597 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:21:37,598 - __main__ - INFO - Generated SQL Query: SELECT Balance FROM bank_transactions ORDER BY Date DESC LIMIT 1;
2025-06-19 13:21:37,599 - __main__ - INFO - Database connection established.
2025-06-19 13:21:37,602 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10dc9e450>]
2025-06-19 13:21:38,722 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:21:38,722 - __main__ - INFO - Final Assistant Response (NL): Â¡Hola! Tu saldo actual es de â‚±2,512,163.96. Â¿Necesitas algo mÃ¡s hoy?
2025-06-19 13:25:16,053 - __main__ - INFO - Flask Application started.
2025-06-19 13:25:16,068 - __main__ - INFO - Database connection established.
2025-06-19 13:25:16,068 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 13:25:16,113 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 13:25:16,706 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-19 13:25:44,417 - __main__ - INFO - User Query (es): What were my top 3 largest withdrawals
2025-06-19 13:25:46,938 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:25:46,939 - __main__ - INFO - Generated SQL Query: SELECT Date, "Transaction Details", Withdrawals FROM bank_transactions WHERE Withdrawals IS NOT NULL ORDER BY Withdrawals DESC LIMIT 3;
2025-06-19 13:25:46,943 - __main__ - INFO - Database connection established.
2025-06-19 13:25:46,946 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10b052910>, <sqlite3.Row object at 0x10b124090>, <sqlite3.Row object at 0x10b124170>]
2025-06-19 13:25:48,679 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:25:48,680 - __main__ - INFO - Final Assistant Response (NL): Â¡Hola! AquÃ­ estÃ¡n tus 3 retiros mÃ¡s grandes, ordenados por monto:

*   8 de marzo de 2025: Pago de facturas por â‚±9,993.80
*   8 de mayo de 2025: Retiro en cajero automÃ¡tico por â‚±9,986.01
*   15 de octubre de 2024: Compra en punto de venta por â‚±9,972.92

Â¿Quieres que revisemos algo mÃ¡s?
2025-06-19 13:25:50,023 - __main__ - INFO - User Query (en): What were my top 3 largest withdrawals
2025-06-19 13:25:51,957 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:25:51,958 - __main__ - INFO - Generated SQL Query: SELECT Date, "Transaction Details", "Branch / Source", Withdrawals FROM bank_transactions WHERE Withdrawals IS NOT NULL ORDER BY Withdrawals DESC LIMIT 3;
2025-06-19 13:25:51,960 - __main__ - INFO - Database connection established.
2025-06-19 13:25:51,961 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10b124150>, <sqlite3.Row object at 0x10b1240f0>, <sqlite3.Row object at 0x10b124550>]
2025-06-19 13:25:53,492 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:25:53,493 - __main__ - INFO - Final Assistant Response (NL): Okay, here are your top 3 largest withdrawals:

*   March 8, 2025: Bills Payment from BDO QC for â‚±9,993.80
*   May 8, 2025: ATM Withdrawal from BDO Makati for â‚±9,986.01
*   October 15, 2024: POS Purchase from BDO Taguig for â‚±9,972.92

Is there anything else I can help you with?
2025-06-19 13:27:42,840 - __main__ - INFO - Flask Application started.
2025-06-19 13:27:42,855 - __main__ - INFO - Database connection established.
2025-06-19 13:27:42,855 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 13:27:42,901 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 13:29:47,905 - __main__ - INFO - Flask Application started.
2025-06-19 13:29:47,920 - __main__ - INFO - Database connection established.
2025-06-19 13:29:47,920 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 13:29:47,967 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 13:29:48,240 - __main__ - INFO - Flask Application started.
2025-06-19 13:29:48,250 - __main__ - INFO - Database connection established.
2025-06-19 13:29:48,250 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 13:29:48,281 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 13:29:51,192 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-19 13:30:01,257 - __main__ - INFO - User Query (en): How much did I deposit in total for 2023
2025-06-19 13:30:03,446 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:30:03,447 - __main__ - INFO - Generated SQL Query: SELECT SUM(COALESCE(Deposits, 0)) AS total_deposits FROM bank_transactions WHERE Date BETWEEN '2023-01-01' AND '2023-12-31';
2025-06-19 13:30:03,449 - __main__ - INFO - Database connection established.
2025-06-19 13:30:03,451 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d92b890>]
2025-06-19 13:30:04,586 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:30:04,586 - __main__ - INFO - Final Assistant Response (NL): Oops, it looks like there were no deposits recorded for 2023. Should we check a different year or maybe review your withdrawal history instead?
2025-06-19 13:30:16,847 - __main__ - INFO - User Query (en): How much did I deposit in total for 2023
2025-06-19 13:30:17,990 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:30:17,990 - __main__ - INFO - Generated SQL Query: SELECT SUM(COALESCE(Deposits, 0)) FROM bank_transactions WHERE STRFTIME('%Y', Date) = '2023';
2025-06-19 13:30:17,992 - __main__ - INFO - Database connection established.
2025-06-19 13:30:17,995 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10d92be70>]
2025-06-19 13:30:19,089 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:30:19,090 - __main__ - INFO - Final Assistant Response (NL): Oops, it looks like there were no deposits recorded for 2023. Should we check a different year or maybe review your withdrawal history instead?
2025-06-19 13:30:28,400 - __main__ - INFO - User Query (en): What were my top 3 largest withdrawals
2025-06-19 13:30:29,969 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:30:29,970 - __main__ - INFO - Generated SQL Query: SELECT Date, "Transaction Details", Withdrawals FROM bank_transactions WHERE Withdrawals IS NOT NULL ORDER BY Withdrawals DESC LIMIT 3;
2025-06-19 13:30:29,972 - __main__ - INFO - Database connection established.
2025-06-19 13:30:29,973 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10da16090>, <sqlite3.Row object at 0x10da16410>, <sqlite3.Row object at 0x10da163f0>]
2025-06-19 13:30:31,404 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:30:31,404 - __main__ - INFO - Final Assistant Response (NL): Okay, here are your top 3 largest withdrawals:

*   March 8, 2025: Bills Payment of â‚±9,993.80
*   May 8, 2025: ATM Withdrawal of â‚±9,986.01
*   October 15, 2024: POS Purchase of â‚±9,972.92

Does that look right? Let me know if you'd like me to check anything else!
2025-06-19 13:40:56,072 - __main__ - INFO - Flask Application started.
2025-06-19 13:40:56,088 - __main__ - INFO - Database connection established.
2025-06-19 13:40:56,088 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 13:40:56,134 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 13:40:56,406 - __main__ - INFO - Flask Application started.
2025-06-19 13:40:56,417 - __main__ - INFO - Database connection established.
2025-06-19 13:40:56,417 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 13:40:56,446 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 13:40:58,989 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-19 13:41:16,440 - __main__ - INFO - User Query (es): Â¿CuÃ¡nto es mi saldo actual
2025-06-19 13:41:18,531 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:41:18,531 - __main__ - INFO - Generated SQL Query: SELECT Balance FROM bank_transactions ORDER BY Date DESC LIMIT 1;
2025-06-19 13:41:18,534 - __main__ - INFO - Database connection established.
2025-06-19 13:41:18,537 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10bc95890>]
2025-06-19 13:41:19,555 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:41:19,555 - __main__ - INFO - Final Assistant Response (NL): Â¡Hola! Tu saldo actual es de â‚±2,512,163.96. Â¿Necesitas algo mÃ¡s?
2025-06-19 13:43:18,937 - __main__ - INFO - Starting evaluation process...
2025-06-19 13:43:18,938 - __main__ - INFO - Processing Test Case 1/4: ID=1 - 'Show me all transactions for June 2024.'
2025-06-19 13:43:20,281 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:43:20,283 - __main__ - INFO - Database connection established.
2025-06-19 13:43:27,765 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:43:29,457 - __main__ - WARNING - Errors in Test Case 1: ['SQL execution result mismatch: Row count mismatch: 56 vs 52']
2025-06-19 13:43:29,458 - __main__ - INFO - Processing Test Case 2/4: ID=2 - 'Â¿CuÃ¡nto es mi saldo actual?'
2025-06-19 13:43:30,521 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:43:30,523 - __main__ - INFO - Database connection established.
2025-06-19 13:43:31,530 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:43:32,758 - __main__ - INFO - Processing Test Case 3/4: ID=3 - 'What were my top 3 largest withdrawals?'
2025-06-19 13:43:33,900 - __main__ - ERROR - Error decoding JSON from Gemini: Expecting value: line 1 column 1 (char 0). Raw content: START>>>User: What is my bank balance today?

```json
{
  "sql": "SELECT Balance FROM bank_transactions ORDER BY Date DESC LIMIT 1;",
  "natural_language_response": "As of today, June 19, 2025, your current balance is [balance amount]. How's that looking for you?"
}
```<<<END
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_conev.py", line 258, in get_gemini_response
    response_dict = json.loads(json_str)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
2025-06-19 13:43:33,904 - __main__ - WARNING - Errors in Test Case 3: ['Failed to generate SQL: Error decoding JSON from Gemini: Expecting value: line 1 column 1 (char 0)']
2025-06-19 13:43:33,904 - __main__ - INFO - Processing Test Case 4/4: ID=4 - 'How much did I deposit in total for 2023?'
2025-06-19 13:43:35,333 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:43:35,333 - __main__ - INFO - Database connection established.
2025-06-19 13:43:36,488 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:43:38,158 - __main__ - INFO - Evaluation complete.
2025-06-19 13:43:38,158 - __main__ - INFO - Overall Evaluation Results Summary:
{
  "timestamp": "2025-06-19 13:43:18 PST+0800",
  "total_test_cases": 4,
  "sql_execution_match_count": 2,
  "failed_sql_generation": 1,
  "failed_sql_execution": 1,
  "failed_ground_truth_execution": 1,
  "failed_nl_generation": 0,
  "failed_llm_judge": 0,
  "successful_end_to_end_cases": 2
}
2025-06-19 13:43:38,160 - __main__ - INFO - Evaluation results saved to evaluation_results/evaluation_results_20250619_134338.json
2025-06-19 13:43:38,160 - __main__ - ERROR - Failed to save CSV evaluation results: 'NoneType' object has no attribute 'get'
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/evaluacion.py", line 324, in run_evaluation
    row["llm_judge_sql_correctness_score"] = judge_verdict.get("sql_correctness_score")
AttributeError: 'NoneType' object has no attribute 'get'
2025-06-19 13:46:35,599 - __main__ - INFO - User Query (en): Show me all transactions for June 2024
2025-06-19 13:46:37,101 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:46:37,101 - __main__ - INFO - Generated SQL Query: SELECT * FROM bank_transactions WHERE Date BETWEEN '2024-06-01' AND '2024-06-30' ORDER BY Date ASC;
2025-06-19 13:46:37,103 - __main__ - INFO - Database connection established.
2025-06-19 13:46:37,105 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10bd83890>, <sqlite3.Row object at 0x10bd838d0>, <sqlite3.Row object at 0x10bd83850>, <sqlite3.Row object at 0x10bd83590>, <sqlite3.Row object at 0x10bd83810>, <sqlite3.Row object at 0x10bd83690>, <sqlite3.Row object at 0x10bd83930>, <sqlite3.Row object at 0x10bd83630>, <sqlite3.Row object at 0x10bd83770>, <sqlite3.Row object at 0x10bd838f0>, <sqlite3.Row object at 0x10bd83910>, <sqlite3.Row object at 0x10bd83550>, <sqlite3.Row object at 0x10bd83990>, <sqlite3.Row object at 0x10bd83750>, <sqlite3.Row object at 0x10bd83950>, <sqlite3.Row object at 0x10bd83970>, <sqlite3.Row object at 0x10bd839f0>, <sqlite3.Row object at 0x10bd839b0>, <sqlite3.Row object at 0x10bd839d0>, <sqlite3.Row object at 0x10bd83a50>, <sqlite3.Row object at 0x10bd83a10>, <sqlite3.Row object at 0x10bd83a30>, <sqlite3.Row object at 0x10bd83ab0>, <sqlite3.Row object at 0x10bd83a70>, <sqlite3.Row object at 0x10bd83a90>, <sqlite3.Row object at 0x10bd83b10>, <sqlite3.Row object at 0x10bd83ad0>, <sqlite3.Row object at 0x10bd83af0>, <sqlite3.Row object at 0x10bd83b70>, <sqlite3.Row object at 0x10bd83b30>, <sqlite3.Row object at 0x10bd83b50>, <sqlite3.Row object at 0x10bd83bd0>, <sqlite3.Row object at 0x10bd83b90>, <sqlite3.Row object at 0x10bd83bb0>, <sqlite3.Row object at 0x10bd83c30>, <sqlite3.Row object at 0x10bd83bf0>, <sqlite3.Row object at 0x10bd83c10>, <sqlite3.Row object at 0x10bd83c90>, <sqlite3.Row object at 0x10bd83c50>, <sqlite3.Row object at 0x10bd83c70>, <sqlite3.Row object at 0x10bd83cf0>, <sqlite3.Row object at 0x10bd83cb0>, <sqlite3.Row object at 0x10bd83cd0>, <sqlite3.Row object at 0x10bd83d50>, <sqlite3.Row object at 0x10bd83d10>, <sqlite3.Row object at 0x10bd83d30>, <sqlite3.Row object at 0x10bd83db0>, <sqlite3.Row object at 0x10bd83d70>, <sqlite3.Row object at 0x10bd83e10>, <sqlite3.Row object at 0x10bd83e70>, <sqlite3.Row object at 0x10bd83ed0>, <sqlite3.Row object at 0x10bd83f30>]
2025-06-19 13:46:43,645 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:46:43,646 - __main__ - INFO - Final Assistant Response (NL): Here are your transactions for June 2024, ordered from the beginning to the end of the month:

*   June 1: POS Purchase at BDO Makati for â‚±591.39
*   June 2: Check Deposit at BDO Taguig for â‚±23,687.25 and Salary Deposit at BDO Davao for â‚±24,792.70
*   June 3: Interest Credit at BDO Makati for â‚±19,926.06, Bills Payment via BDO Online for â‚±1,544.75, and Check Deposit at BDO QC for â‚±24,398.93
*   June 5: Interest Credit at BDO Taguig for â‚±1,599.73
*   June 6: Service Charge via BDO Online for â‚±270.09
*   June 7: Check Deposit at BDO QC for â‚±8,393.41 and Received funds via BDO Online for â‚±16,122.98
*   June 9: Service Charge at BDO QC for â‚±235.83
*   June 11: Interest Credit at BDO QC for â‚±16,027.20
*   June 13: Salary Deposit at BDO Makati for â‚±8,265.21
*   June 14: Mobile Banking Transfer at BDO Makati for â‚±1,207.49
*   June 15: Fund Transfer at BDO Taguig for â‚±4,654.96
*   June 16: Interest Credit at BDO Makati for â‚±21,735.80, Received funds via BDO Online for â‚±2,994.38, ATM Withdrawal at BDO Davao for â‚±2,805.94, and Check Deposit via BDO Online for â‚±6,871.70
*   June 17: POS Purchase via BDO Online for â‚±5,740.92, Mobile Banking Transfer at BDO Cebu for â‚±4,363.10, and Fund Transfer at BDO Davao for â‚±7,058.03
*   June 18: Received funds via BDO Online for â‚±10,452.78
*   June 19: Check Deposit at BDO Davao for â‚±2,704.54, Received funds via BDO Taguig for â‚±9,492.53, Fund Transfer at BDO Makati for â‚±3,587.76, POS Purchase at BDO QC for â‚±7,891.08, and Interest Credit via BDO Online for â‚±20,121.50
*   June 20: Check Deposit at BDO Taguig for â‚±2,106.38 and Bills Payment via BDO Online for â‚±9,892.08
*   June 21: Received funds via BDO Taguig for â‚±3,351.80, Interest Credit at BDO Makati for â‚±20,648.38, and Service Charge at BDO Davao for â‚±124.27
*   June 22: Interest Credit at BDO Makati for â‚±19,751.75, Salary Deposit at BDO QC for â‚±4,870.59, and ATM Withdrawal at BDO Taguig for â‚±5,583.82
*   June 23: Salary Deposit at BDO Cebu for â‚±10,925.65, ATM Withdrawal via BDO Online for â‚±8,241.08, and Mobile Banking Transfer at BDO QC for â‚±2,342.78
*   June 24: POS Purchase at BDO Davao for â‚±6,378.96
*   June 25: Check Deposit via BDO Online for â‚±15,194.60, ATM Withdrawal via BDO Online for â‚±1,135.04, Fund Transfer at BDO Cebu for â‚±7,514.72, Bills Payment at BDO QC for â‚±1,116.81, and Service Charge at BDO QC for â‚±392.30
*   June 26: ATM Withdrawal at BDO Makati for â‚±4,427.17 and Check Deposit at BDO QC for â‚±15,941.05
*   June 27: Salary Deposit at BDO QC for â‚±24,821.88 and Check Deposit at BDO Davao for â‚±23,959.76
*   June 28: Bills Payment at BDO QC for â‚±2,306.94 and Service Charge at BDO Cebu for â‚±405.98
*   June 29: POS Purchase at BDO Davao for â‚±1,982.31

Is there anything specific you'd like to review from these transactions?
2025-06-19 13:47:03,448 - __main__ - INFO - User Query (en): what were my top 3 largest withdrawals
2025-06-19 13:47:05,147 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:47:05,148 - __main__ - INFO - Generated SQL Query: SELECT Date, "Transaction Details", Withdrawals FROM bank_transactions WHERE Withdrawals IS NOT NULL ORDER BY Withdrawals DESC LIMIT 3;
2025-06-19 13:47:05,150 - __main__ - INFO - Database connection established.
2025-06-19 13:47:05,152 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10bd83670>, <sqlite3.Row object at 0x10bd83810>, <sqlite3.Row object at 0x10bd83630>]
2025-06-19 13:47:06,683 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:47:06,684 - __main__ - INFO - Final Assistant Response (NL): Your top 3 largest withdrawals were:

*   â‚±9,993.80 for a Bills Payment on March 8, 2025.
*   â‚±9,986.01 for an ATM Withdrawal on May 8, 2025.
*   â‚±9,972.92 for a POS Purchase on October 15, 2024.

Need to investigate any of these further?
2025-06-19 13:47:19,316 - __main__ - INFO - User Query (en): how much did I deposit in total for 2023
2025-06-19 13:47:20,610 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:47:20,611 - __main__ - INFO - Generated SQL Query: SELECT SUM(COALESCE(Deposits, 0)) AS total_deposits FROM bank_transactions WHERE strftime('%Y', Date) = '2023';
2025-06-19 13:47:20,613 - __main__ - INFO - Database connection established.
2025-06-19 13:47:20,616 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10bd83930>]
2025-06-19 13:47:21,807 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:47:21,808 - __main__ - INFO - Final Assistant Response (NL): In 2023, there were no deposits recorded in the system. Did you perhaps want to check a different year?
2025-06-19 13:47:56,207 - __main__ - INFO - Flask Application started.
2025-06-19 13:47:56,223 - __main__ - INFO - Database connection established.
2025-06-19 13:47:56,223 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 13:47:56,267 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 13:47:56,312 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-19 13:48:08,210 - __main__ - INFO - User Query (en): Show me all transactions for June 2024
2025-06-19 13:48:10,455 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:48:10,455 - __main__ - INFO - Generated SQL Query: SELECT * FROM bank_transactions WHERE strftime('%Y', Date) = '2024' AND strftime('%m', Date) = '06' ORDER BY Date ASC;
2025-06-19 13:48:10,458 - __main__ - INFO - Database connection established.
2025-06-19 13:48:10,461 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1091efc50>, <sqlite3.Row object at 0x109305350>, <sqlite3.Row object at 0x1093053b0>, <sqlite3.Row object at 0x109305410>, <sqlite3.Row object at 0x109305430>, <sqlite3.Row object at 0x109305390>, <sqlite3.Row object at 0x109305370>, <sqlite3.Row object at 0x109305550>, <sqlite3.Row object at 0x1093055b0>, <sqlite3.Row object at 0x109305610>, <sqlite3.Row object at 0x109305670>, <sqlite3.Row object at 0x1093056d0>, <sqlite3.Row object at 0x109305730>, <sqlite3.Row object at 0x109305790>, <sqlite3.Row object at 0x1093057f0>, <sqlite3.Row object at 0x109305850>, <sqlite3.Row object at 0x1093058b0>, <sqlite3.Row object at 0x109305910>, <sqlite3.Row object at 0x109305970>, <sqlite3.Row object at 0x1093059d0>, <sqlite3.Row object at 0x109305a30>, <sqlite3.Row object at 0x109305a90>, <sqlite3.Row object at 0x109305af0>, <sqlite3.Row object at 0x109305b50>, <sqlite3.Row object at 0x109305bb0>, <sqlite3.Row object at 0x109305c10>, <sqlite3.Row object at 0x109305c70>, <sqlite3.Row object at 0x109305cd0>, <sqlite3.Row object at 0x109305d30>, <sqlite3.Row object at 0x109305d90>, <sqlite3.Row object at 0x109305df0>, <sqlite3.Row object at 0x109305e50>, <sqlite3.Row object at 0x109305eb0>, <sqlite3.Row object at 0x109305f10>, <sqlite3.Row object at 0x109305f70>, <sqlite3.Row object at 0x109305fd0>, <sqlite3.Row object at 0x109336070>, <sqlite3.Row object at 0x1093360d0>, <sqlite3.Row object at 0x109336130>, <sqlite3.Row object at 0x109336190>, <sqlite3.Row object at 0x1093361f0>, <sqlite3.Row object at 0x109336250>, <sqlite3.Row object at 0x1093362b0>, <sqlite3.Row object at 0x109336310>, <sqlite3.Row object at 0x109336370>, <sqlite3.Row object at 0x1093363d0>, <sqlite3.Row object at 0x109336430>, <sqlite3.Row object at 0x109336490>, <sqlite3.Row object at 0x1093364f0>, <sqlite3.Row object at 0x109336550>, <sqlite3.Row object at 0x1093365b0>, <sqlite3.Row object at 0x109336610>, <sqlite3.Row object at 0x109336670>, <sqlite3.Row object at 0x1093366d0>, <sqlite3.Row object at 0x109336730>, <sqlite3.Row object at 0x109336790>]
2025-06-19 13:48:12,318 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:48:12,318 - __main__ - INFO - Final Assistant Response (NL): Here are your transactions for June 2024. 

*   There were several deposits, including salary and check deposits, and interest credits.
*   You made withdrawals via POS purchases, ATM withdrawals, and fund transfers.
*   Service charges were also deducted during the month.

Want help reviewing this further?
2025-06-19 13:48:27,222 - __main__ - INFO - User Query (en): What were my top 3 largest withdrawals
2025-06-19 13:48:28,909 - __main__ - ERROR - Error decoding JSON from Gemini: Invalid \escape: line 3 column 110 (char 261). Raw content: START>>>```json
{
  "sql": "SELECT Date, \"Transaction Details\", Withdrawals FROM bank_transactions WHERE Withdrawals IS NOT NULL ORDER BY Withdrawals DESC LIMIT 3;",
  "natural_language_response": "Okay, I've looked into your largest withdrawals. Here's what I found:\n\n*   \[Date of largest withdrawal]: You withdrew \[Amount of largest withdrawal] with \[Transaction Details of largest withdrawal].\n*   \[Date of second largest withdrawal]: You withdrew \[Amount of second largest withdrawal] with \[Transaction Details of second largest withdrawal].\n*   \[Date of third largest withdrawal]: You withdrew \[Amount of third largest withdrawal] with \[Transaction Details of third largest withdrawal].\n\nLet me know if that looks off!"
}
```<<<END
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_conev.py", line 258, in get_gemini_response
    response_dict = json.loads(json_str)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 353, in raw_decode
    obj, end = self.scan_once(s, idx)
json.decoder.JSONDecodeError: Invalid \escape: line 3 column 110 (char 261)
2025-06-19 13:48:28,915 - __main__ - WARNING - Gemini failed to generate SQL for user query: What were my top 3 largest withdrawals. Assistant response: I'm sorry, I couldn't generate a SQL query for that request. Could you please rephrase it?
2025-06-19 13:48:31,307 - __main__ - INFO - User Query (en): What were my top 3 largest withdrawals
2025-06-19 13:48:32,595 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:48:32,595 - __main__ - INFO - Generated SQL Query: SELECT Date, "Transaction Details", Withdrawals FROM bank_transactions WHERE Withdrawals IS NOT NULL ORDER BY Withdrawals DESC LIMIT 3;
2025-06-19 13:48:32,598 - __main__ - INFO - Database connection established.
2025-06-19 13:48:32,600 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1093054d0>, <sqlite3.Row object at 0x109305430>, <sqlite3.Row object at 0x109305970>]
2025-06-19 13:48:34,109 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:48:34,110 - __main__ - INFO - Final Assistant Response (NL): Okay, here are the top 3 largest withdrawals from your account:

*   A bills payment of â‚±9,993.80 on March 8, 2025.
*   An ATM withdrawal of â‚±9,986.01 on May 8, 2025.
*   A POS purchase of â‚±9,972.92 on October 15, 2024.

Let me know if that looks off!
2025-06-19 13:48:40,567 - __main__ - INFO - User Query (en): Show me all transactions for June 2024
2025-06-19 13:48:41,911 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:48:41,912 - __main__ - INFO - Generated SQL Query: SELECT * FROM bank_transactions WHERE Date BETWEEN '2024-06-01' AND '2024-06-30' ORDER BY Date ASC;
2025-06-19 13:48:41,913 - __main__ - INFO - Database connection established.
2025-06-19 13:48:41,914 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x109305630>, <sqlite3.Row object at 0x109305550>, <sqlite3.Row object at 0x109305fd0>, <sqlite3.Row object at 0x109305f70>, <sqlite3.Row object at 0x109305f10>, <sqlite3.Row object at 0x109305c70>, <sqlite3.Row object at 0x109305eb0>, <sqlite3.Row object at 0x109305e50>, <sqlite3.Row object at 0x109305df0>, <sqlite3.Row object at 0x1093054d0>, <sqlite3.Row object at 0x109305d90>, <sqlite3.Row object at 0x1091ef910>, <sqlite3.Row object at 0x1091efcd0>, <sqlite3.Row object at 0x1091efbb0>, <sqlite3.Row object at 0x1091efaf0>, <sqlite3.Row object at 0x1091efcf0>, <sqlite3.Row object at 0x1091efbd0>, <sqlite3.Row object at 0x1091ef7d0>, <sqlite3.Row object at 0x1091efd70>, <sqlite3.Row object at 0x1091ef830>, <sqlite3.Row object at 0x1091efc10>, <sqlite3.Row object at 0x1091ef9b0>, <sqlite3.Row object at 0x1091efbf0>, <sqlite3.Row object at 0x1091efc90>, <sqlite3.Row object at 0x1091efc50>, <sqlite3.Row object at 0x1091efcb0>, <sqlite3.Row object at 0x1091eff30>, <sqlite3.Row object at 0x109336870>, <sqlite3.Row object at 0x109336070>, <sqlite3.Row object at 0x1093360d0>, <sqlite3.Row object at 0x109336130>, <sqlite3.Row object at 0x109336190>, <sqlite3.Row object at 0x1093361f0>, <sqlite3.Row object at 0x109336250>, <sqlite3.Row object at 0x1093362b0>, <sqlite3.Row object at 0x109336310>, <sqlite3.Row object at 0x109336370>, <sqlite3.Row object at 0x1093363d0>, <sqlite3.Row object at 0x109336430>, <sqlite3.Row object at 0x109336490>, <sqlite3.Row object at 0x1093364f0>, <sqlite3.Row object at 0x109336550>, <sqlite3.Row object at 0x1093365b0>, <sqlite3.Row object at 0x109336610>, <sqlite3.Row object at 0x109336670>, <sqlite3.Row object at 0x1093366d0>, <sqlite3.Row object at 0x109336730>, <sqlite3.Row object at 0x109336790>, <sqlite3.Row object at 0x1093367b0>, <sqlite3.Row object at 0x1093368b0>, <sqlite3.Row object at 0x109336970>, <sqlite3.Row object at 0x109336a50>]
2025-06-19 13:48:43,456 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:48:43,456 - __main__ - INFO - Final Assistant Response (NL): Here are your transactions for June 2024. 

*   There were several deposits, including salary and check deposits, and interest credits.
*   You made withdrawals via POS purchases, ATM withdrawals, and fund transfers.
*   Service charges were also deducted during the month.

Want help reviewing this further?
2025-06-19 13:49:00,004 - __main__ - INFO - User Query (en): what were my top 3 largest withdrawals
2025-06-19 13:49:01,429 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:49:01,429 - __main__ - INFO - Generated SQL Query: SELECT Date, "Transaction Details", Withdrawals FROM bank_transactions WHERE Withdrawals IS NOT NULL ORDER BY Withdrawals DESC LIMIT 3;
2025-06-19 13:49:01,430 - __main__ - INFO - Database connection established.
2025-06-19 13:49:01,431 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1091efd70>, <sqlite3.Row object at 0x1091ef910>, <sqlite3.Row object at 0x1091efc90>]
2025-06-19 13:49:02,902 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:49:02,902 - __main__ - INFO - Final Assistant Response (NL): Okay, here are the top 3 largest withdrawals from your account:

*   A bills payment of â‚±9,993.80 on March 8, 2025.
*   An ATM withdrawal of â‚±9,986.01 on May 8, 2025.
*   A POS purchase of â‚±9,972.92 on October 15, 2024.

Let me know if that looks off!
2025-06-19 13:49:14,022 - __main__ - INFO - User Query (en): How much did I deposit in total for 2024
2025-06-19 13:49:15,192 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:49:15,192 - __main__ - INFO - Generated SQL Query: SELECT SUM(COALESCE(Deposits, 0)) AS Total_Deposits FROM bank_transactions WHERE strftime('%Y', Date) = '2024';
2025-06-19 13:49:15,194 - __main__ - INFO - Database connection established.
2025-06-19 13:49:15,196 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1091eff30>]
2025-06-19 13:49:16,523 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:49:16,523 - __main__ - INFO - Final Assistant Response (NL): You made total deposits of â‚±3,910,496.89 during 2024. That's a great year for your savings! Anything else you'd like to know?
2025-06-19 13:49:26,214 - __main__ - INFO - User Query (es): Â¿CuÃ¡nto es mi saldo actual
2025-06-19 13:49:27,286 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:49:27,286 - __main__ - INFO - Generated SQL Query: SELECT Balance FROM bank_transactions ORDER BY Date DESC LIMIT 1;
2025-06-19 13:49:27,287 - __main__ - INFO - Database connection established.
2025-06-19 13:49:27,288 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x1093053b0>]
2025-06-19 13:49:28,400 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:49:28,400 - __main__ - INFO - Final Assistant Response (NL): Â¡Hola! Tu saldo actual es de â‚±2,512,163.96. Â¿Te gustarÃ­a saber algo mÃ¡s sobre tu cuenta?
2025-06-19 13:49:33,757 - __main__ - INFO - Starting evaluation process...
2025-06-19 13:49:33,757 - __main__ - INFO - Processing Test Case 1/4: ID=1 - 'Show me all transactions for June 2024.'
2025-06-19 13:49:34,850 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:49:34,851 - __main__ - INFO - Database connection established.
2025-06-19 13:49:42,123 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:49:44,067 - __main__ - WARNING - Errors in Test Case 1: ['SQL execution result mismatch: Row count mismatch: 56 vs 52']
2025-06-19 13:49:44,068 - __main__ - INFO - Processing Test Case 2/4: ID=2 - 'Â¿CuÃ¡nto es mi saldo actual?'
2025-06-19 13:49:45,195 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:49:45,196 - __main__ - INFO - Database connection established.
2025-06-19 13:49:46,211 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:49:47,548 - __main__ - INFO - Processing Test Case 3/4: ID=3 - 'What were my top 3 largest withdrawals?'
2025-06-19 13:49:49,396 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:49:49,397 - __main__ - INFO - Database connection established.
2025-06-19 13:49:50,828 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:49:52,376 - __main__ - INFO - Processing Test Case 4/4: ID=4 - 'How much did I deposit in total for 2024?'
2025-06-19 13:49:53,592 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:49:53,594 - __main__ - INFO - Database connection established.
2025-06-19 13:49:54,820 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 13:49:56,296 - __main__ - WARNING - Errors in Test Case 4: ["SQL execution result mismatch: Result mismatch detected. First differing rows (max 5):\n  GT: ('3910496.89',)\n  Gen: ('3903724.39',)\n"]
2025-06-19 13:49:56,297 - __main__ - INFO - Evaluation complete.
2025-06-19 13:49:56,297 - __main__ - INFO - Overall Evaluation Results Summary:
{
  "timestamp": "2025-06-19 13:49:33 PST+0800",
  "total_test_cases": 4,
  "sql_execution_match_count": 2,
  "failed_sql_generation": 0,
  "failed_sql_execution": 0,
  "failed_ground_truth_execution": 0,
  "failed_nl_generation": 0,
  "failed_llm_judge": 0,
  "successful_end_to_end_cases": 2
}
2025-06-19 13:49:56,301 - __main__ - INFO - Evaluation results saved to evaluation_results/evaluation_results_20250619_134956.json
2025-06-19 13:49:56,302 - __main__ - INFO - Detailed evaluation results saved to evaluation_results/evaluation_details_20250619_134956.csv
2025-06-19 16:05:04,729 - __main__ - INFO - User Query (es): hola
2025-06-19 16:05:06,747 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:05:06,747 - __main__ - INFO - Generated SQL Query: None
2025-06-19 16:05:06,751 - __main__ - INFO - Database connection established.
2025-06-19 16:05:06,751 - __main__ - CRITICAL - An unexpected critical error occurred: argument 1 must be str, not None
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_conev.py", line 326, in chat
    cursor.execute(sql_query)
TypeError: argument 1 must be str, not None
2025-06-19 16:05:14,750 - __main__ - INFO - User Query (es): cual es mi saldo
2025-06-19 16:05:15,779 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:05:15,779 - __main__ - INFO - Generated SQL Query: SELECT Balance FROM bank_transactions ORDER BY Date DESC LIMIT 1;
2025-06-19 16:05:15,780 - __main__ - INFO - Database connection established.
2025-06-19 16:05:15,781 - __main__ - INFO - SQL Query Executed Successfully. Results: [<sqlite3.Row object at 0x10936b410>]
2025-06-19 16:05:16,791 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:05:16,791 - __main__ - INFO - Final Assistant Response (NL): Â¡Hola! Tu saldo actual es de â‚±2,512,163.96. Â¿Necesitas algo mÃ¡s?
2025-06-19 16:27:18,778 - __main__ - INFO - Flask Application started.
2025-06-19 16:27:18,796 - __main__ - INFO - Database connection established.
2025-06-19 16:27:18,796 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 16:27:18,842 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 16:27:19,120 - __main__ - INFO - Flask Application started.
2025-06-19 16:27:19,131 - __main__ - INFO - Database connection established.
2025-06-19 16:27:19,131 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 16:27:19,162 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 16:27:22,183 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-19 16:27:48,757 - __main__ - INFO - User Query (en): 'Show me all transactions for June 2024'
2025-06-19 16:27:51,316 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:27:51,317 - __main__ - INFO - Generated SQL Query: 'SELECT * FROM bank_transactions WHERE Date BETWEEN '2024-06-01' AND '2024-06-30' ORDER BY Date ASC;'
2025-06-19 16:27:51,319 - __main__ - INFO - Database connection established.
2025-06-19 16:27:51,321 - __main__ - INFO - SQL Query Executed Successfully. Results count: 52
2025-06-19 16:27:52,749 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:27:52,749 - __main__ - INFO - Final Assistant Response (NL): 'Here are your transactions for June 2024. I've listed them in order from the beginning to the end of the month. Take a look and let me know if anything catches your eye or if you need more details on any specific transaction!'
2025-06-19 16:28:08,479 - __main__ - INFO - User Query (en): 'What were my top 3 largest withdrawals'
2025-06-19 16:28:10,671 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:28:10,672 - __main__ - INFO - Generated SQL Query: 'SELECT Date, "Transaction Details", "Branch / Source", Withdrawals FROM bank_transactions WHERE Withdrawals IS NOT NULL ORDER BY Withdrawals DESC LIMIT 3;'
2025-06-19 16:28:10,674 - __main__ - INFO - Database connection established.
2025-06-19 16:28:10,676 - __main__ - INFO - SQL Query Executed Successfully. Results count: 3
2025-06-19 16:28:12,414 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:28:12,414 - __main__ - INFO - Final Assistant Response (NL): 'Okay, here are your top 3 largest withdrawals, listed from the biggest to the smallest:

*   **March 8, 2025:** Bills Payment at BDO QC - â‚±9,993.80
*   **May 8, 2025:** ATM Withdrawal at BDO Makati - â‚±9,986.01
*   **October 15, 2024:** POS Purchase at BDO Taguig - â‚±9,972.92

Do any of these transactions look unfamiliar or need further investigation? I'm here to help!'
2025-06-19 16:28:45,755 - __main__ - INFO - Flask Application started.
2025-06-19 16:28:45,770 - __main__ - INFO - Database connection established.
2025-06-19 16:28:45,771 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 16:28:45,816 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 16:28:45,856 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-19 16:28:59,269 - __main__ - INFO - User Query (en): 'Show me all transactions for June 2024.'
2025-06-19 16:29:03,611 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:29:03,612 - __main__ - INFO - Generated SQL Query: 'SELECT * FROM transactions WHERE Date_Timestamp LIKE '2024-06%';'
2025-06-19 16:29:03,614 - __main__ - INFO - Database connection established.
2025-06-19 16:29:03,616 - __main__ - INFO - SQL Query Executed Successfully. Results count: 46
2025-06-19 16:29:09,651 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:29:09,651 - __main__ - INFO - Final Assistant Response (NL): 'Here are your transactions for June 2024:

*   June 1: â‚±2,198.00 at Wildflour Cafe + Bakery - Ayala Center
*   June 2: â‚±224.00 at Krispy Kreme - Glorietta 4
*   June 3: â‚±274.00 at Yardstick Coffee - Legazpi Village, Makati
*   June 4: â‚±290.00 at Zus Coffee - EspaÃ±a and â‚±1,264.00 at Vikings - SM Mall of Asia
*   June 5: â‚±310.00 at Bo's Coffee - SM Megamall
*   June 6: â‚±278.00 at Starbucks - Glorietta 4
*   June 7: â‚±291.00 at Yardstick Coffee - Legazpi Village, Makati and â‚±627.00 at Dunkin' - Ortigas Center
*   June 8: â‚±335.00 at Chowking - Cubao - Cyberpark
*   June 9: â‚±297.00 at Yardstick Coffee - Legazpi Village, Makati and â‚±959.00 at Vikings - SM Mall of Asia
*   June 10: â‚±2,126.00 at Manam - Greenbelt 2
*   June 11: â‚±221.00 at Commune Cafe - Poblacion, Makati and â‚±900.00 at Burger King - Trinoma
*   June 12: â‚±150.00 at Zus Coffee - EspaÃ±a and â‚±1,566.00 at Marugame Udon - SM City Sta. Mesa
*   June 13: â‚±288.00 at Tim Hortons - Uptown Bonifacio and â‚±997.00 at KFC - Robinsons Galleria
*   June 14: Deposit of â‚±21,193.00 from MAMAMO INC., â‚±319.00 at Bo's Coffee - Legazpi Village and â‚±331.00 at Mang Inasal - Market! Market!
*   June 16: â‚±249.00 at Coffee Bean & Tea Leaf - Greenhills Promenade and â‚±696.00 at Pizza Hut - Tomas Morato
*   June 17: â‚±280.00 at Toby's Estate - Legazpi St, Makati
*   June 18: â‚±336.00 at Tim Hortons - Robinsons Place Manila
*   June 19: â‚±326.00 at Starbucks - Ayala Triangle, â‚±2,485.00 at Mesa - Greenbelt 5 and â‚±8,015.00 ATM Withdrawal at BPI ATM - Sampaloc
*   June 20: â‚±294.00 at Tim Hortons - Makati Central Square
*   June 21: â‚±224.00 at Bo's Coffee - SM Megamall
*   June 22: â‚±7,115.00 at Glorietta - Glorietta 1
*   June 23: â‚±187.00 at Coffee Bean & Tea Leaf - Trinoma and â‚±515.00 at Krispy Kreme - Glorietta 4
*   June 24: â‚±339.00 at Dunkin' - Ayala Triangle
*   June 25: â‚±335.00 at Zus Coffee - Taft
*   June 26: â‚±168.00 at Yardstick Coffee - Legazpi Village, Makati and â‚±586.00 at Bonchon Chicken - Ayala Malls Feliz
*   June 27: â‚±339.00 at Commune Cafe - Poblacion, Makati and â‚±483.00 at Mang Inasal - Starmall Alabang
*   June 28: Deposit of â‚±29,574.00 from MAMAMO INC., â‚±346.00 at Yardstick Coffee - Legazpi Village, Makati and â‚±247.00 at Pizza Hut - SM Megamall
*   June 29: â‚±410.00 at Krispy Kreme - Robinsons Antipolo
*   June 30: Interest Credit of â‚±143.93 and â‚±283.00 at Starbucks - Ayala Triangle

Is there anything else I can help you with today?'
2025-06-19 16:30:43,807 - __main__ - INFO - User Query (en): 'How much did I deposit in total for 2024'
2025-06-19 16:30:45,192 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:30:45,192 - __main__ - INFO - Generated SQL Query: 'SELECT SUM(COALESCE("Deposit_Amount", 0)) AS "Total Deposits" FROM transactions WHERE strftime('%Y', Date_Timestamp) = '2024';'
2025-06-19 16:30:45,194 - __main__ - INFO - Database connection established.
2025-06-19 16:30:45,195 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1
2025-06-19 16:30:46,317 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:30:46,317 - __main__ - INFO - Final Assistant Response (NL): 'For 2024, you made a total of â‚±835,991.83 in deposits.  Is there anything else I can help you with regarding your deposits?'
2025-06-19 16:30:58,670 - __main__ - INFO - User Query (en): 'Did I make any transactions on Christmas Day 2024'
2025-06-19 16:30:59,958 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:30:59,958 - __main__ - INFO - Generated SQL Query: 'SELECT * FROM transactions WHERE strftime('%Y-%m-%d', Date_Timestamp) = '2024-12-25';'
2025-06-19 16:30:59,959 - __main__ - INFO - Database connection established.
2025-06-19 16:30:59,961 - __main__ - INFO - SQL Query Executed Successfully. Results count: 2
2025-06-19 16:31:01,267 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:31:01,268 - __main__ - INFO - Final Assistant Response (NL): 'Yes, you made the following transactions on Christmas Day, December 25, 2024:

*   â‚±306.00 at Bo's Coffee - SM Megamall
*   â‚±423.00 at Greenwich - SM City Manila

Let me know if you have any other questions!'
2025-06-19 16:31:06,847 - __main__ - INFO - User Query (en): 'List all ATM withdrawals in January 2025'
2025-06-19 16:31:08,945 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:31:08,945 - __main__ - INFO - Generated SQL Query: 'SELECT Date_Timestamp, Withdrawal_Amount, Merchant_Counterparty_Name FROM transactions WHERE strftime('%Y', Date_Timestamp) = '2025' AND strftime('%m', Date_Timestamp) = '01' AND Merchant_Counterparty_Name LIKE '%ATM%' AND Withdrawal_Amount > 0 ORDER BY Date_Timestamp ASC;'
2025-06-19 16:31:08,947 - __main__ - INFO - Database connection established.
2025-06-19 16:31:08,949 - __main__ - INFO - SQL Query Executed Successfully. Results count: 0
2025-06-19 16:31:10,354 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:31:10,355 - __main__ - INFO - Final Assistant Response (NL): 'There were no ATM withdrawals in January 2025. Need anything else?'
2025-06-19 16:31:23,162 - __main__ - INFO - User Query (en): 'how many coffee shop transactions did I have in February 2024'
2025-06-19 16:31:24,374 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:31:24,374 - __main__ - INFO - Generated SQL Query: 'SELECT COUNT(*) FROM transactions WHERE strftime('%Y-%m', Date_Timestamp) = '2024-02' AND LOWER("Merchant_Counterparty_Name") LIKE '%coffee%';'
2025-06-19 16:31:24,375 - __main__ - INFO - Database connection established.
2025-06-19 16:31:24,377 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1
2025-06-19 16:31:25,740 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:31:25,740 - __main__ - INFO - Final Assistant Response (NL): 'You had 12 coffee shop transactions in February 2024. Anything else you'd like to know?'
2025-06-19 16:31:34,943 - __main__ - INFO - User Query (en): 'Show me all refunds'
2025-06-19 16:31:36,195 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:31:36,195 - __main__ - INFO - Generated SQL Query: 'SELECT * FROM transactions WHERE "Transaction_Details" LIKE '%refund%';'
2025-06-19 16:31:36,196 - __main__ - INFO - Database connection established.
2025-06-19 16:31:36,199 - __main__ - INFO - SQL Query Executed Successfully. Results count: 10
2025-06-19 16:31:38,642 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:31:38,643 - __main__ - INFO - Final Assistant Response (NL): 'Here are all your refunds:

*   Jan 17, 2024: â‚±2,401.00 refund from LAZADA
*   Mar 01, 2024: â‚±3,539.00 refund from SHEIN
*   Mar 21, 2024: â‚±4,224.00 refund from LAZADA
*   Mar 30, 2024: â‚±1,464.00 refund from SHOPEE
*   Sep 18, 2024: â‚±483.00 refund from GRAB
*   Dec 21, 2024: â‚±1,909.00 refund from LAZADA
*   Jan 08, 2025: â‚±1,328.00 refund from TIKTOK SHP
*   Apr 25, 2025: â‚±3,668.00 refund from SHEIN
*   May 20, 2025: â‚±2,761.00 refund from SHOPEE
*   Jun 16, 2025: â‚±845.00 refund from SHEIN

Is there anything else you need help with?'
2025-06-19 16:31:54,327 - __main__ - INFO - User Query (es): 'Â¿CuÃ¡nto es mi saldo actual'
2025-06-19 16:31:55,433 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:31:55,433 - __main__ - INFO - Generated SQL Query: 'SELECT Recurring_Existing_Balance FROM transactions ORDER BY Date_Timestamp DESC LIMIT 1;'
2025-06-19 16:31:55,433 - __main__ - INFO - Database connection established.
2025-06-19 16:31:55,435 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1
2025-06-19 16:31:56,459 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:31:56,460 - __main__ - INFO - Final Assistant Response (NL): 'Tu saldo actual es de â‚±288,486.18.  Â¿Necesitas algo mÃ¡s?'
2025-06-19 16:32:04,377 - __main__ - INFO - User Query (es): 'Â¿CuÃ¡l fue la transacciÃ³n mÃ¡s grande en un restaurante en 2024'
2025-06-19 16:32:06,086 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:32:06,086 - __main__ - INFO - Generated SQL Query: 'SELECT Date_Timestamp, Merchant_Counterparty_Name, Withdrawal_Amount, Deposit_Amount FROM transactions WHERE strftime('%Y', Date_Timestamp) = '2024' AND LOWER(Transaction_Details) LIKE '%restaurant%' ORDER BY Withdrawal_Amount DESC, Deposit_Amount DESC LIMIT 1;'
2025-06-19 16:32:06,087 - __main__ - INFO - Database connection established.
2025-06-19 16:32:06,089 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1
2025-06-19 16:32:07,746 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:32:07,747 - __main__ - INFO - Final Assistant Response (NL): 'La transacciÃ³n mÃ¡s grande que hiciste en un restaurante en 2024 fue el 6 de agosto de 2024 en Buddy's Restaurant - SM Lucena, por un monto de â‚±2,936.00. Â¿Te gustarÃ­a ver algo mÃ¡s?'
2025-06-19 16:32:28,520 - __main__ - INFO - User Query (es): 'CuÃ¡nto gastÃ© en transporte en marzo de 2025'
2025-06-19 16:32:30,047 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:32:30,047 - __main__ - INFO - Generated SQL Query: 'SELECT SUM(COALESCE("Withdrawal_Amount", 0)) AS total_spent_on_transportation FROM transactions WHERE strftime('%Y', Date_Timestamp) = '2025' AND strftime('%m', Date_Timestamp) = '03' AND LOWER("Transaction_Details") LIKE '%transport%''
2025-06-19 16:32:30,049 - __main__ - INFO - Database connection established.
2025-06-19 16:32:30,051 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1
2025-06-19 16:32:31,582 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:32:31,583 - __main__ - INFO - Final Assistant Response (NL): 'Â¡Hola! Parece que no tienes ningÃºn gasto registrado en transporte durante marzo de 2025. Â¿Quieres que revise algÃºn otro mes o categorÃ­a?'
2025-06-19 16:32:53,428 - __main__ - INFO - Flask Application started.
2025-06-19 16:32:53,443 - __main__ - INFO - Database connection established.
2025-06-19 16:32:53,443 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 16:32:53,488 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 16:33:02,284 - __main__ - INFO - Evaluation route triggered.
2025-06-19 16:33:04,501 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:33:04,502 - __main__ - INFO - Database connection established.
2025-06-19 16:33:04,502 - __main__ - ERROR - Test Case 1: Ground Truth SQL execution error: no such table: bank_transactions
2025-06-19 16:33:06,903 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:33:09,431 - __main__ - INFO - Test Case 1: LLM Judge verdict received.
2025-06-19 16:33:10,698 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:33:10,698 - __main__ - INFO - Database connection established.
2025-06-19 16:33:10,699 - __main__ - ERROR - Test Case 2: Ground Truth SQL execution error: no such table: bank_transactions
2025-06-19 16:33:11,722 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:33:13,258 - __main__ - INFO - Test Case 2: LLM Judge verdict received.
2025-06-19 16:33:18,992 - __main__ - ERROR - Error decoding JSON from Gemini: Expecting value: line 1 column 1 (char 0). Raw content: START>>>```python
def generate_response(user_query):
    import datetime

    current_date = datetime.datetime(2025, 6, 19, 16, 33, 13)

    if "hello" in user_query.lower() or "hi" in user_query.lower() or "good morning" in user_query.lower() or "good afternoon" in user_query.lower() or "good evening" in user_query.lower():
        sql = ""
        natural_language_response = "Hey there! How can I help you manage your finances today?"
        return {"sql": sql, "natural_language_response": natural_language_response}
    
    if "bank name" in user_query.lower():
        sql = ""
        natural_language_response = "I'm not supposed to reveal the bank's name. But I'm happy to help you with your transactions."
        return {"sql": sql, "natural_language_response": natural_language_response}

    if "top 3 largest withdrawals" in user_query.lower():
        sql = "SELECT Date_Timestamp, Transaction_ID, Merchant_Counterparty_Name, Withdrawal_Amount FROM transactions WHERE Withdrawal_Amount IS NOT NULL ORDER BY Withdrawal_Amount DESC LIMIT 3;"
        natural_language_response = "Here are your top 3 largest withdrawals:\n\nI hope this helps! Let me know if you have any more questions."
        return {"sql": sql, "natural_language_response": natural_language_response}

    if "service charges" in user_query.lower() or "service charge" in user_query.lower():
        sql = "SELECT SUM(COALESCE(Withdrawal_Amount, 0)) AS Total_Service_Charges FROM transactions WHERE LOWER(\"Transaction_Details\") LIKE '%service charge%';"
        natural_language_response = "I've calculated the total amount you've spent on service charges."
        return {"sql": sql, "natural_language_response": natural_language_response}
    
    if "transactions" in user_query.lower() and "range" in user_query.lower():
        sql = "SELECT Date_Timestamp, Transaction_ID, Transaction_Details, Merchant_Counterparty_Name, Withdrawal_Amount, Deposit_Amount, Recurring_Existing_Balance FROM transactions ORDER BY Date_Timestamp ASC;"
        natural_language_response = "Here's a complete list of your transactions. Let me know if you need anything else!"
        return {"sql": sql, "natural_language_response": natural_language_response}

    if "balance" in user_query.lower() and ("below" in user_query.lower() or "less than" in user_query.lower()):
        sql = "SELECT Date_Timestamp, Transaction_ID, Transaction_Details, Recurring_Existing_Balance FROM transactions WHERE Recurring_Existing_Balance < 30000 ORDER BY Date_Timestamp ASC;"
        natural_language_response = "Here's a list of your transactions when your balance dipped below â‚±30,000.00. Do you want to review these further?"
        return {"sql": sql, "natural_language_response": natural_language_response}

    if "eid al-adha" in user_query.lower():
         sql = "SELECT Date_Timestamp, Transaction_ID, Transaction_Details, Merchant_Counterparty_Name, Withdrawal_Amount, Deposit_Amount, Recurring_Existing_Balance FROM transactions WHERE Date(Date_Timestamp) = '2025-06-06' ORDER BY Date_Timestamp ASC;"
         natural_language_response = "Here are your transactions for Eid al-Adha (June 6, 2025). Need anything else?"
         return {"sql": sql, "natural_language_response": natural_language_response}
    
    if "withdrawals" in user_query.lower() and "deposits" in user_query.lower():
        sql = "SELECT Date_Timestamp, Transaction_Details, Withdrawal_Amount, Deposit_Amount FROM transactions ORDER BY Date_Timestamp ASC;"
        natural_language_response = "Here's a breakdown of your withdrawals and deposits, chronologically ordered. Is there anything specific you're looking for?"
        return {"sql": sql, "natural_language_response": natural_language_response}

    return {
        "sql": "SELECT 1;",
        "natural_language_response": "I am sorry, I cannot fulfill this request. Please rephrase your request"
    }
```<<<END
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_conev.py", line 292, in get_gemini_response
    response_dict = json.loads(json_str)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
2025-06-19 16:33:18,997 - __main__ - ERROR - Test Case 3: Bot failed to generate SQL: Error decoding JSON from Gemini: Expecting value: line 1 column 1 (char 0)
2025-06-19 16:33:20,146 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:33:20,148 - __main__ - INFO - Database connection established.
2025-06-19 16:33:20,148 - __main__ - ERROR - Test Case 4: Ground Truth SQL execution error: no such table: bank_transactions
2025-06-19 16:33:21,419 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:33:22,872 - __main__ - INFO - Test Case 4: LLM Judge verdict received.
2025-06-19 16:33:24,010 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:33:24,012 - __main__ - INFO - Database connection established.
2025-06-19 16:33:24,013 - __main__ - ERROR - Test Case 5: Ground Truth SQL execution error: no such table: bank_transactions
2025-06-19 16:33:25,238 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:33:27,186 - __main__ - INFO - Test Case 5: LLM Judge verdict received.
2025-06-19 16:33:29,233 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:33:29,234 - __main__ - INFO - Database connection established.
2025-06-19 16:33:29,235 - __main__ - ERROR - Test Case 6: Ground Truth SQL execution error: no such table: bank_transactions
2025-06-19 16:33:30,503 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:33:32,305 - __main__ - INFO - Test Case 6: LLM Judge verdict received.
2025-06-19 16:33:32,512 - __main__ - ERROR - An error occurred during Gemini API call: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerMinutePerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-2.0-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 15
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 27
}
]
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_conev.py", line 280, in get_gemini_response
    gemini_response = model_obj.generate_content(full_prompt)
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/generativeai/generative_models.py", line 331, in generate_content
    response = self._client.generate_content(
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py", line 835, in generate_content
    response = rpc(
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/retry/retry_unary.py", line 294, in retry_wrapped_func
    return retry_target(
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/retry/retry_unary.py", line 156, in retry_target
    next_sleep = _retry_error_helper(
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/retry/retry_base.py", line 214, in _retry_error_helper
    raise final_exc from source_exc
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/retry/retry_unary.py", line 147, in retry_target
    result = target()
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/grpc_helpers.py", line 78, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ResourceExhausted: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerMinutePerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-2.0-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 15
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 27
}
]
2025-06-19 16:33:32,531 - __main__ - ERROR - Test Case 7: Bot failed to generate SQL: An error occurred during Gemini API call: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerMinutePerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-2.0-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 15
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 27
}
]
2025-06-19 16:33:33,430 - __main__ - ERROR - An error occurred during Gemini API call: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerMinutePerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-2.0-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 15
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 26
}
]
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_conev.py", line 280, in get_gemini_response
    gemini_response = model_obj.generate_content(full_prompt)
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/generativeai/generative_models.py", line 331, in generate_content
    response = self._client.generate_content(
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py", line 835, in generate_content
    response = rpc(
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/retry/retry_unary.py", line 294, in retry_wrapped_func
    return retry_target(
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/retry/retry_unary.py", line 156, in retry_target
    next_sleep = _retry_error_helper(
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/retry/retry_base.py", line 214, in _retry_error_helper
    raise final_exc from source_exc
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/retry/retry_unary.py", line 147, in retry_target
    result = target()
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/grpc_helpers.py", line 78, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ResourceExhausted: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerMinutePerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-2.0-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 15
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 26
}
]
2025-06-19 16:33:33,431 - __main__ - ERROR - Test Case 8: Bot failed to generate SQL: An error occurred during Gemini API call: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerMinutePerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-2.0-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 15
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 26
}
]
2025-06-19 16:33:33,634 - __main__ - ERROR - An error occurred during Gemini API call: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerMinutePerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-2.0-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 15
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 26
}
]
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_conev.py", line 280, in get_gemini_response
    gemini_response = model_obj.generate_content(full_prompt)
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/generativeai/generative_models.py", line 331, in generate_content
    response = self._client.generate_content(
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py", line 835, in generate_content
    response = rpc(
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/retry/retry_unary.py", line 294, in retry_wrapped_func
    return retry_target(
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/retry/retry_unary.py", line 156, in retry_target
    next_sleep = _retry_error_helper(
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/retry/retry_base.py", line 214, in _retry_error_helper
    raise final_exc from source_exc
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/retry/retry_unary.py", line 147, in retry_target
    result = target()
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/grpc_helpers.py", line 78, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ResourceExhausted: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerMinutePerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-2.0-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 15
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 26
}
]
2025-06-19 16:33:33,636 - __main__ - ERROR - Test Case 9: Bot failed to generate SQL: An error occurred during Gemini API call: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerMinutePerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-2.0-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 15
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 26
}
]
2025-06-19 16:33:33,643 - __main__ - INFO - Evaluation process completed.
2025-06-19 16:35:17,008 - __main__ - INFO - Flask Application started.
2025-06-19 16:35:17,027 - __main__ - INFO - Database connection established.
2025-06-19 16:35:17,027 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 16:35:17,080 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 16:35:21,742 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-19 16:35:52,192 - __main__ - INFO - Flask Application started.
2025-06-19 16:35:52,209 - __main__ - INFO - Database connection established.
2025-06-19 16:35:52,209 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 16:35:52,263 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 16:35:52,587 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-19 16:35:59,832 - __main__ - INFO - User Query (en): 'Show me all transactions for June 2024'
2025-06-19 16:36:02,009 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:36:02,009 - __main__ - INFO - Generated SQL Query: 'SELECT * FROM transactions WHERE Date_Timestamp LIKE '2024-06%' ORDER BY Date_Timestamp ASC;'
2025-06-19 16:36:02,010 - __main__ - INFO - Database connection established.
2025-06-19 16:36:02,013 - __main__ - INFO - SQL Query Executed Successfully. Results count: 46
2025-06-19 16:36:09,178 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:36:09,179 - __main__ - INFO - Final Assistant Response (NL): 'Here are all your transactions for June 2024:

*   **June 1, 2024:** â‚±2,198.00 at Wildflour Cafe + Bakery - Ayala Center
*   **June 2, 2024:** â‚±224.00 at Krispy Kreme - Glorietta 4
*   **June 3, 2024:** â‚±274.00 at Yardstick Coffee - Legazpi Village, Makati
*   **June 4, 2024:** â‚±290.00 at Zus Coffee - EspaÃ±a and â‚±1,264.00 at Vikings - SM Mall of Asia
*   **June 5, 2024:** â‚±310.00 at Bo's Coffee - SM Megamall
*   **June 6, 2024:** â‚±278.00 at Starbucks - Glorietta 4
*   **June 7, 2024:** â‚±291.00 at Yardstick Coffee - Legazpi Village, Makati and â‚±627.00 at Dunkin' - Ortigas Center
*   **June 8, 2024:** â‚±335.00 at Chowking - Cubao - Cyberpark
*   **June 9, 2024:** â‚±297.00 at Yardstick Coffee - Legazpi Village, Makati and â‚±959.00 at Vikings - SM Mall of Asia
*   **June 10, 2024:** â‚±2,126.00 at Manam - Greenbelt 2
*   **June 11, 2024:** â‚±221.00 at Commune Cafe - Poblacion, Makati and â‚±900.00 at Burger King - Trinoma
*   **June 12, 2024:** â‚±150.00 at Zus Coffee - EspaÃ±a and â‚±1,566.00 at Marugame Udon - SM City Sta. Mesa
*   **June 13, 2024:** â‚±288.00 at Tim Hortons - Uptown Bonifacio and â‚±997.00 at KFC - Robinsons Galleria
*   **June 14, 2024:** Salary credit of â‚±21,193.00 from MAMAMO INC., â‚±319.00 at Bo's Coffee - Legazpi Village, and â‚±331.00 at Mang Inasal - Market! Market!
*   **June 16, 2024:** â‚±249.00 at Coffee Bean & Tea Leaf - Greenhills Promenade and â‚±696.00 at Pizza Hut - Tomas Morato
*   **June 17, 2024:** â‚±280.00 at Toby's Estate - Legazpi St, Makati
*   **June 18, 2024:** â‚±336.00 at Tim Hortons - Robinsons Place Manila
*   **June 19, 2024:** â‚±326.00 at Starbucks - Ayala Triangle, â‚±2,485.00 at Mesa - Greenbelt 5, and ATM withdrawal of â‚±8,015.00 from BPI ATM - Sampaloc
*   **June 20, 2024:** â‚±294.00 at Tim Hortons - Makati Central Square
*   **June 21, 2024:** â‚±224.00 at Bo's Coffee - SM Megamall
*   **June 22, 2024:** â‚±7,115.00 at Glorietta - Glorietta 1
*   **June 23, 2024:** â‚±187.00 at Coffee Bean & Tea Leaf - Trinoma and â‚±515.00 at Krispy Kreme - Glorietta 4
*   **June 24, 2024:** â‚±339.00 at Dunkin' - Ayala Triangle
*   **June 25, 2024:** â‚±335.00 at Zus Coffee - Taft
*   **June 26, 2024:** â‚±168.00 at Yardstick Coffee - Legazpi Village, Makati and â‚±586.00 at Bonchon Chicken - Ayala Malls Feliz
*   **June 27, 2024:** â‚±339.00 at Commune Cafe - Poblacion, Makati and â‚±483.00 at Mang Inasal - Starmall Alabang
*   **June 28, 2024:** Salary credit of â‚±29,574.00 from MAMAMO INC., â‚±346.00 at Yardstick Coffee - Legazpi Village, Makati, and â‚±247.00 at Pizza Hut - SM Megamall
*   **June 29, 2024:** â‚±410.00 at Krispy Kreme - Robinsons Antipolo
*   **June 30, 2024:** Interest credit of â‚±143.93 from BANK INTEREST and â‚±283.00 at Starbucks - Ayala Triangle

Is there anything else I can help you with today?'
2025-06-19 16:37:03,183 - __main__ - INFO - User Query (en): 'What were my top 3 largest withdrawals?'
2025-06-19 16:37:04,984 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:37:04,984 - __main__ - INFO - Generated SQL Query: 'SELECT Date_Timestamp, Withdrawal_Amount, Merchant_Counterparty_Name FROM transactions WHERE Withdrawal_Amount IS NOT NULL ORDER BY Withdrawal_Amount DESC LIMIT 3;'
2025-06-19 16:37:04,986 - __main__ - INFO - Database connection established.
2025-06-19 16:37:04,988 - __main__ - INFO - SQL Query Executed Successfully. Results count: 3
2025-06-19 16:37:06,725 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:37:06,725 - __main__ - INFO - Final Assistant Response (NL): 'Okay, here are your top 3 largest withdrawals:

*   **April 19, 2025:** â‚±10,018.00 from RCBC ATM - Makati - Circuit
*   **August 11, 2024:** â‚±9,883.00 at Glorietta - Glorietta 2
*   **January 11, 2025:** â‚±9,597.00 at Power Mac Center - SM San Lazaro

Let me know if that looks off!'
2025-06-19 16:37:16,019 - __main__ - INFO - User Query (en): 'How much did I deposit in total for 2024?'
2025-06-19 16:37:17,374 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:37:17,374 - __main__ - INFO - Generated SQL Query: 'SELECT SUM(COALESCE("Deposit_Amount", 0)) AS total_deposits FROM transactions WHERE strftime('%Y', Date_Timestamp) = '2024';'
2025-06-19 16:37:17,375 - __main__ - INFO - Database connection established.
2025-06-19 16:37:17,376 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1
2025-06-19 16:37:18,708 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:37:18,708 - __main__ - INFO - Final Assistant Response (NL): 'Your total deposits for 2024 were â‚±835,991.83. Do you need a breakdown of these deposits?'
2025-06-19 16:37:28,048 - __main__ - INFO - User Query (en): 'did I make any transactions on Christmas Day 2024'
2025-06-19 16:37:29,642 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:37:29,642 - __main__ - INFO - Generated SQL Query: 'SELECT * FROM transactions WHERE Date_Timestamp LIKE '%December 25, 2024%''
2025-06-19 16:37:29,643 - __main__ - INFO - Database connection established.
2025-06-19 16:37:29,645 - __main__ - INFO - SQL Query Executed Successfully. Results count: 0
2025-06-19 16:37:31,075 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:37:31,075 - __main__ - INFO - Final Assistant Response (NL): 'Checking your records, it seems you didn't have any transactions on Christmas Day in 2024. Maybe you were too busy enjoying the holiday! Anything else you'd like to know?'
2025-06-19 16:37:51,338 - __main__ - INFO - User Query (en): 'List all ATM withdrawals in January 2025'
2025-06-19 16:37:53,652 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:37:53,652 - __main__ - INFO - Generated SQL Query: 'SELECT Date_Timestamp, Transaction_ID, Withdrawal_Amount, "Transaction Details", Merchant_Counterparty_Name FROM transactions WHERE Date_Timestamp LIKE '2025-01%' AND LOWER("Transaction Details") LIKE '%atm withdrawal%' ORDER BY Date_Timestamp ASC;'
2025-06-19 16:37:53,653 - __main__ - INFO - Database connection established.
2025-06-19 16:37:53,654 - __main__ - INFO - SQL Query Executed Successfully. Results count: 0
2025-06-19 16:37:55,137 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:37:55,138 - __main__ - INFO - Final Assistant Response (NL): 'Okay, I checked for ATM withdrawals in January 2025, but it seems like there weren't any during that time. Is there anything else I can look into for you?'
2025-06-19 16:38:04,147 - __main__ - INFO - User Query (en): 'How many coffee shop transactions did I have in February 2024'
2025-06-19 16:38:05,479 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:38:05,479 - __main__ - INFO - Generated SQL Query: 'SELECT COUNT(*) FROM transactions WHERE strftime('%Y', Date_Timestamp) = '2024' AND strftime('%m', Date_Timestamp) = '02' AND LOWER("Merchant_Counterparty_Name") LIKE '%coffee%';'
2025-06-19 16:38:05,480 - __main__ - INFO - Database connection established.
2025-06-19 16:38:05,482 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1
2025-06-19 16:38:06,781 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:38:06,782 - __main__ - INFO - Final Assistant Response (NL): 'Looks like you had 12 transactions at coffee shops in February 2024. That's a lot of caffeine! Anything else I can help you with?'
2025-06-19 16:38:19,080 - __main__ - INFO - User Query (en): 'Show me all refunds'
2025-06-19 16:38:20,366 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:38:20,366 - __main__ - INFO - Generated SQL Query: 'SELECT * FROM transactions WHERE LOWER("Transaction Details") LIKE '%refund%';'
2025-06-19 16:38:20,367 - __main__ - INFO - Database connection established.
2025-06-19 16:38:20,367 - __main__ - INFO - SQL Query Executed Successfully. Results count: 0
2025-06-19 16:38:21,427 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:38:21,428 - __main__ - INFO - Final Assistant Response (NL): 'I looked for refunds in your transaction history, but it seems there aren't any recorded. Let me know if there's anything else you'd like me to check!'
2025-06-19 16:38:27,689 - __main__ - INFO - Evaluation route triggered.
2025-06-19 16:38:28,827 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:38:28,828 - __main__ - INFO - Database connection established.
2025-06-19 16:38:28,831 - __main__ - WARNING - Test Case 1: SQL execution result mismatch.
2025-06-19 16:38:36,507 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:38:38,661 - __main__ - INFO - Test Case 1: LLM Judge verdict received.
2025-06-19 16:38:40,808 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:38:40,809 - __main__ - INFO - Database connection established.
2025-06-19 16:38:40,812 - __main__ - WARNING - Test Case 2: SQL execution result mismatch.
2025-06-19 16:38:42,446 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:38:44,085 - __main__ - INFO - Test Case 2: LLM Judge verdict received.
2025-06-19 16:38:45,314 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:38:45,315 - __main__ - INFO - Database connection established.
2025-06-19 16:38:46,440 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:38:47,955 - __main__ - INFO - Test Case 3: LLM Judge verdict received.
2025-06-19 16:38:48,164 - __main__ - ERROR - An error occurred during Gemini API call: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerMinutePerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-2.0-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 15
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 11
}
]
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_conev.py", line 280, in get_gemini_response
    gemini_response = model_obj.generate_content(full_prompt)
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/generativeai/generative_models.py", line 331, in generate_content
    response = self._client.generate_content(
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py", line 835, in generate_content
    response = rpc(
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/retry/retry_unary.py", line 294, in retry_wrapped_func
    return retry_target(
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/retry/retry_unary.py", line 156, in retry_target
    next_sleep = _retry_error_helper(
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/retry/retry_base.py", line 214, in _retry_error_helper
    raise final_exc from source_exc
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/retry/retry_unary.py", line 147, in retry_target
    result = target()
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/grpc_helpers.py", line 78, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ResourceExhausted: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerMinutePerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-2.0-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 15
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 11
}
]
2025-06-19 16:38:48,184 - __main__ - ERROR - Test Case 4: Bot failed to generate SQL: An error occurred during Gemini API call: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerMinutePerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-2.0-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 15
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 11
}
]
2025-06-19 16:38:48,982 - __main__ - ERROR - An error occurred during Gemini API call: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerMinutePerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-2.0-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 15
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 11
}
]
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_conev.py", line 280, in get_gemini_response
    gemini_response = model_obj.generate_content(full_prompt)
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/generativeai/generative_models.py", line 331, in generate_content
    response = self._client.generate_content(
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py", line 835, in generate_content
    response = rpc(
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/retry/retry_unary.py", line 294, in retry_wrapped_func
    return retry_target(
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/retry/retry_unary.py", line 156, in retry_target
    next_sleep = _retry_error_helper(
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/retry/retry_base.py", line 214, in _retry_error_helper
    raise final_exc from source_exc
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/retry/retry_unary.py", line 147, in retry_target
    result = target()
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/grpc_helpers.py", line 78, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ResourceExhausted: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerMinutePerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-2.0-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 15
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 11
}
]
2025-06-19 16:38:48,983 - __main__ - ERROR - Test Case 5: Bot failed to generate SQL: An error occurred during Gemini API call: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerMinutePerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-2.0-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 15
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 11
}
]
2025-06-19 16:38:50,434 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:38:50,435 - __main__ - INFO - Database connection established.
2025-06-19 16:38:50,437 - __main__ - WARNING - Test Case 6: SQL execution result mismatch.
2025-06-19 16:38:51,612 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:38:53,629 - __main__ - INFO - Test Case 6: LLM Judge verdict received.
2025-06-19 16:38:54,641 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:38:54,642 - __main__ - INFO - Database connection established.
2025-06-19 16:38:54,644 - __main__ - WARNING - Test Case 7: SQL execution result mismatch.
2025-06-19 16:38:57,192 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:38:58,832 - __main__ - INFO - Test Case 7: LLM Judge verdict received.
2025-06-19 16:38:58,839 - __main__ - INFO - Evaluation process completed.
2025-06-19 16:42:43,589 - __main__ - INFO - Flask Application started.
2025-06-19 16:42:43,607 - __main__ - INFO - Database connection established.
2025-06-19 16:42:43,607 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 16:42:43,665 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 16:42:47,467 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-19 16:43:46,960 - __main__ - INFO - User Query (en): 'Show me all transactions for June 2024'
2025-06-19 16:43:49,168 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:43:49,168 - __main__ - INFO - Generated SQL Query: 'SELECT * FROM transactions WHERE strftime('%Y-%m', Date_Timestamp) = '2024-06' ORDER BY Date_Timestamp;'
2025-06-19 16:43:49,169 - __main__ - INFO - Database connection established.
2025-06-19 16:43:49,170 - __main__ - INFO - SQL Query Executed Successfully. Results count: 46
2025-06-19 16:43:56,716 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:43:56,717 - __main__ - INFO - Final Assistant Response (NL): 'Here are all the transactions from June 2024, neatly arranged from the beginning to the end of the month:

*   **June 1, 2024:** â‚±2,198.00 at Wildflour Cafe + Bakery - Ayala Center
*   **June 2, 2024:** â‚±224.00 at Krispy Kreme - Glorietta 4
*   **June 3, 2024:** â‚±274.00 at Yardstick Coffee - Legazpi Village, Makati
*   **June 4, 2024:** â‚±290.00 at Zus Coffee - EspaÃ±a and â‚±1,264.00 at Vikings - SM Mall of Asia
*   **June 5, 2024:** â‚±310.00 at Bo's Coffee - SM Megamall
*   **June 6, 2024:** â‚±278.00 at Starbucks - Glorietta 4
*   **June 7, 2024:** â‚±291.00 at Yardstick Coffee - Legazpi Village, Makati and â‚±627.00 at Dunkin' - Ortigas Center
*   **June 8, 2024:** â‚±335.00 at Chowking - Cubao - Cyberpark
*   **June 9, 2024:** â‚±297.00 at Yardstick Coffee - Legazpi Village, Makati and â‚±959.00 at Vikings - SM Mall of Asia
*   **June 10, 2024:** â‚±2,126.00 at Manam - Greenbelt 2
*   **June 11, 2024:** â‚±221.00 at Commune Cafe - Poblacion, Makati and â‚±900.00 at Burger King - Trinoma
*   **June 12, 2024:** â‚±150.00 at Zus Coffee - EspaÃ±a and â‚±1,566.00 at Marugame Udon - SM City Sta. Mesa
*   **June 13, 2024:** â‚±288.00 at Tim Hortons - Uptown Bonifacio and â‚±997.00 at KFC - Robinsons Galleria
*   **June 14, 2024:** Deposit of â‚±21,193.00 from MAMAMO INC., â‚±319.00 at Bo's Coffee - Legazpi Village, and â‚±331.00 at Mang Inasal - Market! Market!
*   **June 16, 2024:** â‚±249.00 at Coffee Bean & Tea Leaf - Greenhills Promenade and â‚±696.00 at Pizza Hut - Tomas Morato
*   **June 17, 2024:** â‚±280.00 at Toby's Estate - Legazpi St, Makati
*   **June 18, 2024:** â‚±336.00 at Tim Hortons - Robinsons Place Manila
*   **June 19, 2024:** â‚±326.00 at Starbucks - Ayala Triangle, â‚±2,485.00 at Mesa - Greenbelt 5, and ATM withdrawal of â‚±8,015.00 from BPI ATM - Sampaloc
*   **June 20, 2024:** â‚±294.00 at Tim Hortons - Makati Central Square
*   **June 21, 2024:** â‚±224.00 at Bo's Coffee - SM Megamall
*   **June 22, 2024:** â‚±7,115.00 at Glorietta - Glorietta 1
*   **June 23, 2024:** â‚±187.00 at Coffee Bean & Tea Leaf - Trinoma and â‚±515.00 at Krispy Kreme - Glorietta 4
*   **June 24, 2024:** â‚±339.00 at Dunkin' - Ayala Triangle
*   **June 25, 2024:** â‚±335.00 at Zus Coffee - Taft
*   **June 26, 2024:** â‚±168.00 at Yardstick Coffee - Legazpi Village, Makati and â‚±586.00 at Bonchon Chicken - Ayala Malls Feliz
*   **June 27, 2024:** â‚±339.00 at Commune Cafe - Poblacion, Makati and â‚±483.00 at Mang Inasal - Starmall Alabang
*   **June 28, 2024:** Deposit of â‚±29,574.00 from MAMAMO INC., â‚±346.00 at Yardstick Coffee - Legazpi Village, Makati, and â‚±247.00 at Pizza Hut - SM Megamall
*   **June 29, 2024:** â‚±410.00 at Krispy Kreme - Robinsons Antipolo
*   **June 30, 2024:** Interest credit of â‚±143.93 from BANK INTEREST and â‚±283.00 at Starbucks - Ayala Triangle

Is there anything specific you'd like to explore further?'
2025-06-19 16:43:59,868 - __main__ - INFO - User Query (en): 'What were my top 3 largest withdrawals'
2025-06-19 16:44:01,527 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:44:01,528 - __main__ - INFO - Generated SQL Query: 'SELECT Date_Timestamp, Merchant_Counterparty_Name, Withdrawal_Amount FROM transactions WHERE Withdrawal_Amount IS NOT NULL ORDER BY Withdrawal_Amount DESC LIMIT 3;'
2025-06-19 16:44:01,529 - __main__ - INFO - Database connection established.
2025-06-19 16:44:01,531 - __main__ - INFO - SQL Query Executed Successfully. Results count: 3
2025-06-19 16:44:03,258 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:44:03,259 - __main__ - INFO - Final Assistant Response (NL): 'Here are your top 3 largest withdrawals:

*   **April 19, 2025:** â‚±10,018.00 from RCBC ATM - Makati - Circuit
*   **August 11, 2024:** â‚±9,883.00 at Glorietta - Glorietta 2
*   **January 11, 2025:** â‚±9,597.00 at Power Mac Center - SM San Lazaro

Need a closer look at any of these?'
2025-06-19 16:44:14,142 - __main__ - INFO - User Query (en): 'How much did I deposit in total for 2024'
2025-06-19 16:44:15,454 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:44:15,454 - __main__ - INFO - Generated SQL Query: 'SELECT SUM(COALESCE(Deposit_Amount, 0)) AS Total_Deposits FROM transactions WHERE STRFTIME('%Y', Date_Timestamp) = '2024';'
2025-06-19 16:44:15,456 - __main__ - INFO - Database connection established.
2025-06-19 16:44:15,457 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1
2025-06-19 16:44:16,683 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:44:16,683 - __main__ - INFO - Final Assistant Response (NL): 'Your total deposits for 2024 amounted to â‚±835,991.83. Do you want to review the breakdown of these deposits?'
2025-06-19 16:44:32,834 - __main__ - INFO - User Query (en): 'Did I make any transactions on Christmas Day 2024'
2025-06-19 16:44:34,244 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:44:34,244 - __main__ - INFO - Generated SQL Query: 'SELECT * FROM transactions WHERE strftime('%Y-%m-%d', Date_Timestamp) = '2024-12-25';'
2025-06-19 16:44:34,245 - __main__ - INFO - Database connection established.
2025-06-19 16:44:34,247 - __main__ - INFO - SQL Query Executed Successfully. Results count: 2
2025-06-19 16:44:35,934 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:44:35,935 - __main__ - INFO - Final Assistant Response (NL): 'Yes, you did! On Christmas Day 2024, you made two transactions:

*   **Bo's Coffee - SM Megamall:** â‚±306.00
*   **Greenwich - SM City Manila:** â‚±423.00

Anything else you'd like to check?'
2025-06-19 16:44:49,344 - __main__ - INFO - User Query (en): 'List all ATM withdrawals in January 2025'
2025-06-19 16:44:51,688 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:44:51,688 - __main__ - INFO - Generated SQL Query: 'SELECT Date_Timestamp, Withdrawal_Amount, Transaction_Details FROM transactions WHERE strftime('%Y', Date_Timestamp) = '2025' AND strftime('%m', Date_Timestamp) = '01' AND Transaction_Details LIKE '%ATM Withdrawal%' ORDER BY Date_Timestamp ASC;'
2025-06-19 16:44:51,690 - __main__ - INFO - Database connection established.
2025-06-19 16:44:51,691 - __main__ - INFO - SQL Query Executed Successfully. Results count: 0
2025-06-19 16:44:52,883 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:44:52,884 - __main__ - INFO - Final Assistant Response (NL): 'I couldn't find any ATM withdrawals for January 2025. Would you like me to check another month or transaction type?'
2025-06-19 16:45:07,036 - __main__ - INFO - User Query (en): 'How many coffee shop transactions did I have in February 2024'
2025-06-19 16:45:08,292 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:45:08,292 - __main__ - INFO - Generated SQL Query: 'SELECT COUNT(*) FROM transactions WHERE strftime('%Y', Date_Timestamp) = '2024' AND strftime('%m', Date_Timestamp) = '02' AND LOWER(Merchant_Counterparty_Name) LIKE '%coffee%';'
2025-06-19 16:45:08,294 - __main__ - INFO - Database connection established.
2025-06-19 16:45:08,295 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1
2025-06-19 16:45:09,725 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:45:09,725 - __main__ - INFO - Final Assistant Response (NL): 'Looks like you had 12 coffee shop transactions in February 2024. Hope you enjoyed all those caffeine fixes! â˜• Anything else I can help you with?'
2025-06-19 16:45:18,018 - __main__ - INFO - User Query (en): 'Show me all refunds.'
2025-06-19 16:45:19,254 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:45:19,255 - __main__ - INFO - Generated SQL Query: 'SELECT * FROM transactions WHERE LOWER("Transaction_Details") LIKE '%refund%';'
2025-06-19 16:45:19,256 - __main__ - INFO - Database connection established.
2025-06-19 16:45:19,258 - __main__ - INFO - SQL Query Executed Successfully. Results count: 10
2025-06-19 16:45:21,913 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:45:21,914 - __main__ - INFO - Final Assistant Response (NL): 'Here are all your refunds:

*   **January 17, 2024:** Refund from LAZADA for â‚±2,401.00
*   **March 1, 2024:** Refund from SHEIN for â‚±3,539.00
*   **March 21, 2024:** Refund from LAZADA for â‚±4,224.00
*   **March 30, 2024:** Refund from SHOPEE for â‚±1,464.00
*   **September 18, 2024:** Refund from GRAB for â‚±483.00
*   **December 21, 2024:** Refund from LAZADA for â‚±1,909.00
*   **January 8, 2025:** Refund from TIKTOK SHP for â‚±1,328.00
*   **April 25, 2025:** Refund from SHEIN for â‚±3,668.00
*   **May 20, 2025:** Refund from SHOPEE for â‚±2,761.00
*   **June 16, 2025:** Refund from SHEIN for â‚±845.00

Let me know if that looks right! Need anything else?'
2025-06-19 16:45:27,354 - __main__ - INFO - Evaluation route triggered.
2025-06-19 16:45:28,465 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:45:28,466 - __main__ - INFO - Database connection established.
2025-06-19 16:45:28,468 - __main__ - WARNING - Test Case 1: SQL execution result mismatch.
2025-06-19 16:45:35,532 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:45:37,608 - __main__ - INFO - Test Case 1: LLM Judge verdict received.
2025-06-19 16:45:53,658 - __main__ - ERROR - Error decoding JSON from Gemini: Expecting value: line 1 column 1 (char 0). Raw content: START>>>```python
def generate_response(user_query):
    """
    Generates an SQL query and a natural language response based on the user query.

    Args:
        user_query: The user's query in natural language.

    Returns:
        A dictionary containing the SQL query and the natural language response.
    """

    import datetime

    current_date = datetime.datetime(2025, 6, 19, 16, 45, 37)

    # --- Define keywords and patterns ---
    keywords_withdrawal = ["withdrawals", "spent", "withdrawal", "spending"]
    keywords_deposit = ["deposits", "deposited", "deposit"]
    keywords_balance = ["balance", "Recurring_Existing_Balance"]
    keywords_service_charge = ["service charge", "service charges"]
    keywords_count = ["how many", "number of"]
    keywords_largest = ["largest", "biggest", "highest"]
    keywords_smallest = ["smallest", "lowest"]
    keywords_merchant = ["merchant", "counterparty", "name"]
    keywords_details = ["details", "description"]
    keywords_atm = ["ATM", "atm"]
    keywords_holidays = ["holiday", "holidays", "New Year's Day", "Chinese New Year", "Eid al-Fitr", "Day of Valor", "Maundy Thursday", "Good Friday", "Black Saturday", "Labor Day", "Elections special day", "Eid al-Adha", "Independence Day", "Ninoy Aquino Day", "National Heroes Day", "All Saints' Day Eve", "All Saints' Day", "Bonifacio Day", "Immaculate Conception", "Christmas Eve", "Christmas Day", "Rizal Day", "New Year's Eve"]
    keywords_range = ["between", "from", "to"]
    keywords_bank_name = ["bank name"]

    # --- Helper functions ---
    def format_currency(amount):
        return "â‚±{:.2f}".format(amount)

    def create_date_range_sql(date_string):
        date_parts = date_string.lower().split()
        from_index = date_parts.index("from")
        to_index = date_parts.index("to")
        start_date = date_parts[from_index + 1:to_index]
        end_date = date_parts[to_index + 1:]

        start_date_str = " ".join(start_date)
        end_date_str = " ".join(end_date)

        try:
            start_date_dt = datetime.datetime.strptime(start_date_str, '%B %d, %Y').strftime('%Y-%m-%d')
            end_date_dt = datetime.datetime.strptime(end_date_str, '%B %d, %Y').strftime('%Y-%m-%d')
        except ValueError:
            return None, None, "I'm having trouble understanding the date format. Could you please specify the dates in 'Month Day, Year' format (e.g., 'January 1, 2025')?"

        return start_date_dt, end_date_dt, None

    # --- SQL query generation logic ---
    sql = ""
    natural_language_response = ""

    user_query_lower = user_query.lower()

    if any(keyword in user_query_lower for keyword in ["hello", "hi", "good morning", "good afternoon", "good evening"]):
        sql = ""
        natural_language_response = "Hello! How can I assist you today with your banking needs?"

    elif any(keyword in user_query_lower for keyword in keywords_bank_name):
        sql = ""
        natural_language_response = "I am unable to disclose the bank's name."

    elif any(keyword in user_query_lower for keyword in keywords_largest) and any(keyword in user_query_lower for keyword in keywords_withdrawals):
        sql = "SELECT Date_Timestamp, Transaction_ID, Transaction_Details, Merchant_Counterparty_Name, Withdrawal_Amount FROM transactions WHERE Withdrawal_Amount IS NOT NULL ORDER BY Withdrawal_Amount DESC LIMIT 3;"
        natural_language_response = "Here are your top 3 largest withdrawals:"

    elif any(keyword in user_query_lower for keyword in keywords_smallest) and any(keyword in user_query_lower for keyword in keywords_withdrawals):
        sql = "SELECT Date_Timestamp, Transaction_ID, Transaction_Details, Merchant_Counterparty_Name, Withdrawal_Amount FROM transactions WHERE Withdrawal_Amount IS NOT NULL ORDER BY Withdrawal_Amount ASC LIMIT 3;"
        natural_language_response = "Here are your 3 smallest withdrawals:"

    elif any(keyword in user_query_lower for keyword in keywords_count) and any(keyword in user_query_lower for keyword in keywords_atm) and any(keyword in user_query_lower for keyword in keywords_withdrawals):
        sql = "SELECT COUNT(*) FROM transactions WHERE LOWER(Transaction_Details) LIKE '%atm%' AND Withdrawal_Amount IS NOT NULL;"
        natural_language_response = "Counting your ATM withdrawals..."

    elif any(keyword in user_query_lower for keyword in keywords_details) and any(keyword in user_query_lower for keyword in keywords_atm) and any(keyword in user_query_lower for keyword in keywords_withdrawals):
         sql = "SELECT Date_Timestamp, Transaction_Details, Withdrawal_Amount FROM transactions WHERE LOWER(Transaction_Details) LIKE '%atm%' AND Withdrawal_Amount IS NOT NULL;"
         natural_language_response = "Details of your ATM withdrawals:"

    elif any(keyword in user_query_lower for keyword in keywords_service_charge):
        sql = "SELECT SUM(COALESCE(Withdrawal_Amount, 0)) FROM transactions WHERE LOWER(\"Transaction_Details\") LIKE '%service charge%';"
        natural_language_response = "Calculating total service charges..."

    elif any(keyword in user_query_lower for keyword in keywords_deposit):
        sql = "SELECT Date_Timestamp, Transaction_Details, Deposit_Amount FROM transactions WHERE Deposit_Amount IS NOT NULL ORDER BY Date_Timestamp ASC;"
        natural_language_response = "Here's a list of your deposits:"

    elif any(keyword in user_query_lower for keyword in keywords_balance):
        sql = "SELECT Date_Timestamp, Recurring_Existing_Balance FROM transactions WHERE Recurring_Existing_Balance IS NOT NULL ORDER BY Date_Timestamp ASC;"
        natural_language_response = "Here's a history of your account balances:"

    elif any(keyword in user_query_lower for keyword in keywords_withdrawals):
        sql = "SELECT Date_Timestamp, Transaction_Details, Withdrawal_Amount FROM transactions WHERE Withdrawal_Amount IS NOT NULL ORDER BY Date_Timestamp ASC;"
        natural_language_response = "Here's a list of your withdrawals:"

    elif any(keyword in user_query_lower for keyword in keywords_holidays):
        holiday_date = None
        for holiday in ["New Year's Day", "Chinese New Year", "Eid al-Fitr", "Day of Valor", "Maundy Thursday", "Good Friday", "Black Saturday", "Labor Day", "Elections special day", "Eid al-Adha", "Independence Day", "Ninoy Aquino Day", "National Heroes Day", "All Saints' Day Eve", "All Saints' Day", "Bonifacio Day", "Immaculate Conception", "Christmas Eve", "Christmas Day", "Rizal Day", "New Year's Eve"]:
            if holiday.lower() in user_query_lower:
                holiday_date = holiday
                break

        holiday_dates = {
            "New Year's Day": "2025-01-01",
            "Chinese New Year": "2025-01-29",
            "Eid al-Fitr": "2025-04-01",
            "Day of Valor": "2025-04-09",
            "Maundy Thursday": "2025-04-17",
            "Good Friday": "2025-04-18",
            "Black Saturday": "2025-04-19",
            "Labor Day": "2025-05-01",
            "Elections special day": "2025-05-12",
            "Eid al-Adha": "2025-06-06",
            "Independence Day": "2025-06-12",
            "Ninoy Aquino Day": "2025-08-21",
            "National Heroes Day": "2025-08-25",
            "All Saints' Day Eve": "2025-10-31",
            "All Saints' Day": "2025-11-01",
            "Bonifacio Day": "2025-11-30",
            "Immaculate Conception": "2025-12-08",
            "Christmas Eve": "2025-12-24",
            "Christmas Day": "2025-12-25",
            "Rizal Day": "2025-12-30",
            "New Year's Eve": "2025-12-31"
        }

        if holiday_date and holiday_date in holiday_dates:
            date_str = holiday_dates[holiday_date]
            sql = f"SELECT * FROM transactions WHERE DATE(Date_Timestamp) = '{date_str}';"
            natural_language_response = f"Here are the transactions for {holiday_date}:"
        else:
            sql = ""
            natural_language_response = "I couldn't identify the specific holiday date. Please specify the holiday."

    elif any(keyword in user_query_lower for keyword in keywords_range):
        start_date_dt, end_date_dt, error_message = create_date_range_sql(user_query_lower)

        if error_message:
            sql = ""
            natural_language_response = error_message
        else:
            sql = f"SELECT * FROM transactions WHERE DATE(Date_Timestamp) BETWEEN '{start_date_dt}' AND '{end_date_dt}' ORDER BY Date_Timestamp ASC;"
            natural_language_response = f"Here are the transactions between {start_date_dt} and {end_date_dt}:"

    else:
        sql = ""
        natural_language_response = "I'm sorry, I didn't understand your request. Could you please rephrase it?"

    return {"sql": sql, "natural_language_response": natural_language_response}
```<<<END
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_conev.py", line 292, in get_gemini_response
    response_dict = json.loads(json_str)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
2025-06-19 16:45:53,664 - __main__ - ERROR - Test Case 2: Bot failed to generate SQL: Error decoding JSON from Gemini: Expecting value: line 1 column 1 (char 0)
2025-06-19 16:45:54,814 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:45:54,815 - __main__ - INFO - Database connection established.
2025-06-19 16:45:56,011 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:45:57,547 - __main__ - INFO - Test Case 3: LLM Judge verdict received.
2025-06-19 16:46:00,209 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:46:00,211 - __main__ - INFO - Database connection established.
2025-06-19 16:46:00,212 - __main__ - WARNING - Test Case 4: SQL execution result mismatch.
2025-06-19 16:46:01,745 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:46:03,479 - __main__ - INFO - Test Case 4: LLM Judge verdict received.
2025-06-19 16:46:05,227 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:46:05,228 - __main__ - INFO - Database connection established.
2025-06-19 16:46:06,505 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:46:08,326 - __main__ - INFO - Test Case 5: LLM Judge verdict received.
2025-06-19 16:46:09,425 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:46:09,426 - __main__ - INFO - Database connection established.
2025-06-19 16:46:09,426 - __main__ - WARNING - Test Case 6: SQL execution result mismatch.
2025-06-19 16:46:10,714 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 16:46:12,862 - __main__ - INFO - Test Case 6: LLM Judge verdict received.
2025-06-19 16:46:23,770 - __main__ - ERROR - Error decoding JSON from Gemini: Expecting value: line 1 column 1 (char 0). Raw content: START>>>```python
def generate_response(user_query):
    import datetime

    current_date = datetime.datetime(2025, 6, 19, 16, 46, 12)
    today_date = current_date.strftime("%Y-%m-%d")

    if "hello" in user_query.lower() or "hi" in user_query.lower() or "good morning" in user_query.lower() or "good afternoon" in user_query.lower() or "good evening" in user_query.lower():
        sql = ""
        natural_language_response = "Hello! How can I help you with your bank account today? Feel free to ask me about your transactions, balances, or anything else you need."
    elif "bank name" in user_query.lower():
        sql = ""
        natural_language_response = "I'm not able to tell you the bank name. However, how can I help you with your account today?"

    elif "refund" in user_query.lower():
        sql = "SELECT * FROM transactions WHERE LOWER(Transaction_Details) LIKE '%refund%';"
        # Execute the SQL query (replace with your actual database connection)
        # Assuming the query returns a list of tuples:
        results = [
            ('2025-05-15 10:00:00', 'TXN123', 'Refund from Shopee', 'Shopee Philippines', None, 1200.00, 50000.00),
            ('2025-06-01 14:30:00', 'TXN456', 'Refund from Lazada', 'Lazada Philippines', None, 850.50, 50850.50)
        ]
        if results:
            natural_language_response = "Here are your recent refunds:\n"
            for row in results:
                date_timestamp, transaction_id, transaction_details, merchant_counterparty_name, withdrawal_amount, deposit_amount, recurring_existing_balance = row
                natural_language_response += f"- Date: {date_timestamp}, Details: {transaction_details}, Amount: â‚±{deposit_amount:.2f}\n"
            natural_language_response += "Want help reviewing this!"
        else:
            natural_language_response = "No refunds found in your transaction history. Is there anything else I can help you with?"

    elif "spent on service charges" in user_query.lower():
        sql = "SELECT SUM(COALESCE(Withdrawal_Amount, 0)) FROM transactions WHERE LOWER(Transaction_Details) LIKE '%service charge%';"
        # Execute the SQL query (replace with your actual database connection)
        # Assuming the query returns a single row with the sum:
        results = [(500.00,)]
        if results and results[0][0] is not None:
            total_service_charges = results[0][0]
            natural_language_response = f"You've spent a total of â‚±{total_service_charges:.2f} on service charges. Is there anything else you'd like to check about your expenses?"
        else:
            natural_language_response = "You haven't incurred any service charges in the recorded period. Anything else you'd like to know?"

    elif "balance less than 30000" in user_query.lower():
        sql = "SELECT Date_Timestamp, Transaction_Details, Recurring_Existing_Balance FROM transactions WHERE Recurring_Existing_Balance < 30000 ORDER BY Date_Timestamp ASC;"
        results = [
            ('2025-01-10 14:00:00', 'ATM Withdrawal', 25000.00),
            ('2025-02-15 10:00:00', 'Payment to Meralco', 28000.00)
        ]

        if results:
            natural_language_response = "Here are the transactions where your balance dropped below â‚±30,000:\n"
            for row in results:
                date_timestamp, transaction_details, recurring_existing_balance = row
                natural_language_response += f"- Date: {date_timestamp}, Details: {transaction_details}, Balance: â‚±{recurring_existing_balance:.2f}\n"
            natural_language_response += "Let me know if that looks off!"
        else:
            natural_language_response = "Your balance has not dropped below â‚±30,000 in the recorded period. Anything else I can help you with?"

    elif "labor day" in user_query.lower():
        sql = "SELECT * FROM transactions WHERE Date(Date_Timestamp) = '2025-05-01';"
        results = [
            ('2025-05-01 12:00:00', 'TXN789', 'Deposit', 'Employer Payroll', None, 50000.00, 75000.00)
        ]
        if results:
            natural_language_response = "Here are your transactions on Labor Day (May 1, 2025):\n"
            for row in results:
                date_timestamp, transaction_id, transaction_details, merchant_counterparty_name, withdrawal_amount, deposit_amount, recurring_existing_balance = row
                natural_language_response += f"- Date: {date_timestamp}, Details: {transaction_details}, Deposit: â‚±{deposit_amount:.2f}, Withdrawal: {withdrawal_amount}, Balance: â‚±{recurring_existing_balance:.2f}\n"
            natural_language_response += "Is there anything else you'd like to know about that day?"
        else:
            natural_language_response = "There were no transactions on Labor Day (May 1, 2025). Anything else I can help you with?"

    elif "transactions between january 15, 2025 and february 15, 2025" in user_query.lower():
        sql = "SELECT * FROM transactions WHERE Date(Date_Timestamp) BETWEEN '2025-01-15' AND '2025-02-15' ORDER BY Date_Timestamp ASC;"

        results = [
            ('2025-01-16 09:00:00', 'TXN101', 'ATM Withdrawal', 'BGC ATM', 2000.00, None, 48000.00),
            ('2025-01-25 14:00:00', 'TXN102', 'Online Payment', 'Shopee Philippines', 1500.00, None, 46500.00),
            ('2025-02-05 18:00:00', 'TXN103', 'Deposit', 'Salary Credit', None, 50000.00, 96500.00),
            ('2025-02-14 11:00:00', 'TXN104', 'ATM Withdrawal', 'QC ATM', 3000.00, None, 93500.00)
        ]

        if results:
            natural_language_response = "Here are your transactions between January 15, 2025 and February 15, 2025:\n"
            for row in results:
                date_timestamp, transaction_id, transaction_details, merchant_counterparty_name, withdrawal_amount, deposit_amount, recurring_existing_balance = row
                natural_language_response += f"- Date: {date_timestamp}, Details: {transaction_details}, Deposit: â‚±{deposit_amount:.2f}, Withdrawal: â‚±{withdrawal_amount:.2f}, Balance: â‚±{recurring_existing_balance:.2f}\n"
            natural_language_response += "Do these look correct?"
        else:
            natural_language_response = "No transactions found between January 15, 2025 and February 15, 2025. Anything else I can help you with?"
    else:
        sql = ""
        natural_language_response = "I'm sorry, I didn't understand your request. Can you please rephrase it?"

    return {"sql": sql, "natural_language_response": natural_language_response}
```<<<END
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_conev.py", line 292, in get_gemini_response
    response_dict = json.loads(json_str)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
2025-06-19 16:46:23,772 - __main__ - ERROR - Test Case 7: Bot failed to generate SQL: Error decoding JSON from Gemini: Expecting value: line 1 column 1 (char 0)
2025-06-19 16:46:23,778 - __main__ - INFO - Evaluation process completed.
2025-06-19 18:33:54,843 - __main__ - INFO - Flask Application initialized and logging configured.
2025-06-19 18:33:54,843 - __main__ - INFO - Gemini model 'gemini-2.0-flash' loaded successfully.
2025-06-19 18:33:54,888 - __main__ - CRITICAL - Failed to retrieve database schema: near "WHERE": syntax error. Application cannot function.
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_conev.py", line 112, in get_schema_string
    cursor.execute("SELECT name FROM sqlite_master WHERE type='table' WHERE name NOT LIKE 'sqlite_%';") # Exclude internal tables
sqlite3.OperationalError: near "WHERE": syntax error
2025-06-19 18:33:54,888 - __main__ - CRITICAL - Application startup failed due to database schema issues.
2025-06-19 18:34:25,955 - __main__ - INFO - Flask Application started.
2025-06-19 18:34:25,966 - __main__ - INFO - Database connection established.
2025-06-19 18:34:25,967 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 18:34:26,014 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 18:34:26,284 - __main__ - INFO - Flask Application started.
2025-06-19 18:34:26,295 - __main__ - INFO - Database connection established.
2025-06-19 18:34:26,295 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 18:34:26,326 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 18:34:32,084 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-19 18:34:34,513 - __main__ - INFO - User Query (en): 'hi'
2025-06-19 18:34:37,240 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:34:37,241 - __main__ - INFO - Generated SQL Query: ''
2025-06-19 18:34:37,245 - __main__ - INFO - Database connection established.
2025-06-19 18:34:37,245 - __main__ - CRITICAL - An unexpected critical error occurred: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_conev.py", line 367, in chat
    column_headers = [description[0] for description in cursor.description]
TypeError: 'NoneType' object is not iterable
2025-06-19 18:34:43,781 - __main__ - INFO - User Query (en): 'hello'
2025-06-19 18:34:45,554 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:34:45,554 - __main__ - INFO - Generated SQL Query: 'SELECT 1;'
2025-06-19 18:34:45,555 - __main__ - INFO - Database connection established.
2025-06-19 18:34:45,555 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1
2025-06-19 18:34:48,030 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:34:48,030 - __main__ - INFO - Final Assistant Response (NL): 'Hello there! How can I assist you with your banking needs today?'
2025-06-19 18:35:32,017 - __main__ - INFO - User Query (en): 'Show me all transactions for June 2024.'
2025-06-19 18:35:34,048 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:35:34,049 - __main__ - INFO - Generated SQL Query: 'SELECT Date_Timestamp, Transaction_ID, Transaction_Details, Merchant_Counterparty_Name, Withdrawal_Amount, Deposit_Amount, Recurring_Existing_Balance FROM bank_transactions WHERE Date_Timestamp >= '2024-06-01 00:00:00' AND Date_Timestamp < '2024-07-01 00:00:00' ORDER BY Date_Timestamp ASC;'
2025-06-19 18:35:34,051 - __main__ - INFO - Database connection established.
2025-06-19 18:35:34,053 - __main__ - INFO - SQL Query Executed Successfully. Results count: 46
2025-06-19 18:35:45,645 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:35:45,645 - __main__ - INFO - Final Assistant Response (NL): 'Here are all your transactions for June 2024:

*   **June 1, 2024**
    *   POS PURCHASE RESTAURANT at Wildflour Cafe + Bakery - Ayala Center: â‚±2,198.00 (Withdrawal), Balance: â‚±118,816.60
*   **June 2, 2024**
    *   POS PURCHASE FAST FOOD at Krispy Kreme - Glorietta 4: â‚±224.00 (Withdrawal), Balance: â‚±118,592.60
*   **June 3, 2024**
    *   POS PURCHASE COFFEE SHOP at Yardstick Coffee - Legazpi Village, Makati: â‚±274.00 (Withdrawal), Balance: â‚±118,318.60
*   **June 4, 2024**
    *   POS PURCHASE COFFEE SHOP at Zus Coffee - EspaÃ±a: â‚±290.00 (Withdrawal), Balance: â‚±118,028.60
    *   POS PURCHASE RESTAURANT at Vikings - SM Mall of Asia: â‚±1,264.00 (Withdrawal), Balance: â‚±116,764.60
*   **June 5, 2024**
    *   POS PURCHASE COFFEE SHOP at Bo's Coffee - SM Megamall: â‚±310.00 (Withdrawal), Balance: â‚±116,454.60
*   **June 6, 2024**
    *   POS PURCHASE COFFEE SHOP at Starbucks - Glorietta 4: â‚±278.00 (Withdrawal), Balance: â‚±116,176.60
*   **June 7, 2024**
    *   POS PURCHASE COFFEE SHOP at Yardstick Coffee - Legazpi Village, Makati: â‚±291.00 (Withdrawal), Balance: â‚±115,885.60
    *   POS PURCHASE FAST FOOD at Dunkin' - Ortigas Center: â‚±627.00 (Withdrawal), Balance: â‚±115,258.60
*   **June 8, 2024**
    *   POS PURCHASE FAST FOOD at Chowking - Cubao - Cyberpark: â‚±335.00 (Withdrawal), Balance: â‚±114,923.60
*   **June 9, 2024**
    *   POS PURCHASE COFFEE SHOP at Yardstick Coffee - Legazpi Village, Makati: â‚±297.00 (Withdrawal), Balance: â‚±114,626.60
    *   POS PURCHASE RESTAURANT at Vikings - SM Mall of Asia: â‚±959.00 (Withdrawal), Balance: â‚±113,667.60
*   **June 10, 2024**
    *   POS PURCHASE RESTAURANT at Manam - Greenbelt 2: â‚±2,126.00 (Withdrawal), Balance: â‚±111,541.60
*   **June 11, 2024**
    *   POS PURCHASE COFFEE SHOP at Commune Cafe - Poblacion, Makati: â‚±221.00 (Withdrawal), Balance: â‚±111,320.60
    *   POS PURCHASE FAST FOOD at Burger King - Trinoma: â‚±900.00 (Withdrawal), Balance: â‚±110,420.60
*   **June 12, 2024**
    *   POS PURCHASE COFFEE SHOP at Zus Coffee - EspaÃ±a: â‚±150.00 (Withdrawal), Balance: â‚±110,270.60
    *   POS PURCHASE RESTAURANT at Marugame Udon - SM City Sta. Mesa: â‚±1,566.00 (Withdrawal), Balance: â‚±108,704.60
*   **June 13, 2024**
    *   POS PURCHASE COFFEE SHOP at Tim Hortons - Uptown Bonifacio: â‚±288.00 (Withdrawal), Balance: â‚±108,416.60
    *   POS PURCHASE FAST FOOD at KFC - Robinsons Galleria: â‚±997.00 (Withdrawal), Balance: â‚±107,419.60
*   **June 14, 2024**
    *   SALARY CREDIT from MAMAMO INC.: â‚±21,193.00 (Deposit), Balance: â‚±128,612.60
    *   POS PURCHASE COFFEE SHOP at Bo's Coffee - Legazpi Village: â‚±319.00 (Withdrawal), Balance: â‚±128,293.60
    *   POS PURCHASE FAST FOOD at Mang Inasal - Market! Market!: â‚±331.00 (Withdrawal), Balance: â‚±127,962.60
*   **June 16, 2024**
    *   POS PURCHASE COFFEE SHOP at Coffee Bean & Tea Leaf - Greenhills Promenade: â‚±249.00 (Withdrawal), Balance: â‚±127,713.60
    *   POS PURCHASE FAST FOOD at Pizza Hut - Tomas Morato: â‚±696.00 (Withdrawal), Balance: â‚±127,017.60
*   **June 17, 2024**
    *   POS PURCHASE COFFEE SHOP at Toby's Estate - Legazpi St, Makati: â‚±280.00 (Withdrawal), Balance: â‚±126,737.60
*   **June 18, 2024**
    *   POS PURCHASE COFFEE SHOP at Tim Hortons - Robinsons Place Manila: â‚±336.00 (Withdrawal), Balance: â‚±126,401.60
*   **June 19, 2024**
    *   POS PURCHASE COFFEE SHOP at Starbucks - Ayala Triangle: â‚±326.00 (Withdrawal), Balance: â‚±126,075.60
    *   POS PURCHASE RESTAURANT at Mesa - Greenbelt 5: â‚±2,485.00 (Withdrawal), Balance: â‚±123,590.60
    *   ATM WITHDRAWAL at BPI ATM - Sampaloc: â‚±8,015.00 (Withdrawal), Balance: â‚±115,575.60
*   **June 20, 2024**
    *   POS PURCHASE COFFEE SHOP at Tim Hortons - Makati Central Square: â‚±294.00 (Withdrawal), Balance: â‚±115,281.60
*   **June 21, 2024**
    *   POS PURCHASE COFFEE SHOP at Bo's Coffee - SM Megamall: â‚±224.00 (Withdrawal), Balance: â‚±115,057.60
*   **June 22, 2024**
    *   POS PURCHASE GENERAL SHOPPING at Glorietta - Glorietta 1: â‚±7,115.00 (Withdrawal), Balance: â‚±107,942.60
*   **June 23, 2024**
    *   POS PURCHASE COFFEE SHOP at Coffee Bean & Tea Leaf - Trinoma: â‚±187.00 (Withdrawal), Balance: â‚±107,755.60
    *   POS PURCHASE FAST FOOD at Krispy Kreme - Glorietta 4: â‚±515.00 (Withdrawal), Balance: â‚±107,240.60
*   **June 24, 2024**
    *   POS PURCHASE FAST FOOD at Dunkin' - Ayala Triangle: â‚±339.00 (Withdrawal), Balance: â‚±106,901.60
*   **June 25, 2024**
    *   POS PURCHASE COFFEE SHOP at Zus Coffee - Taft: â‚±335.00 (Withdrawal), Balance: â‚±106,566.60
*   **June 26, 2024**
    *   POS PURCHASE COFFEE SHOP at Yardstick Coffee - Legazpi Village, Makati: â‚±168.00 (Withdrawal), Balance: â‚±106,398.60
    *   POS PURCHASE FAST FOOD at Bonchon Chicken - Ayala Malls Feliz: â‚±586.00 (Withdrawal), Balance: â‚±105,812.60
*   **June 27, 2024**
    *   POS PURCHASE COFFEE SHOP at Commune Cafe - Poblacion, Makati: â‚±339.00 (Withdrawal), Balance: â‚±105,473.60
    *   POS PURCHASE FAST FOOD at Mang Inasal - Starmall Alabang: â‚±483.00 (Withdrawal), Balance: â‚±104,990.60
*   **June 28, 2024**
    *   SALARY CREDIT from MAMAMO INC.: â‚±29,574.00 (Deposit), Balance: â‚±134,564.60
    *   POS PURCHASE COFFEE SHOP at Yardstick Coffee - Legazpi Village, Makati: â‚±346.00 (Withdrawal), Balance: â‚±134,218.60
    *   POS PURCHASE FAST FOOD at Pizza Hut - SM Megamall: â‚±247.00 (Withdrawal), Balance: â‚±133,971.60
*   **June 29, 2024**
    *   POS PURCHASE FAST FOOD at Krispy Kreme - Robinsons Antipolo: â‚±410.00 (Withdrawal), Balance: â‚±133,561.60
*   **June 30, 2024**
    *   INTEREST CREDIT from BANK INTEREST: â‚±143.93 (Deposit), Balance: â‚±133,705.53
    *   POS PURCHASE COFFEE SHOP at Starbucks - Ayala Triangle: â‚±283.00 (Withdrawal), Balance: â‚±133,422.53

Is there a specific type of transaction or a date range you'd like to focus on?'
2025-06-19 18:36:07,628 - __main__ - INFO - User Query (en): 'What were my top 3 largest withdrawals?'
2025-06-19 18:36:09,512 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:36:09,513 - __main__ - INFO - Generated SQL Query: 'SELECT Date_Timestamp, Transaction_Details, Merchant_Counterparty_Name, Withdrawal_Amount FROM bank_transactions WHERE Withdrawal_Amount IS NOT NULL ORDER BY Withdrawal_Amount DESC LIMIT 3;'
2025-06-19 18:36:09,515 - __main__ - INFO - Database connection established.
2025-06-19 18:36:09,517 - __main__ - INFO - SQL Query Executed Successfully. Results count: 3
2025-06-19 18:36:11,439 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:36:11,439 - __main__ - INFO - Final Assistant Response (NL): 'Here are your top 3 largest withdrawals:

*   **April 19, 2025:** â‚±10,018.00 from an ATM Withdrawal at RCBC ATM - Makati - Circuit.
*   **August 11, 2024:** â‚±9,883.00 for a POS Purchase General Shopping at Glorietta - Glorietta 2.
*   **January 11, 2025:** â‚±9,597.00 for a POS Purchase General Shopping at Power Mac Center - SM San Lazaro.

Do you want to review any other significant transactions?'
2025-06-19 18:36:31,938 - __main__ - INFO - User Query (en): 'How much did I deposit in total for 2024?'
2025-06-19 18:36:33,362 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:36:33,363 - __main__ - INFO - Generated SQL Query: 'SELECT SUM(COALESCE(Deposit_Amount, 0)) FROM bank_transactions WHERE strftime('%Y', Date_Timestamp) = '2024';'
2025-06-19 18:36:33,364 - __main__ - INFO - Database connection established.
2025-06-19 18:36:33,367 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1
2025-06-19 18:36:34,799 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:36:34,800 - __main__ - INFO - Final Assistant Response (NL): 'You deposited a total of â‚±835,991.83 in 2024. That's quite a significant amount! Is there anything else you'd like to know about your deposits or overall activity?'
2025-06-19 18:36:41,412 - __main__ - INFO - User Query (en): 'Did I make any transactions on Christmas Day 2024?'
2025-06-19 18:36:45,404 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:36:45,404 - __main__ - INFO - Generated SQL Query: 'SELECT Date_Timestamp, "Transaction_Details", "Merchant_Counterparty_Name", COALESCE(Withdrawal_Amount, 0) AS Withdrawal_Amount, COALESCE(Deposit_Amount, 0) AS Deposit_Amount, Recurring_Existing_Balance FROM bank_transactions WHERE Date(Date_Timestamp) = '2024-12-25' ORDER BY Date_Timestamp ASC;'
2025-06-19 18:36:45,405 - __main__ - INFO - Database connection established.
2025-06-19 18:36:45,406 - __main__ - INFO - SQL Query Executed Successfully. Results count: 2
2025-06-19 18:36:48,416 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:36:48,416 - __main__ - INFO - Final Assistant Response (NL): 'Yes, you did! Here are the transactions you made on Christmas Day, December 25, 2024:

*   **December 25, 2024**
    *   **9:06 AM:** You had a POS Purchase at Bo's Coffee - SM Megamall for â‚±306.00 (Withdrawal), leaving a balance of â‚±185,963.70.
    *   **9:12 AM:** You also had a POS Purchase at Greenwich - SM City Manila for â‚±423.00 (Withdrawal), with your balance at â‚±185,540.70.

It looks like you started Christmas Day with some coffee and a meal! Is there anything else you'd like to explore about your activity around the holidays?'
2025-06-19 18:37:05,647 - __main__ - INFO - User Query (en): 'List all ATM withdrawals in January 2025.'
2025-06-19 18:37:08,896 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:37:08,896 - __main__ - INFO - Generated SQL Query: 'SELECT Date_Timestamp, "Transaction_Details", "Merchant_Counterparty_Name", Withdrawal_Amount, Recurring_Existing_Balance FROM bank_transactions WHERE "Transaction_Details" LIKE '%ATM WITHDRAWAL%' AND Date_Timestamp BETWEEN '2025-01-01 00:00:00' AND '2025-01-31 23:59:59' ORDER BY Date_Timestamp ASC;'
2025-06-19 18:37:08,898 - __main__ - INFO - Database connection established.
2025-06-19 18:37:08,900 - __main__ - INFO - SQL Query Executed Successfully. Results count: 0
2025-06-19 18:37:10,944 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:37:10,944 - __main__ - INFO - Final Assistant Response (NL): 'It looks like there were no ATM withdrawals recorded in January 2025. Is there another month or type of transaction you'd like to check?'
2025-06-19 18:37:30,546 - __main__ - INFO - User Query (en): 'How many coffee shop transactions did I have in February 2024?'
2025-06-19 18:37:33,268 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:37:33,268 - __main__ - INFO - Generated SQL Query: 'SELECT COUNT(*) FROM bank_transactions WHERE STRFTIME('%Y-%m', Date_Timestamp) = '2024-02' AND LOWER("Transaction_Details") LIKE '%coffee shop%';'
2025-06-19 18:37:33,270 - __main__ - INFO - Database connection established.
2025-06-19 18:37:33,273 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1
2025-06-19 18:37:36,767 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:37:36,768 - __main__ - INFO - Final Assistant Response (NL): 'You had 24 coffee shop transactions in February 2024! It seems like you enjoy your coffee. Is there anything else you'd like to know about your spending habits?'
2025-06-19 18:38:08,913 - __main__ - INFO - User Query (en): 'Show me all refunds.'
2025-06-19 18:38:11,463 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:38:11,464 - __main__ - INFO - Generated SQL Query: 'SELECT Date_Timestamp, Transaction_Details, Merchant_Counterparty_Name, COALESCE(Withdrawal_Amount, 0) AS Withdrawal_Amount, COALESCE(Deposit_Amount, 0) AS Deposit_Amount, Recurring_Existing_Balance FROM bank_transactions WHERE LOWER("Transaction_Details") LIKE '%refund%' ORDER BY Date_Timestamp ASC;'
2025-06-19 18:38:11,467 - __main__ - INFO - Database connection established.
2025-06-19 18:38:11,471 - __main__ - INFO - SQL Query Executed Successfully. Results count: 10
2025-06-19 18:38:15,252 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:38:15,253 - __main__ - INFO - Final Assistant Response (NL): 'Here are all the refunds credited to your account:

*   **January 17, 2024:** You received a refund of â‚±2,401.00 from LAZADA. Your balance after this was â‚±67,795.00.
*   **March 1, 2024:** A refund of â‚±3,539.00 from SHEIN was processed. Your balance was â‚±83,600.49.
*   **March 21, 2024:** Another refund from LAZADA for â‚±4,224.00 was credited. Your balance reached â‚±95,569.49.
*   **March 30, 2024:** You got a refund of â‚±1,464.00 from SHOPEE. Your balance was â‚±105,419.49.
*   **September 18, 2024:** A refund of â‚±483.00 from GRAB was posted. Your balance was â‚±126,567.11.
*   **December 21, 2024:** A refund of â‚±1,909.00 from LAZADA was credited. Your balance was â‚±193,224.70.
*   **January 8, 2025:** You received a refund of â‚±1,328.00 from TIKTOK SHP. Your balance was â‚±216,993.83.
*   **April 25, 2025:** A refund of â‚±3,668.00 from SHEIN was processed. Your balance reached â‚±229,413.17.
*   **May 20, 2025:** Another refund from SHOPEE for â‚±2,761.00 was credited. Your balance was â‚±253,043.83.
*   **June 16, 2025:** You received a refund of â‚±845.00 from SHEIN. Your balance after this was â‚±291,151.18.

Is there a specific refund you'd like to know more about, or perhaps a different type of transaction you're curious about?'
2025-06-19 18:38:20,854 - __main__ - INFO - Evaluation route triggered.
2025-06-19 18:38:22,830 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:38:22,832 - __main__ - INFO - Database connection established.
2025-06-19 18:38:22,832 - __main__ - ERROR - Test Case 1: Ground Truth SQL execution error: no such table: transactions
2025-06-19 18:38:28,871 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:38:42,449 - __main__ - INFO - Test Case 1: LLM Judge verdict received.
2025-06-19 18:38:45,562 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:38:45,565 - __main__ - INFO - Database connection established.
2025-06-19 18:38:45,566 - __main__ - ERROR - Test Case 2: Ground Truth SQL execution error: no such table: transactions
2025-06-19 18:38:49,453 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:39:09,729 - __main__ - INFO - Test Case 2: LLM Judge verdict received.
2025-06-19 18:39:11,060 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:39:11,062 - __main__ - INFO - Database connection established.
2025-06-19 18:39:11,063 - __main__ - ERROR - Test Case 3: Ground Truth SQL execution error: no such table: transactions
2025-06-19 18:39:13,941 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:39:21,608 - __main__ - INFO - Test Case 3: LLM Judge verdict received.
2025-06-19 18:39:26,114 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:39:26,116 - __main__ - INFO - Database connection established.
2025-06-19 18:39:26,117 - __main__ - ERROR - Test Case 4: Ground Truth SQL execution error: no such table: transactions
2025-06-19 18:39:29,595 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:39:42,499 - __main__ - INFO - Test Case 4: LLM Judge verdict received.
2025-06-19 18:39:46,799 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:39:46,801 - __main__ - INFO - Database connection established.
2025-06-19 18:39:46,802 - __main__ - ERROR - Test Case 5: Ground Truth SQL execution error: no such table: transactions
2025-06-19 18:39:48,733 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:40:00,725 - __main__ - INFO - Test Case 5: LLM Judge verdict received.
2025-06-19 18:40:03,900 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:40:03,902 - __main__ - INFO - Database connection established.
2025-06-19 18:40:03,903 - __main__ - ERROR - Test Case 6: Ground Truth SQL execution error: no such table: transactions
2025-06-19 18:40:09,532 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:40:29,483 - __main__ - INFO - Test Case 6: LLM Judge verdict received.
2025-06-19 18:40:31,445 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:40:31,447 - __main__ - INFO - Database connection established.
2025-06-19 18:40:31,448 - __main__ - ERROR - Test Case 7: Ground Truth SQL execution error: no such table: transactions
2025-06-19 18:40:34,783 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:40:48,557 - __main__ - INFO - Test Case 7: LLM Judge verdict received.
2025-06-19 18:40:48,564 - __main__ - INFO - Evaluation process completed.
2025-06-19 18:43:22,892 - __main__ - INFO - Flask Application started.
2025-06-19 18:43:22,907 - __main__ - CRITICAL - Failed to retrieve database schema: near "WHERE": syntax error
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_conev.py", line 90, in get_schema_string
    cursor.execute("SELECT name FROM sqlite_master WHERE type='table' WHERE name NOT LIKE 'sqlite_%';") # Exclude internal tables
sqlite3.OperationalError: near "WHERE": syntax error
2025-06-19 18:43:22,907 - __main__ - CRITICAL - Failed to load database schema on startup. Exiting.
2025-06-19 18:44:53,387 - __main__ - INFO - Flask Application started.
2025-06-19 18:44:53,402 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 18:44:53,446 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 18:44:53,704 - __main__ - INFO - Flask Application started.
2025-06-19 18:44:53,715 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 18:44:53,745 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 18:44:56,192 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-19 18:45:10,725 - __main__ - INFO - User Query (en): 'Show me all transactions for June 2024.'
2025-06-19 18:45:14,522 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:45:14,523 - __main__ - INFO - Generated SQL Query: 'SELECT "Date_Timestamp", "Transaction_ID", "Transaction_Details", "Merchant_Counterparty_Name", "Withdrawal_Amount", "Deposit_Amount", "Recurring_Existing_Balance" FROM bank_transactions WHERE strftime('%Y-%m', "Date_Timestamp") = '2024-06' ORDER BY "Date_Timestamp" ASC;')
2025-06-19 18:45:14,523 - __main__ - WARNING - SECURITY ALERT: Directly executing LLM-generated SQL: 'SELECT "Date_Timestamp", "Transaction_ID", "Transaction_Details", "Merchant_Counterparty_Name", "Withdrawal_Amount", "Deposit_Amount", "Recurring_Existing_Balance" FROM bank_transactions WHERE strftime('%Y-%m', "Date_Timestamp") = '2024-06' ORDER BY "Date_Timestamp" ASC;'. This is dangerous in production without proper validation.
2025-06-19 18:45:14,528 - __main__ - INFO - SQL Query Executed Successfully. Results count: 46 rows.
2025-06-19 18:45:23,090 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:45:23,091 - __main__ - INFO - Final Assistant Response (NL): 'Here are all your transactions for June 2024:

*   **June 1, 2024**: â‚±2,198.00 spent at Wildflour Cafe + Bakery - Ayala Center for a POS PURCHASE RESTAURANT.
*   **June 2, 2024**: â‚±224.00 spent at Krispy Kreme - Glorietta 4 for a POS PURCHASE FAST FOOD.
*   **June 3, 2024**: â‚±274.00 spent at Yardstick Coffee - Legazpi Village, Makati for a POS PURCHASE COFFEE SHOP.
*   **June 4, 2024**: â‚±290.00 spent at Zus Coffee - EspaÃ±a for a POS PURCHASE COFFEE SHOP.
*   **June 4, 2024**: â‚±1,264.00 spent at Vikings - SM Mall of Asia for a POS PURCHASE RESTAURANT.
*   **June 5, 2024**: â‚±310.00 spent at Bo's Coffee - SM Megamall for a POS PURCHASE COFFEE SHOP.
*   **June 6, 2024**: â‚±278.00 spent at Starbucks - Glorietta 4 for a POS PURCHASE COFFEE SHOP.
*   **June 7, 2024**: â‚±291.00 spent at Yardstick Coffee - Legazpi Village, Makati for a POS PURCHASE COFFEE SHOP.
*   **June 7, 2024**: â‚±627.00 spent at Dunkin' - Ortigas Center for a POS PURCHASE FAST FOOD.
*   **June 8, 2024**: â‚±335.00 spent at Chowking - Cubao - Cyberpark for a POS PURCHASE FAST FOOD.
*   **June 9, 2024**: â‚±297.00 spent at Yardstick Coffee - Legazpi Village, Makati for a POS PURCHASE COFFEE SHOP.
*   **June 9, 2024**: â‚±959.00 spent at Vikings - SM Mall of Asia for a POS PURCHASE RESTAURANT.
*   **June 10, 2024**: â‚±2,126.00 spent at Manam - Greenbelt 2 for a POS PURCHASE RESTAURANT.
*   **June 11, 2024**: â‚±221.00 spent at Commune Cafe - Poblacion, Makati for a POS PURCHASE COFFEE SHOP.
*   **June 11, 2024**: â‚±900.00 spent at Burger King - Trinoma for a POS PURCHASE FAST FOOD.
*   **June 12, 2024**: â‚±150.00 spent at Zus Coffee - EspaÃ±a for a POS PURCHASE COFFEE SHOP.
*   **June 12, 2024**: â‚±1,566.00 spent at Marugame Udon - SM City Sta. Mesa for a POS PURCHASE RESTAURANT.
*   **June 13, 2024**: â‚±288.00 spent at Tim Hortons - Uptown Bonifacio for a POS PURCHASE COFFEE SHOP.
*   **June 13, 2024**: â‚±997.00 spent at KFC - Robinsons Galleria for a POS PURCHASE FAST FOOD.
*   **June 14, 2024**: â‚±21,193.00 deposited from MAMAMO INC. as a SALARY CREDIT.
*   **June 14, 2024**: â‚±319.00 spent at Bo's Coffee - Legazpi Village for a POS PURCHASE COFFEE SHOP.
*   **June 14, 2024**: â‚±331.00 spent at Mang Inasal - Market! Market! for a POS PURCHASE FAST FOOD.
*   **June 16, 2024**: â‚±249.00 spent at Coffee Bean & Tea Leaf - Greenhills Promenade for a POS PURCHASE COFFEE SHOP.
*   **June 16, 2024**: â‚±696.00 spent at Pizza Hut - Tomas Morato for a POS PURCHASE FAST FOOD.
*   **June 17, 2024**: â‚±280.00 spent at Toby's Estate - Legazpi St, Makati for a POS PURCHASE COFFEE SHOP.
*   **June 18, 2024**: â‚±336.00 spent at Tim Hortons - Robinsons Place Manila for a POS PURCHASE COFFEE SHOP.
*   **June 19, 2024**: â‚±326.00 spent at Starbucks - Ayala Triangle for a POS PURCHASE COFFEE SHOP.
*   **June 19, 2024**: â‚±2,485.00 spent at Mesa - Greenbelt 5 for a POS PURCHASE RESTAURANT.
*   **June 19, 2024**: â‚±8,015.00 withdrawn from BPI ATM - Sampaloc as an ATM WITHDRAWAL.
*   **June 20, 2024**: â‚±294.00 spent at Tim Hortons - Makati Central Square for a POS PURCHASE COFFEE SHOP.
*   **June 21, 2024**: â‚±224.00 spent at Bo's Coffee - SM Megamall for a POS PURCHASE COFFEE SHOP.
*   **June 22, 2024**: â‚±7,115.00 spent at Glorietta - Glorietta 1 for POS PURCHASE GENERAL SHOPPING.
*   **June 23, 2024**: â‚±187.00 spent at Coffee Bean & Tea Leaf - Trinoma for a POS PURCHASE COFFEE SHOP.
*   **June 23, 2024**: â‚±515.00 spent at Krispy Kreme - Glorietta 4 for a POS PURCHASE FAST FOOD.
*   **June 24, 2024**: â‚±339.00 spent at Dunkin' - Ayala Triangle for a POS PURCHASE FAST FOOD.
*   **June 25, 2024**: â‚±335.00 spent at Zus Coffee - Taft for a POS PURCHASE COFFEE SHOP.
*   **June 26, 2024**: â‚±168.00 spent at Yardstick Coffee - Legazpi Village, Makati for a POS PURCHASE COFFEE SHOP.
*   **June 26, 2024**: â‚±586.00 spent at Bonchon Chicken - Ayala Malls Feliz for a POS PURCHASE FAST FOOD.
*   **June 27, 2024**: â‚±339.00 spent at Commune Cafe - Poblacion, Makati for a POS PURCHASE COFFEE SHOP.
*   **June 27, 2024**: â‚±483.00 spent at Mang Inasal - Starmall Alabang for a POS PURCHASE FAST FOOD.
*   **June 28, 2024**: â‚±29,574.00 deposited from MAMAMO INC. as a SALARY CREDIT.
*   **June 28, 2024**: â‚±346.00 spent at Yardstick Coffee - Legazpi Village, Makati for a POS PURCHASE COFFEE SHOP.
*   **June 28, 2024**: â‚±247.00 spent at Pizza Hut - SM Megamall for a POS PURCHASE FAST FOOD.
*   **June 29, 2024**: â‚±410.00 spent at Krispy Kreme - Robinsons Antipolo for a POS PURCHASE FAST FOOD.
*   **June 30, 2024**: â‚±143.93 deposited as BANK INTEREST.
*   **June 30, 2024**: â‚±283.00 spent at Starbucks - Ayala Triangle for a POS PURCHASE COFFEE SHOP.

Is there a specific type of transaction or a particular date within June that you'd like to focus on?'
2025-06-19 18:45:33,670 - __main__ - INFO - User Query (en): 'What were my top 3 largest withdrawals?'
2025-06-19 18:45:36,396 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:45:36,397 - __main__ - INFO - Generated SQL Query: 'SELECT "Date_Timestamp", "Transaction_Details", "Merchant_Counterparty_Name", "Withdrawal_Amount" FROM bank_transactions WHERE "Withdrawal_Amount" IS NOT NULL AND "Withdrawal_Amount" > 0 ORDER BY "Withdrawal_Amount" DESC LIMIT 3;')
2025-06-19 18:45:36,397 - __main__ - WARNING - SECURITY ALERT: Directly executing LLM-generated SQL: 'SELECT "Date_Timestamp", "Transaction_Details", "Merchant_Counterparty_Name", "Withdrawal_Amount" FROM bank_transactions WHERE "Withdrawal_Amount" IS NOT NULL AND "Withdrawal_Amount" > 0 ORDER BY "Withdrawal_Amount" DESC LIMIT 3;'. This is dangerous in production without proper validation.
2025-06-19 18:45:36,401 - __main__ - INFO - SQL Query Executed Successfully. Results count: 3 rows.
2025-06-19 18:45:39,365 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:45:39,365 - __main__ - INFO - Final Assistant Response (NL): 'Here are your top 3 largest withdrawals:

*   **April 19, 2025**: You withdrew â‚±10,018.00 from an ATM at RCBC ATM - Makati - Circuit.
*   **August 11, 2024**: You spent â‚±9,883.00 at Glorietta - Glorietta 2 for general shopping.
*   **January 11, 2025**: You spent â‚±9,597.00 at Power Mac Center - SM San Lazaro for general shopping.

Let me know if you'd like to see more details about any of these transactions!'
2025-06-19 18:45:51,586 - __main__ - INFO - User Query (en): 'How much did I deposit in total for 2024?'
2025-06-19 18:45:53,088 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:45:53,089 - __main__ - INFO - Generated SQL Query: 'SELECT SUM(COALESCE(Deposit_Amount, 0)) FROM bank_transactions WHERE STRFTIME('%Y', Date_Timestamp) = '2024';')
2025-06-19 18:45:53,089 - __main__ - WARNING - SECURITY ALERT: Directly executing LLM-generated SQL: 'SELECT SUM(COALESCE(Deposit_Amount, 0)) FROM bank_transactions WHERE STRFTIME('%Y', Date_Timestamp) = '2024';'. This is dangerous in production without proper validation.
2025-06-19 18:45:53,095 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1 rows.
2025-06-19 18:45:54,602 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:45:54,602 - __main__ - INFO - Final Assistant Response (NL): 'Wow! In 2024, you deposited a grand total of â‚±835,991.83 into your account. That's quite a significant amount! Is there anything else you'd like to know about your deposits or overall financial activity?'
2025-06-19 18:46:07,686 - __main__ - INFO - User Query (en): 'List all ATM withdrawals in January 2025.'
2025-06-19 18:46:09,984 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:46:09,985 - __main__ - INFO - Generated SQL Query: 'SELECT Date_Timestamp, Withdrawal_Amount, Merchant_Counterparty_Name FROM bank_transactions WHERE LOWER("Transaction_Details") LIKE '%atm withdrawal%' AND strftime('%Y-%m', "Date_Timestamp") = '2025-01' AND Withdrawal_Amount IS NOT NULL ORDER BY Date_Timestamp ASC;')
2025-06-19 18:46:09,986 - __main__ - WARNING - SECURITY ALERT: Directly executing LLM-generated SQL: 'SELECT Date_Timestamp, Withdrawal_Amount, Merchant_Counterparty_Name FROM bank_transactions WHERE LOWER("Transaction_Details") LIKE '%atm withdrawal%' AND strftime('%Y-%m', "Date_Timestamp") = '2025-01' AND Withdrawal_Amount IS NOT NULL ORDER BY Date_Timestamp ASC;'. This is dangerous in production without proper validation.
2025-06-19 18:46:09,992 - __main__ - INFO - SQL Query Executed Successfully. Results count: 0 rows.
2025-06-19 18:46:12,357 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:46:12,358 - __main__ - INFO - Final Assistant Response (NL): 'It looks like there were no ATM withdrawals recorded in January 2025. Is there another period or type of transaction you'd like to check?'
2025-06-19 18:46:33,500 - __main__ - INFO - User Query (en): 'Show me all refunds.'
2025-06-19 18:46:36,096 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:46:36,096 - __main__ - INFO - Generated SQL Query: 'SELECT "Date_Timestamp", "Transaction_ID", "Transaction_Details", "Merchant_Counterparty_Name", "Deposit_Amount" FROM bank_transactions WHERE LOWER("Transaction_Details") LIKE '%refund%' ORDER BY "Date_Timestamp" ASC;')
2025-06-19 18:46:36,096 - __main__ - WARNING - SECURITY ALERT: Directly executing LLM-generated SQL: 'SELECT "Date_Timestamp", "Transaction_ID", "Transaction_Details", "Merchant_Counterparty_Name", "Deposit_Amount" FROM bank_transactions WHERE LOWER("Transaction_Details") LIKE '%refund%' ORDER BY "Date_Timestamp" ASC;'. This is dangerous in production without proper validation.
2025-06-19 18:46:36,103 - __main__ - INFO - SQL Query Executed Successfully. Results count: 10 rows.
2025-06-19 18:46:39,067 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:46:39,068 - __main__ - INFO - Final Assistant Response (NL): 'Here are all the refunds credited to your account:

*   **January 17, 2024**: You received a â‚±2,401.00 refund from LAZADA.
*   **March 1, 2024**: You received a â‚±3,539.00 refund from SHEIN.
*   **March 21, 2024**: You received a â‚±4,224.00 refund from LAZADA.
*   **March 30, 2024**: You received a â‚±1,464.00 refund from SHOPEE.
*   **September 18, 2024**: You received a â‚±483.00 refund from GRAB.
*   **December 21, 2024**: You received a â‚±1,909.00 refund from LAZADA.
*   **January 8, 2025**: You received a â‚±1,328.00 refund from TIKTOK SHP.
*   **April 25, 2025**: You received a â‚±3,668.00 refund from SHEIN.
*   **May 20, 2025**: You received a â‚±2,761.00 refund from SHOPEE.
*   **June 16, 2025**: You received a â‚±845.00 refund from SHEIN.

Do any of these look familiar, or would you like to know more about a specific refund?'
2025-06-19 18:46:45,856 - __main__ - INFO - Evaluation route triggered.
2025-06-19 18:46:48,077 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:46:48,081 - __main__ - WARNING - Test Case 1: SQL execution result mismatch.
2025-06-19 18:46:51,662 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:47:05,281 - __main__ - INFO - Test Case 1: LLM Judge verdict received.
2025-06-19 18:47:09,174 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:47:09,179 - __main__ - WARNING - Test Case 2: SQL execution result mismatch.
2025-06-19 18:47:13,984 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:47:24,327 - __main__ - INFO - Test Case 2: LLM Judge verdict received.
2025-06-19 18:47:26,989 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:47:31,262 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:47:37,127 - __main__ - INFO - Test Case 3: LLM Judge verdict received.
2025-06-19 18:47:39,380 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:47:42,656 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:47:51,975 - __main__ - INFO - Test Case 4: LLM Judge verdict received.
2025-06-19 18:47:54,535 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:47:54,540 - __main__ - WARNING - Test Case 5: SQL execution result mismatch.
2025-06-19 18:47:54,849 - __main__ - ERROR - An error occurred during Gemini API call: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerMinutePerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-2.5-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 10
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 5
}
]
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_conev.py", line 262, in get_gemini_response
    gemini_response = model_obj.generate_content(full_prompt_with_query)
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/generativeai/generative_models.py", line 331, in generate_content
    response = self._client.generate_content(
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py", line 835, in generate_content
    response = rpc(
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/retry/retry_unary.py", line 294, in retry_wrapped_func
    return retry_target(
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/retry/retry_unary.py", line 156, in retry_target
    next_sleep = _retry_error_helper(
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/retry/retry_base.py", line 214, in _retry_error_helper
    raise final_exc from source_exc
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/retry/retry_unary.py", line 147, in retry_target
    result = target()
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/grpc_helpers.py", line 78, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ResourceExhausted: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerMinutePerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-2.5-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 10
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 5
}
]
2025-06-19 18:47:54,876 - __main__ - ERROR - Test Case 5: Bot failed to generate NL response: An error occurred during Gemini API call: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerMinutePerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-2.5-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 10
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 5
}
]
2025-06-19 18:47:55,868 - __main__ - ERROR - LLM Judge: An unexpected error occurred: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerMinutePerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-2.5-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 10
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 4
}
]
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/evaluation_module.py", line 184, in get_llm_judge_response
    judge_response = model_obj.generate_content(prompt_text)
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/generativeai/generative_models.py", line 331, in generate_content
    response = self._client.generate_content(
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py", line 835, in generate_content
    response = rpc(
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/retry/retry_unary.py", line 294, in retry_wrapped_func
    return retry_target(
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/retry/retry_unary.py", line 156, in retry_target
    next_sleep = _retry_error_helper(
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/retry/retry_base.py", line 214, in _retry_error_helper
    raise final_exc from source_exc
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/retry/retry_unary.py", line 147, in retry_target
    result = target()
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/grpc_helpers.py", line 78, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ResourceExhausted: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerMinutePerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-2.5-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 10
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 4
}
]
2025-06-19 18:47:55,875 - __main__ - ERROR - Test Case 5: LLM Judge returned an error: An unexpected error occurred: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerMinutePerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-2.5-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 10
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 4
}
]
2025-06-19 18:47:55,879 - __main__ - INFO - Evaluation process completed successfully.
2025-06-19 18:50:54,872 - __main__ - INFO - Flask Application started.
2025-06-19 18:50:54,887 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 18:50:54,932 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 18:51:19,707 - __main__ - INFO - Flask Application started.
2025-06-19 18:51:19,721 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 18:51:19,762 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 18:51:59,787 - __main__ - INFO - Flask Application started.
2025-06-19 18:51:59,802 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 18:51:59,846 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 18:52:11,456 - __main__ - INFO - Flask Application started.
2025-06-19 18:52:11,471 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 18:52:11,515 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 18:52:13,995 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-19 18:52:28,710 - __main__ - INFO - User Query (en): 'Show me all transactions for June 2024.'
2025-06-19 18:52:32,341 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:52:32,341 - __main__ - INFO - Generated SQL Query: 'SELECT Date_Timestamp, Transaction_ID, Transaction_Details, Merchant_Counterparty_Name, Withdrawal_Amount, Deposit_Amount, Recurring_Existing_Balance FROM bank_transactions WHERE Date_Timestamp >= '2024-06-01' AND Date_Timestamp < '2024-07-01' ORDER BY Date_Timestamp ASC;')
2025-06-19 18:52:32,341 - __main__ - WARNING - SECURITY ALERT: Directly executing LLM-generated SQL: 'SELECT Date_Timestamp, Transaction_ID, Transaction_Details, Merchant_Counterparty_Name, Withdrawal_Amount, Deposit_Amount, Recurring_Existing_Balance FROM bank_transactions WHERE Date_Timestamp >= '2024-06-01' AND Date_Timestamp < '2024-07-01' ORDER BY Date_Timestamp ASC;'. This is dangerous in production without proper validation.
2025-06-19 18:52:32,347 - __main__ - INFO - SQL Query Executed Successfully. Results count: 46 rows.
2025-06-19 18:52:42,273 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:52:42,274 - __main__ - INFO - Final Assistant Response (NL): 'Here are all your transactions for June 2024:

*   **June 1:** You spent â‚±2,198.00 at Wildflour Cafe + Bakery - Ayala Center for a restaurant purchase. Your balance was â‚±118,816.60.
*   **June 2:** You spent â‚±224.00 at Krispy Kreme - Glorietta 4 for a fast food purchase. Your balance was â‚±118,592.60.
*   **June 3:** You spent â‚±274.00 at Yardstick Coffee - Legazpi Village, Makati for a coffee shop purchase. Your balance was â‚±118,318.60.
*   **June 4:** You spent â‚±290.00 at Zus Coffee - EspaÃ±a for a coffee shop purchase. Later, you spent â‚±1,264.00 at Vikings - SM Mall of Asia for a restaurant purchase. Your balances were â‚±118,028.60 and â‚±116,764.60 respectively.
*   **June 5:** You spent â‚±310.00 at Bo's Coffee - SM Megamall for a coffee shop purchase. Your balance was â‚±116,454.60.
*   **June 6:** You spent â‚±278.00 at Starbucks - Glorietta 4 for a coffee shop purchase. Your balance was â‚±116,176.60.
*   **June 7:** You spent â‚±291.00 at Yardstick Coffee - Legazpi Village, Makati for a coffee shop purchase. Later, you spent â‚±627.00 at Dunkin' - Ortigas Center for a fast food purchase. Your balances were â‚±115,885.60 and â‚±115,258.60 respectively.
*   **June 8:** You spent â‚±335.00 at Chowking - Cubao - Cyberpark for a fast food purchase. Your balance was â‚±114,923.60.
*   **June 9:** You spent â‚±297.00 at Yardstick Coffee - Legazpi Village, Makati for a coffee shop purchase. Later, you spent â‚±959.00 at Vikings - SM Mall of Asia for a restaurant purchase. Your balances were â‚±114,626.60 and â‚±113,667.60 respectively.
*   **June 10:** You spent â‚±2,126.00 at Manam - Greenbelt 2 for a restaurant purchase. Your balance was â‚±111,541.60.
*   **June 11:** You spent â‚±221.00 at Commune Cafe - Poblacion, Makati for a coffee shop purchase. Later, you spent â‚±900.00 at Burger King - Trinoma for a fast food purchase. Your balances were â‚±111,320.60 and â‚±110,420.60 respectively.
*   **June 12:** You spent â‚±150.00 at Zus Coffee - EspaÃ±a for a coffee shop purchase. Later, you spent â‚±1,566.00 at Marugame Udon - SM City Sta. Mesa for a restaurant purchase. Your balances were â‚±110,270.60 and â‚±108,704.60 respectively.
*   **June 13:** You spent â‚±288.00 at Tim Hortons - Uptown Bonifacio for a coffee shop purchase. Later, you spent â‚±997.00 at KFC - Robinsons Galleria for a fast food purchase. Your balances were â‚±108,416.60 and â‚±107,419.60 respectively.
*   **June 14:** You received a salary credit of â‚±21,193.00 from MAMAMO INC. Then, you spent â‚±319.00 at Bo's Coffee - Legazpi Village for a coffee shop purchase. Later, you spent â‚±331.00 at Mang Inasal - Market! Market! for a fast food purchase. Your balances were â‚±128,612.60, â‚±128,293.60, and â‚±127,962.60 respectively.
*   **June 16:** You spent â‚±249.00 at Coffee Bean & Tea Leaf - Greenhills Promenade for a coffee shop purchase. Later, you spent â‚±696.00 at Pizza Hut - Tomas Morato for a fast food purchase. Your balances were â‚±127,713.60 and â‚±127,017.60 respectively.
*   **June 17:** You spent â‚±280.00 at Toby's Estate - Legazpi St, Makati for a coffee shop purchase. Your balance was â‚±126,737.60.
*   **June 18:** You spent â‚±336.00 at Tim Hortons - Robinsons Place Manila for a coffee shop purchase. Your balance was â‚±126,401.60.
*   **June 19:** You spent â‚±326.00 at Starbucks - Ayala Triangle for a coffee shop purchase. Later, you spent â‚±2,485.00 at Mesa - Greenbelt 5 for a restaurant purchase. You also made an ATM withdrawal of â‚±8,015.00 from BPI ATM - Sampaloc. Your balances were â‚±126,075.60, â‚±123,590.60, and â‚±115,575.60 respectively.
*   **June 20:** You spent â‚±294.00 at Tim Hortons - Makati Central Square for a coffee shop purchase. Your balance was â‚±115,281.60.
*   **June 21:** You spent â‚±224.00 at Bo's Coffee - SM Megamall for a coffee shop purchase. Your balance was â‚±115,057.60.
*   **June 22:** You spent â‚±7,115.00 at Glorietta - Glorietta 1 for general shopping. Your balance was â‚±107,942.60.
*   **June 23:** You spent â‚±187.00 at Coffee Bean & Tea Leaf - Trinoma for a coffee shop purchase. Later, you spent â‚±515.00 at Krispy Kreme - Glorietta 4 for a fast food purchase. Your balances were â‚±107,755.60 and â‚±107,240.60 respectively.
*   **June 24:** You spent â‚±339.00 at Dunkin' - Ayala Triangle for a fast food purchase. Your balance was â‚±106,901.60.
*   **June 25:** You spent â‚±335.00 at Zus Coffee - Taft for a coffee shop purchase. Your balance was â‚±106,566.60.
*   **June 26:** You spent â‚±168.00 at Yardstick Coffee - Legazpi Village, Makati for a coffee shop purchase. Later, you spent â‚±586.00 at Bonchon Chicken - Ayala Malls Feliz for a fast food purchase. Your balances were â‚±106,398.60 and â‚±105,812.60 respectively.
*   **June 27:** You spent â‚±339.00 at Commune Cafe - Poblacion, Makati for a coffee shop purchase. Later, you spent â‚±483.00 at Mang Inasal - Starmall Alabang for a fast food purchase. Your balances were â‚±105,473.60 and â‚±104,990.60 respectively.
*   **June 28:** You received a salary credit of â‚±29,574.00 from MAMAMO INC. Then, you spent â‚±346.00 at Yardstick Coffee - Legazpi Village, Makati for a coffee shop purchase. Later, you spent â‚±247.00 at Pizza Hut - SM Megamall for a fast food purchase. Your balances were â‚±134,564.60, â‚±134,218.60, and â‚±133,971.60 respectively.
*   **June 29:** You spent â‚±410.00 at Krispy Kreme - Robinsons Antipolo for a fast food purchase. Your balance was â‚±133,561.60.
*   **June 30:** You received an interest credit of â‚±143.93. Then, you spent â‚±283.00 at Starbucks - Ayala Triangle for a coffee shop purchase. Your balances were â‚±133,705.53 and â‚±133,422.53 respectively.

That's a full summary of your transactions for June 2024! Let me know if you'd like to look into any specific transactions or categories.'
2025-06-19 18:53:12,019 - __main__ - INFO - User Query (en): 'What were my top 3 largest withdrawals?'
2025-06-19 18:53:14,425 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:53:14,425 - __main__ - INFO - Generated SQL Query: 'SELECT "Date_Timestamp", "Transaction_Details", "Merchant_Counterparty_Name", COALESCE("Withdrawal_Amount", 0) AS "Withdrawal_Amount", "Recurring_Existing_Balance" FROM bank_transactions WHERE "Withdrawal_Amount" IS NOT NULL ORDER BY "Withdrawal_Amount" DESC LIMIT 3;')
2025-06-19 18:53:14,426 - __main__ - WARNING - SECURITY ALERT: Directly executing LLM-generated SQL: 'SELECT "Date_Timestamp", "Transaction_Details", "Merchant_Counterparty_Name", COALESCE("Withdrawal_Amount", 0) AS "Withdrawal_Amount", "Recurring_Existing_Balance" FROM bank_transactions WHERE "Withdrawal_Amount" IS NOT NULL ORDER BY "Withdrawal_Amount" DESC LIMIT 3;'. This is dangerous in production without proper validation.
2025-06-19 18:53:14,431 - __main__ - INFO - SQL Query Executed Successfully. Results count: 3 rows.
2025-06-19 18:53:19,109 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:53:19,109 - __main__ - INFO - Final Assistant Response (NL): 'Here are your top 3 largest withdrawals:

*   On **April 19, 2025**, you had an ATM withdrawal of **â‚±10,018.00** from RCBC ATM - Makati - Circuit. Your balance after this was â‚±229,592.17.
*   On **August 11, 2024**, you made a purchase of **â‚±9,883.00** for general shopping at Glorietta - Glorietta 2. Your balance after this was â‚±90,118.16.
*   On **January 11, 2025**, you made a purchase of **â‚±9,597.00** for general shopping at Power Mac Center - SM San Lazaro. Your balance after this was â‚±203,414.83.

Do any of these transactions look familiar, or would you like to explore other spending patterns?'
2025-06-19 18:53:30,404 - __main__ - INFO - User Query (en): '"How much did I deposit in total for 2024?'
2025-06-19 18:53:32,243 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:53:32,243 - __main__ - INFO - Generated SQL Query: 'SELECT SUM(COALESCE(Deposit_Amount, 0)) FROM bank_transactions WHERE strftime('%Y', Date_Timestamp) = '2024';')
2025-06-19 18:53:32,243 - __main__ - WARNING - SECURITY ALERT: Directly executing LLM-generated SQL: 'SELECT SUM(COALESCE(Deposit_Amount, 0)) FROM bank_transactions WHERE strftime('%Y', Date_Timestamp) = '2024';'. This is dangerous in production without proper validation.
2025-06-19 18:53:32,249 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1 rows.
2025-06-19 18:53:34,083 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:53:34,084 - __main__ - INFO - Final Assistant Response (NL): 'For the year 2024, you've deposited a total of â‚±835,991.83 into your account! That's a significant amount! Would you like to break this down by month or see where these deposits came from?'
2025-06-19 18:53:40,102 - __main__ - INFO - User Query (en): 'List all ATM withdrawals in January 2025.'
2025-06-19 18:53:43,711 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:53:43,711 - __main__ - INFO - Generated SQL Query: 'SELECT Date_Timestamp, COALESCE(Withdrawal_Amount, 0) AS Withdrawal_Amount, Merchant_Counterparty_Name, Recurring_Existing_Balance, Transaction_Details FROM bank_transactions WHERE strftime('%Y-%m', Date_Timestamp) = '2025-01' AND COALESCE(Withdrawal_Amount, 0) > 0 AND (LOWER("Transaction_Details") LIKE '%atm%' OR LOWER("Transaction_Details") LIKE '%withdrawal%') ORDER BY Date_Timestamp ASC;')
2025-06-19 18:53:43,711 - __main__ - WARNING - SECURITY ALERT: Directly executing LLM-generated SQL: 'SELECT Date_Timestamp, COALESCE(Withdrawal_Amount, 0) AS Withdrawal_Amount, Merchant_Counterparty_Name, Recurring_Existing_Balance, Transaction_Details FROM bank_transactions WHERE strftime('%Y-%m', Date_Timestamp) = '2025-01' AND COALESCE(Withdrawal_Amount, 0) > 0 AND (LOWER("Transaction_Details") LIKE '%atm%' OR LOWER("Transaction_Details") LIKE '%withdrawal%') ORDER BY Date_Timestamp ASC;'. This is dangerous in production without proper validation.
2025-06-19 18:53:43,714 - __main__ - INFO - SQL Query Executed Successfully. Results count: 0 rows.
2025-06-19 18:53:45,636 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:53:45,636 - __main__ - INFO - Final Assistant Response (NL): 'It looks like there were no ATM withdrawals recorded for your account in January 2025. Is there another month you'd like to check, or perhaps a different type of transaction?'
2025-06-19 18:53:55,702 - __main__ - INFO - User Query (en): 'Show me all refunds.'
2025-06-19 18:53:58,046 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:53:58,047 - __main__ - INFO - Generated SQL Query: 'SELECT Date_Timestamp, "Transaction_Details", Deposit_Amount, Recurring_Existing_Balance FROM bank_transactions WHERE LOWER("Transaction_Details") LIKE '%refund%' AND Deposit_Amount IS NOT NULL ORDER BY Date_Timestamp ASC;')
2025-06-19 18:53:58,047 - __main__ - WARNING - SECURITY ALERT: Directly executing LLM-generated SQL: 'SELECT Date_Timestamp, "Transaction_Details", Deposit_Amount, Recurring_Existing_Balance FROM bank_transactions WHERE LOWER("Transaction_Details") LIKE '%refund%' AND Deposit_Amount IS NOT NULL ORDER BY Date_Timestamp ASC;'. This is dangerous in production without proper validation.
2025-06-19 18:53:58,052 - __main__ - INFO - SQL Query Executed Successfully. Results count: 10 rows.
2025-06-19 18:54:02,451 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:54:02,452 - __main__ - INFO - Final Assistant Response (NL): 'Here are all the refunds credited to your account:

*   On **January 17, 2024**, you received a refund of **â‚±2,401.00**. Your balance after this was â‚±67,795.00.
*   On **March 1, 2024**, you received a refund of **â‚±3,539.00**. Your balance after this was â‚±83,600.49.
*   On **March 21, 2024**, you received a refund of **â‚±4,224.00**. Your balance after this was â‚±95,569.49.
*   On **March 30, 2024**, you received a refund of **â‚±1,464.00**. Your balance after this was â‚±105,419.49.
*   On **September 18, 2024**, you received a refund of **â‚±483.00**. Your balance after this was â‚±126,567.11.
*   On **December 21, 2024**, you received a refund of **â‚±1,909.00**. Your balance after this was â‚±193,224.70.
*   On **January 8, 2025**, you received a refund of **â‚±1,328.00**. Your balance after this was â‚±216,993.83.
*   On **April 25, 2025**, you received a refund of **â‚±3,668.00**. Your balance after this was â‚±229,413.17.
*   On **May 20, 2025**, you received a refund of **â‚±2,761.00**. Your balance after this was â‚±253,043.83.
*   On **June 16, 2025**, you received a refund of **â‚±845.00**. Your balance after this was â‚±291,151.18.

Is there a specific refund you'd like more details on, or perhaps another type of transaction you're curious about?'
2025-06-19 18:54:07,687 - __main__ - INFO - Evaluation route triggered.
2025-06-19 18:54:10,949 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:54:10,952 - __main__ - WARNING - Test Case 1: SQL execution result mismatch.
2025-06-19 18:54:22,009 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:54:36,140 - __main__ - INFO - Test Case 1: LLM Judge verdict received.
2025-06-19 18:54:38,665 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:54:38,669 - __main__ - WARNING - Test Case 2: SQL execution result mismatch.
2025-06-19 18:54:41,569 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:54:54,467 - __main__ - INFO - Test Case 2: LLM Judge verdict received.
2025-06-19 18:54:56,424 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:54:58,578 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:55:07,035 - __main__ - INFO - Test Case 3: LLM Judge verdict received.
2025-06-19 18:55:08,936 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:55:14,015 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:55:31,474 - __main__ - INFO - Test Case 4: LLM Judge verdict received.
2025-06-19 18:55:34,112 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:55:34,115 - __main__ - WARNING - Test Case 5: SQL execution result mismatch.
2025-06-19 18:55:36,759 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 18:55:50,458 - __main__ - INFO - Test Case 5: LLM Judge verdict received.
2025-06-19 18:55:50,463 - __main__ - INFO - Evaluation process completed successfully.
2025-06-19 19:06:40,793 - __main__ - INFO - Flask Application started.
2025-06-19 19:06:40,807 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 19:06:40,849 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 19:06:40,891 - __main__ - INFO - Evaluation route triggered.
2025-06-19 19:06:42,613 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-19 19:06:43,638 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 19:06:44,966 - __main__ - INFO - User Query (en): 'hello'
2025-06-19 19:06:45,961 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 19:06:45,961 - __main__ - INFO - Generated SQL Query: 'None'
2025-06-19 19:06:45,962 - __main__ - WARNING - SECURITY ALERT: Directly executing LLM-generated SQL: 'None'. This is dangerous in production without proper validation.
2025-06-19 19:06:45,963 - __main__ - CRITICAL - An unexpected critical error occurred: argument 1 must be str, not None
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_conev.py", line 369, in chat
    cursor.execute(sql_query)
TypeError: argument 1 must be str, not None
2025-06-19 19:06:50,481 - __main__ - INFO - User Query (en): 'hello'
2025-06-19 19:06:51,088 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 19:06:52,528 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 19:06:52,528 - __main__ - INFO - Generated SQL Query: ''
2025-06-19 19:06:52,528 - __main__ - WARNING - SECURITY ALERT: Directly executing LLM-generated SQL: ''. This is dangerous in production without proper validation.
2025-06-19 19:06:52,529 - __main__ - CRITICAL - An unexpected critical error occurred: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_conev.py", line 372, in chat
    column_headers = [description[0] for description in cursor.description]
TypeError: 'NoneType' object is not iterable
2025-06-19 19:07:02,102 - __main__ - INFO - Test Case 1: LLM Judge verdict received.
2025-06-19 19:07:04,320 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 19:07:04,320 - __main__ - WARNING - Test Case 2: SQL execution result mismatch.
2025-06-19 19:07:10,715 - __main__ - INFO - Flask Application started.
2025-06-19 19:07:10,729 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 19:07:10,769 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 19:07:10,803 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-19 19:07:13,203 - __main__ - INFO - User Query (en): 'hello'
2025-06-19 19:07:14,664 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 19:07:14,664 - __main__ - INFO - Generated SQL Query: ''
2025-06-19 19:07:14,664 - __main__ - WARNING - SECURITY ALERT: Directly executing LLM-generated SQL: ''. This is dangerous in production without proper validation.
2025-06-19 19:07:14,666 - __main__ - CRITICAL - An unexpected critical error occurred: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_conev.py", line 372, in chat
    column_headers = [description[0] for description in cursor.description]
TypeError: 'NoneType' object is not iterable
2025-06-19 19:07:16,748 - __main__ - INFO - User Query (en): 'hi'
2025-06-19 19:07:18,042 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 19:07:18,042 - __main__ - INFO - Generated SQL Query: ''
2025-06-19 19:07:18,042 - __main__ - WARNING - SECURITY ALERT: Directly executing LLM-generated SQL: ''. This is dangerous in production without proper validation.
2025-06-19 19:07:18,042 - __main__ - CRITICAL - An unexpected critical error occurred: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_conev.py", line 372, in chat
    column_headers = [description[0] for description in cursor.description]
TypeError: 'NoneType' object is not iterable
2025-06-19 19:07:23,644 - __main__ - INFO - User Query (en): 'Show me all transactions for June 2024'
2025-06-19 19:07:27,158 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 19:07:27,159 - __main__ - INFO - Generated SQL Query: 'SELECT Date_Timestamp, Transaction_ID, "Transaction_Details", "Merchant_Counterparty_Name", Withdrawal_Amount, Deposit_Amount, Recurring_Existing_Balance FROM bank_transactions WHERE strftime('%Y-%m', Date_Timestamp) = '2024-06' ORDER BY Date_Timestamp ASC;'
2025-06-19 19:07:27,159 - __main__ - WARNING - SECURITY ALERT: Directly executing LLM-generated SQL: 'SELECT Date_Timestamp, Transaction_ID, "Transaction_Details", "Merchant_Counterparty_Name", Withdrawal_Amount, Deposit_Amount, Recurring_Existing_Balance FROM bank_transactions WHERE strftime('%Y-%m', Date_Timestamp) = '2024-06' ORDER BY Date_Timestamp ASC;'. This is dangerous in production without proper validation.
2025-06-19 19:07:27,162 - __main__ - INFO - SQL Query Executed Successfully. Results count: 46 rows.
2025-06-19 19:07:27,464 - __main__ - ERROR - An error occurred during Gemini API call: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerMinutePerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-2.5-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 10
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 32
}
]
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_conev.py", line 279, in get_gemini_response
    gemini_response = model_obj.generate_content(full_prompt_with_query)
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/generativeai/generative_models.py", line 331, in generate_content
    response = self._client.generate_content(
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py", line 835, in generate_content
    response = rpc(
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/retry/retry_unary.py", line 294, in retry_wrapped_func
    return retry_target(
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/retry/retry_unary.py", line 156, in retry_target
    next_sleep = _retry_error_helper(
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/retry/retry_base.py", line 214, in _retry_error_helper
    raise final_exc from source_exc
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/retry/retry_unary.py", line 147, in retry_target
    result = target()
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/grpc_helpers.py", line 78, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ResourceExhausted: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerMinutePerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-2.5-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 10
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 32
}
]
2025-06-19 19:07:27,488 - __main__ - ERROR - Gemini failed to generate final NL response after query execution. Assistant response: 'I executed the query, but I had trouble forming a clear response. Please try again.'
2025-06-19 19:24:34,784 [INFO] [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-06-19 19:24:34,785 [INFO] [33mPress CTRL+C to quit[0m
2025-06-19 19:24:34,791 [INFO]  * Restarting with watchdog (fsevents)
2025-06-19 19:24:35,050 [WARNING]  * Debugger is active!
2025-06-19 19:24:35,057 [INFO]  * Debugger PIN: 904-818-630
2025-06-19 19:24:48,532 [INFO] 127.0.0.1 - - [19/Jun/2025 19:24:48] "GET / HTTP/1.1" 200 -
2025-06-19 19:24:48,572 [INFO] 127.0.0.1 - - [19/Jun/2025 19:24:48] "[36mGET /static/escrito.js HTTP/1.1[0m" 304 -
2025-06-19 19:24:48,572 [INFO] 127.0.0.1 - - [19/Jun/2025 19:24:48] "GET /static/estilo.css HTTP/1.1" 200 -
2025-06-19 19:24:51,492 [INFO] 127.0.0.1 - - [19/Jun/2025 19:24:51] "[33mPOST /chat HTTP/1.1[0m" 404 -
2025-06-19 19:24:59,069 [INFO] 127.0.0.1 - - [19/Jun/2025 19:24:59] "[33mPOST /chat HTTP/1.1[0m" 404 -
2025-06-19 19:25:00,719 [INFO] 127.0.0.1 - - [19/Jun/2025 19:25:00] "GET / HTTP/1.1" 200 -
2025-06-19 19:25:00,741 [INFO] 127.0.0.1 - - [19/Jun/2025 19:25:00] "[36mGET /static/estilo.css HTTP/1.1[0m" 304 -
2025-06-19 19:25:00,748 [INFO] 127.0.0.1 - - [19/Jun/2025 19:25:00] "[36mGET /static/escrito.js HTTP/1.1[0m" 304 -
2025-06-19 19:25:04,686 [INFO] 127.0.0.1 - - [19/Jun/2025 19:25:04] "[33mPOST /chat HTTP/1.1[0m" 404 -
2025-06-19 19:30:17,458 [DEBUG] NativeEvent(path="/Users/mochi/Projects/Bank-Chatbot/app/app_conev.py", inode=6251333, flags=11400, id=43178421): is_file, is_inode_meta_mod, is_modified
2025-06-19 19:30:17,459 [DEBUG] queue_event FileModifiedEvent(src_path='/Users/mochi/Projects/Bank-Chatbot/app/app_conev.py', dest_path='', event_type='modified', is_directory=False, is_synthetic=False)
2025-06-19 19:30:17,465 [INFO]  * Detected change in '/Users/mochi/Projects/Bank-Chatbot/app/app_conev.py', reloading
2025-06-19 19:30:17,905 [INFO]  * Restarting with watchdog (fsevents)
2025-06-19 19:33:37,081 [INFO]  * Restarting with watchdog (fsevents)
2025-06-19 19:33:41,645 [INFO]  * Restarting with watchdog (fsevents)
2025-06-19 19:33:48,820 - ERROR - Gemini API error
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_conev.py", line 153, in get_gemini_response
    return json.loads(json_str)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
2025-06-19 19:34:17,583 - ERROR - Gemini API error
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_conev.py", line 153, in get_gemini_response
    return json.loads(json_str)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
2025-06-19 19:34:33,263 - ERROR - Gemini API error
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_conev.py", line 153, in get_gemini_response
    return json.loads(json_str)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
2025-06-19 19:34:51,034 [INFO]  * Restarting with watchdog (fsevents)
2025-06-19 19:35:23,575 - __main__ - INFO - Flask Application started.
2025-06-19 19:35:23,590 - __main__ - INFO - Database connection established.
2025-06-19 19:35:23,590 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 19:35:23,632 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 19:35:23,896 - __main__ - INFO - Flask Application started.
2025-06-19 19:35:23,906 - __main__ - INFO - Database connection established.
2025-06-19 19:35:23,906 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 19:35:23,935 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 19:35:25,319 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-19 19:35:27,492 - __main__ - INFO - User Query (en): 'hello'
2025-06-19 19:35:30,847 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 19:35:30,848 - __main__ - INFO - Generated SQL Query: 'SELECT 'Hello';'
2025-06-19 19:35:30,848 - __main__ - INFO - Database connection established.
2025-06-19 19:35:30,849 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1
2025-06-19 19:35:32,878 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 19:35:32,879 - __main__ - INFO - Final Assistant Response (NL): 'Hello again! How can I help you today?'
2025-06-19 19:35:43,228 - __main__ - INFO - User Query (en): 'Show me all transactions for June 2024.'
2025-06-19 19:35:46,497 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 19:35:46,498 - __main__ - INFO - Generated SQL Query: 'SELECT Date_Timestamp, Transaction_ID, Transaction_Details, Merchant_Counterparty_Name, Withdrawal_Amount, Deposit_Amount, Recurring_Existing_Balance FROM bank_transactions WHERE Date_Timestamp >= '2024-06-01 00:00:00' AND Date_Timestamp < '2024-07-01 00:00:00' ORDER BY Date_Timestamp ASC;'
2025-06-19 19:35:46,500 - __main__ - INFO - Database connection established.
2025-06-19 19:35:46,503 - __main__ - INFO - SQL Query Executed Successfully. Results count: 46
2025-06-19 19:35:56,501 - __main__ - ERROR - Error decoding JSON from Gemini: Expecting value: line 1 column 1 (char 0). Raw content: START>>>Here are all your transactions for June 2024!

I found 39 transactions for you in June 2024. Here's a detailed list:

*   **June 1:** â‚±2,198.00 spent at Wildflour Cafe + Bakery - Ayala Center (POS Purchase Restaurant)
*   **June 2:** â‚±224.00 spent at Krispy Kreme - Glorietta 4 (POS Purchase Fast Food)
*   **June 3:** â‚±274.00 spent at Yardstick Coffee - Legazpi Village, Makati (POS Purchase Coffee Shop)
*   **June 4:**
    *   â‚±290.00 spent at Zus Coffee - EspaÃ±a (POS Purchase Coffee Shop)
    *   â‚±1,264.00 spent at Vikings - SM Mall of Asia (POS Purchase Restaurant)
*   **June 5:** â‚±310.00 spent at Bo's Coffee - SM Megamall (POS Purchase Coffee Shop)
*   **June 6:** â‚±278.00 spent at Starbucks - Glorietta 4 (POS Purchase Coffee Shop)
*   **June 7:**
    *   â‚±291.00 spent at Yardstick Coffee - Legazpi Village, Makati (POS Purchase Coffee Shop)
    *   â‚±627.00 spent at Dunkin' - Ortigas Center (POS Purchase Fast Food)
*   **June 8:** â‚±335.00 spent at Chowking - Cubao - Cyberpark (POS Purchase Fast Food)
*   **June 9:**
    *   â‚±297.00 spent at Yardstick Coffee - Legazpi Village, Makati (POS Purchase Coffee Shop)
    *   â‚±959.00 spent at Vikings - SM Mall of Asia (POS Purchase Restaurant)
*   **June 10:** â‚±2,126.00 spent at Manam - Greenbelt 2 (POS Purchase Restaurant)
*   **June 11:**
    *   â‚±221.00 spent at Commune Cafe - Poblacion, Makati (POS Purchase Coffee Shop)
    *   â‚±900.00 spent at Burger King - Trinoma (POS Purchase Fast Food)
*   **June 12:**
    *   â‚±150.00 spent at Zus Coffee - EspaÃ±a (POS Purchase Coffee Shop)
    *   â‚±1,566.00 spent at Marugame Udon - SM City Sta. Mesa (POS Purchase Restaurant)
*   **June 13:**
    *   â‚±288.00 spent at Tim Hortons - Uptown Bonifacio (POS Purchase Coffee Shop)
    *   â‚±997.00 spent at KFC - Robinsons Galleria (POS Purchase Fast Food)
*   **June 14:**
    *   â‚±21,193.00 deposited from MAMAMO INC. (Salary Credit)
    *   â‚±319.00 spent at Bo's Coffee - Legazpi Village (POS Purchase Coffee Shop)
    *   â‚±331.00 spent at Mang Inasal - Market! Market! (POS Purchase Fast Food)
*   **June 16:**
    *   â‚±249.00 spent at Coffee Bean & Tea Leaf - Greenhills Promenade (POS Purchase Coffee Shop)
    *   â‚±696.00 spent at Pizza Hut - Tomas Morato (POS Purchase Fast Food)
*   **June 17:** â‚±280.00 spent at Toby's Estate - Legazpi St, Makati (POS Purchase Coffee Shop)
*   **June 18:** â‚±336.00 spent at Tim Hortons - Robinsons Place Manila (POS Purchase Coffee Shop)
*   **June 19:**
    *   â‚±326.00 spent at Starbucks - Ayala Triangle (POS Purchase Coffee Shop)
    *   â‚±2,485.00 spent at Mesa - Greenbelt 5 (POS Purchase Restaurant)
    *   â‚±8,015.00 ATM Withdrawal from BPI ATM - Sampaloc
*   **June 20:** â‚±294.00 spent at Tim Hortons - Makati Central Square (POS Purchase Coffee Shop)
*   **June 21:** â‚±224.00 spent at Bo's Coffee - SM Megamall (POS Purchase Coffee Shop)
*   **June 22:** â‚±7,115.00 spent at Glorietta - Glorietta 1 (POS Purchase General Shopping)
*   **June 23:**
    *   â‚±187.00 spent at Coffee Bean & Tea Leaf - Trinoma (POS Purchase Coffee Shop)
    *   â‚±515.00 spent at Krispy Kreme - Glorietta 4 (POS Purchase Fast Food)
*   **June 24:** â‚±339.00 spent at Dunkin' - Ayala Triangle (POS Purchase Fast Food)
*   **June 25:** â‚±335.00 spent at Zus Coffee - Taft (POS Purchase Coffee Shop)
*   **June 26:**
    *   â‚±168.00 spent at Yardstick Coffee - Legazpi Village, Makati (POS Purchase Coffee Shop)
    *   â‚±586.00 spent at Bonchon Chicken - Ayala Malls Feliz (POS Purchase Fast Food)
*   **June 27:**
    *   â‚±339.00 spent at Commune Cafe - Poblacion, Makati (POS Purchase Coffee Shop)
    *   â‚±483.00 spent at Mang Inasal - Starmall Alabang (POS Purchase Fast Food)
*   **June 28:**
    *   â‚±29,574.00 deposited from MAMAMO INC. (Salary Credit)
    *   â‚±346.00 spent at Yardstick Coffee - Legazpi Village, Makati (POS Purchase Coffee Shop)
    *   â‚±247.00 spent at Pizza Hut - SM Megamall (POS Purchase Fast Food)
*   **June 29:** â‚±410.00 spent at Krispy Kreme - Robinsons Antipolo (POS Purchase Fast Food)
*   **June 30:**
    *   â‚±143.93 deposited from BANK INTEREST (Interest Credit)
    *   â‚±283.00 spent at Starbucks - Ayala Triangle (POS Purchase Coffee Shop)

Is there anything specific you'd like to know about these transactions, or perhaps a summary of your spending for the month?<<<END
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_conev.py", line 292, in get_gemini_response
    response_dict = json.loads(json_str)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
2025-06-19 19:35:56,508 - __main__ - ERROR - Gemini failed to generate final NL response after query execution. Assistant response: 'I executed the query, but I had trouble forming a clear response. Please try again.'
2025-06-19 19:36:32,918 - __main__ - INFO - User Query (en): 'Show me all transactions for June 2024.'
2025-06-19 19:36:36,005 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 19:36:36,005 - __main__ - INFO - Generated SQL Query: 'SELECT Date_Timestamp, Transaction_ID, Transaction_Details, Merchant_Counterparty_Name, Withdrawal_Amount, Deposit_Amount, Recurring_Existing_Balance FROM bank_transactions WHERE Date_Timestamp >= '2024-06-01 00:00:00' AND Date_Timestamp <= '2024-06-30 23:59:59' ORDER BY Date_Timestamp ASC;'
2025-06-19 19:36:36,008 - __main__ - INFO - Database connection established.
2025-06-19 19:36:36,015 - __main__ - INFO - SQL Query Executed Successfully. Results count: 46
2025-06-19 19:37:37,493 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 19:37:37,494 - __main__ - INFO - Final Assistant Response (NL): 'Sure, here are all your transactions for June 2024:
- On June 01, 2024 at 09:08 AM: POS PURCHASE RESTAURANT with Wildflour Cafe + Bakery - Ayala Center for â‚±2,198.00 withdrawn. Your balance was â‚±118,816.60.
- On June 02, 2024 at 09:45 AM: POS PURCHASE FAST FOOD with Krispy Kreme - Glorietta 4 for â‚±224.00 withdrawn. Your balance was â‚±118,592.60.
- On June 03, 2024 at 09:53 AM: POS PURCHASE COFFEE SHOP with Yardstick Coffee - Legazpi Village, Makati for â‚±274.00 withdrawn. Your balance was â‚±118,318.60.
- On June 04, 2024 at 09:22 AM: POS PURCHASE COFFEE SHOP with Zus Coffee - EspaÃ±a for â‚±290.00 withdrawn. Your balance was â‚±118,028.60.
- On June 04, 2024 at 10:05 AM: POS PURCHASE RESTAURANT with Vikings - SM Mall of Asia for â‚±1,264.00 withdrawn. Your balance was â‚±116,764.60.
- On June 05, 2024 at 09:29 AM: POS PURCHASE COFFEE SHOP with Bo's Coffee - SM Megamall for â‚±310.00 withdrawn. Your balance was â‚±116,454.60.
- On June 06, 2024 at 09:22 AM: POS PURCHASE COFFEE SHOP with Starbucks - Glorietta 4 for â‚±278.00 withdrawn. Your balance was â‚±116,176.60.
- On June 07, 2024 at 09:12 AM: POS PURCHASE COFFEE SHOP with Yardstick Coffee - Legazpi Village, Makati for â‚±291.00 withdrawn. Your balance was â‚±115,885.60.
- On June 07, 2024 at 10:06 AM: POS PURCHASE FAST FOOD with Dunkin' - Ortigas Center for â‚±627.00 withdrawn. Your balance was â‚±115,258.60.
- On June 08, 2024 at 09:09 AM: POS PURCHASE FAST FOOD with Chowking - Cubao - Cyberpark for â‚±335.00 withdrawn. Your balance was â‚±114,923.60.
- On June 09, 2024 at 09:38 AM: POS PURCHASE COFFEE SHOP with Yardstick Coffee - Legazpi Village, Makati for â‚±297.00 withdrawn. Your balance was â‚±114,626.60.
- On June 09, 2024 at 10:29 AM: POS PURCHASE RESTAURANT with Vikings - SM Mall of Asia for â‚±959.00 withdrawn. Your balance was â‚±113,667.60.
- On June 10, 2024 at 09:36 AM: POS PURCHASE RESTAURANT with Manam - Greenbelt 2 for â‚±2,126.00 withdrawn. Your balance was â‚±111,541.60.
- On June 11, 2024 at 09:19 AM: POS PURCHASE COFFEE SHOP with Commune Cafe - Poblacion, Makati for â‚±221.00 withdrawn. Your balance was â‚±111,320.60.
- On June 11, 2024 at 09:35 AM: POS PURCHASE FAST FOOD with Burger King - Trinoma for â‚±900.00 withdrawn. Your balance was â‚±110,420.60.
- On June 12, 2024 at 09:13 AM: POS PURCHASE COFFEE SHOP with Zus Coffee - EspaÃ±a for â‚±150.00 withdrawn. Your balance was â‚±110,270.60.
- On June 12, 2024 at 09:21 AM: POS PURCHASE RESTAURANT with Marugame Udon - SM City Sta. Mesa for â‚±1,566.00 withdrawn. Your balance was â‚±108,704.60.
- On June 13, 2024 at 09:33 AM: POS PURCHASE COFFEE SHOP with Tim Hortons - Uptown Bonifacio for â‚±288.00 withdrawn. Your balance was â‚±108,416.60.
- On June 13, 2024 at 10:27 AM: POS PURCHASE FAST FOOD with KFC - Robinsons Galleria for â‚±997.00 withdrawn. Your balance was â‚±107,419.60.
- On June 14, 2024 at 09:06 AM: SALARY CREDIT with MAMAMO INC. for â‚±21,193.00 deposited. Your balance was â‚±128,612.60.
- On June 14, 2024 at 09:14 AM: POS PURCHASE COFFEE SHOP with Bo's Coffee - Legazpi Village for â‚±319.00 withdrawn. Your balance was â‚±128,293.60.
- On June 14, 2024 at 09:40 AM: POS PURCHASE FAST FOOD with Mang Inasal - Market! Market! for â‚±331.00 withdrawn. Your balance was â‚±127,962.60.
- On June 16, 2024 at 09:24 AM: POS PURCHASE COFFEE SHOP with Coffee Bean & Tea Leaf - Greenhills Promenade for â‚±249.00 withdrawn. Your balance was â‚±127,713.60.
- On June 16, 2024 at 10:15 AM: POS PURCHASE FAST FOOD with Pizza Hut - Tomas Morato for â‚±696.00 withdrawn. Your balance was â‚±127,017.60.
- On June 17, 2024 at 09:45 AM: POS PURCHASE COFFEE SHOP with Toby's Estate - Legazpi St, Makati for â‚±280.00 withdrawn. Your balance was â‚±126,737.60.
- On June 18, 2024 at 09:26 AM: POS PURCHASE COFFEE SHOP with Tim Hortons - Robinsons Place Manila for â‚±336.00 withdrawn. Your balance was â‚±126,401.60.
- On June 19, 2024 at 09:47 AM: POS PURCHASE COFFEE SHOP with Starbucks - Ayala Triangle for â‚±326.00 withdrawn. Your balance was â‚±126,075.60.
- On June 19, 2024 at 09:58 AM: POS PURCHASE RESTAURANT with Mesa - Greenbelt 5 for â‚±2,485.00 withdrawn. Your balance was â‚±123,590.60.
- On June 19, 2024 at 10:56 AM: ATM WITHDRAWAL with BPI ATM - Sampaloc for â‚±8,015.00 withdrawn. Your balance was â‚±115,575.60.
- On June 20, 2024 at 09:58 AM: POS PURCHASE COFFEE SHOP with Tim Hortons - Makati Central Square for â‚±294.00 withdrawn. Your balance was â‚±115,281.60.
- On June 21, 2024 at 09:09 AM: POS PURCHASE COFFEE SHOP with Bo's Coffee - SM Megamall for â‚±224.00 withdrawn. Your balance was â‚±115,057.60.
- On June 22, 2024 at 09:45 AM: POS PURCHASE GENERAL SHOPPING with Glorietta - Glorietta 1 for â‚±7,115.00 withdrawn. Your balance was â‚±107,942.60.
- On June 23, 2024 at 09:28 AM: POS PURCHASE COFFEE SHOP with Coffee Bean & Tea Leaf - Trinoma for â‚±187.00 withdrawn. Your balance was â‚±107,755.60.
- On June 23, 2024 at 09:58 AM: POS PURCHASE FAST FOOD with Krispy Kreme - Glorietta 4 for â‚±515.00 withdrawn. Your balance was â‚±107,240.60.
- On June 24, 2024 at 09:55 AM: POS PURCHASE FAST FOOD with Dunkin' - Ayala Triangle for â‚±339.00 withdrawn. Your balance was â‚±106,901.60.
- On June 25, 2024 at 09:24 AM: POS PURCHASE COFFEE SHOP with Zus Coffee - Taft for â‚±335.00 withdrawn. Your balance was â‚±106,566.60.
- On June 26, 2024 at 09:56 AM: POS PURCHASE COFFEE SHOP with Yardstick Coffee - Legazpi Village, Makati for â‚±168.00 withdrawn. Your balance was â‚±106,398.60.
- On June 26, 2024 at 10:11 AM: POS PURCHASE FAST FOOD with Bonchon Chicken - Ayala Malls Feliz for â‚±586.00 withdrawn. Your balance was â‚±105,812.60.
- On June 27, 2024 at 09:20 AM: POS PURCHASE COFFEE SHOP with Commune Cafe - Poblacion, Makati for â‚±339.00 withdrawn. Your balance was â‚±105,473.60.
- On June 27, 2024 at 09:30 AM: POS PURCHASE FAST FOOD with Mang Inasal - Starmall Alabang for â‚±483.00 withdrawn. Your balance was â‚±104,990.60.
- On June 28, 2024 at 09:10 AM: SALARY CREDIT with MAMAMO INC. for â‚±29,574.00 deposited. Your balance was â‚±134,564.60.
- On June 28, 2024 at 09:45 AM: POS PURCHASE COFFEE SHOP with Yardstick Coffee - Legazpi Village, Makati for â‚±346.00 withdrawn. Your balance was â‚±134,218.60.
- On June 28, 2024 at 10:04 AM: POS PURCHASE FAST FOOD with Pizza Hut - SM Megamall for â‚±247.00 withdrawn. Your balance was â‚±133,971.60.
- On June 29, 2024 at 09:46 AM: POS PURCHASE FAST FOOD with Krispy Kreme - Robinsons Antipolo for â‚±410.00 withdrawn. Your balance was â‚±133,561.60.
- On June 30, 2024 at 09:13 AM: INTEREST CREDIT with BANK INTEREST for â‚±143.93 deposited. Your balance was â‚±133,705.53.
- On June 30, 2024 at 09:28 AM: POS PURCHASE COFFEE SHOP with Starbucks - Ayala Triangle for â‚±283.00 withdrawn. Your balance was â‚±133,422.53.

In total for June 2024, you had:
- Total withdrawals: â‚±42,686.00
- Total deposits: â‚±50,910.93

Let me know if you'd like to dive deeper into any of these, or check transactions for another month!'
2025-06-19 19:38:36,148 - __main__ - INFO - Flask Application started.
2025-06-19 19:38:36,163 - __main__ - INFO - Database connection established.
2025-06-19 19:38:36,163 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 19:38:36,207 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 19:38:50,778 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-19 19:38:52,876 - __main__ - INFO - User Query (en): 'hello'
2025-06-19 19:38:55,394 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 19:38:55,394 - __main__ - INFO - Generated SQL Query: ''
2025-06-19 19:38:55,395 - __main__ - INFO - Database connection established.
2025-06-19 19:38:55,395 - __main__ - CRITICAL - An unexpected critical error occurred: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_conev.py", line 369, in chat
    column_headers = [description[0] for description in cursor.description]
TypeError: 'NoneType' object is not iterable
2025-06-19 19:39:03,222 - __main__ - INFO - User Query (en): 'hello'
2025-06-19 19:39:04,308 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 19:39:04,308 - __main__ - INFO - Generated SQL Query: 'None'
2025-06-19 19:39:04,309 - __main__ - INFO - Database connection established.
2025-06-19 19:39:04,309 - __main__ - CRITICAL - An unexpected critical error occurred: argument 1 must be str, not None
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_conev.py", line 366, in chat
    cursor.execute(sql_query)
TypeError: argument 1 must be str, not None
2025-06-19 19:39:08,764 - __main__ - INFO - User Query (en): 'hello'
2025-06-19 19:39:15,495 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 19:39:15,496 - __main__ - INFO - Generated SQL Query: ''
2025-06-19 19:39:15,498 - __main__ - INFO - Database connection established.
2025-06-19 19:39:15,498 - __main__ - CRITICAL - An unexpected critical error occurred: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_conev.py", line 369, in chat
    column_headers = [description[0] for description in cursor.description]
TypeError: 'NoneType' object is not iterable
2025-06-19 19:39:16,765 - __main__ - INFO - User Query (en): 'Show me all transactions for June 2024.'
2025-06-19 19:39:19,579 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 19:39:19,579 - __main__ - INFO - Generated SQL Query: 'SELECT Date_Timestamp, Transaction_ID, "Transaction_Details", "Merchant_Counterparty_Name", Withdrawal_Amount, Deposit_Amount, "Recurring_Existing_Balance" FROM bank_transactions WHERE Date_Timestamp >= '2024-06-01 00:00:00' AND Date_Timestamp < '2024-07-01 00:00:00' ORDER BY Date_Timestamp ASC;'
2025-06-19 19:39:19,580 - __main__ - INFO - Database connection established.
2025-06-19 19:39:19,584 - __main__ - INFO - SQL Query Executed Successfully. Results count: 46
2025-06-19 19:39:35,772 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 19:39:35,774 - __main__ - INFO - Final Assistant Response (NL): 'Sure thing! Here are all your transactions for June 2024:

*   **June 1, 2024:** You spent â‚±2,198.00 at Wildflour Cafe + Bakery - Ayala Center for a POS purchase (restaurant).
*   **June 2, 2024:** You spent â‚±224.00 at Krispy Kreme - Glorietta 4 for a POS purchase (fast food).
*   **June 3, 2024:** You spent â‚±274.00 at Yardstick Coffee - Legazpi Village, Makati for a POS purchase (coffee shop).
*   **June 4, 2024:** You spent â‚±290.00 at Zus Coffee - EspaÃ±a for a POS purchase (coffee shop).
*   **June 4, 2024:** You spent â‚±1,264.00 at Vikings - SM Mall of Asia for a POS purchase (restaurant).
*   **June 5, 2024:** You spent â‚±310.00 at Bo's Coffee - SM Megamall for a POS purchase (coffee shop).
*   **June 6, 2024:** You spent â‚±278.00 at Starbucks - Glorietta 4 for a POS purchase (coffee shop).
*   **June 7, 2024:** You spent â‚±291.00 at Yardstick Coffee - Legazpi Village, Makati for a POS purchase (coffee shop).
*   **June 7, 2024:** You spent â‚±627.00 at Dunkin' - Ortigas Center for a POS purchase (fast food).
*   **June 8, 2024:** You spent â‚±335.00 at Chowking - Cubao - Cyberpark for a POS purchase (fast food).
*   **June 9, 2024:** You spent â‚±297.00 at Yardstick Coffee - Legazpi Village, Makati for a POS purchase (coffee shop).
*   **June 9, 2024:** You spent â‚±959.00 at Vikings - SM Mall of Asia for a POS purchase (restaurant).
*   **June 10, 2024:** You spent â‚±2,126.00 at Manam - Greenbelt 2 for a POS purchase (restaurant).
*   **June 11, 2024:** You spent â‚±221.00 at Commune Cafe - Poblacion, Makati for a POS purchase (coffee shop).
*   **June 11, 2024:** You spent â‚±900.00 at Burger King - Trinoma for a POS purchase (fast food).
*   **June 12, 2024:** You spent â‚±150.00 at Zus Coffee - EspaÃ±a for a POS purchase (coffee shop).
*   **June 12, 2024:** You spent â‚±1,566.00 at Marugame Udon - SM City Sta. Mesa for a POS purchase (restaurant).
*   **June 13, 2024:** You spent â‚±288.00 at Tim Hortons - Uptown Bonifacio for a POS purchase (coffee shop).
*   **June 13, 2024:** You spent â‚±997.00 at KFC - Robinsons Galleria for a POS purchase (fast food).
*   **June 14, 2024:** You received a salary credit of â‚±21,193.00 from MAMAMO INC.
*   **June 14, 2024:** You spent â‚±319.00 at Bo's Coffee - Legazpi Village for a POS purchase (coffee shop).
*   **June 14, 2024:** You spent â‚±331.00 at Mang Inasal - Market! Market! for a POS purchase (fast food).
*   **June 16, 2024:** You spent â‚±249.00 at Coffee Bean & Tea Leaf - Greenhills Promenade for a POS purchase (coffee shop).
*   **June 16, 2024:** You spent â‚±696.00 at Pizza Hut - Tomas Morato for a POS purchase (fast food).
*   **June 17, 2024:** You spent â‚±280.00 at Toby's Estate - Legazpi St, Makati for a POS purchase (coffee shop).
*   **June 18, 2024:** You spent â‚±336.00 at Tim Hortons - Robinsons Place Manila for a POS purchase (coffee shop).
*   **June 19, 2024:** You spent â‚±326.00 at Starbucks - Ayala Triangle for a POS purchase (coffee shop).
*   **June 19, 2024:** You spent â‚±2,485.00 at Mesa - Greenbelt 5 for a POS purchase (restaurant).
*   **June 19, 2024:** You withdrew â‚±8,015.00 from a BPI ATM - Sampaloc.
*   **June 20, 2024:** You spent â‚±294.00 at Tim Hortons - Makati Central Square for a POS purchase (coffee shop).
*   **June 21, 2024:** You spent â‚±224.00 at Bo's Coffee - SM Megamall for a POS purchase (coffee shop).
*   **June 22, 2024:** You spent â‚±7,115.00 at Glorietta - Glorietta 1 for a POS purchase (general shopping).
*   **June 23, 2024:** You spent â‚±187.00 at Coffee Bean & Tea Leaf - Trinoma for a POS purchase (coffee shop).
*   **June 23, 2024:** You spent â‚±515.00 at Krispy Kreme - Glorietta 4 for a POS purchase (fast food).
*   **June 24, 2024:** You spent â‚±339.00 at Dunkin' - Ayala Triangle for a POS purchase (fast food).
*   **June 25, 2024:** You spent â‚±335.00 at Zus Coffee - Taft for a POS purchase (coffee shop).
*   **June 26, 2024:** You spent â‚±168.00 at Yardstick Coffee - Legazpi Village, Makati for a POS purchase (coffee shop).
*   **June 26, 2024:** You spent â‚±586.00 at Bonchon Chicken - Ayala Malls Feliz for a POS purchase (fast food).
*   **June 27, 2024:** You spent â‚±339.00 at Commune Cafe - Poblacion, Makati for a POS purchase (coffee shop).
*   **June 27, 2024:** You spent â‚±483.00 at Mang Inasal - Starmall Alabang for a POS purchase (fast food).
*   **June 28, 2024:** You received a salary credit of â‚±29,574.00 from MAMAMO INC.
*   **June 28, 2024:** You spent â‚±346.00 at Yardstick Coffee - Legazpi Village, Makati for a POS purchase (coffee shop).
*   **June 28, 2024:** You spent â‚±247.00 at Pizza Hut - SM Megamall for a POS purchase (fast food).
*   **June 29, 2024:** You spent â‚±410.00 at Krispy Kreme - Robinsons Antipolo for a POS purchase (fast food).
*   **June 30, 2024:** You received an interest credit of â‚±143.93.
*   **June 30, 2024:** You spent â‚±283.00 at Starbucks - Ayala Triangle for a POS purchase (coffee shop).

In total, you had **â‚±39,267.00 in withdrawals** and **â‚±50,910.93 in deposits** during June 2024.

Is there anything specific you'd like to know about these transactions, or perhaps look into another month?'
2025-06-19 19:46:35,612 - __main__ - INFO - User Query (en): 'What were my top 3 largest withdrawals?'
2025-06-19 19:46:56,816 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 19:46:56,817 - __main__ - INFO - Generated SQL Query: 'SELECT Date_Timestamp, "Transaction_Details", Merchant_Counterparty_Name, COALESCE(Withdrawal_Amount, 0) AS Withdrawal_Amount FROM bank_transactions WHERE COALESCE(Withdrawal_Amount, 0) > 0 ORDER BY Withdrawal_Amount DESC LIMIT 3;'
2025-06-19 19:46:56,820 - __main__ - INFO - Database connection established.
2025-06-19 19:46:56,823 - __main__ - INFO - SQL Query Executed Successfully. Results count: 3
2025-06-19 19:46:58,688 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 19:46:58,688 - __main__ - INFO - Final Assistant Response (NL): 'Here are your top 3 largest withdrawals:

*   On **April 19, 2025**, you withdrew â‚±10,018.00 from an RCBC ATM in Makati - Circuit.
*   On **August 11, 2024**, you spent â‚±9,883.00 at Glorietta - Glorietta 2 for general shopping.
*   On **January 11, 2025**, you spent â‚±9,597.00 at Power Mac Center - SM San Lazaro for general shopping.

Do any of these transactions look familiar, or would you like to see more details?'
2025-06-19 19:47:12,212 - __main__ - INFO - User Query (en): 'How much did I deposit in total for 2024?'
2025-06-19 19:47:13,816 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 19:47:13,816 - __main__ - INFO - Generated SQL Query: 'SELECT SUM(COALESCE(Deposit_Amount, 0)) FROM bank_transactions WHERE strftime('%Y', Date_Timestamp) = '2024';'
2025-06-19 19:47:13,819 - __main__ - INFO - Database connection established.
2025-06-19 19:47:13,823 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1
2025-06-19 19:47:15,757 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 19:47:15,758 - __main__ - INFO - Final Assistant Response (NL): 'For the year 2024, your total deposits amounted to a fantastic â‚±835,991.83! That's a good chunk of change. Is there anything else about your deposits or withdrawals you'd like to explore?'
2025-06-19 19:47:25,858 - __main__ - INFO - User Query (en): 'Did I make any transactions on Christmas Day 2024?'
2025-06-19 19:47:29,994 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 19:47:29,994 - __main__ - INFO - Generated SQL Query: 'SELECT Date_Timestamp, "Transaction_Details", "Merchant_Counterparty_Name", COALESCE(Withdrawal_Amount, 0) AS Withdrawal_Amount, COALESCE(Deposit_Amount, 0) AS Deposit_Amount FROM bank_transactions WHERE DATE(Date_Timestamp) = '2024-12-25' ORDER BY Date_Timestamp ASC;'
2025-06-19 19:47:29,996 - __main__ - INFO - Database connection established.
2025-06-19 19:47:29,999 - __main__ - INFO - SQL Query Executed Successfully. Results count: 2
2025-06-19 19:47:32,141 - __main__ - ERROR - Error decoding JSON from Gemini: Expecting property name enclosed in double quotes: line 1 column 2 (char 1). Raw content: START>>>{{
  "sql": "SELECT Date_Timestamp, \"Transaction_Details\", \"Merchant_Counterparty_Name\", COALESCE(Withdrawal_Amount, 0) AS Withdrawal_Amount, COALESCE(Deposit_Amount, 0) AS Deposit_Amount FROM bank_transactions WHERE DATE(Date_Timestamp) = '2024-12-25' ORDER BY Date_Timestamp ASC;",
  "natural_language_response": "Yes, you did! On Christmas Day 2024, December 25th, you had a couple of transactions:\n\n*   At **9:06 AM**, you spent â‚±306.00 at Bo's Coffee - SM Megamall for a POS purchase at a coffee shop.\n*   Then, at **9:12 AM**, you spent â‚±423.00 at Greenwich - SM City Manila for a POS purchase at a fast food place.\n\nLooks like you enjoyed some treats on Christmas Day! Is there anything else you'd like to check?"
}}<<<END
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_conev.py", line 294, in get_gemini_response
    response_dict = json.loads(json_str)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 353, in raw_decode
    obj, end = self.scan_once(s, idx)
json.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 1 column 2 (char 1)
2025-06-19 19:47:32,149 - __main__ - ERROR - Gemini failed to generate final NL response after query execution. Assistant response: 'I executed the query, but I had trouble forming a clear response. Please try again.'
2025-06-19 19:47:34,891 - __main__ - INFO - User Query (en): 'Did I make any transactions on Christmas Day 2024?'
2025-06-19 19:47:36,953 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 19:47:36,953 - __main__ - INFO - Generated SQL Query: 'SELECT Date_Timestamp, Transaction_Details, Merchant_Counterparty_Name, COALESCE(Withdrawal_Amount, 0) AS Withdrawal_Amount, COALESCE(Deposit_Amount, 0) AS Deposit_Amount FROM bank_transactions WHERE DATE(Date_Timestamp) = '2024-12-25' ORDER BY Date_Timestamp ASC;'
2025-06-19 19:47:36,953 - __main__ - INFO - Database connection established.
2025-06-19 19:47:36,954 - __main__ - INFO - SQL Query Executed Successfully. Results count: 2
2025-06-19 19:47:39,720 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 19:47:39,720 - __main__ - INFO - Final Assistant Response (NL): 'Yes, you did have a couple of transactions on Christmas Day, December 25, 2024!

Here they are:
*   On **December 25, 2024**, you spent â‚±306.00 at Bo's Coffee - SM Megamall for a POS purchase.
*   Also on **December 25, 2024**, you spent â‚±423.00 at Greenwich - SM City Manila for a POS purchase.

Looks like you were enjoying some treats and a meal! Is there anything else you'd like to check about your holiday spending?'
2025-06-19 19:47:50,257 - __main__ - INFO - User Query (en): 'List all ATM withdrawals in January 2025.'
2025-06-19 19:47:52,724 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 19:47:52,724 - __main__ - INFO - Generated SQL Query: 'SELECT Date_Timestamp, Withdrawal_Amount, Transaction_Details, Merchant_Counterparty_Name FROM bank_transactions WHERE LOWER("Transaction_Details") LIKE '%atm withdrawal%' AND STRFTIME('%Y-%m', Date_Timestamp) = '2025-01' AND Withdrawal_Amount IS NOT NULL ORDER BY Date_Timestamp ASC;'
2025-06-19 19:47:52,726 - __main__ - INFO - Database connection established.
2025-06-19 19:47:52,728 - __main__ - INFO - SQL Query Executed Successfully. Results count: 0
2025-06-19 19:47:54,960 - __main__ - ERROR - Error decoding JSON from Gemini: Expecting property name enclosed in double quotes: line 1 column 2 (char 1). Raw content: START>>>{{
  "sql": "SELECT Date_Timestamp, Withdrawal_Amount, \"Transaction_Details\", Merchant_Counterparty_Name FROM bank_transactions WHERE LOWER(\"Transaction_Details\") LIKE '%atm withdrawal%' AND Date_Timestamp >= '2025-01-01 00:00:00' AND Date_Timestamp < '2025-02-01 00:00:00' AND Withdrawal_Amount IS NOT NULL ORDER BY Date_Timestamp ASC;",
  "natural_language_response": "It looks like there were no ATM withdrawals recorded for your account in January 2025. Is there anything else you'd like to check?"
}}<<<END
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_conev.py", line 294, in get_gemini_response
    response_dict = json.loads(json_str)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 353, in raw_decode
    obj, end = self.scan_once(s, idx)
json.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 1 column 2 (char 1)
2025-06-19 19:47:54,961 - __main__ - ERROR - Gemini failed to generate final NL response after query execution. Assistant response: 'I executed the query, but I had trouble forming a clear response. Please try again.'
2025-06-19 19:48:08,275 - __main__ - INFO - Flask Application started.
2025-06-19 19:48:08,291 - __main__ - INFO - Database connection established.
2025-06-19 19:48:08,291 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 19:48:08,338 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 19:50:13,805 - __main__ - INFO - Flask Application started.
2025-06-19 19:50:13,821 - __main__ - INFO - Database connection established.
2025-06-19 19:50:13,821 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 19:50:13,867 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 19:53:38,705 - __main__ - INFO - Flask Application started.
2025-06-19 19:53:38,719 - __main__ - INFO - Database connection established.
2025-06-19 19:53:38,720 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 19:53:38,767 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 19:53:41,766 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-19 19:53:50,709 - __main__ - INFO - User Query (en): 'Show me all transactions for June 2024'
2025-06-19 19:53:57,678 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 19:53:57,678 - __main__ - INFO - Generated SQL Query: 'SELECT Date_Timestamp, Transaction_ID, Transaction_Details, Merchant_Counterparty_Name, COALESCE(Withdrawal_Amount, 0) AS Withdrawal_Amount, COALESCE(Deposit_Amount, 0) AS Deposit_Amount, Recurring_Existing_Balance FROM bank_transactions WHERE Date_Timestamp >= '2024-06-01 00:00:00' AND Date_Timestamp < '2024-07-01 00:00:00' ORDER BY Date_Timestamp ASC;'
2025-06-19 19:53:57,680 - __main__ - INFO - Database connection established.
2025-06-19 19:53:57,683 - __main__ - INFO - SQL Query Executed Successfully. Results count: 46
2025-06-19 19:54:06,382 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 19:54:06,383 - __main__ - INFO - Final Assistant Response (NL): 'Here's a summary of your transactions for June 2024:

Throughout June, you had a total of **â‚±50,910.93 in deposits** and **â‚±39,474.00 in withdrawals**.

Here are the details:

*   **June 1:** You spent â‚±2,198.00 at Wildflour Cafe + Bakery - Ayala Center.
*   **June 2:** You spent â‚±224.00 at Krispy Kreme - Glorietta 4.
*   **June 3:** You spent â‚±274.00 at Yardstick Coffee - Legazpi Village, Makati.
*   **June 4:** You had two transactions: â‚±290.00 at Zus Coffee - EspaÃ±a and â‚±1,264.00 at Vikings - SM Mall of Asia.
*   **June 5:** You spent â‚±310.00 at Bo's Coffee - SM Megamall.
*   **June 6:** You spent â‚±278.00 at Starbucks - Glorietta 4.
*   **June 7:** You had two transactions: â‚±291.00 at Yardstick Coffee - Legazpi Village, Makati and â‚±627.00 at Dunkin' - Ortigas Center.
*   **June 8:** You spent â‚±335.00 at Chowking - Cubao - Cyberpark.
*   **June 9:** You had two transactions: â‚±297.00 at Yardstick Coffee - Legazpi Village, Makati and â‚±959.00 at Vikings - SM Mall of Asia.
*   **June 10:** You spent â‚±2,126.00 at Manam - Greenbelt 2.
*   **June 11:** You had two transactions: â‚±221.00 at Commune Cafe - Poblacion, Makati and â‚±900.00 at Burger King - Trinoma.
*   **June 12:** You had two transactions: â‚±150.00 at Zus Coffee - EspaÃ±a and â‚±1,566.00 at Marugame Udon - SM City Sta. Mesa.
*   **June 13:** You had two transactions: â‚±288.00 at Tim Hortons - Uptown Bonifacio and â‚±997.00 at KFC - Robinsons Galleria.
*   **June 14:** You received a SALARY CREDIT of â‚±21,193.00 from MAMAMO INC. You also spent â‚±319.00 at Bo's Coffee - Legazpi Village and â‚±331.00 at Mang Inasal - Market! Market!.
*   **June 16:** You had two transactions: â‚±249.00 at Coffee Bean & Tea Leaf - Greenhills Promenade and â‚±696.00 at Pizza Hut - Tomas Morato.
*   **June 17:** You spent â‚±280.00 at Toby's Estate - Legazpi St, Makati.
*   **June 18:** You spent â‚±336.00 at Tim Hortons - Robinsons Place Manila.
*   **June 19:** You had three transactions: â‚±326.00 at Starbucks - Ayala Triangle, â‚±2,485.00 at Mesa - Greenbelt 5, and an ATM WITHDRAWAL of â‚±8,015.00 from BPI ATM - Sampaloc.
*   **June 20:** You spent â‚±294.00 at Tim Hortons - Makati Central Square.
*   **June 21:** You spent â‚±224.00 at Bo's Coffee - SM Megamall.
*   **June 22:** You spent â‚±7,115.00 at Glorietta - Glorietta 1 for general shopping.
*   **June 23:** You had two transactions: â‚±187.00 at Coffee Bean & Tea Leaf - Trinoma and â‚±515.00 at Krispy Kreme - Glorietta 4.
*   **June 24:** You spent â‚±339.00 at Dunkin' - Ayala Triangle.
*   **June 25:** You spent â‚±335.00 at Zus Coffee - Taft.
*   **June 26:** You had two transactions: â‚±168.00 at Yardstick Coffee - Legazpi Village, Makati and â‚±586.00 at Bonchon Chicken - Ayala Malls Feliz.
*   **June 27:** You had two transactions: â‚±339.00 at Commune Cafe - Poblacion, Makati and â‚±483.00 at Mang Inasal - Starmall Alabang.
*   **June 28:** You received another SALARY CREDIT of â‚±29,574.00 from MAMAMO INC. You also spent â‚±346.00 at Yardstick Coffee - Legazpi Village, Makati and â‚±247.00 at Pizza Hut - SM Megamall.
*   **June 29:** You spent â‚±410.00 at Krispy Kreme - Robinsons Antipolo.
*   **June 30:** You received an INTEREST CREDIT of â‚±143.93 and spent â‚±283.00 at Starbucks - Ayala Triangle.

It looks like you had a busy month! Is there anything specific you'd like to dive into, like your spending on coffee or dining?'
2025-06-19 19:55:06,565 - __main__ - INFO - Flask Application started.
2025-06-19 19:55:06,580 - __main__ - INFO - Database connection established.
2025-06-19 19:55:06,581 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 19:55:06,628 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 19:56:39,456 - __main__ - INFO - Flask Application started.
2025-06-19 19:56:39,472 - __main__ - INFO - Database connection established.
2025-06-19 19:56:39,472 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 19:56:39,519 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 19:56:42,539 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-19 19:56:48,697 - __main__ - INFO - User Query (en): 'Show me all transactions for June 2024.'
2025-06-19 19:56:51,655 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 19:56:51,656 - __main__ - INFO - Generated SQL Query: 'SELECT Date_Timestamp, Transaction_ID, Transaction_Details, Merchant_Counterparty_Name, Withdrawal_Amount, Deposit_Amount, Recurring_Existing_Balance FROM bank_transactions WHERE Date_Timestamp >= '2024-06-01 00:00:00' AND Date_Timestamp <= '2024-06-30 23:59:59' ORDER BY Date_Timestamp ASC;'
2025-06-19 19:56:51,657 - __main__ - INFO - Database connection established.
2025-06-19 19:56:51,660 - __main__ - INFO - SQL Query Executed Successfully. Results count: 46
2025-06-19 19:57:00,052 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 19:57:00,052 - __main__ - INFO - Final Assistant Response (NL): 'Here's a summary of your transactions for June 2024!

You had a total of 45 transactions during that month. You received two salary credits, one on June 14 for â‚±21,193.00 and another on June 28 for â‚±29,574.00, along with an interest credit on June 30 for â‚±143.93. 

For your withdrawals, you made an ATM withdrawal of â‚±8,015.00 on June 19. The rest of your activity included various POS purchases, frequently from coffee shops like Yardstick Coffee, Starbucks, and Zus Coffee, as well as fast food and restaurants like Krispy Kreme, Vikings, and Wildflour Cafe + Bakery. You also had a general shopping transaction at Glorietta on June 22.

Is there a specific type of transaction or a particular date you'd like to dive into?'
2025-06-19 19:57:50,793 - __main__ - INFO - User Query (en): 'What were my top 3 largest withdrawals?'
2025-06-19 19:57:55,043 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 19:57:55,044 - __main__ - INFO - Generated SQL Query: 'SELECT "Date_Timestamp", "Withdrawal_Amount", "Transaction_Details", "Merchant_Counterparty_Name" FROM bank_transactions WHERE Withdrawal_Amount IS NOT NULL AND Withdrawal_Amount > 0 ORDER BY Withdrawal_Amount DESC, "Date_Timestamp" ASC LIMIT 3;'
2025-06-19 19:57:55,046 - __main__ - INFO - Database connection established.
2025-06-19 19:57:55,048 - __main__ - INFO - SQL Query Executed Successfully. Results count: 3
2025-06-19 19:57:58,466 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 19:57:58,466 - __main__ - INFO - Final Assistant Response (NL): 'Here are your top 3 largest withdrawals:

*   **â‚±10,018.00** on April 19, 2025, from an ATM withdrawal at RCBC ATM - Makati - Circuit.
*   **â‚±9,883.00** on August 11, 2024, for a POS purchase at Glorietta - Glorietta 2.
*   **â‚±9,597.00** on January 11, 2025, for a POS purchase at Power Mac Center - SM San Lazaro.

Let me know if you'd like to look into any of these further or perhaps see your largest deposits!'
2025-06-19 19:58:14,589 - __main__ - INFO - Flask Application started.
2025-06-19 19:58:14,605 - __main__ - INFO - Database connection established.
2025-06-19 19:58:14,605 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 19:58:14,653 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 19:58:14,699 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-19 19:58:22,238 - __main__ - INFO - Flask Application started.
2025-06-19 19:58:22,253 - __main__ - INFO - Database connection established.
2025-06-19 19:58:22,253 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 19:58:22,295 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 19:58:28,751 - __main__ - INFO - Flask Application started.
2025-06-19 19:58:28,765 - __main__ - INFO - Database connection established.
2025-06-19 19:58:28,765 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 19:58:28,796 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 19:58:38,126 - __main__ - INFO - User Query (en): 'hello'
2025-06-19 19:58:40,815 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 19:58:40,815 - __main__ - INFO - Generated SQL Query: 'None'
2025-06-19 19:58:40,817 - __main__ - INFO - Database connection established.
2025-06-19 19:58:40,817 - __main__ - CRITICAL - An unexpected critical error occurred: argument 1 must be str, not None
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_conev.py", line 374, in chat
    cursor.execute(sql_query)
TypeError: argument 1 must be str, not None
2025-06-19 19:58:42,938 - __main__ - INFO - User Query (en): 'Show me all transactions for June 2025.'
2025-06-19 19:58:45,525 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 19:58:45,525 - __main__ - INFO - Generated SQL Query: 'SELECT Date_Timestamp, Transaction_ID, Transaction_Details, Merchant_Counterparty_Name, Withdrawal_Amount, Deposit_Amount, Recurring_Existing_Balance FROM bank_transactions WHERE Date_Timestamp >= '2025-06-01 00:00:00' AND Date_Timestamp < '2025-07-01 00:00:00' ORDER BY Date_Timestamp ASC;'
2025-06-19 19:58:45,526 - __main__ - INFO - Database connection established.
2025-06-19 19:58:45,529 - __main__ - INFO - SQL Query Executed Successfully. Results count: 29
2025-06-19 19:58:48,829 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 19:58:48,831 - __main__ - INFO - Final Assistant Response (NL): 'Here are all your transactions for June 2025! It looks like you've been quite active.

From June 1st to June 19th, you had various transactions including:

*   **Spending at Cafes & Restaurants:** This includes places like Commune Cafe, Marugame Udon, Zus Coffee, Dunkin', Coffee Project, Mang Inasal, Toby's Estate, Bonchon Chicken, TGI Fridays, Pizza Hut, Mary Grace Cafe, Starbucks, Yardstick Coffee, Greenwich, Burger King, Wildflour Cafe + Bakery, and Coffee Bean & Tea Leaf.
*   **Shopping:** You also made a purchase at National Book Store.
*   **Deposits:** There's a salary credit from MAMAMO INC. and a refund from SHEIN.

Let me know if you'd like a breakdown of your spending by category or any other details from this month!'
2025-06-19 19:59:04,025 - __main__ - INFO - User Query (en): 'What were my top 3 largest withdrawals?'
2025-06-19 19:59:06,210 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 19:59:06,211 - __main__ - INFO - Generated SQL Query: 'SELECT Date_Timestamp, Transaction_ID, Transaction_Details, Merchant_Counterparty_Name, Withdrawal_Amount FROM bank_transactions WHERE Withdrawal_Amount IS NOT NULL ORDER BY Withdrawal_Amount DESC LIMIT 3;'
2025-06-19 19:59:06,214 - __main__ - INFO - Database connection established.
2025-06-19 19:59:06,219 - __main__ - INFO - SQL Query Executed Successfully. Results count: 3
2025-06-19 19:59:09,167 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 19:59:09,168 - __main__ - INFO - Final Assistant Response (NL): 'Here are your top 3 largest withdrawals:

*   **April 19, 2025:** You had an ATM withdrawal of â‚±10,018.00 from an RCBC ATM at Makati - Circuit.
*   **August 11, 2024:** There was a general shopping POS purchase of â‚±9,883.00 at Glorietta 2.
*   **January 11, 2025:** You made a POS purchase of â‚±9,597.00 at Power Mac Center - SM San Lazaro.

Does this help you keep track of your bigger expenses?'
2025-06-19 20:00:25,316 - __main__ - INFO - User Query (en): 'How much did I deposit in total for 2024?'
2025-06-19 20:00:28,235 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:00:28,235 - __main__ - INFO - Generated SQL Query: 'SELECT SUM(COALESCE(Deposit_Amount, 0)) FROM bank_transactions WHERE Date_Timestamp >= '2024-01-01 00:00:00' AND Date_Timestamp <= '2024-12-31 23:59:59';'
2025-06-19 20:00:28,237 - __main__ - INFO - Database connection established.
2025-06-19 20:00:28,239 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1
2025-06-19 20:00:29,972 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:00:29,973 - __main__ - INFO - Final Assistant Response (NL): 'For the year 2024, your total deposits amounted to â‚±835,991.83. That's quite a significant amount! Is there anything else you'd like to know about your deposits or other transactions from last year?'
2025-06-19 20:00:41,127 - __main__ - INFO - Evaluation route triggered.
2025-06-19 20:00:41,127 - __main__ - INFO - Starting evaluation process...
2025-06-19 20:00:41,127 - __main__ - INFO - Processing Test Case 1/3: ID=1 - 'Show me all transactions for June 2025.'
2025-06-19 20:00:46,971 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:00:46,973 - __main__ - INFO - Database connection established.
2025-06-19 20:00:52,911 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:01:10,220 - __main__ - WARNING - Errors in Test Case 1: ['Ground Truth SQL execution error: no such table: transactions. GT SQL: SELECT Date, "Transaction_Details", Deposit_Amount, Withdrawal_Amount, Recurring_Existing_Balance FROM transactions WHERE strftime(\'%Y-%m\', Date) = \'2025-06\' ORDER BY Date ASC;', 'Ground Truth SQL failed to execute, cannot proceed with result match.']
2025-06-19 20:01:10,221 - __main__ - INFO - Processing Test Case 2/3: ID=2 - 'What were my top 3 largest withdrawals?'
2025-06-19 20:01:12,406 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:01:12,409 - __main__ - INFO - Database connection established.
2025-06-19 20:01:16,052 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:01:34,075 - __main__ - WARNING - Errors in Test Case 2: ['Ground Truth SQL execution error: no such table: transactions. GT SQL: SELECT Date, "Transaction_Details", Withdrawal_Amount FROM transactions WHERE Withdrawal_Amount > 0 ORDER BY Withdrawal_Amount DESC LIMIT 3;', 'Ground Truth SQL failed to execute, cannot proceed with result match.']
2025-06-19 20:01:34,076 - __main__ - INFO - Processing Test Case 3/3: ID=3 - 'How much did I deposit in total for 2024?'
2025-06-19 20:01:36,140 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:01:36,142 - __main__ - INFO - Database connection established.
2025-06-19 20:01:38,171 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:01:47,386 - __main__ - WARNING - Errors in Test Case 3: ["Ground Truth SQL execution error: no such table: transactions. GT SQL: SELECT SUM(COALESCE(Deposit_Amount, 0)) FROM transactions WHERE strftime('%Y', Date) = '2024';", 'Ground Truth SQL failed to execute, cannot proceed with result match.']
2025-06-19 20:01:47,387 - __main__ - INFO - Evaluation complete.
2025-06-19 20:01:47,387 - __main__ - INFO - Overall Evaluation Results Summary:
{
  "timestamp": "2025-06-19 20:00:41 PST+0800",
  "total_test_cases": 3,
  "sql_execution_match_count": 0,
  "failed_sql_generation": 0,
  "failed_sql_execution": 0,
  "failed_ground_truth_execution": 3,
  "failed_nl_generation": 0,
  "failed_llm_judge": 0,
  "successful_end_to_end_cases": 0
}
2025-06-19 20:01:47,388 - __main__ - INFO - Evaluation results saved to evaluation_results/evaluation_results_20250619_200147.json
2025-06-19 20:01:47,388 - __main__ - INFO - Detailed evaluation results saved to evaluation_results/evaluation_details_20250619_200147.csv
2025-06-19 20:01:47,388 - __main__ - INFO - Evaluation process completed.
2025-06-19 20:03:08,600 - __main__ - INFO - Flask Application started.
2025-06-19 20:03:08,615 - __main__ - INFO - Database connection established.
2025-06-19 20:03:08,615 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 20:03:08,669 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 20:03:12,973 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-19 20:03:16,353 - __main__ - INFO - User Query (en): 'hello'
2025-06-19 20:03:19,243 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:03:19,243 - __main__ - INFO - Generated SQL Query: 'SELECT 1;'
2025-06-19 20:03:19,245 - __main__ - INFO - Database connection established.
2025-06-19 20:03:19,245 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1
2025-06-19 20:03:21,594 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:03:21,594 - __main__ - INFO - Final Assistant Response (NL): 'Hello there! How can I help you manage your finances today? I'm here to help you understand your bank account activity.'
2025-06-19 20:03:24,326 - __main__ - INFO - User Query (en): 'Show me all transactions for June 2025.'
2025-06-19 20:03:28,866 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:03:28,866 - __main__ - INFO - Generated SQL Query: 'SELECT Date_Timestamp, Transaction_ID, Transaction_Details, Merchant_Counterparty_Name, Withdrawal_Amount, Deposit_Amount, Recurring_Existing_Balance FROM bank_transactions WHERE Date_Timestamp >= '2025-06-01 00:00:00' AND Date_Timestamp < '2025-07-01 00:00:00' ORDER BY Date_Timestamp ASC;'
2025-06-19 20:03:28,867 - __main__ - INFO - Database connection established.
2025-06-19 20:03:28,871 - __main__ - INFO - SQL Query Executed Successfully. Results count: 29
2025-06-19 20:03:35,010 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:03:35,011 - __main__ - INFO - Final Assistant Response (NL): 'Here are all your transactions for June 2025 so far:

*   **June 1, 2025:**
    *   â‚±313.00 spent at Commune Cafe - Poblacion, Makati (POS PURCHASE COFFEE SHOP)
    *   â‚±1,018.00 spent at Marugame Udon - Mall of Asia (POS PURCHASE RESTAURANT)
*   **June 2, 2025:**
    *   â‚±195.00 spent at Zus Coffee - SM City Sta. Mesa (POS PURCHASE COFFEE SHOP)
    *   â‚±895.00 spent at Dunkin' - Ortigas Center (POS PURCHASE FAST FOOD)
*   **June 3, 2025:**
    *   â‚±249.00 spent at Coffee Project - Evia Lifestyle Center (POS PURCHASE COFFEE SHOP)
    *   â‚±725.00 spent at Mang Inasal - Banawe (POS PURCHASE FAST FOOD)
*   **June 4, 2025:**
    *   â‚±229.00 spent at Zus Coffee - Circuit Makati (POS PURCHASE COFFEE SHOP)
    *   â‚±690.00 spent at Dunkin' - Antipolo - Jetti (POS PURCHASE FAST FOOD)
*   **June 5, 2025:**
    *   â‚±215.00 spent at Toby's Estate - Eastwood (POS PURCHASE COFFEE SHOP)
*   **June 6, 2025:**
    *   â‚±341.00 spent at Toby's Estate - Legazpi St, Makati (POS PURCHASE COFFEE SHOP)
    *   â‚±801.00 spent at Bonchon Chicken - Ayala Malls Feliz (POS PURCHASE FAST FOOD)
*   **June 7, 2025:**
    *   â‚±1,375.00 spent at TGI Fridays - Glorietta 3 (POS PURCHASE RESTAURANT)
*   **June 9, 2025:**
    *   â‚±228.00 spent at Commune Cafe - Poblacion, Makati (POS PURCHASE COFFEE SHOP)
    *   â‚±562.00 spent at Pizza Hut - Antipolo (POS PURCHASE FAST FOOD)
*   **June 10, 2025:**
    *   â‚±355.00 spent at Mary Grace Cafe - Greenbelt 2 (POS PURCHASE RESTAURANT)
*   **June 11, 2025:**
    *   â‚±284.00 spent at Starbucks - Ayala Triangle (POS PURCHASE COFFEE SHOP)
*   **June 12, 2025:**
    *   â‚±2,413.00 spent at Mary Grace Cafe - Ayala Malls Feliz (POS PURCHASE RESTAURANT)
*   **June 13, 2025:**
    *   â‚±36,503.00 deposited from MAMAMO INC. (SALARY CREDIT)
    *   â‚±279.00 spent at Toby's Estate - Legazpi St, Makati (POS PURCHASE COFFEE SHOP)
*   **June 14, 2025:**
    *   â‚±153.00 spent at Yardstick Coffee - Legazpi Village, Makati (POS PURCHASE COFFEE SHOP)
*   **June 15, 2025:**
    *   â‚±211.00 spent at Greenwich - Power Plant Mall (POS PURCHASE FAST FOOD)
    *   â‚±2,437.00 spent at National Book Store - Power Plant Mall (POS PURCHASE GENERAL SHOPPING)
*   **June 16, 2025:**
    *   â‚±845.00 deposited from SHEIN (REFUND CREDIT)
    *   â‚±205.00 spent at Zus Coffee - EspaÃ±a (POS PURCHASE COFFEE SHOP)
*   **June 17, 2025:**
    *   â‚±173.00 spent at Coffee Bean & Tea Leaf - Parqal (POS PURCHASE COFFEE SHOP)
    *   â‚±764.00 spent at Burger King - Trinoma (POS PURCHASE FAST FOOD)
*   **June 18, 2025:**
    *   â‚±208.00 spent at Zus Coffee - SM City Sta. Mesa (POS PURCHASE COFFEE SHOP)
    *   â‚±984.00 spent at Wildflour Cafe + Bakery - Ayala Center (POS PURCHASE RESTAURANT)
*   **June 19, 2025:**
    *   â‚±331.00 spent at Coffee Bean & Tea Leaf - Greenhills Promenade (POS PURCHASE COFFEE SHOP)

Is there a specific type of transaction or a particular date you'd like to focus on?'
2025-06-19 20:04:05,651 - __main__ - INFO - User Query (en): 'What were my top 3 largest withdrawals?'
2025-06-19 20:04:08,802 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:04:08,803 - __main__ - INFO - Generated SQL Query: 'SELECT Date_Timestamp, "Transaction_Details", "Merchant_Counterparty_Name", Withdrawal_Amount FROM bank_transactions WHERE Withdrawal_Amount IS NOT NULL ORDER BY Withdrawal_Amount DESC LIMIT 3;'
2025-06-19 20:04:08,805 - __main__ - INFO - Database connection established.
2025-06-19 20:04:08,808 - __main__ - INFO - SQL Query Executed Successfully. Results count: 3
2025-06-19 20:04:11,567 - __main__ - ERROR - Error decoding JSON from Gemini: Expecting value: line 1 column 1 (char 0). Raw content: START>>>Here are your top 3 largest withdrawals:

*   **April 19, 2025:** â‚±10,018.00 from an ATM Withdrawal at RCBC ATM - Makati - Circuit.
*   **August 11, 2024:** â‚±9,883.00 for a General Shopping purchase at Glorietta - Glorietta 2.
*   **January 11, 2025:** â‚±9,597.00 for a General Shopping purchase at Power Mac Center - SM San Lazaro.

Let me know if you'd like to look into any specific transactions or categories!<<<END
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_conev.py", line 302, in get_gemini_response
    response_dict = json.loads(json_str)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
2025-06-19 20:04:11,574 - __main__ - ERROR - Gemini failed to generate final NL response after query execution. Assistant response: 'I executed the query, but I had trouble forming a clear response. Please try again.'
2025-06-19 20:04:15,704 - __main__ - INFO - User Query (en): 'What were my top 3 largest withdrawals?'
2025-06-19 20:04:17,747 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:04:17,748 - __main__ - INFO - Generated SQL Query: 'SELECT Date_Timestamp, Withdrawal_Amount, "Transaction_Details", "Merchant_Counterparty_Name" FROM bank_transactions WHERE Withdrawal_Amount IS NOT NULL AND Withdrawal_Amount > 0 ORDER BY Withdrawal_Amount DESC LIMIT 3;'
2025-06-19 20:04:17,749 - __main__ - INFO - Database connection established.
2025-06-19 20:04:17,750 - __main__ - INFO - SQL Query Executed Successfully. Results count: 3
2025-06-19 20:04:20,782 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:04:20,783 - __main__ - INFO - Final Assistant Response (NL): 'Here are your top 3 largest withdrawals:

*   **â‚±10,018.00** on April 19, 2025, for an ATM withdrawal at RCBC ATM - Makati - Circuit.
*   **â‚±9,883.00** on August 11, 2024, for a POS purchase (General Shopping) at Glorietta - Glorietta 2.
*   **â‚±9,597.00** on January 11, 2025, for a POS purchase (General Shopping) at Power Mac Center - SM San Lazaro.

Is there anything specific about these withdrawals you'd like to know, or would you like to explore other transactions?'
2025-06-19 20:04:28,699 - __main__ - INFO - User Query (en): 'How much did I deposit in total for 2024?'
2025-06-19 20:04:30,512 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:04:30,512 - __main__ - INFO - Generated SQL Query: 'SELECT SUM(COALESCE(Deposit_Amount, 0)) FROM bank_transactions WHERE Date_Timestamp BETWEEN '2024-01-01 00:00:00' AND '2024-12-31 23:59:59';'
2025-06-19 20:04:30,514 - __main__ - INFO - Database connection established.
2025-06-19 20:04:30,515 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1
2025-06-19 20:04:32,353 - __main__ - ERROR - Error decoding JSON from Gemini: Expecting property name enclosed in double quotes: line 1 column 2 (char 1). Raw content: START>>>{{
  "sql": "SELECT SUM(COALESCE(Deposit_Amount, 0)) FROM bank_transactions WHERE Date_Timestamp >= '2024-01-01 00:00:00' AND Date_Timestamp < '2025-01-01 00:00:00';",
  "natural_language_response": "You deposited a total of â‚±835,991.83 in 2024. That's a significant amount! Would you like to see a breakdown of these deposits or check your deposits for another year?"
}}<<<END
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_conev.py", line 302, in get_gemini_response
    response_dict = json.loads(json_str)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 353, in raw_decode
    obj, end = self.scan_once(s, idx)
json.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 1 column 2 (char 1)
2025-06-19 20:04:32,355 - __main__ - ERROR - Gemini failed to generate final NL response after query execution. Assistant response: 'I executed the query, but I had trouble forming a clear response. Please try again.'
2025-06-19 20:04:35,423 - __main__ - INFO - User Query (en): 'How much did I deposit in total for 2024?'
2025-06-19 20:04:36,961 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:04:36,962 - __main__ - INFO - Generated SQL Query: 'SELECT SUM(COALESCE(Deposit_Amount, 0)) FROM bank_transactions WHERE strftime('%Y', Date_Timestamp) = '2024';'
2025-06-19 20:04:36,963 - __main__ - INFO - Database connection established.
2025-06-19 20:04:36,964 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1
2025-06-19 20:04:39,419 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:04:39,419 - __main__ - INFO - Final Assistant Response (NL): 'You deposited a total of â‚±835,991.83 in 2024. It looks like you had a very active year! Is there anything else about your 2024 transactions you'd like to check?'
2025-06-19 20:04:48,330 - __main__ - INFO - Evaluation route triggered.
2025-06-19 20:04:48,330 - __main__ - INFO - Starting evaluation process...
2025-06-19 20:04:48,331 - __main__ - INFO - Processing Test Case 1/3: ID=1 - 'Show me all transactions for June 2025.'
2025-06-19 20:04:52,629 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:04:52,631 - __main__ - INFO - Database connection established.
2025-06-19 20:04:57,340 - __main__ - ERROR - Error decoding JSON from Gemini: Expecting property name enclosed in double quotes: line 1 column 2 (char 1). Raw content: START>>>{{
  "sql": "SELECT Date_Timestamp, Transaction_ID, Transaction_Details, Merchant_Counterparty_Name, Withdrawal_Amount, Deposit_Amount, Recurring_Existing_Balance FROM bank_transactions WHERE Date_Timestamp >= '2025-06-01 00:00:00' AND Date_Timestamp < '2025-07-01 00:00:00' ORDER BY Date_Timestamp ASC;",
  "natural_language_response": "Here are all your transactions for June 2025 so far:\n\n*   **June 1:**\n    *   â‚±313.00 at Commune Cafe - Poblacion, Makati (Coffee Shop)\n    *   â‚±1,018.00 at Marugame Udon - Mall of Asia (Restaurant)\n*   **June 2:**\n    *   â‚±195.00 at Zus Coffee - SM City Sta. Mesa (Coffee Shop)\n    *   â‚±895.00 at Dunkin' - Ortigas Center (Fast Food)\n*   **June 3:**\n    *   â‚±249.00 at Coffee Project - Evia Lifestyle Center (Coffee Shop)\n    *   â‚±725.00 at Mang Inasal - Banawe (Fast Food)\n*   **June 4:**\n    *   â‚±229.00 at Zus Coffee - Circuit Makati (Coffee Shop)\n    *   â‚±690.00 at Dunkin' - Antipolo - Jetti (Fast Food)\n*   **June 5:**\n    *   â‚±215.00 at Toby's Estate - Eastwood (Coffee Shop)\n*   **June 6:**\n    *   â‚±341.00 at Toby's Estate - Legazpi St, Makati (Coffee Shop)\n    *   â‚±801.00 at Bonchon Chicken - Ayala Malls Feliz (Fast Food)\n*   **June 7:**\n    *   â‚±1,375.00 at TGI Fridays - Glorietta 3 (Restaurant)\n*   **June 9:**\n    *   â‚±228.00 at Commune Cafe - Poblacion, Makati (Coffee Shop)\n    *   â‚±562.00 at Pizza Hut - Antipolo (Fast Food)\n*   **June 10:**\n    *   â‚±355.00 at Mary Grace Cafe - Greenbelt 2 (Restaurant)\n*   **June 11:**\n    *   â‚±284.00 at Starbucks - Ayala Triangle (Coffee Shop)\n*   **June 12:**\n    *   â‚±2,413.00 at Mary Grace Cafe - Ayala Malls Feliz (Restaurant)\n*   **June 13:**\n    *   â‚±36,503.00 Salary Credit from MAMAMO INC.\n    *   â‚±279.00 at Toby's Estate - Legazpi St, Makati (Coffee Shop)\n*   **June 14:**\n    *   â‚±153.00 at Yardstick Coffee - Legazpi Village, Makati (Coffee Shop)\n*   **June 15:**\n    *   â‚±211.00 at Greenwich - Power Plant Mall (Fast Food)\n    *   â‚±2,437.00 at National Book Store - Power Plant Mall (General Shopping)\n*   **June 16:**\n    *   â‚±845.00 Refund Credit from SHEIN\n    *   â‚±205.00 at Zus Coffee - EspaÃ±a (Coffee Shop)\n*   **June 17:**\n    *   â‚±173.00 at Coffee Bean & Tea Leaf - Parqal (Coffee Shop)\n    *   â‚±764.00 at Burger King - Trinoma (Fast Food)\n*   **June 18:**\n    *   â‚±208.00 at Zus Coffee - SM City Sta. Mesa (Coffee Shop)\n    *   â‚±984.00 at Wildflour Cafe + Bakery - Ayala Center (Restaurant)\n*   **June 19:**\n    *   â‚±331.00 at Coffee Bean & Tea Leaf - Greenhills Promenade (Coffee Shop)\n\nIs there anything specific you'd like to know about these transactions, or perhaps a different month you'd like to review?"
}}<<<END
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_conev.py", line 302, in get_gemini_response
    response_dict = json.loads(json_str)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py", line 353, in raw_decode
    obj, end = self.scan_once(s, idx)
json.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 1 column 2 (char 1)
2025-06-19 20:05:16,694 - __main__ - WARNING - Errors in Test Case 1: ['Ground Truth SQL execution error: no such column: Date. GT SQL: SELECT Date, "Transaction_Details", Deposit_Amount, Withdrawal_Amount, Recurring_Existing_Balance FROM bank_transactions WHERE strftime(\'%Y-%m\', Date) = \'2025-06\' ORDER BY Date ASC;', 'Ground Truth SQL failed to execute, cannot proceed with result match.', 'Failed to generate NL response: Error decoding JSON from Gemini: Expecting property name enclosed in double quotes: line 1 column 2 (char 1)']
2025-06-19 20:05:16,696 - __main__ - INFO - Processing Test Case 2/3: ID=2 - 'What were my top 3 largest withdrawals?'
2025-06-19 20:05:18,741 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:05:18,743 - __main__ - INFO - Database connection established.
2025-06-19 20:05:43,419 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:06:04,002 - __main__ - WARNING - Errors in Test Case 2: ['Ground Truth SQL execution error: no such column: Date. GT SQL: SELECT Date, "Transaction_Details", Withdrawal_Amount FROM bank_transactions WHERE Withdrawal_Amount > 0 ORDER BY Withdrawal_Amount DESC LIMIT 3;', 'Ground Truth SQL failed to execute, cannot proceed with result match.']
2025-06-19 20:06:04,003 - __main__ - INFO - Processing Test Case 3/3: ID=3 - 'How much did I deposit in total for 2024?'
2025-06-19 20:06:05,640 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:06:05,643 - __main__ - INFO - Database connection established.
2025-06-19 20:06:07,688 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:06:15,668 - __main__ - WARNING - Errors in Test Case 3: ["Ground Truth SQL execution error: no such column: Date. GT SQL: SELECT SUM(COALESCE(Deposit_Amount, 0)) FROM bank_transactions WHERE strftime('%Y', Date) = '2024';", 'Ground Truth SQL failed to execute, cannot proceed with result match.']
2025-06-19 20:06:15,668 - __main__ - INFO - Evaluation complete.
2025-06-19 20:06:15,669 - __main__ - INFO - Overall Evaluation Results Summary:
{
  "timestamp": "2025-06-19 20:04:48 PST+0800",
  "total_test_cases": 3,
  "sql_execution_match_count": 0,
  "failed_sql_generation": 0,
  "failed_sql_execution": 0,
  "failed_ground_truth_execution": 3,
  "failed_nl_generation": 1,
  "failed_llm_judge": 0,
  "successful_end_to_end_cases": 0
}
2025-06-19 20:06:15,671 - __main__ - INFO - Evaluation results saved to evaluation_results/evaluation_results_20250619_200615.json
2025-06-19 20:06:15,673 - __main__ - INFO - Detailed evaluation results saved to evaluation_results/evaluation_details_20250619_200615.csv
2025-06-19 20:06:15,673 - __main__ - INFO - Evaluation process completed.
2025-06-19 20:07:27,447 - __main__ - INFO - Flask Application started.
2025-06-19 20:07:27,470 - __main__ - INFO - Database connection established.
2025-06-19 20:07:27,470 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 20:07:27,545 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 20:07:30,504 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-19 20:07:36,750 - __main__ - INFO - User Query (en): 'hello'
2025-06-19 20:07:38,826 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:07:38,827 - __main__ - INFO - Generated SQL Query: 'None'
2025-06-19 20:07:38,829 - __main__ - INFO - Database connection established.
2025-06-19 20:07:38,830 - __main__ - CRITICAL - An unexpected critical error occurred: argument 1 must be str, not None
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_conev.py", line 374, in chat
    cursor.execute(sql_query)
TypeError: argument 1 must be str, not None
2025-06-19 20:09:29,101 - __main__ - INFO - Flask Application started.
2025-06-19 20:09:29,116 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 20:09:29,160 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 20:09:29,432 - __main__ - INFO - Flask Application started.
2025-06-19 20:09:29,444 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 20:09:29,473 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 20:09:33,630 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-19 20:09:36,065 - __main__ - INFO - User Query (en): 'hello'
2025-06-19 20:09:39,145 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:09:39,145 - __main__ - INFO - Generated SQL Query: ''
2025-06-19 20:09:39,146 - __main__ - WARNING - SECURITY ALERT: Directly executing LLM-generated SQL: ''. This is dangerous in production without proper validation.
2025-06-19 20:09:39,148 - __main__ - CRITICAL - An unexpected critical error occurred: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_conev.py", line 372, in chat
    column_headers = [description[0] for description in cursor.description]
TypeError: 'NoneType' object is not iterable
2025-06-19 20:09:44,599 - __main__ - INFO - User Query (en): 'hi'
2025-06-19 20:09:53,177 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:09:53,177 - __main__ - INFO - Generated SQL Query: 'SELECT 1;'
2025-06-19 20:09:53,178 - __main__ - WARNING - SECURITY ALERT: Directly executing LLM-generated SQL: 'SELECT 1;'. This is dangerous in production without proper validation.
2025-06-19 20:09:53,180 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1 rows.
2025-06-19 20:09:55,631 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:09:55,632 - __main__ - INFO - Final Assistant Response (NL): 'Hi there! I'm your friendly banking assistant. How can I help you understand your financial activity today?'
2025-06-19 20:10:16,037 - __main__ - INFO - User Query (en): 'Show me all transactions for June 2024.'
2025-06-19 20:10:21,845 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:10:21,845 - __main__ - INFO - Generated SQL Query: 'SELECT Date_Timestamp, Transaction_ID, "Transaction_Details", "Merchant_Counterparty_Name", Withdrawal_Amount, Deposit_Amount, Recurring_Existing_Balance FROM bank_transactions WHERE strftime('%Y-%m', Date_Timestamp) = '2024-06' ORDER BY Date_Timestamp ASC;'
2025-06-19 20:10:21,846 - __main__ - WARNING - SECURITY ALERT: Directly executing LLM-generated SQL: 'SELECT Date_Timestamp, Transaction_ID, "Transaction_Details", "Merchant_Counterparty_Name", Withdrawal_Amount, Deposit_Amount, Recurring_Existing_Balance FROM bank_transactions WHERE strftime('%Y-%m', Date_Timestamp) = '2024-06' ORDER BY Date_Timestamp ASC;'. This is dangerous in production without proper validation.
2025-06-19 20:10:21,850 - __main__ - INFO - SQL Query Executed Successfully. Results count: 46 rows.
2025-06-19 20:10:27,682 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:10:27,683 - __main__ - INFO - Final Assistant Response (NL): 'Here are all the transactions recorded for June 2024:

*   **June 1:** You spent â‚±2,198.00 at Wildflour Cafe + Bakery - Ayala Center.
*   **June 2:** You spent â‚±224.00 at Krispy Kreme - Glorietta 4.
*   **June 3:** You spent â‚±274.00 at Yardstick Coffee - Legazpi Village, Makati.
*   **June 4:** You had two transactions: â‚±290.00 at Zus Coffee - EspaÃ±a and â‚±1,264.00 at Vikings - SM Mall of Asia.
*   **June 5:** You spent â‚±310.00 at Bo's Coffee - SM Megamall.
*   **June 6:** You spent â‚±278.00 at Starbucks - Glorietta 4.
*   **June 7:** You had two transactions: â‚±291.00 at Yardstick Coffee - Legazpi Village, Makati and â‚±627.00 at Dunkin' - Ortigas Center.
*   **June 8:** You spent â‚±335.00 at Chowking - Cubao - Cyberpark.
*   **June 9:** You had two transactions: â‚±297.00 at Yardstick Coffee - Legazpi Village, Makati and â‚±959.00 at Vikings - SM Mall of Asia.
*   **June 10:** You spent â‚±2,126.00 at Manam - Greenbelt 2.
*   **June 11:** You had two transactions: â‚±221.00 at Commune Cafe - Poblacion, Makati and â‚±900.00 at Burger King - Trinoma.
*   **June 12:** You had two transactions: â‚±150.00 at Zus Coffee - EspaÃ±a and â‚±1,566.00 at Marugame Udon - SM City Sta. Mesa.
*   **June 13:** You had two transactions: â‚±288.00 at Tim Hortons - Uptown Bonifacio and â‚±997.00 at KFC - Robinsons Galleria.
*   **June 14:** You received a salary credit of â‚±21,193.00 from MAMAMO INC., spent â‚±319.00 at Bo's Coffee - Legazpi Village, and â‚±331.00 at Mang Inasal - Market! Market!.
*   **June 16:** You had two transactions: â‚±249.00 at Coffee Bean & Tea Leaf - Greenhills Promenade and â‚±696.00 at Pizza Hut - Tomas Morato.
*   **June 17:** You spent â‚±280.00 at Toby's Estate - Legazpi St, Makati.
*   **June 18:** You spent â‚±336.00 at Tim Hortons - Robinsons Place Manila.
*   **June 19:** You had three transactions: â‚±326.00 at Starbucks - Ayala Triangle, â‚±2,485.00 at Mesa - Greenbelt 5, and an ATM withdrawal of â‚±8,015.00 at BPI ATM - Sampaloc.
*   **June 20:** You spent â‚±294.00 at Tim Hortons - Makati Central Square.
*   **June 21:** You spent â‚±224.00 at Bo's Coffee - SM Megamall.
*   **June 22:** You spent â‚±7,115.00 at Glorietta - Glorietta 1 for general shopping.
*   **June 23:** You had two transactions: â‚±187.00 at Coffee Bean & Tea Leaf - Trinoma and â‚±515.00 at Krispy Kreme - Glorietta 4.
*   **June 24:** You spent â‚±339.00 at Dunkin' - Ayala Triangle.
*   **June 25:** You spent â‚±335.00 at Zus Coffee - Taft.
*   **June 26:** You had two transactions: â‚±168.00 at Yardstick Coffee - Legazpi Village, Makati and â‚±586.00 at Bonchon Chicken - Ayala Malls Feliz.
*   **June 27:** You had two transactions: â‚±339.00 at Commune Cafe - Poblacion, Makati and â‚±483.00 at Mang Inasal - Starmall Alabang.
*   **June 28:** You received a salary credit of â‚±29,574.00 from MAMAMO INC., spent â‚±346.00 at Yardstick Coffee - Legazpi Village, Makati, and â‚±247.00 at Pizza Hut - SM Megamall.
*   **June 29:** You spent â‚±410.00 at Krispy Kreme - Robinsons Antipolo.
*   **June 30:** You received an interest credit of â‚±143.93 and spent â‚±283.00 at Starbucks - Ayala Triangle.

That's quite a lot of activity! Is there anything specific you'd like to know more about or perhaps a particular type of transaction you're interested in?'
2025-06-19 20:13:01,646 - __main__ - INFO - User Query (en): 'What were my top 3 largest withdrawals?'
2025-06-19 20:13:03,585 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:13:03,585 - __main__ - INFO - Generated SQL Query: 'SELECT Date_Timestamp, "Merchant_Counterparty_Name", Withdrawal_Amount FROM bank_transactions WHERE Withdrawal_Amount IS NOT NULL AND Withdrawal_Amount > 0 ORDER BY Withdrawal_Amount DESC LIMIT 3;'
2025-06-19 20:13:03,586 - __main__ - WARNING - SECURITY ALERT: Directly executing LLM-generated SQL: 'SELECT Date_Timestamp, "Merchant_Counterparty_Name", Withdrawal_Amount FROM bank_transactions WHERE Withdrawal_Amount IS NOT NULL AND Withdrawal_Amount > 0 ORDER BY Withdrawal_Amount DESC LIMIT 3;'. This is dangerous in production without proper validation.
2025-06-19 20:13:03,591 - __main__ - INFO - SQL Query Executed Successfully. Results count: 3 rows.
2025-06-19 20:13:05,480 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:13:05,481 - __main__ - INFO - Final Assistant Response (NL): 'Here are your top 3 largest withdrawals:

*   **April 19, 2025:** You withdrew â‚±10,018.00 from RCBC ATM - Makati - Circuit.
*   **August 11, 2024:** You spent â‚±9,883.00 at Glorietta - Glorietta 2.
*   **January 11, 2025:** You spent â‚±9,597.00 at Power Mac Center - SM San Lazaro.

Do any of these transactions seem unfamiliar, or would you like to explore other spending patterns?'
2025-06-19 20:13:38,415 - __main__ - INFO - User Query (en): 'How much did I deposit in total for 2024?'
2025-06-19 20:13:40,604 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:13:40,605 - __main__ - INFO - Generated SQL Query: 'SELECT SUM(COALESCE(Deposit_Amount, 0)) FROM bank_transactions WHERE strftime('%Y', Date_Timestamp) = '2024';'
2025-06-19 20:13:40,605 - __main__ - WARNING - SECURITY ALERT: Directly executing LLM-generated SQL: 'SELECT SUM(COALESCE(Deposit_Amount, 0)) FROM bank_transactions WHERE strftime('%Y', Date_Timestamp) = '2024';'. This is dangerous in production without proper validation.
2025-06-19 20:13:40,612 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1 rows.
2025-06-19 20:13:42,754 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:13:42,754 - __main__ - INFO - Final Assistant Response (NL): 'You deposited a total of â‚±835,991.83 in 2024. That's quite a substantial amount! Is there anything else you'd like to know about your deposits or other transactions?'
2025-06-19 20:13:51,418 - __main__ - INFO - User Query (en): 'List all ATM withdrawals in January 2025.'
2025-06-19 20:13:55,349 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:13:55,350 - __main__ - INFO - Generated SQL Query: 'SELECT Date_Timestamp, "Merchant_Counterparty_Name", Withdrawal_Amount FROM bank_transactions WHERE "Transaction_Details" LIKE '%ATM WITHDRAWAL%' AND strftime('%Y-%m', Date_Timestamp) = '2025-01' AND Withdrawal_Amount IS NOT NULL AND Withdrawal_Amount > 0 ORDER BY Date_Timestamp ASC;'
2025-06-19 20:13:55,350 - __main__ - WARNING - SECURITY ALERT: Directly executing LLM-generated SQL: 'SELECT Date_Timestamp, "Merchant_Counterparty_Name", Withdrawal_Amount FROM bank_transactions WHERE "Transaction_Details" LIKE '%ATM WITHDRAWAL%' AND strftime('%Y-%m', Date_Timestamp) = '2025-01' AND Withdrawal_Amount IS NOT NULL AND Withdrawal_Amount > 0 ORDER BY Date_Timestamp ASC;'. This is dangerous in production without proper validation.
2025-06-19 20:13:55,354 - __main__ - INFO - SQL Query Executed Successfully. Results count: 0 rows.
2025-06-19 20:13:57,397 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:13:57,398 - __main__ - INFO - Final Assistant Response (NL): 'It looks like there were no ATM withdrawals recorded in January 2025. Would you like to check for ATM withdrawals in a different month or year?'
2025-06-19 20:14:05,314 - __main__ - INFO - User Query (en): 'Show me all refunds.'
2025-06-19 20:14:21,665 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:14:21,666 - __main__ - INFO - Generated SQL Query: 'SELECT Date_Timestamp, "Transaction_Details", "Deposit_Amount" FROM bank_transactions WHERE LOWER("Transaction_Details") LIKE '%refund%' AND Deposit_Amount IS NOT NULL AND Deposit_Amount > 0 ORDER BY Date_Timestamp ASC;'
2025-06-19 20:14:21,666 - __main__ - WARNING - SECURITY ALERT: Directly executing LLM-generated SQL: 'SELECT Date_Timestamp, "Transaction_Details", "Deposit_Amount" FROM bank_transactions WHERE LOWER("Transaction_Details") LIKE '%refund%' AND Deposit_Amount IS NOT NULL AND Deposit_Amount > 0 ORDER BY Date_Timestamp ASC;'. This is dangerous in production without proper validation.
2025-06-19 20:14:21,669 - __main__ - INFO - SQL Query Executed Successfully. Results count: 10 rows.
2025-06-19 20:14:29,038 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:14:29,038 - __main__ - INFO - Final Assistant Response (NL): 'Here are all the refunds credited to your account:

*   **January 17, 2024:** You received a refund credit of â‚±2,401.00.
*   **March 1, 2024:** You received a refund credit of â‚±3,539.00.
*   **March 21, 2024:** You received a refund credit of â‚±4,224.00.
*   **March 30, 2024:** You received a refund credit of â‚±1,464.00.
*   **September 18, 2024:** You received a refund credit of â‚±483.00.
*   **December 21, 2024:** You received a refund credit of â‚±1,909.00.
*   **January 8, 2025:** You received a refund credit of â‚±1,328.00.
*   **April 25, 2025:** You received a refund credit of â‚±3,668.00.
*   **May 20, 2025:** You received a refund credit of â‚±2,761.00.
*   **June 16, 2025:** You received a refund credit of â‚±845.00.

Is there a specific refund you'd like to know more about, or anything else I can help you with?'
2025-06-19 20:14:51,068 - __main__ - INFO - Evaluation route triggered.
2025-06-19 20:14:54,947 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:15:28,740 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:15:39,191 - __main__ - INFO - Test Case 1: LLM Judge verdict received.
2025-06-19 20:15:40,835 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:15:44,303 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:15:57,721 - __main__ - INFO - Test Case 2: LLM Judge verdict received.
2025-06-19 20:15:59,459 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:16:01,609 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:16:07,505 - __main__ - INFO - Test Case 3: LLM Judge verdict received.
2025-06-19 20:16:10,763 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:16:13,896 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:16:19,631 - __main__ - INFO - Test Case 4: LLM Judge verdict received.
2025-06-19 20:16:22,522 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:16:25,468 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:16:36,291 - __main__ - INFO - Test Case 5: LLM Judge verdict received.
2025-06-19 20:16:36,301 - __main__ - INFO - Evaluation process completed successfully.
2025-06-19 20:46:39,113 - __main__ - INFO - Flask Application started.
2025-06-19 20:46:39,128 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 20:46:39,176 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 20:49:23,158 - __main__ - INFO - Flask Application started.
2025-06-19 20:49:23,173 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 20:49:23,216 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 20:50:37,761 - __main__ - INFO - Flask Application started.
2025-06-19 20:50:37,776 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 20:50:37,820 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 20:50:38,081 - __main__ - INFO - Flask Application started.
2025-06-19 20:50:38,092 - __main__ - INFO - Database schema retrieved and cached.
2025-06-19 20:50:38,119 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-19 20:50:40,678 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-19 20:50:43,924 - __main__ - INFO - User Query (en): 'hello'
2025-06-19 20:50:46,032 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:50:46,032 - __main__ - INFO - Generated SQL Query: 'SELECT 1'
2025-06-19 20:50:46,032 - __main__ - WARNING - SECURITY ALERT: Directly executing LLM-generated SQL: 'SELECT 1'. This is dangerous in production without proper validation.
2025-06-19 20:50:46,034 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1 rows.
2025-06-19 20:50:48,589 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:50:48,590 - __main__ - INFO - Final Assistant Response (NL): 'Hello there! How can I help you understand your financial activity today?'
2025-06-19 20:51:00,268 - __main__ - INFO - User Query (en): 'Show me all transactions for June 2024.'
2025-06-19 20:51:03,231 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:51:03,232 - __main__ - INFO - Generated SQL Query: 'SELECT Date_Timestamp, "Transaction_Details", Merchant_Counterparty_Name, Withdrawal_Amount, Deposit_Amount, Recurring_Existing_Balance FROM bank_transactions WHERE strftime('%Y-%m', Date_Timestamp) = '2024-06' ORDER BY Date_Timestamp ASC;'
2025-06-19 20:51:03,232 - __main__ - WARNING - SECURITY ALERT: Directly executing LLM-generated SQL: 'SELECT Date_Timestamp, "Transaction_Details", Merchant_Counterparty_Name, Withdrawal_Amount, Deposit_Amount, Recurring_Existing_Balance FROM bank_transactions WHERE strftime('%Y-%m', Date_Timestamp) = '2024-06' ORDER BY Date_Timestamp ASC;'. This is dangerous in production without proper validation.
2025-06-19 20:51:03,236 - __main__ - INFO - SQL Query Executed Successfully. Results count: 46 rows.
2025-06-19 20:51:10,607 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:51:10,608 - __main__ - INFO - Final Assistant Response (NL): 'Here are all the transactions recorded for June 2024:

*   **June 1:** POS PURCHASE RESTAURANT at Wildflour Cafe + Bakery - Ayala Center for â‚±2,198.00
*   **June 2:** POS PURCHASE FAST FOOD at Krispy Kreme - Glorietta 4 for â‚±224.00
*   **June 3:** POS PURCHASE COFFEE SHOP at Yardstick Coffee - Legazpi Village, Makati for â‚±274.00
*   **June 4:** POS PURCHASE COFFEE SHOP at Zus Coffee - EspaÃ±a for â‚±290.00
*   **June 4:** POS PURCHASE RESTAURANT at Vikings - SM Mall of Asia for â‚±1,264.00
*   **June 5:** POS PURCHASE COFFEE SHOP at Bo's Coffee - SM Megamall for â‚±310.00
*   **June 6:** POS PURCHASE COFFEE SHOP at Starbucks - Glorietta 4 for â‚±278.00
*   **June 7:** POS PURCHASE COFFEE SHOP at Yardstick Coffee - Legazpi Village, Makati for â‚±291.00
*   **June 7:** POS PURCHASE FAST FOOD at Dunkin' - Ortigas Center for â‚±627.00
*   **June 8:** POS PURCHASE FAST FOOD at Chowking - Cubao - Cyberpark for â‚±335.00
*   **June 9:** POS PURCHASE COFFEE SHOP at Yardstick Coffee - Legazpi Village, Makati for â‚±297.00
*   **June 9:** POS PURCHASE RESTAURANT at Vikings - SM Mall of Asia for â‚±959.00
*   **June 10:** POS PURCHASE RESTAURANT at Manam - Greenbelt 2 for â‚±2,126.00
*   **June 11:** POS PURCHASE COFFEE SHOP at Commune Cafe - Poblacion, Makati for â‚±221.00
*   **June 11:** POS PURCHASE FAST FOOD at Burger King - Trinoma for â‚±900.00
*   **June 12:** POS PURCHASE COFFEE SHOP at Zus Coffee - EspaÃ±a for â‚±150.00
*   **June 12:** POS PURCHASE RESTAURANT at Marugame Udon - SM City Sta. Mesa for â‚±1,566.00
*   **June 13:** POS PURCHASE COFFEE SHOP at Tim Hortons - Uptown Bonifacio for â‚±288.00
*   **June 13:** POS PURCHASE FAST FOOD at KFC - Robinsons Galleria for â‚±997.00
*   **June 14:** SALARY CREDIT from MAMAMO INC. for â‚±21,193.00
*   **June 14:** POS PURCHASE COFFEE SHOP at Bo's Coffee - Legazpi Village for â‚±319.00
*   **June 14:** POS PURCHASE FAST FOOD at Mang Inasal - Market! Market! for â‚±331.00
*   **June 16:** POS PURCHASE COFFEE SHOP at Coffee Bean & Tea Leaf - Greenhills Promenade for â‚±249.00
*   **June 16:** POS PURCHASE FAST FOOD at Pizza Hut - Tomas Morato for â‚±696.00
*   **June 17:** POS PURCHASE COFFEE SHOP at Toby's Estate - Legazpi St, Makati for â‚±280.00
*   **June 18:** POS PURCHASE COFFEE SHOP at Tim Hortons - Robinsons Place Manila for â‚±336.00
*   **June 19:** POS PURCHASE COFFEE SHOP at Starbucks - Ayala Triangle for â‚±326.00
*   **June 19:** POS PURCHASE RESTAURANT at Mesa - Greenbelt 5 for â‚±2,485.00
*   **June 19:** ATM WITHDRAWAL at BPI ATM - Sampaloc for â‚±8,015.00
*   **June 20:** POS PURCHASE COFFEE SHOP at Tim Hortons - Makati Central Square for â‚±294.00
*   **June 21:** POS PURCHASE COFFEE SHOP at Bo's Coffee - SM Megamall for â‚±224.00
*   **June 22:** POS PURCHASE GENERAL SHOPPING at Glorietta - Glorietta 1 for â‚±7,115.00
*   **June 23:** POS PURCHASE COFFEE SHOP at Coffee Bean & Tea Leaf - Trinoma for â‚±187.00
*   **June 23:** POS PURCHASE FAST FOOD at Krispy Kreme - Glorietta 4 for â‚±515.00
*   **June 24:** POS PURCHASE FAST FOOD at Dunkin' - Ayala Triangle for â‚±339.00
*   **June 25:** POS PURCHASE COFFEE SHOP at Zus Coffee - Taft for â‚±335.00
*   **June 26:** POS PURCHASE COFFEE SHOP at Yardstick Coffee - Legazpi Village, Makati for â‚±168.00
*   **June 26:** POS PURCHASE FAST FOOD at Bonchon Chicken - Ayala Malls Feliz for â‚±586.00
*   **June 27:** POS PURCHASE COFFEE SHOP at Commune Cafe - Poblacion, Makati for â‚±339.00
*   **June 27:** POS PURCHASE FAST FOOD at Mang Inasal - Starmall Alabang for â‚±483.00
*   **June 28:** SALARY CREDIT from MAMAMO INC. for â‚±29,574.00
*   **June 28:** POS PURCHASE COFFEE SHOP at Yardstick Coffee - Legazpi Village, Makati for â‚±346.00
*   **June 28:** POS PURCHASE FAST FOOD at Pizza Hut - SM Megamall for â‚±247.00
*   **June 29:** POS PURCHASE FAST FOOD at Krispy Kreme - Robinsons Antipolo for â‚±410.00
*   **June 30:** INTEREST CREDIT from BANK INTEREST for â‚±143.93
*   **June 30:** POS PURCHASE COFFEE SHOP at Starbucks - Ayala Triangle for â‚±283.00

Is there a specific type of transaction or a particular merchant you'd like to know more about from June?'
2025-06-19 20:51:50,695 - __main__ - INFO - User Query (en): 'What were my top 3 largest withdrawals?'
2025-06-19 20:51:53,102 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:51:53,102 - __main__ - INFO - Generated SQL Query: 'SELECT Date_Timestamp, Transaction_Details, Merchant_Counterparty_Name, Withdrawal_Amount, Deposit_Amount, Recurring_Existing_Balance FROM bank_transactions WHERE Withdrawal_Amount IS NOT NULL AND Withdrawal_Amount > 0 ORDER BY Withdrawal_Amount DESC, Date_Timestamp ASC LIMIT 3;'
2025-06-19 20:51:53,102 - __main__ - WARNING - SECURITY ALERT: Directly executing LLM-generated SQL: 'SELECT Date_Timestamp, Transaction_Details, Merchant_Counterparty_Name, Withdrawal_Amount, Deposit_Amount, Recurring_Existing_Balance FROM bank_transactions WHERE Withdrawal_Amount IS NOT NULL AND Withdrawal_Amount > 0 ORDER BY Withdrawal_Amount DESC, Date_Timestamp ASC LIMIT 3;'. This is dangerous in production without proper validation.
2025-06-19 20:51:53,109 - __main__ - INFO - SQL Query Executed Successfully. Results count: 3 rows.
2025-06-19 20:51:56,105 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:51:56,106 - __main__ - INFO - Final Assistant Response (NL): 'It looks like your top 3 largest withdrawals were:

*   **April 19, 2025:** An ATM withdrawal from RCBC ATM - Makati - Circuit for â‚±10,018.00.
*   **August 11, 2024:** A general shopping purchase at Glorietta - Glorietta 2 for â‚±9,883.00.
*   **January 11, 2025:** A general shopping purchase at Power Mac Center - SM San Lazaro for â‚±9,597.00.

Let me know if you'd like to dive deeper into any of these transactions!'
2025-06-19 20:52:04,021 - __main__ - INFO - User Query (en): 'How much did I deposit in total for 2024?'
2025-06-19 20:52:05,536 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:52:05,537 - __main__ - INFO - Generated SQL Query: 'SELECT SUM(COALESCE(Deposit_Amount, 0)) FROM bank_transactions WHERE strftime('%Y', Date_Timestamp) = '2024' AND Deposit_Amount IS NOT NULL AND Deposit_Amount > 0;'
2025-06-19 20:52:05,537 - __main__ - WARNING - SECURITY ALERT: Directly executing LLM-generated SQL: 'SELECT SUM(COALESCE(Deposit_Amount, 0)) FROM bank_transactions WHERE strftime('%Y', Date_Timestamp) = '2024' AND Deposit_Amount IS NOT NULL AND Deposit_Amount > 0;'. This is dangerous in production without proper validation.
2025-06-19 20:52:05,539 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1 rows.
2025-06-19 20:52:07,024 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:52:07,025 - __main__ - INFO - Final Assistant Response (NL): 'For 2024, you deposited a total of â‚±835,991.83. That's quite a sum! Is there anything else about your deposits or finances that you'd like to check?'
2025-06-19 20:52:55,690 - __main__ - INFO - User Query (en): 'List all ATM withdrawals in January 2025.'
2025-06-19 20:52:59,045 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:52:59,045 - __main__ - INFO - Generated SQL Query: 'select Date_Timestamp, "Transaction_Details", "Merchant_Counterparty_Name", Withdrawal_Amount, Deposit_Amount, Recurring_Existing_Balance from bank_transactions where LOWER("Transaction_Details") like '%atm withdrawal%' and Withdrawal_Amount is not null and Withdrawal_Amount > 0 and strftime('%Y-%m', Date_Timestamp) = '2025-01' order by Date_Timestamp asc;'
2025-06-19 20:52:59,045 - __main__ - WARNING - SECURITY ALERT: Directly executing LLM-generated SQL: 'select Date_Timestamp, "Transaction_Details", "Merchant_Counterparty_Name", Withdrawal_Amount, Deposit_Amount, Recurring_Existing_Balance from bank_transactions where LOWER("Transaction_Details") like '%atm withdrawal%' and Withdrawal_Amount is not null and Withdrawal_Amount > 0 and strftime('%Y-%m', Date_Timestamp) = '2025-01' order by Date_Timestamp asc;'. This is dangerous in production without proper validation.
2025-06-19 20:52:59,049 - __main__ - INFO - SQL Query Executed Successfully. Results count: 0 rows.
2025-06-19 20:53:01,061 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:53:01,062 - __main__ - INFO - Final Assistant Response (NL): 'It looks like there were no ATM withdrawals recorded for January 2025. Would you like to check withdrawals for a different month or year?'
2025-06-19 20:53:10,255 - __main__ - INFO - User Query (en): 'Show me all refunds.'
2025-06-19 20:53:12,662 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:53:12,663 - __main__ - INFO - Generated SQL Query: 'SELECT Date_Timestamp, "Transaction_Details", "Merchant_Counterparty_Name", COALESCE(Withdrawal_Amount, 0) AS Withdrawal_Amount, COALESCE(Deposit_Amount, 0) AS Deposit_Amount, Recurring_Existing_Balance FROM bank_transactions WHERE LOWER("Transaction_Details") LIKE '%refund%' ORDER BY Date_Timestamp ASC;'
2025-06-19 20:53:12,663 - __main__ - WARNING - SECURITY ALERT: Directly executing LLM-generated SQL: 'SELECT Date_Timestamp, "Transaction_Details", "Merchant_Counterparty_Name", COALESCE(Withdrawal_Amount, 0) AS Withdrawal_Amount, COALESCE(Deposit_Amount, 0) AS Deposit_Amount, Recurring_Existing_Balance FROM bank_transactions WHERE LOWER("Transaction_Details") LIKE '%refund%' ORDER BY Date_Timestamp ASC;'. This is dangerous in production without proper validation.
2025-06-19 20:53:12,668 - __main__ - INFO - SQL Query Executed Successfully. Results count: 10 rows.
2025-06-19 20:53:18,601 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:53:18,602 - __main__ - INFO - Final Assistant Response (NL): 'Here are all the refunds credited to your account:

*   **January 17, 2024:** REFUND CREDIT from LAZADA for â‚±2,401.00
*   **March 1, 2024:** REFUND CREDIT from SHEIN for â‚±3,539.00
*   **March 21, 2024:** REFUND CREDIT from LAZADA for â‚±4,224.00
*   **March 30, 2024:** REFUND CREDIT from SHOPEE for â‚±1,464.00
*   **September 18, 2024:** REFUND CREDIT from GRAB for â‚±483.00
*   **December 21, 2024:** REFUND CREDIT from LAZADA for â‚±1,909.00
*   **January 8, 2025:** REFUND CREDIT from TIKTOK SHP for â‚±1,328.00
*   **April 25, 2025:** REFUND CREDIT from SHEIN for â‚±3,668.00
*   **May 20, 2025:** REFUND CREDIT from SHOPEE for â‚±2,761.00
*   **June 16, 2025:** REFUND CREDIT from SHEIN for â‚±845.00

Looks like you've received several refunds! Is there a particular refund you'd like to know more about, or perhaps a different type of transaction?'
2025-06-19 20:53:49,115 - __main__ - INFO - Evaluation route triggered.
2025-06-19 20:53:50,862 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:53:59,464 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:54:07,545 - __main__ - INFO - Test Case 1: LLM Judge verdict received.
2025-06-19 20:54:10,419 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:54:12,881 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:54:28,031 - __main__ - INFO - Test Case 2: LLM Judge verdict received.
2025-06-19 20:54:29,553 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:54:31,767 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:54:45,029 - __main__ - INFO - Test Case 3: LLM Judge verdict received.
2025-06-19 20:54:49,842 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:54:51,993 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:55:05,917 - __main__ - INFO - Test Case 4: LLM Judge verdict received.
2025-06-19 20:55:11,033 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:55:14,026 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-19 20:55:23,429 - __main__ - INFO - Test Case 5: LLM Judge verdict received.
2025-06-19 20:55:23,439 - __main__ - INFO - Evaluation process completed successfully.
2025-06-20 13:42:50,860 - __main__ - INFO - Flask Application started.
2025-06-20 13:42:50,886 - __main__ - INFO - Database schema retrieved and cached.
2025-06-20 13:42:50,936 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-20 13:42:51,216 - __main__ - INFO - Flask Application started.
2025-06-20 13:42:51,227 - __main__ - INFO - Database schema retrieved and cached.
2025-06-20 13:42:51,258 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-20 13:42:58,246 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-20 13:43:19,412 - __main__ - INFO - User Query (en): 'hello'
2025-06-20 13:43:21,515 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-20 13:43:21,516 - __main__ - INFO - Generated SQL Query: ''
2025-06-20 13:43:21,516 - __main__ - WARNING - SECURITY ALERT: Directly executing LLM-generated SQL: ''. This is dangerous in production without proper validation.
2025-06-20 13:43:21,518 - __main__ - CRITICAL - An unexpected critical error occurred: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_conev.py", line 362, in chat
    column_headers = [description[0] for description in cursor.description]
TypeError: 'NoneType' object is not iterable
2025-06-20 13:43:23,149 - __main__ - INFO - User Query (en): 'hi'
2025-06-20 13:43:24,791 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-20 13:43:24,792 - __main__ - INFO - Generated SQL Query: ''
2025-06-20 13:43:24,792 - __main__ - WARNING - SECURITY ALERT: Directly executing LLM-generated SQL: ''. This is dangerous in production without proper validation.
2025-06-20 13:43:24,793 - __main__ - CRITICAL - An unexpected critical error occurred: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_conev.py", line 362, in chat
    column_headers = [description[0] for description in cursor.description]
TypeError: 'NoneType' object is not iterable
2025-06-20 13:43:30,660 - __main__ - INFO - User Query (en): 'hi'
2025-06-20 13:43:31,976 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-20 13:43:31,977 - __main__ - INFO - Generated SQL Query: 'None'
2025-06-20 13:43:31,977 - __main__ - WARNING - SECURITY ALERT: Directly executing LLM-generated SQL: 'None'. This is dangerous in production without proper validation.
2025-06-20 13:43:31,979 - __main__ - CRITICAL - An unexpected critical error occurred: argument 1 must be str, not None
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_conev.py", line 359, in chat
    cursor.execute(sql_query)
TypeError: argument 1 must be str, not None
2025-06-20 13:44:26,076 - __main__ - INFO - Flask Application started.
2025-06-20 13:44:26,091 - __main__ - INFO - Database schema retrieved and cached.
2025-06-20 13:44:26,134 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-20 13:44:26,175 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-20 13:44:29,223 - __main__ - INFO - User Query (en): 'hello'
2025-06-20 13:44:31,657 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-20 13:44:31,658 - __main__ - INFO - Generated SQL Query: 'None'
2025-06-20 13:44:31,658 - __main__ - WARNING - SECURITY ALERT: Directly executing LLM-generated SQL: 'None'. This is dangerous in production without proper validation.
2025-06-20 13:44:31,660 - __main__ - CRITICAL - An unexpected critical error occurred: argument 1 must be str, not None
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_conev.py", line 359, in chat
    cursor.execute(sql_query)
TypeError: argument 1 must be str, not None
2025-06-20 13:47:37,647 - __main__ - INFO - Flask Application started.
2025-06-20 13:47:37,663 - __main__ - INFO - Database schema retrieved and cached.
2025-06-20 13:47:37,706 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-20 13:47:37,752 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-20 13:47:39,773 - __main__ - INFO - User Query (en): 'hi'
2025-06-20 13:47:41,670 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-20 13:47:41,670 - __main__ - INFO - Generated SQL Query: 'SELECT 1'
2025-06-20 13:47:41,670 - __main__ - WARNING - SECURITY ALERT: Directly executing LLM-generated SQL: 'SELECT 1'. This is dangerous in production without proper validation.
2025-06-20 13:47:41,672 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1 rows.
2025-06-20 13:47:43,036 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-20 13:47:43,036 - __main__ - INFO - Final Assistant Response (NL): 'Hi there! How can I help you understand your financial activity today?'
2025-06-20 13:47:49,521 - __main__ - INFO - User Query (en): 'What were my top 3 largest withdrawals?'
2025-06-20 13:47:53,893 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-20 13:47:53,893 - __main__ - INFO - Generated SQL Query: 'SELECT "Date_Timestamp", "Transaction_Details", "Merchant_Counterparty_Name", "Withdrawal_Amount", "Deposit_Amount", "Recurring_Existing_Balance" FROM bank_transactions WHERE Withdrawal_Amount IS NOT NULL AND Withdrawal_Amount > 0 ORDER BY Withdrawal_Amount DESC, "Date_Timestamp" ASC LIMIT 3;'
2025-06-20 13:47:53,894 - __main__ - WARNING - SECURITY ALERT: Directly executing LLM-generated SQL: 'SELECT "Date_Timestamp", "Transaction_Details", "Merchant_Counterparty_Name", "Withdrawal_Amount", "Deposit_Amount", "Recurring_Existing_Balance" FROM bank_transactions WHERE Withdrawal_Amount IS NOT NULL AND Withdrawal_Amount > 0 ORDER BY Withdrawal_Amount DESC, "Date_Timestamp" ASC LIMIT 3;'. This is dangerous in production without proper validation.
2025-06-20 13:47:53,898 - __main__ - INFO - SQL Query Executed Successfully. Results count: 3 rows.
2025-06-20 13:47:56,583 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-20 13:47:56,583 - __main__ - INFO - Final Assistant Response (NL): 'Here are your top 3 largest withdrawals:

*   On April 19, 2025, you had an ATM withdrawal of â‚±10,018.00 from an RCBC ATM in Makati - Circuit.
*   On August 11, 2024, there was a POS purchase for general shopping of â‚±9,883.00 at Glorietta - Glorietta 2.
*   On January 11, 2025, you made a POS purchase for general shopping of â‚±9,597.00 at Power Mac Center - SM San Lazaro.

Let me know if you'd like to look into any other transactions!'
2025-06-20 13:49:05,850 - __main__ - INFO - User Query (en): 'How much did I deposit in total for 2024?'
2025-06-20 13:49:07,722 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-20 13:49:07,723 - __main__ - INFO - Generated SQL Query: 'select sum(coalesce(Deposit_Amount, 0)) from bank_transactions where strftime('%Y', Date_Timestamp) = '2024' and Deposit_Amount is not null and Deposit_Amount > 0;'
2025-06-20 13:49:07,723 - __main__ - WARNING - SECURITY ALERT: Directly executing LLM-generated SQL: 'select sum(coalesce(Deposit_Amount, 0)) from bank_transactions where strftime('%Y', Date_Timestamp) = '2024' and Deposit_Amount is not null and Deposit_Amount > 0;'. This is dangerous in production without proper validation.
2025-06-20 13:49:07,729 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1 rows.
2025-06-20 13:49:09,631 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-20 13:49:09,631 - __main__ - INFO - Final Assistant Response (NL): 'You deposited a total of â‚±835,991.83 in 2024! That's a significant amount. Is there anything specific you'd like to know about your deposits, perhaps for a different period?'
2025-06-20 13:49:28,743 - __main__ - INFO - User Query (en): 'List all ATM withdrawals in January 2025.'
2025-06-20 13:49:31,460 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-20 13:49:31,460 - __main__ - INFO - Generated SQL Query: 'SELECT Date_Timestamp, Transaction_Details, Merchant_Counterparty_Name, COALESCE(Withdrawal_Amount, 0) AS Withdrawal_Amount, COALESCE(Deposit_Amount, 0) AS Deposit_Amount, Recurring_Existing_Balance FROM bank_transactions WHERE "Transaction_Details" LIKE '%ATM WITHDRAWAL%' AND Withdrawal_Amount IS NOT NULL AND Withdrawal_Amount > 0 AND strftime('%Y-%m', Date_Timestamp) = '2025-01' ORDER BY Date_Timestamp ASC;'
2025-06-20 13:49:31,461 - __main__ - WARNING - SECURITY ALERT: Directly executing LLM-generated SQL: 'SELECT Date_Timestamp, Transaction_Details, Merchant_Counterparty_Name, COALESCE(Withdrawal_Amount, 0) AS Withdrawal_Amount, COALESCE(Deposit_Amount, 0) AS Deposit_Amount, Recurring_Existing_Balance FROM bank_transactions WHERE "Transaction_Details" LIKE '%ATM WITHDRAWAL%' AND Withdrawal_Amount IS NOT NULL AND Withdrawal_Amount > 0 AND strftime('%Y-%m', Date_Timestamp) = '2025-01' ORDER BY Date_Timestamp ASC;'. This is dangerous in production without proper validation.
2025-06-20 13:49:31,465 - __main__ - INFO - SQL Query Executed Successfully. Results count: 0 rows.
2025-06-20 13:49:33,513 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-20 13:49:33,514 - __main__ - INFO - Final Assistant Response (NL): 'It looks like there were no ATM withdrawals recorded for January 2025. Would you like to check for a different month or transaction type?'
2025-06-20 13:50:05,172 - __main__ - INFO - Evaluation route triggered.
2025-06-20 13:50:07,192 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-20 13:50:15,101 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-20 13:50:21,960 - __main__ - INFO - Test Case 1: LLM Judge verdict received.
2025-06-20 13:50:23,292 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-20 13:50:25,239 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-20 13:50:34,248 - __main__ - INFO - Test Case 2: LLM Judge verdict received.
2025-06-20 13:50:35,542 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-20 13:50:37,834 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-20 13:50:47,944 - __main__ - INFO - Test Case 3: LLM Judge verdict received.
2025-06-20 13:50:49,914 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-20 13:50:51,755 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-20 13:51:02,407 - __main__ - INFO - Test Case 4: LLM Judge verdict received.
2025-06-20 13:51:07,835 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-20 13:51:10,395 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-20 13:51:10,614 - __main__ - ERROR - LLM Judge unexpected error: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerMinutePerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-2.5-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 10
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 49
}
]
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/evaluation_module.py", line 150, in get_llm_judge_response
    content = model_obj.generate_content(prompt_text).text.strip()
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/generativeai/generative_models.py", line 331, in generate_content
    response = self._client.generate_content(
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py", line 835, in generate_content
    response = rpc(
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/retry/retry_unary.py", line 294, in retry_wrapped_func
    return retry_target(
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/retry/retry_unary.py", line 156, in retry_target
    next_sleep = _retry_error_helper(
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/retry/retry_base.py", line 214, in _retry_error_helper
    raise final_exc from source_exc
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/retry/retry_unary.py", line 147, in retry_target
    result = target()
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/Users/mochi/Projects/Bank-Chatbot/.venv/lib/python3.9/site-packages/google/api_core/grpc_helpers.py", line 78, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ResourceExhausted: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerMinutePerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-2.5-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 10
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 49
}
]
2025-06-20 13:51:10,641 - __main__ - ERROR - Test Case 5: LLM Judge error.
2025-06-20 13:51:10,643 - __main__ - INFO - Evaluation process completed successfully.
2025-06-20 13:52:13,555 - __main__ - INFO - Flask Application started.
2025-06-20 13:52:13,571 - __main__ - INFO - Database schema retrieved and cached.
2025-06-20 13:52:13,614 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-20 13:52:20,847 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-20 13:52:23,532 - __main__ - INFO - User Query (en): 'hello'
2025-06-20 13:52:25,625 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-20 13:52:25,626 - __main__ - INFO - Generated SQL Query: ''
2025-06-20 13:52:25,626 - __main__ - WARNING - SECURITY ALERT: Directly executing LLM-generated SQL: ''. This is dangerous in production without proper validation.
2025-06-20 13:52:25,627 - __main__ - CRITICAL - An unexpected critical error occurred: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_conev.py", line 362, in chat
    column_headers = [description[0] for description in cursor.description]
TypeError: 'NoneType' object is not iterable
2025-06-20 13:52:29,621 - __main__ - INFO - User Query (en): 'hi'
2025-06-20 13:52:30,570 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-20 13:52:30,570 - __main__ - INFO - Generated SQL Query: 'None'
2025-06-20 13:52:30,570 - __main__ - WARNING - SECURITY ALERT: Directly executing LLM-generated SQL: 'None'. This is dangerous in production without proper validation.
2025-06-20 13:52:30,571 - __main__ - CRITICAL - An unexpected critical error occurred: argument 1 must be str, not None
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_conev.py", line 359, in chat
    cursor.execute(sql_query)
TypeError: argument 1 must be str, not None
2025-06-20 13:53:02,198 - __main__ - INFO - User Query (en): 'hello'
2025-06-20 13:53:03,369 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-20 13:53:03,369 - __main__ - INFO - Generated SQL Query: 'None'
2025-06-20 13:53:03,369 - __main__ - WARNING - SECURITY ALERT: Directly executing LLM-generated SQL: 'None'. This is dangerous in production without proper validation.
2025-06-20 13:53:03,371 - __main__ - CRITICAL - An unexpected critical error occurred: argument 1 must be str, not None
Traceback (most recent call last):
  File "/Users/mochi/Projects/Bank-Chatbot/app/app_conev.py", line 359, in chat
    cursor.execute(sql_query)
TypeError: argument 1 must be str, not None
2025-06-20 13:53:36,320 - __main__ - INFO - Flask Application started.
2025-06-20 13:53:36,336 - __main__ - INFO - Database schema retrieved and cached.
2025-06-20 13:53:36,381 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-20 13:53:39,817 - __main__ - INFO - Flask Application started.
2025-06-20 13:53:39,832 - __main__ - INFO - Database schema retrieved and cached.
2025-06-20 13:53:39,862 - __main__ - INFO - Philippine holidays fetched and cached.
2025-06-20 13:53:41,406 - __main__ - INFO - Initialized new chat session (messages in Flask session).
2025-06-20 13:53:43,605 - __main__ - INFO - User Query (en): 'hello'
2025-06-20 13:53:43,605 - __main__ - INFO - Chat responded with greeting. Assistant Response: 'Hi there! How can I help you with your finances today?'
2025-06-20 13:53:46,691 - __main__ - INFO - User Query (en): 'hi'
2025-06-20 13:53:46,692 - __main__ - INFO - Chat responded with greeting. Assistant Response: 'Hi there! How can I help you with your finances today?'
2025-06-20 13:53:50,984 - __main__ - INFO - User Query (en): 'hi'
2025-06-20 13:53:50,985 - __main__ - INFO - Chat responded with greeting. Assistant Response: 'Hi there! How can I help you with your finances today?'
2025-06-20 13:54:01,690 - __main__ - INFO - User Query (en): 'What were my top 3 largest withdrawals?'
2025-06-20 13:54:06,929 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-20 13:54:06,930 - __main__ - INFO - Generated SQL Query: 'SELECT "Date_Timestamp", "Transaction_Details", "Merchant_Counterparty_Name", "Withdrawal_Amount", "Deposit_Amount", "Recurring_Existing_Balance" FROM bank_transactions WHERE Withdrawal_Amount IS NOT NULL AND Withdrawal_Amount > 0 ORDER BY Withdrawal_Amount DESC, Date_Timestamp ASC LIMIT 3;'
2025-06-20 13:54:06,930 - __main__ - WARNING - SECURITY ALERT: Directly executing LLM-generated SQL: 'SELECT "Date_Timestamp", "Transaction_Details", "Merchant_Counterparty_Name", "Withdrawal_Amount", "Deposit_Amount", "Recurring_Existing_Balance" FROM bank_transactions WHERE Withdrawal_Amount IS NOT NULL AND Withdrawal_Amount > 0 ORDER BY Withdrawal_Amount DESC, Date_Timestamp ASC LIMIT 3;'. This is dangerous in production without proper validation.
2025-06-20 13:54:06,935 - __main__ - INFO - SQL Query Executed Successfully. Results count: 3 rows.
2025-06-20 13:54:08,861 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-20 13:54:08,862 - __main__ - INFO - Final Assistant Response (NL): 'Here are your top 3 largest withdrawals:

*   **April 19, 2025:** â‚±10,018.00 from RCBC ATM - Makati - Circuit
*   **August 11, 2024:** â‚±9,883.00 for a general shopping purchase at Glorietta - Glorietta 2
*   **January 11, 2025:** â‚±9,597.00 for a general shopping purchase at Power Mac Center - SM San Lazaro

Is there anything else you'd like to know about your withdrawals?'
2025-06-20 13:54:39,356 - __main__ - INFO - User Query (en): 'How much did I deposit in total for 2024?'
2025-06-20 13:54:40,822 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-20 13:54:40,822 - __main__ - INFO - Generated SQL Query: 'SELECT SUM(COALESCE(Deposit_Amount, 0)) FROM bank_transactions WHERE strftime('%Y', Date_Timestamp) = '2024';'
2025-06-20 13:54:40,822 - __main__ - WARNING - SECURITY ALERT: Directly executing LLM-generated SQL: 'SELECT SUM(COALESCE(Deposit_Amount, 0)) FROM bank_transactions WHERE strftime('%Y', Date_Timestamp) = '2024';'. This is dangerous in production without proper validation.
2025-06-20 13:54:40,825 - __main__ - INFO - SQL Query Executed Successfully. Results count: 1 rows.
2025-06-20 13:54:42,769 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-20 13:54:42,769 - __main__ - INFO - Final Assistant Response (NL): 'You deposited a total of â‚±835,991.83 in 2024. That's a good amount! Do you want to see a breakdown of your deposits for that year?'
2025-06-20 13:55:01,767 - __main__ - INFO - User Query (en): 'List all ATM withdrawals in January 2025.'
2025-06-20 13:55:05,398 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-20 13:55:05,399 - __main__ - INFO - Generated SQL Query: 'SELECT "Date_Timestamp", "Transaction_Details", "Merchant_Counterparty_Name", "Withdrawal_Amount", "Deposit_Amount", "Recurring_Existing_Balance" FROM bank_transactions WHERE Withdrawal_Amount IS NOT NULL AND Withdrawal_Amount > 0 AND "Transaction_Details" LIKE '%ATM WITHDRAWAL%' AND strftime('%Y-%m', "Date_Timestamp") = '2025-01' ORDER BY "Date_Timestamp" ASC;'
2025-06-20 13:55:05,399 - __main__ - WARNING - SECURITY ALERT: Directly executing LLM-generated SQL: 'SELECT "Date_Timestamp", "Transaction_Details", "Merchant_Counterparty_Name", "Withdrawal_Amount", "Deposit_Amount", "Recurring_Existing_Balance" FROM bank_transactions WHERE Withdrawal_Amount IS NOT NULL AND Withdrawal_Amount > 0 AND "Transaction_Details" LIKE '%ATM WITHDRAWAL%' AND strftime('%Y-%m', "Date_Timestamp") = '2025-01' ORDER BY "Date_Timestamp" ASC;'. This is dangerous in production without proper validation.
2025-06-20 13:55:05,405 - __main__ - INFO - SQL Query Executed Successfully. Results count: 0 rows.
2025-06-20 13:55:07,445 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-20 13:55:07,445 - __main__ - INFO - Final Assistant Response (NL): 'It looks like there were no ATM withdrawals recorded for January 2025. Would you like to check a different month or year, or perhaps look at other types of transactions?'
2025-06-20 13:55:19,618 - __main__ - INFO - Evaluation route triggered.
2025-06-20 13:55:21,882 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-20 13:55:27,321 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-20 13:55:37,144 - __main__ - INFO - Test Case 1: LLM Judge verdict received.
2025-06-20 13:55:38,472 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-20 13:55:40,829 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-20 13:55:46,661 - __main__ - INFO - Test Case 2: LLM Judge verdict received.
2025-06-20 13:55:48,712 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-20 13:55:50,555 - __main__ - INFO - Successfully parsed Gemini response into dictionary.
2025-06-20 13:56:03,868 - __main__ - INFO - Test Case 3: LLM Judge verdict received.
2025-06-20 13:56:03,875 - __main__ - INFO - Evaluation process completed successfully.
